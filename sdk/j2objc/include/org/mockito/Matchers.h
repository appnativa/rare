//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/testing/mockito/build_result/java/org/mockito/Matchers.java
//
//  Created by tball on 11/23/13.
//

#ifndef _OrgMockitoMatchers_H_
#define _OrgMockitoMatchers_H_

@class IOSClass;
@class IOSObjectArray;
@class OrgMockitoInternalProgressHandyReturnValues;
@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol JavaUtilSet;
@protocol OrgHamcrestMatcher;
@protocol OrgMockitoInternalProgressMockingProgress;

#import "JreEmulation.h"

@interface OrgMockitoMatchers : NSObject {
}

+ (id<OrgMockitoInternalProgressMockingProgress>)mockingProgress;
+ (void)setMockingProgress:(id<OrgMockitoInternalProgressMockingProgress>)mockingProgress;
+ (BOOL)anyBoolean;
+ (char)anyByte;
+ (unichar)anyChar;
+ (int)anyInt;
+ (long long int)anyLong;
+ (float)anyFloat;
+ (double)anyDouble;
+ (short int)anyShort;
+ (id)anyObject;
+ (id)anyVararg;
+ (id)anyWithIOSClass:(IOSClass *)clazz;
+ (id)any;
+ (NSString *)anyString;
+ (id<JavaUtilList>)anyList;
+ (id<JavaUtilList>)anyListOfWithIOSClass:(IOSClass *)clazz;
+ (id<JavaUtilSet>)anySet;
+ (id<JavaUtilSet>)anySetOfWithIOSClass:(IOSClass *)clazz;
+ (id<JavaUtilMap>)anyMap;
+ (id<JavaUtilMap>)anyMapOfWithIOSClass:(IOSClass *)keyClazz
                           withIOSClass:(IOSClass *)valueClazz;
+ (id<JavaUtilCollection>)anyCollection;
+ (id<JavaUtilCollection>)anyCollectionOfWithIOSClass:(IOSClass *)clazz;
+ (id)isAWithIOSClass:(IOSClass *)clazz;
+ (BOOL)eqWithBoolean:(BOOL)value;
+ (char)eqWithByte:(char)value;
+ (unichar)eqWithChar:(unichar)value;
+ (double)eqWithDouble:(double)value;
+ (float)eqWithFloat:(float)value;
+ (int)eqWithInt:(int)value;
+ (long long int)eqWithLong:(long long int)value;
+ (short int)eqWithShort:(short int)value;
+ (id)eqWithId:(id)value;
+ (id)refEqWithId:(id)value
withNSStringArray:(IOSObjectArray *)excludeFields;
+ (id)sameWithId:(id)value;
+ (id)isNull;
+ (id)isNullWithIOSClass:(IOSClass *)clazz;
+ (id)notNull;
+ (id)notNullWithIOSClass:(IOSClass *)clazz;
+ (id)isNotNull;
+ (id)isNotNullWithIOSClass:(IOSClass *)clazz;
+ (NSString *)containsWithNSString:(NSString *)substring;
+ (NSString *)matchesWithNSString:(NSString *)regex;
+ (NSString *)endsWithWithNSString:(NSString *)suffix;
+ (NSString *)startsWithWithNSString:(NSString *)prefix;
+ (id)argThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;
+ (unichar)charThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;
+ (BOOL)booleanThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;
+ (char)byteThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;
+ (short int)shortThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;
+ (int)intThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;
+ (long long int)longThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;
+ (float)floatThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;
+ (double)doubleThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;
+ (OrgMockitoInternalProgressHandyReturnValues *)reportMatcherWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;
- (id)init;
@end

#endif // _OrgMockitoMatchers_H_
