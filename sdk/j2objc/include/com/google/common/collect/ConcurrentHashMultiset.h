//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/collect/ConcurrentHashMultiset.java
//
//  Created by tball on 11/23/13.
//

#import "JreEmulation.h"

#if !ComGoogleCommonCollectConcurrentHashMultiset_RESTRICT
#define ComGoogleCommonCollectConcurrentHashMultiset_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonCollectConcurrentHashMultiset_RESTRICT

#if !defined (_ComGoogleCommonCollectConcurrentHashMultiset_) && (ComGoogleCommonCollectConcurrentHashMultiset_INCLUDE_ALL || ComGoogleCommonCollectConcurrentHashMultiset_INCLUDE)
#define _ComGoogleCommonCollectConcurrentHashMultiset_

@class ComGoogleCommonCollectConcurrentHashMultiset_EntrySet;
@class ComGoogleCommonCollectGenericMapMaker;
@class IOSObjectArray;
@protocol JavaLangIterable;
@protocol JavaUtilConcurrentConcurrentMap;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilSet;

#define ComGoogleCommonCollectAbstractMultiset_RESTRICT 1
#define ComGoogleCommonCollectAbstractMultiset_INCLUDE 1
#include "com/google/common/collect/AbstractMultiset.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

#define ComGoogleCommonCollectConcurrentHashMultiset_serialVersionUID 1

@interface ComGoogleCommonCollectConcurrentHashMultiset : ComGoogleCommonCollectAbstractMultiset < JavaIoSerializable > {
 @public
  id<JavaUtilConcurrentConcurrentMap> countMap_;
  ComGoogleCommonCollectConcurrentHashMultiset_EntrySet *entrySet_ConcurrentHashMultiset_;
}

+ (ComGoogleCommonCollectConcurrentHashMultiset *)create;
+ (ComGoogleCommonCollectConcurrentHashMultiset *)createWithJavaLangIterable:(id<JavaLangIterable>)elements;
+ (ComGoogleCommonCollectConcurrentHashMultiset *)createWithComGoogleCommonCollectGenericMapMaker:(ComGoogleCommonCollectGenericMapMaker *)mapMaker;
- (id)initWithJavaUtilConcurrentConcurrentMap:(id<JavaUtilConcurrentConcurrentMap>)countMap;
- (int)countWithId:(id)element;
- (int)size;
- (IOSObjectArray *)toArray;
- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array;
- (id<JavaUtilList>)snapshot;
- (int)addWithId:(id)element
         withInt:(int)occurrences;
- (int)removeWithId:(id)element
            withInt:(int)occurrences;
- (BOOL)removeExactlyWithId:(id)element
                    withInt:(int)occurrences;
- (int)setCountWithId:(id)element
              withInt:(int)count;
- (BOOL)setCountWithId:(id)element
               withInt:(int)expectedOldCount
               withInt:(int)newCount;
- (id<JavaUtilSet>)createElementSet;
- (id<JavaUtilSet>)entrySet;
- (int)distinctElements;
- (BOOL)isEmpty;
- (id<JavaUtilIterator>)entryIterator;
- (void)clear;
- (void)copyAllFieldsTo:(ComGoogleCommonCollectConcurrentHashMultiset *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectConcurrentHashMultiset, countMap_, id<JavaUtilConcurrentConcurrentMap>)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectConcurrentHashMultiset, entrySet_ConcurrentHashMultiset_, ComGoogleCommonCollectConcurrentHashMultiset_EntrySet *)
#endif

#if !defined (_ComGoogleCommonCollectConcurrentHashMultiset_EntrySet_) && (ComGoogleCommonCollectConcurrentHashMultiset_INCLUDE_ALL || ComGoogleCommonCollectConcurrentHashMultiset_EntrySet_INCLUDE)
#define _ComGoogleCommonCollectConcurrentHashMultiset_EntrySet_

@class ComGoogleCommonCollectConcurrentHashMultiset;
@class IOSObjectArray;
@protocol JavaUtilList;

#define ComGoogleCommonCollectAbstractMultiset_RESTRICT 1
#define ComGoogleCommonCollectAbstractMultiset_EntrySet_INCLUDE 1
#include "com/google/common/collect/AbstractMultiset.h"

@interface ComGoogleCommonCollectConcurrentHashMultiset_EntrySet : ComGoogleCommonCollectAbstractMultiset_EntrySet {
 @public
  __weak ComGoogleCommonCollectConcurrentHashMultiset *this$1_;
}

- (ComGoogleCommonCollectConcurrentHashMultiset *)multiset;
- (IOSObjectArray *)toArray;
- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array;
- (id<JavaUtilList>)snapshot;
- (id)initWithComGoogleCommonCollectConcurrentHashMultiset:(ComGoogleCommonCollectConcurrentHashMultiset *)outer$;
@end
#endif

#if !defined (_ComGoogleCommonCollectConcurrentHashMultiset_$1_) && (ComGoogleCommonCollectConcurrentHashMultiset_INCLUDE_ALL || ComGoogleCommonCollectConcurrentHashMultiset_$1_INCLUDE)
#define _ComGoogleCommonCollectConcurrentHashMultiset_$1_

@protocol JavaUtilCollection;
@protocol JavaUtilSet;

#define ComGoogleCommonCollectForwardingSet_RESTRICT 1
#define ComGoogleCommonCollectForwardingSet_INCLUDE 1
#include "com/google/common/collect/ForwardingSet.h"

@interface ComGoogleCommonCollectConcurrentHashMultiset_$1 : ComGoogleCommonCollectForwardingSet {
 @public
  id<JavaUtilSet> val$delegate_;
}

- (id<JavaUtilSet>)delegate;
- (BOOL)containsWithId:(id)object;
- (BOOL)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;
- (BOOL)removeWithId:(id)object;
- (BOOL)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;
- (id)initWithJavaUtilSet:(id<JavaUtilSet>)capture$0;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectConcurrentHashMultiset_$1, val$delegate_, id<JavaUtilSet>)
#endif

#if !defined (_ComGoogleCommonCollectConcurrentHashMultiset_$2_) && (ComGoogleCommonCollectConcurrentHashMultiset_INCLUDE_ALL || ComGoogleCommonCollectConcurrentHashMultiset_$2_INCLUDE)
#define _ComGoogleCommonCollectConcurrentHashMultiset_$2_

@class ComGoogleCommonCollectConcurrentHashMultiset;
@protocol ComGoogleCommonCollectMultiset_Entry;
@protocol JavaUtilIterator;

#define ComGoogleCommonCollectAbstractIterator_RESTRICT 1
#define ComGoogleCommonCollectAbstractIterator_INCLUDE 1
#include "com/google/common/collect/AbstractIterator.h"

@interface ComGoogleCommonCollectConcurrentHashMultiset_$2 : ComGoogleCommonCollectAbstractIterator {
 @public
  id<JavaUtilIterator> mapEntries_;
}

- (id<ComGoogleCommonCollectMultiset_Entry>)computeNext;
- (id)initWithComGoogleCommonCollectConcurrentHashMultiset:(ComGoogleCommonCollectConcurrentHashMultiset *)outer$;
- (void)copyAllFieldsTo:(ComGoogleCommonCollectConcurrentHashMultiset_$2 *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectConcurrentHashMultiset_$2, mapEntries_, id<JavaUtilIterator>)
#endif

#if !defined (_ComGoogleCommonCollectConcurrentHashMultiset_$3_) && (ComGoogleCommonCollectConcurrentHashMultiset_INCLUDE_ALL || ComGoogleCommonCollectConcurrentHashMultiset_$3_INCLUDE)
#define _ComGoogleCommonCollectConcurrentHashMultiset_$3_

@class ComGoogleCommonCollectConcurrentHashMultiset;
@protocol ComGoogleCommonCollectMultiset_Entry;
@protocol JavaUtilIterator;

#define ComGoogleCommonCollectForwardingIterator_RESTRICT 1
#define ComGoogleCommonCollectForwardingIterator_INCLUDE 1
#include "com/google/common/collect/ForwardingIterator.h"

@interface ComGoogleCommonCollectConcurrentHashMultiset_$3 : ComGoogleCommonCollectForwardingIterator {
 @public
  ComGoogleCommonCollectConcurrentHashMultiset *this$0_;
  id<ComGoogleCommonCollectMultiset_Entry> last_;
  id<JavaUtilIterator> val$readOnlyIterator_;
}

- (id<JavaUtilIterator>)delegate;
- (id<ComGoogleCommonCollectMultiset_Entry>)next;
- (void)remove;
- (id)initWithComGoogleCommonCollectConcurrentHashMultiset:(ComGoogleCommonCollectConcurrentHashMultiset *)outer$
                                      withJavaUtilIterator:(id<JavaUtilIterator>)capture$0;
- (void)copyAllFieldsTo:(ComGoogleCommonCollectConcurrentHashMultiset_$3 *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectConcurrentHashMultiset_$3, this$0_, ComGoogleCommonCollectConcurrentHashMultiset *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectConcurrentHashMultiset_$3, last_, id<ComGoogleCommonCollectMultiset_Entry>)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectConcurrentHashMultiset_$3, val$readOnlyIterator_, id<JavaUtilIterator>)
#endif
