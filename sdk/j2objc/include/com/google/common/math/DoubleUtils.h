//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/math/DoubleUtils.java
//
//  Created by tball on 11/23/13.
//

#import "JreEmulation.h"

#if !ComGoogleCommonMathDoubleUtils_RESTRICT
#define ComGoogleCommonMathDoubleUtils_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonMathDoubleUtils_RESTRICT

#if !defined (_ComGoogleCommonMathDoubleUtils_) && (ComGoogleCommonMathDoubleUtils_INCLUDE_ALL || ComGoogleCommonMathDoubleUtils_INCLUDE)
#define _ComGoogleCommonMathDoubleUtils_

@class JavaMathBigInteger;

#define ComGoogleCommonMathDoubleUtils_EXPONENT_BIAS 1023
#define ComGoogleCommonMathDoubleUtils_EXPONENT_MASK 9218868437227405312
#define ComGoogleCommonMathDoubleUtils_IMPLICIT_BIT 4503599627370496
#define ComGoogleCommonMathDoubleUtils_SIGNIFICAND_BITS 52
#define ComGoogleCommonMathDoubleUtils_SIGNIFICAND_MASK 4503599627370495
#define ComGoogleCommonMathDoubleUtils_SIGN_MASK ((long long) 0x8000000000000000LL)

@interface ComGoogleCommonMathDoubleUtils : NSObject {
}

+ (long long int)SIGNIFICAND_MASK;
+ (long long int)EXPONENT_MASK;
+ (long long int)SIGN_MASK;
+ (int)SIGNIFICAND_BITS;
+ (int)EXPONENT_BIAS;
+ (long long int)IMPLICIT_BIT;
+ (long long int)ONE_BITS;
- (id)init;
+ (double)nextDownWithDouble:(double)d;
+ (long long int)getSignificandWithDouble:(double)d;
+ (BOOL)isFiniteWithDouble:(double)d;
+ (BOOL)isNormalWithDouble:(double)d;
+ (double)scaleNormalizeWithDouble:(double)x;
+ (double)bigToDoubleWithJavaMathBigInteger:(JavaMathBigInteger *)x;
+ (double)ensureNonNegativeWithDouble:(double)value;
@end
#endif
