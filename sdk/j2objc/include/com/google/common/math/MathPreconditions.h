//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/math/MathPreconditions.java
//
//  Created by tball on 11/23/13.
//

#import "JreEmulation.h"

#if !ComGoogleCommonMathMathPreconditions_RESTRICT
#define ComGoogleCommonMathMathPreconditions_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonMathMathPreconditions_RESTRICT

#if !defined (_ComGoogleCommonMathMathPreconditions_) && (ComGoogleCommonMathMathPreconditions_INCLUDE_ALL || ComGoogleCommonMathMathPreconditions_INCLUDE)
#define _ComGoogleCommonMathMathPreconditions_

@class JavaMathBigInteger;

@interface ComGoogleCommonMathMathPreconditions : NSObject {
}

+ (int)checkPositiveWithNSString:(NSString *)role
                         withInt:(int)x;
+ (long long int)checkPositiveWithNSString:(NSString *)role
                                  withLong:(long long int)x;
+ (JavaMathBigInteger *)checkPositiveWithNSString:(NSString *)role
                           withJavaMathBigInteger:(JavaMathBigInteger *)x;
+ (int)checkNonNegativeWithNSString:(NSString *)role
                            withInt:(int)x;
+ (long long int)checkNonNegativeWithNSString:(NSString *)role
                                     withLong:(long long int)x;
+ (JavaMathBigInteger *)checkNonNegativeWithNSString:(NSString *)role
                              withJavaMathBigInteger:(JavaMathBigInteger *)x;
+ (double)checkNonNegativeWithNSString:(NSString *)role
                            withDouble:(double)x;
+ (void)checkRoundingUnnecessaryWithBoolean:(BOOL)condition;
+ (void)checkInRangeWithBoolean:(BOOL)condition;
+ (void)checkNoOverflowWithBoolean:(BOOL)condition;
- (id)init;
@end
#endif
