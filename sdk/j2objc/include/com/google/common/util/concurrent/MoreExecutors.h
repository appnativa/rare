//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/util/concurrent/MoreExecutors.java
//
//  Created by tball on 11/23/13.
//

#import "JreEmulation.h"

#if !ComGoogleCommonUtilConcurrentMoreExecutors_RESTRICT
#define ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentMoreExecutors_RESTRICT
#if ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator_INCLUDE
#define ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator_INCLUDE 1
#endif

#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_

@class JavaLangThread;
@class JavaUtilConcurrentScheduledThreadPoolExecutor;
@class JavaUtilConcurrentThreadPoolExecutor;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol ComGoogleCommonUtilConcurrentListeningExecutorService;
@protocol ComGoogleCommonUtilConcurrentListeningScheduledExecutorService;
@protocol JavaLangRunnable;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentBlockingQueue;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilConcurrentExecutorService;
@protocol JavaUtilConcurrentScheduledExecutorService;
@protocol JavaUtilConcurrentThreadFactory;

@interface ComGoogleCommonUtilConcurrentMoreExecutors : NSObject {
}

- (id)init;
+ (id<JavaUtilConcurrentExecutorService>)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor
                                                                                                  withLong:(long long int)terminationTimeout
                                                                        withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;
+ (id<JavaUtilConcurrentScheduledExecutorService>)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(JavaUtilConcurrentScheduledThreadPoolExecutor *)executor
                                                                                                                             withLong:(long long int)terminationTimeout
                                                                                                   withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;
+ (void)addDelayedShutdownHookWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)service
                                                           withLong:(long long int)terminationTimeout
                                 withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;
+ (id<JavaUtilConcurrentExecutorService>)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor;
+ (id<JavaUtilConcurrentScheduledExecutorService>)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(JavaUtilConcurrentScheduledThreadPoolExecutor *)executor;
+ (void)useDaemonThreadFactoryWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor;
+ (id<ComGoogleCommonUtilConcurrentListeningExecutorService>)sameThreadExecutor;
+ (id<ComGoogleCommonUtilConcurrentListeningExecutorService>)listeningDecoratorWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)delegate;
+ (id<ComGoogleCommonUtilConcurrentListeningScheduledExecutorService>)listeningDecoratorWithJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)delegate;
+ (id)invokeAnyImplWithComGoogleCommonUtilConcurrentListeningExecutorService:(id<ComGoogleCommonUtilConcurrentListeningExecutorService>)executorService
                                                      withJavaUtilCollection:(id<JavaUtilCollection>)tasks
                                                                 withBoolean:(BOOL)timed
                                                                    withLong:(long long int)nanos;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)submitAndAddQueueListenerWithComGoogleCommonUtilConcurrentListeningExecutorService:(id<ComGoogleCommonUtilConcurrentListeningExecutorService>)executorService
                                                                                                         withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)task
                                                                                                    withJavaUtilConcurrentBlockingQueue:(id<JavaUtilConcurrentBlockingQueue>)queue;
+ (id<JavaUtilConcurrentThreadFactory>)platformThreadFactory;
+ (BOOL)isAppEngine;
+ (JavaLangThread *)newThreadWithNSString:(NSString *)name
                     withJavaLangRunnable:(id<JavaLangRunnable>)runnable OBJC_METHOD_FAMILY_NONE;
@end
#endif

#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_Application_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_Application_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_Application_

@class JavaLangThread;
@class JavaUtilConcurrentScheduledThreadPoolExecutor;
@class JavaUtilConcurrentThreadPoolExecutor;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaUtilConcurrentExecutorService;
@protocol JavaUtilConcurrentScheduledExecutorService;

@interface ComGoogleCommonUtilConcurrentMoreExecutors_Application : NSObject {
}

- (id<JavaUtilConcurrentExecutorService>)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor
                                                                                                  withLong:(long long int)terminationTimeout
                                                                        withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;
- (id<JavaUtilConcurrentScheduledExecutorService>)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(JavaUtilConcurrentScheduledThreadPoolExecutor *)executor
                                                                                                                             withLong:(long long int)terminationTimeout
                                                                                                   withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;
- (void)addDelayedShutdownHookWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)service
                                                           withLong:(long long int)terminationTimeout
                                 withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;
- (id<JavaUtilConcurrentExecutorService>)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor;
- (id<JavaUtilConcurrentScheduledExecutorService>)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(JavaUtilConcurrentScheduledThreadPoolExecutor *)executor;
- (void)addShutdownHookWithJavaLangThread:(JavaLangThread *)hook;
- (id)init;
@end
#endif

#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_Application_$1_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_Application_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_Application_$1_

@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaUtilConcurrentExecutorService;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"

@interface ComGoogleCommonUtilConcurrentMoreExecutors_Application_$1 : NSObject < JavaLangRunnable > {
 @public
  id<JavaUtilConcurrentExecutorService> val$service_;
  long long int val$terminationTimeout_;
  JavaUtilConcurrentTimeUnitEnum *val$timeUnit_;
}

- (void)run;
- (id)initWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)capture$0
                                       withLong:(long long int)capture$1
             withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)capture$2;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentMoreExecutors_Application_$1, val$service_, id<JavaUtilConcurrentExecutorService>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentMoreExecutors_Application_$1, val$timeUnit_, JavaUtilConcurrentTimeUnitEnum *)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_SameThreadExecutorService_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_SameThreadExecutorService_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_SameThreadExecutorService_

@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentLocksCondition;
@protocol JavaUtilConcurrentLocksLock;
@protocol JavaUtilList;

#define ComGoogleCommonUtilConcurrentAbstractListeningExecutorService_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractListeningExecutorService_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractListeningExecutorService.h"

@interface ComGoogleCommonUtilConcurrentMoreExecutors_SameThreadExecutorService : ComGoogleCommonUtilConcurrentAbstractListeningExecutorService {
 @public
  id<JavaUtilConcurrentLocksLock> lock_;
  id<JavaUtilConcurrentLocksCondition> termination_;
  int runningTasks_;
  BOOL shutdown__;
}

- (void)executeWithJavaLangRunnable:(id<JavaLangRunnable>)command;
- (BOOL)isShutdown;
- (void)shutdown;
- (id<JavaUtilList>)shutdownNow;
- (BOOL)isTerminated;
- (BOOL)awaitTerminationWithLong:(long long int)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (void)startTask;
- (void)endTask;
- (id)init;
- (void)copyAllFieldsTo:(ComGoogleCommonUtilConcurrentMoreExecutors_SameThreadExecutorService *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentMoreExecutors_SameThreadExecutorService, lock_, id<JavaUtilConcurrentLocksLock>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentMoreExecutors_SameThreadExecutorService, termination_, id<JavaUtilConcurrentLocksCondition>)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator_

@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentExecutorService;
@protocol JavaUtilList;

#define ComGoogleCommonUtilConcurrentAbstractListeningExecutorService_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractListeningExecutorService_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractListeningExecutorService.h"

@interface ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator : ComGoogleCommonUtilConcurrentAbstractListeningExecutorService {
 @public
  id<JavaUtilConcurrentExecutorService> delegate_;
}

- (id)initWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)delegate;
- (BOOL)awaitTerminationWithLong:(long long int)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (BOOL)isShutdown;
- (BOOL)isTerminated;
- (void)shutdown;
- (id<JavaUtilList>)shutdownNow;
- (void)executeWithJavaLangRunnable:(id<JavaLangRunnable>)command;
- (void)copyAllFieldsTo:(ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator, delegate_, id<JavaUtilConcurrentExecutorService>)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator_

@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilConcurrentScheduledExecutorService;
@protocol JavaUtilConcurrentScheduledFuture;

#define ComGoogleCommonUtilConcurrentListeningScheduledExecutorService_RESTRICT 1
#define ComGoogleCommonUtilConcurrentListeningScheduledExecutorService_INCLUDE 1
#include "com/google/common/util/concurrent/ListeningScheduledExecutorService.h"

@interface ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator : ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator < ComGoogleCommonUtilConcurrentListeningScheduledExecutorService > {
 @public
  id<JavaUtilConcurrentScheduledExecutorService> delegate_ScheduledListeningDecorator_;
}

- (id)initWithJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)delegate;
- (id<JavaUtilConcurrentScheduledFuture>)scheduleWithJavaLangRunnable:(id<JavaLangRunnable>)command
                                                             withLong:(long long int)delay
                                   withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (id<JavaUtilConcurrentScheduledFuture>)scheduleWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable
                                                                       withLong:(long long int)delay
                                             withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (id<JavaUtilConcurrentScheduledFuture>)scheduleAtFixedRateWithJavaLangRunnable:(id<JavaLangRunnable>)command
                                                                        withLong:(long long int)initialDelay
                                                                        withLong:(long long int)period
                                              withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (id<JavaUtilConcurrentScheduledFuture>)scheduleWithFixedDelayWithJavaLangRunnable:(id<JavaLangRunnable>)command
                                                                           withLong:(long long int)initialDelay
                                                                           withLong:(long long int)delay
                                                 withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (void)copyAllFieldsTo:(ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator, delegate_ScheduledListeningDecorator_, id<JavaUtilConcurrentScheduledExecutorService>)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_$1_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_$1_

@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol JavaUtilConcurrentBlockingQueue;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"

@interface ComGoogleCommonUtilConcurrentMoreExecutors_$1 : NSObject < JavaLangRunnable > {
 @public
  id<JavaUtilConcurrentBlockingQueue> val$queue_;
  id<ComGoogleCommonUtilConcurrentListenableFuture> val$future_;
}

- (void)run;
- (id)initWithJavaUtilConcurrentBlockingQueue:(id<JavaUtilConcurrentBlockingQueue>)capture$0
withComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)capture$1;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentMoreExecutors_$1, val$queue_, id<JavaUtilConcurrentBlockingQueue>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentMoreExecutors_$1, val$future_, id<ComGoogleCommonUtilConcurrentListenableFuture>)
#endif
