//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/util/concurrent/Futures.java
//
//  Created by tball on 11/23/13.
//

#import "JreEmulation.h"

#if !ComGoogleCommonUtilConcurrentFutures_RESTRICT
#define ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentFutures_RESTRICT
#if ComGoogleCommonUtilConcurrentFutures_$6_INCLUDE
#define ComGoogleCommonUtilConcurrentFutures_FutureCombiner_INCLUDE 1
#endif
#if ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture_INCLUDE
#define ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_INCLUDE 1
#endif
#if ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture_INCLUDE
#define ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_INCLUDE 1
#endif
#if ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture_INCLUDE
#define ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_INCLUDE 1
#endif
#if ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture_INCLUDE
#define ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_INCLUDE 1
#endif
#if ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture_INCLUDE
#define ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_INCLUDE 1
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_

@class ComGoogleCommonCollectImmutableList;
@class ComGoogleCommonCollectOrdering;
@class IOSClass;
@class IOSObjectArray;
@class JavaLangException;
@class JavaLangReflectConstructor;
@class JavaLangThrowable;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol ComGoogleCommonBaseFunction;
@protocol ComGoogleCommonUtilConcurrentAsyncFunction;
@protocol ComGoogleCommonUtilConcurrentCheckedFuture;
@protocol ComGoogleCommonUtilConcurrentFutureCallback;
@protocol ComGoogleCommonUtilConcurrentFutureFallback;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol JavaLangIterable;
@protocol JavaUtilConcurrentExecutor;
@protocol JavaUtilConcurrentFuture;
@protocol JavaUtilList;

@interface ComGoogleCommonUtilConcurrentFutures : NSObject {
}

+ (id<ComGoogleCommonUtilConcurrentAsyncFunction>)DEREFERENCER;
+ (ComGoogleCommonCollectOrdering *)WITH_STRING_PARAM_FIRST;
- (id)init;
+ (id<ComGoogleCommonUtilConcurrentCheckedFuture>)makeCheckedWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)future
                                                                               withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)mapper;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateFutureWithId:(id)value;
+ (id<ComGoogleCommonUtilConcurrentCheckedFuture>)immediateCheckedFutureWithId:(id)value;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateFailedFutureWithJavaLangThrowable:(JavaLangThrowable *)throwable;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateCancelledFuture;
+ (id<ComGoogleCommonUtilConcurrentCheckedFuture>)immediateFailedCheckedFutureWithId:(JavaLangException *)exception;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)withFallbackWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                   withComGoogleCommonUtilConcurrentFutureFallback:(id<ComGoogleCommonUtilConcurrentFutureFallback>)fallback;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)withFallbackWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                   withComGoogleCommonUtilConcurrentFutureFallback:(id<ComGoogleCommonUtilConcurrentFutureFallback>)fallback
                                                                                    withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                 withComGoogleCommonUtilConcurrentAsyncFunction:(id<ComGoogleCommonUtilConcurrentAsyncFunction>)function;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                 withComGoogleCommonUtilConcurrentAsyncFunction:(id<ComGoogleCommonUtilConcurrentAsyncFunction>)function
                                                                                 withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function
                                                                                 withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;
+ (id<JavaUtilConcurrentFuture>)lazyTransformWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)input
                                          withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)dereferenceWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)nested;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)allAsListWithComGoogleCommonUtilConcurrentListenableFutureArray:(IOSObjectArray *)futures;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)allAsListWithJavaLangIterable:(id<JavaLangIterable>)futures;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)successfulAsListWithComGoogleCommonUtilConcurrentListenableFutureArray:(IOSObjectArray *)futures;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)successfulAsListWithJavaLangIterable:(id<JavaLangIterable>)futures;
+ (void)addCallbackWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)future
                     withComGoogleCommonUtilConcurrentFutureCallback:(id<ComGoogleCommonUtilConcurrentFutureCallback>)callback;
+ (void)addCallbackWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)future
                     withComGoogleCommonUtilConcurrentFutureCallback:(id<ComGoogleCommonUtilConcurrentFutureCallback>)callback
                                      withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;
+ (id)getWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                         withIOSClass:(IOSClass *)exceptionClass;
+ (id)getWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                             withLong:(long long int)timeout
   withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit
                         withIOSClass:(IOSClass *)exceptionClass;
+ (void)wrapAndThrowExceptionOrErrorWithJavaLangThrowable:(JavaLangThrowable *)cause
                                             withIOSClass:(IOSClass *)exceptionClass;
+ (id)getUncheckedWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future;
+ (void)wrapAndThrowUncheckedWithJavaLangThrowable:(JavaLangThrowable *)cause;
+ (id)newWithCauseWithIOSClass:(IOSClass *)exceptionClass
         withJavaLangThrowable:(JavaLangThrowable *)cause OBJC_METHOD_FAMILY_NONE;
+ (id<JavaUtilList>)preferringStringsWithJavaUtilList:(id<JavaUtilList>)constructors;
+ (id)newFromConstructorWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)constructor
                                 withJavaLangThrowable:(JavaLangThrowable *)cause OBJC_METHOD_FAMILY_NONE;
+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)listFutureWithComGoogleCommonCollectImmutableList:(ComGoogleCommonCollectImmutableList *)futures
                                                                                           withBoolean:(BOOL)allMustSucceed
                                                                        withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)listenerExecutor;
@end
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_

@class JavaUtilConcurrentTimeUnitEnum;
@class JavaUtilLoggingLogger;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentExecutor;

#define ComGoogleCommonUtilConcurrentListenableFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentListenableFuture_INCLUDE 1
#include "com/google/common/util/concurrent/ListenableFuture.h"

@interface ComGoogleCommonUtilConcurrentFutures_ImmediateFuture : NSObject < ComGoogleCommonUtilConcurrentListenableFuture > {
}

+ (JavaUtilLoggingLogger *)log;
- (void)addListenerWithJavaLangRunnable:(id<JavaLangRunnable>)listener
         withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;
- (BOOL)cancelWithBoolean:(BOOL)mayInterruptIfRunning;
- (id)get;
- (id)getWithLong:(long long int)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (BOOL)isCancelled;
- (BOOL)isDone;
- (id)init;
@end
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture_

@interface ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture : ComGoogleCommonUtilConcurrentFutures_ImmediateFuture {
 @public
  id value_;
}

- (id)initWithId:(id)value;
- (id)get;
- (void)copyAllFieldsTo:(ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture, value_, id)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture_

@class JavaUtilConcurrentTimeUnitEnum;

#define ComGoogleCommonUtilConcurrentCheckedFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentCheckedFuture_INCLUDE 1
#include "com/google/common/util/concurrent/CheckedFuture.h"

@interface ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture : ComGoogleCommonUtilConcurrentFutures_ImmediateFuture < ComGoogleCommonUtilConcurrentCheckedFuture > {
 @public
  id value_;
}

- (id)initWithId:(id)value;
- (id)get;
- (id)checkedGet;
- (id)checkedGetWithLong:(long long int)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (void)copyAllFieldsTo:(ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture, value_, id)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture_

@class JavaLangThrowable;

@interface ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture : ComGoogleCommonUtilConcurrentFutures_ImmediateFuture {
 @public
  JavaLangThrowable *thrown_;
}

- (id)initWithJavaLangThrowable:(JavaLangThrowable *)thrown;
- (id)get;
- (void)copyAllFieldsTo:(ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture, thrown_, JavaLangThrowable *)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture_

@class JavaUtilConcurrentCancellationException;

@interface ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture : ComGoogleCommonUtilConcurrentFutures_ImmediateFuture {
 @public
  JavaUtilConcurrentCancellationException *thrown_;
}

- (id)init;
- (BOOL)isCancelled;
- (id)get;
- (void)copyAllFieldsTo:(ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture, thrown_, JavaUtilConcurrentCancellationException *)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture_

@class JavaLangException;
@class JavaUtilConcurrentTimeUnitEnum;

#define ComGoogleCommonUtilConcurrentCheckedFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentCheckedFuture_INCLUDE 1
#include "com/google/common/util/concurrent/CheckedFuture.h"

@interface ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture : ComGoogleCommonUtilConcurrentFutures_ImmediateFuture < ComGoogleCommonUtilConcurrentCheckedFuture > {
 @public
  JavaLangException *thrown_;
}

- (id)initWithId:(JavaLangException *)thrown;
- (id)get;
- (id)checkedGet;
- (id)checkedGetWithLong:(long long int)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (void)copyAllFieldsTo:(ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture, thrown_, id)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_FallbackFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_FallbackFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_FallbackFuture_

@protocol ComGoogleCommonUtilConcurrentFutureFallback;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol JavaUtilConcurrentExecutor;

#define ComGoogleCommonUtilConcurrentAbstractFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractFuture_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractFuture.h"

@interface ComGoogleCommonUtilConcurrentFutures_FallbackFuture : ComGoogleCommonUtilConcurrentAbstractFuture {
 @public
  id<ComGoogleCommonUtilConcurrentListenableFuture> running_;
}

- (id)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
            withComGoogleCommonUtilConcurrentFutureFallback:(id<ComGoogleCommonUtilConcurrentFutureFallback>)fallback
                             withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;
- (BOOL)cancelWithBoolean:(BOOL)mayInterruptIfRunning;
- (void)copyAllFieldsTo:(ComGoogleCommonUtilConcurrentFutures_FallbackFuture *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_FallbackFuture, running_, id<ComGoogleCommonUtilConcurrentListenableFuture>)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_

@class ComGoogleCommonUtilConcurrentFutures_FallbackFuture;
@class JavaLangThrowable;
@protocol ComGoogleCommonUtilConcurrentFutureFallback;

#define ComGoogleCommonUtilConcurrentFutureCallback_RESTRICT 1
#define ComGoogleCommonUtilConcurrentFutureCallback_INCLUDE 1
#include "com/google/common/util/concurrent/FutureCallback.h"

@interface ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1 : NSObject < ComGoogleCommonUtilConcurrentFutureCallback > {
 @public
  ComGoogleCommonUtilConcurrentFutures_FallbackFuture *this$0_;
  id<ComGoogleCommonUtilConcurrentFutureFallback> val$fallback_;
}

- (void)onSuccessWithId:(id)value;
- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable *)t;
- (id)initWithComGoogleCommonUtilConcurrentFutures_FallbackFuture:(ComGoogleCommonUtilConcurrentFutures_FallbackFuture *)outer$
                  withComGoogleCommonUtilConcurrentFutureFallback:(id<ComGoogleCommonUtilConcurrentFutureFallback>)capture$0;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1, this$0_, ComGoogleCommonUtilConcurrentFutures_FallbackFuture *)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1, val$fallback_, id<ComGoogleCommonUtilConcurrentFutureFallback>)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_$1_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_$1_

@class ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1;
@class JavaLangThrowable;

#define ComGoogleCommonUtilConcurrentFutureCallback_RESTRICT 1
#define ComGoogleCommonUtilConcurrentFutureCallback_INCLUDE 1
#include "com/google/common/util/concurrent/FutureCallback.h"

@interface ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_$1 : NSObject < ComGoogleCommonUtilConcurrentFutureCallback > {
 @public
  ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1 *this$0_;
}

- (void)onSuccessWithId:(id)value;
- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable *)t;
- (id)initWithComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1:(ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1 *)outer$;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_$1, this$0_, ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1 *)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_

@class JavaUtilConcurrentCountDownLatch;
@protocol ComGoogleCommonUtilConcurrentAsyncFunction;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol JavaUtilConcurrentFuture;

#define ComGoogleCommonUtilConcurrentAbstractFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractFuture_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractFuture.h"

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"

@interface ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture : ComGoogleCommonUtilConcurrentAbstractFuture < JavaLangRunnable > {
 @public
  id<ComGoogleCommonUtilConcurrentAsyncFunction> function_;
  id<ComGoogleCommonUtilConcurrentListenableFuture> inputFuture_;
  id<ComGoogleCommonUtilConcurrentListenableFuture> outputFuture_;
  JavaUtilConcurrentCountDownLatch *outputCreated_;
}

- (id)initWithComGoogleCommonUtilConcurrentAsyncFunction:(id<ComGoogleCommonUtilConcurrentAsyncFunction>)function
       withComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)inputFuture;
- (BOOL)cancelWithBoolean:(BOOL)mayInterruptIfRunning;
- (void)cancelWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                               withBoolean:(BOOL)mayInterruptIfRunning;
- (void)run;
- (void)copyAllFieldsTo:(ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture, function_, id<ComGoogleCommonUtilConcurrentAsyncFunction>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture, inputFuture_, id<ComGoogleCommonUtilConcurrentListenableFuture>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture, outputFuture_, id<ComGoogleCommonUtilConcurrentListenableFuture>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture, outputCreated_, JavaUtilConcurrentCountDownLatch *)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_$1_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_$1_

@class ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"

@interface ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_$1 : NSObject < JavaLangRunnable > {
 @public
  ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture *this$0_;
  id<ComGoogleCommonUtilConcurrentListenableFuture> val$outputFuture_;
}

- (void)run;
- (id)initWithComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture:(ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture *)outer$
                          withComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)capture$0;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_$1, this$0_, ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture *)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_$1, val$outputFuture_, id<ComGoogleCommonUtilConcurrentListenableFuture>)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_CombinedFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_CombinedFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_CombinedFuture_

@class ComGoogleCommonCollectImmutableCollection;
@class JavaUtilConcurrentAtomicAtomicInteger;
@protocol ComGoogleCommonUtilConcurrentFutures_FutureCombiner;
@protocol JavaUtilConcurrentExecutor;
@protocol JavaUtilConcurrentFuture;
@protocol JavaUtilList;

#define ComGoogleCommonUtilConcurrentAbstractFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractFuture_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractFuture.h"

@interface ComGoogleCommonUtilConcurrentFutures_CombinedFuture : ComGoogleCommonUtilConcurrentAbstractFuture {
 @public
  ComGoogleCommonCollectImmutableCollection *futures_;
  BOOL allMustSucceed_;
  JavaUtilConcurrentAtomicAtomicInteger *remaining_;
  id<ComGoogleCommonUtilConcurrentFutures_FutureCombiner> combiner_;
  id<JavaUtilList> values_;
}

- (id)initWithComGoogleCommonCollectImmutableCollection:(ComGoogleCommonCollectImmutableCollection *)futures
                                            withBoolean:(BOOL)allMustSucceed
                         withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)listenerExecutor
withComGoogleCommonUtilConcurrentFutures_FutureCombiner:(id<ComGoogleCommonUtilConcurrentFutures_FutureCombiner>)combiner;
- (void)init__WithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)listenerExecutor OBJC_METHOD_FAMILY_NONE;
- (void)setOneValueWithInt:(int)index
withJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future;
- (void)copyAllFieldsTo:(ComGoogleCommonUtilConcurrentFutures_CombinedFuture *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CombinedFuture, futures_, ComGoogleCommonCollectImmutableCollection *)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CombinedFuture, remaining_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CombinedFuture, combiner_, id<ComGoogleCommonUtilConcurrentFutures_FutureCombiner>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CombinedFuture, values_, id<JavaUtilList>)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$1_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$1_

@class ComGoogleCommonUtilConcurrentFutures_CombinedFuture;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"

@interface ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$1 : NSObject < JavaLangRunnable > {
 @public
  ComGoogleCommonUtilConcurrentFutures_CombinedFuture *this$0_;
}

- (void)run;
- (id)initWithComGoogleCommonUtilConcurrentFutures_CombinedFuture:(ComGoogleCommonUtilConcurrentFutures_CombinedFuture *)outer$;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$1, this$0_, ComGoogleCommonUtilConcurrentFutures_CombinedFuture *)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$2_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$2_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$2_

@class ComGoogleCommonUtilConcurrentFutures_CombinedFuture;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"

@interface ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$2 : NSObject < JavaLangRunnable > {
 @public
  ComGoogleCommonUtilConcurrentFutures_CombinedFuture *this$0_;
  int val$index_;
  id<ComGoogleCommonUtilConcurrentListenableFuture> val$listenable_;
}

- (void)run;
- (id)initWithComGoogleCommonUtilConcurrentFutures_CombinedFuture:(ComGoogleCommonUtilConcurrentFutures_CombinedFuture *)outer$
                                                          withInt:(int)capture$0
                withComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)capture$1;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$2, this$0_, ComGoogleCommonUtilConcurrentFutures_CombinedFuture *)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$2, val$listenable_, id<ComGoogleCommonUtilConcurrentListenableFuture>)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_

@class JavaLangException;
@protocol ComGoogleCommonBaseFunction;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;

#define ComGoogleCommonUtilConcurrentAbstractCheckedFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractCheckedFuture_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractCheckedFuture.h"

@interface ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture : ComGoogleCommonUtilConcurrentAbstractCheckedFuture {
 @public
  id<ComGoogleCommonBaseFunction> mapper_;
}

- (id)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate
                            withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)mapper;
- (id)mapExceptionWithJavaLangException:(JavaLangException *)e;
- (void)copyAllFieldsTo:(ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture, mapper_, id<ComGoogleCommonBaseFunction>)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_$1_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_$1_

@protocol ComGoogleCommonBaseFunction;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;

#define ComGoogleCommonUtilConcurrentAsyncFunction_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAsyncFunction_INCLUDE 1
#include "com/google/common/util/concurrent/AsyncFunction.h"

@interface ComGoogleCommonUtilConcurrentFutures_$1 : NSObject < ComGoogleCommonUtilConcurrentAsyncFunction > {
 @public
  id<ComGoogleCommonBaseFunction> val$function_;
}

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)applyWithId:(id)input;
- (id)initWithComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)capture$0;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_$1, val$function_, id<ComGoogleCommonBaseFunction>)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_$2_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_$2_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_$2_

@class JavaUtilConcurrentTimeUnitEnum;
@protocol ComGoogleCommonBaseFunction;

#define JavaUtilConcurrentFuture_RESTRICT 1
#define JavaUtilConcurrentFuture_INCLUDE 1
#include "java/util/concurrent/Future.h"

@interface ComGoogleCommonUtilConcurrentFutures_$2 : NSObject < JavaUtilConcurrentFuture > {
 @public
  id<JavaUtilConcurrentFuture> val$input_;
  id<ComGoogleCommonBaseFunction> val$function_;
}

- (BOOL)cancelWithBoolean:(BOOL)mayInterruptIfRunning;
- (BOOL)isCancelled;
- (BOOL)isDone;
- (id)get;
- (id)getWithLong:(long long int)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (id)applyTransformationWithId:(id)input;
- (id)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)capture$0
       withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)capture$1;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_$2, val$input_, id<JavaUtilConcurrentFuture>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_$2, val$function_, id<ComGoogleCommonBaseFunction>)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_$3_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_$3_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_$3_

@protocol ComGoogleCommonUtilConcurrentListenableFuture;

#define ComGoogleCommonUtilConcurrentAsyncFunction_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAsyncFunction_INCLUDE 1
#include "com/google/common/util/concurrent/AsyncFunction.h"

@interface ComGoogleCommonUtilConcurrentFutures_$3 : NSObject < ComGoogleCommonUtilConcurrentAsyncFunction > {
}

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)applyWithId:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input;
- (id)init;
@end
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_$4_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_$4_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_$4_

@protocol ComGoogleCommonUtilConcurrentFutureCallback;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"

@interface ComGoogleCommonUtilConcurrentFutures_$4 : NSObject < JavaLangRunnable > {
 @public
  id<ComGoogleCommonUtilConcurrentListenableFuture> val$future_;
  id<ComGoogleCommonUtilConcurrentFutureCallback> val$callback_;
}

- (void)run;
- (id)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)capture$0
            withComGoogleCommonUtilConcurrentFutureCallback:(id<ComGoogleCommonUtilConcurrentFutureCallback>)capture$1;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_$4, val$future_, id<ComGoogleCommonUtilConcurrentListenableFuture>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_$4, val$callback_, id<ComGoogleCommonUtilConcurrentFutureCallback>)
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_$5_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_$5_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_$5_

@class JavaLangBoolean;
@class JavaLangReflectConstructor;

#define ComGoogleCommonBaseFunction_RESTRICT 1
#define ComGoogleCommonBaseFunction_INCLUDE 1
#include "com/google/common/base/Function.h"

@interface ComGoogleCommonUtilConcurrentFutures_$5 : NSObject < ComGoogleCommonBaseFunction > {
}

- (JavaLangBoolean *)applyWithId:(JavaLangReflectConstructor *)input;
- (BOOL)isEqual:(id)param0;
- (id)init;
@end
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_FutureCombiner_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_FutureCombiner_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_FutureCombiner_

@protocol JavaUtilList;

@protocol ComGoogleCommonUtilConcurrentFutures_FutureCombiner < NSObject, JavaObject >
- (id)combineWithJavaUtilList:(id<JavaUtilList>)values;
@end
#endif

#if !defined (_ComGoogleCommonUtilConcurrentFutures_$6_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_$6_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_$6_

@protocol JavaUtilList;

@interface ComGoogleCommonUtilConcurrentFutures_$6 : NSObject < ComGoogleCommonUtilConcurrentFutures_FutureCombiner > {
}

- (id<JavaUtilList>)combineWithJavaUtilList:(id<JavaUtilList>)values;
- (id)init;
@end
#endif
