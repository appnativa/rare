//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/primitives/Longs.java
//
//  Created by tball on 11/23/13.
//

#import "JreEmulation.h"

#if !ComGoogleCommonPrimitivesLongs_RESTRICT
#define ComGoogleCommonPrimitivesLongs_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonPrimitivesLongs_RESTRICT

#if !defined (_ComGoogleCommonPrimitivesLongs_) && (ComGoogleCommonPrimitivesLongs_INCLUDE_ALL || ComGoogleCommonPrimitivesLongs_INCLUDE)
#define _ComGoogleCommonPrimitivesLongs_

@class IOSByteArray;
@class IOSLongArray;
@class IOSObjectArray;
@class JavaLangLong;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;
@protocol JavaUtilList;

#define ComGoogleCommonPrimitivesLongs_BYTES 8
#define ComGoogleCommonPrimitivesLongs_MAX_POWER_OF_TWO 4611686018427387904

@interface ComGoogleCommonPrimitivesLongs : NSObject {
}

+ (int)BYTES;
+ (long long int)MAX_POWER_OF_TWO;
- (id)init;
+ (int)hashCodeWithLong:(long long int)value;
+ (int)compareWithLong:(long long int)a
              withLong:(long long int)b;
+ (BOOL)containsWithLongArray:(IOSLongArray *)array
                     withLong:(long long int)target;
+ (int)indexOfWithLongArray:(IOSLongArray *)array
                   withLong:(long long int)target;
+ (int)indexOfWithLongArray:(IOSLongArray *)array
                   withLong:(long long int)target
                    withInt:(int)start
                    withInt:(int)end;
+ (int)indexOfWithLongArray:(IOSLongArray *)array
              withLongArray:(IOSLongArray *)target;
+ (int)lastIndexOfWithLongArray:(IOSLongArray *)array
                       withLong:(long long int)target;
+ (int)lastIndexOfWithLongArray:(IOSLongArray *)array
                       withLong:(long long int)target
                        withInt:(int)start
                        withInt:(int)end;
+ (long long int)minWithLongArray:(IOSLongArray *)array;
+ (long long int)maxWithLongArray:(IOSLongArray *)array;
+ (IOSLongArray *)concatWithLongArray2:(IOSObjectArray *)arrays;
+ (IOSByteArray *)toByteArrayWithLong:(long long int)value;
+ (long long int)fromByteArrayWithByteArray:(IOSByteArray *)bytes;
+ (long long int)fromBytesWithByte:(char)b1
                          withByte:(char)b2
                          withByte:(char)b3
                          withByte:(char)b4
                          withByte:(char)b5
                          withByte:(char)b6
                          withByte:(char)b7
                          withByte:(char)b8;
+ (JavaLangLong *)tryParseWithNSString:(NSString *)string;
+ (IOSLongArray *)ensureCapacityWithLongArray:(IOSLongArray *)array
                                      withInt:(int)minLength
                                      withInt:(int)padding;
+ (IOSLongArray *)copyOfWithLongArray:(IOSLongArray *)original
                              withInt:(int)length OBJC_METHOD_FAMILY_NONE;
+ (NSString *)joinWithNSString:(NSString *)separator
                 withLongArray:(IOSLongArray *)array;
+ (id<JavaUtilComparator>)lexicographicalComparator;
+ (IOSLongArray *)toArrayWithJavaUtilCollection:(id<JavaUtilCollection>)collection;
+ (id<JavaUtilList>)asListWithLongArray:(IOSLongArray *)backingArray;
@end
#endif

#if !defined (_ComGoogleCommonPrimitivesLongs_LexicographicalComparatorEnum_) && (ComGoogleCommonPrimitivesLongs_INCLUDE_ALL || ComGoogleCommonPrimitivesLongs_LexicographicalComparatorEnum_INCLUDE)
#define _ComGoogleCommonPrimitivesLongs_LexicographicalComparatorEnum_

@class IOSLongArray;

#define JavaLangEnum_RESTRICT 1
#define JavaLangEnum_INCLUDE 1
#include "java/lang/Enum.h"

#define JavaUtilComparator_RESTRICT 1
#define JavaUtilComparator_INCLUDE 1
#include "java/util/Comparator.h"

typedef enum {
  ComGoogleCommonPrimitivesLongs_LexicographicalComparator_INSTANCE = 0,
} ComGoogleCommonPrimitivesLongs_LexicographicalComparator;

@interface ComGoogleCommonPrimitivesLongs_LexicographicalComparatorEnum : JavaLangEnum < NSCopying, JavaUtilComparator > {
}
+ (ComGoogleCommonPrimitivesLongs_LexicographicalComparatorEnum *)INSTANCE;
+ (IOSObjectArray *)values;
+ (ComGoogleCommonPrimitivesLongs_LexicographicalComparatorEnum *)valueOfWithNSString:(NSString *)name;
- (id)copyWithZone:(NSZone *)zone;
- (int)compareWithId:(IOSLongArray *)left
              withId:(IOSLongArray *)right;
- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal;
@end
#endif

#if !defined (_ComGoogleCommonPrimitivesLongs_LongArrayAsList_) && (ComGoogleCommonPrimitivesLongs_INCLUDE_ALL || ComGoogleCommonPrimitivesLongs_LongArrayAsList_INCLUDE)
#define _ComGoogleCommonPrimitivesLongs_LongArrayAsList_

@class IOSLongArray;
@class JavaLangLong;
@protocol JavaUtilList;

#define JavaUtilAbstractList_RESTRICT 1
#define JavaUtilAbstractList_INCLUDE 1
#include "java/util/AbstractList.h"

#define JavaUtilRandomAccess_RESTRICT 1
#define JavaUtilRandomAccess_INCLUDE 1
#include "java/util/RandomAccess.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

#define ComGoogleCommonPrimitivesLongs_LongArrayAsList_serialVersionUID 0

@interface ComGoogleCommonPrimitivesLongs_LongArrayAsList : JavaUtilAbstractList < JavaUtilRandomAccess, JavaIoSerializable > {
 @public
  IOSLongArray *array_;
  int start_;
  int end_;
}

- (id)initWithLongArray:(IOSLongArray *)array;
- (id)initWithLongArray:(IOSLongArray *)array
                withInt:(int)start
                withInt:(int)end;
- (int)size;
- (BOOL)isEmpty;
- (JavaLangLong *)getWithInt:(int)index;
- (BOOL)containsWithId:(id)target;
- (int)indexOfWithId:(id)target;
- (int)lastIndexOfWithId:(id)target;
- (JavaLangLong *)setWithInt:(int)index
                      withId:(JavaLangLong *)element;
- (id<JavaUtilList>)subListWithInt:(int)fromIndex
                           withInt:(int)toIndex;
- (BOOL)isEqual:(id)object;
- (NSUInteger)hash;
- (NSString *)description;
- (IOSLongArray *)toLongArray;
- (void)copyAllFieldsTo:(ComGoogleCommonPrimitivesLongs_LongArrayAsList *)other;
@end

J2OBJC_FIELD_SETTER(ComGoogleCommonPrimitivesLongs_LongArrayAsList, array_, IOSLongArray *)
#endif
