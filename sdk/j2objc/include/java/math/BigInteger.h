//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: apache_harmony/classlib/modules/math/src/main/java/java/math/BigInteger.java
//
//  Created by tball on 11/23/13.
//

#ifndef _JavaMathBigInteger_H_
#define _JavaMathBigInteger_H_

@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilRandom;

#import "JreEmulation.h"
#include "java/io/Serializable.h"
#include "java/lang/Comparable.h"

#define JavaMathBigInteger_EQUALS 0
#define JavaMathBigInteger_GREATER 1
#define JavaMathBigInteger_LESS -1
#define JavaMathBigInteger_serialVersionUID -8287574255936472291

@interface JavaMathBigInteger : NSNumber < JavaLangComparable, JavaIoSerializable > {
 @public
  IOSIntArray *digits_;
  int numberLength_;
  int sign_;
  int firstNonzeroDigit_;
  int signum__;
  IOSByteArray *magnitude_;
  int hashCode__;
}

+ (JavaMathBigInteger *)ZERO;
+ (JavaMathBigInteger *)ONE;
+ (JavaMathBigInteger *)TEN;
+ (JavaMathBigInteger *)MINUS_ONE;
+ (int)EQUALS;
+ (int)GREATER;
+ (int)LESS;
+ (IOSObjectArray *)SMALL_VALUES;
+ (IOSObjectArray *)TWO_POWS;
- (id)initWithInt:(int)numBits
withJavaUtilRandom:(JavaUtilRandom *)rnd;
- (id)initWithInt:(int)bitLength
          withInt:(int)certainty
withJavaUtilRandom:(JavaUtilRandom *)rnd;
- (id)initWithNSString:(NSString *)val;
- (id)initWithNSString:(NSString *)val
               withInt:(int)radix;
- (id)initWithInt:(int)signum
    withByteArray:(IOSByteArray *)magnitude;
- (id)initWithByteArray:(IOSByteArray *)val;
- (id)initWithInt:(int)sign
          withInt:(int)value;
- (id)initWithInt:(int)sign
          withInt:(int)numberLength
     withIntArray:(IOSIntArray *)digits;
- (id)initWithInt:(int)sign
         withLong:(long long int)val;
- (id)initWithInt:(int)signum
     withIntArray:(IOSIntArray *)digits;
+ (JavaMathBigInteger *)valueOfWithLong:(long long int)val;
- (IOSByteArray *)toByteArray;
+ (void)setFromStringWithJavaMathBigInteger:(JavaMathBigInteger *)bi
                               withNSString:(NSString *)val
                                    withInt:(int)radix;
- (JavaMathBigInteger *)abs;
- (JavaMathBigInteger *)negate;
- (JavaMathBigInteger *)addWithJavaMathBigInteger:(JavaMathBigInteger *)val;
- (JavaMathBigInteger *)subtractWithJavaMathBigInteger:(JavaMathBigInteger *)val;
- (int)signum;
- (JavaMathBigInteger *)shiftRightWithInt:(int)n;
- (JavaMathBigInteger *)shiftLeftWithInt:(int)n;
- (JavaMathBigInteger *)shiftLeftOneBit;
- (int)bitLength;
- (BOOL)testBitWithInt:(int)n;
- (JavaMathBigInteger *)setBitWithInt:(int)n;
- (JavaMathBigInteger *)clearBitWithInt:(int)n;
- (JavaMathBigInteger *)flipBitWithInt:(int)n;
- (int)getLowestSetBit;
- (int)bitCount;
- (JavaMathBigInteger *)not__;
- (JavaMathBigInteger *)and__WithJavaMathBigInteger:(JavaMathBigInteger *)val;
- (JavaMathBigInteger *)or__WithJavaMathBigInteger:(JavaMathBigInteger *)val;
- (JavaMathBigInteger *)xor__WithJavaMathBigInteger:(JavaMathBigInteger *)val;
- (JavaMathBigInteger *)andNotWithJavaMathBigInteger:(JavaMathBigInteger *)val;
- (int)intValue;
- (long long int)longLongValue;
- (float)floatValue;
- (double)doubleValue;
- (int)compareToWithId:(JavaMathBigInteger *)val;
- (JavaMathBigInteger *)minWithJavaMathBigInteger:(JavaMathBigInteger *)val;
- (JavaMathBigInteger *)maxWithJavaMathBigInteger:(JavaMathBigInteger *)val;
- (NSUInteger)hash;
- (BOOL)isEqual:(id)x;
- (BOOL)equalsArraysWithIntArray:(IOSIntArray *)b;
- (NSString *)description;
- (NSString *)toStringWithInt:(int)radix;
- (JavaMathBigInteger *)gcdWithJavaMathBigInteger:(JavaMathBigInteger *)val;
- (JavaMathBigInteger *)multiplyWithJavaMathBigInteger:(JavaMathBigInteger *)val;
- (JavaMathBigInteger *)powWithInt:(int)exp;
- (IOSObjectArray *)divideAndRemainderWithJavaMathBigInteger:(JavaMathBigInteger *)divisor;
- (JavaMathBigInteger *)divideWithJavaMathBigInteger:(JavaMathBigInteger *)divisor;
- (JavaMathBigInteger *)remainderWithJavaMathBigInteger:(JavaMathBigInteger *)divisor;
- (JavaMathBigInteger *)modInverseWithJavaMathBigInteger:(JavaMathBigInteger *)m;
- (JavaMathBigInteger *)modPowWithJavaMathBigInteger:(JavaMathBigInteger *)exponent
                              withJavaMathBigInteger:(JavaMathBigInteger *)m;
- (JavaMathBigInteger *)modWithJavaMathBigInteger:(JavaMathBigInteger *)m;
- (BOOL)isProbablePrimeWithInt:(int)certainty;
- (JavaMathBigInteger *)nextProbablePrime;
+ (JavaMathBigInteger *)probablePrimeWithInt:(int)bitLength
                          withJavaUtilRandom:(JavaUtilRandom *)rnd;
- (void)cutOffLeadingZeroes;
- (BOOL)isOne;
- (void)putBytesPositiveToIntegersWithByteArray:(IOSByteArray *)byteValues;
- (void)putBytesNegativeToIntegersWithByteArray:(IOSByteArray *)byteValues;
- (int)getFirstNonzeroDigit;
- (JavaMathBigInteger *)copy__ OBJC_METHOD_FAMILY_NONE;
- (void)unCache;
+ (JavaMathBigInteger *)getPowerOfTwoWithInt:(int)exp;
- (void)copyAllFieldsTo:(JavaMathBigInteger *)other;
@end

J2OBJC_FIELD_SETTER(JavaMathBigInteger, digits_, IOSIntArray *)
J2OBJC_FIELD_SETTER(JavaMathBigInteger, magnitude_, IOSByteArray *)

#endif // _JavaMathBigInteger_H_
