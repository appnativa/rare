//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: mods/java/text/DateFormat.java
//
//  Created by decoteaud on 11/13/15.
//

#ifndef _JavaTextDateFormat_H_
#define _JavaTextDateFormat_H_

@class JavaLangStringBuffer;
@class JavaTextFieldPosition;
@class JavaTextParsePosition;
@class JavaUtilDate;
@class JavaUtilHashtable;
@class JavaUtilLocale;
@class JavaUtilTimeZone;

#import "JreEmulation.h"
#include "java/text/Format.h"

#define JavaTextDateFormat_AM_PM_FIELD 14
#define JavaTextDateFormat_DATE_FIELD 3
#define JavaTextDateFormat_DAY_OF_WEEK_FIELD 9
#define JavaTextDateFormat_DAY_OF_WEEK_IN_MONTH_FIELD 11
#define JavaTextDateFormat_DAY_OF_YEAR_FIELD 10
#define JavaTextDateFormat_DEFAULT 2
#define JavaTextDateFormat_ERA_FIELD 0
#define JavaTextDateFormat_FULL 0
#define JavaTextDateFormat_HOUR0_FIELD 16
#define JavaTextDateFormat_HOUR1_FIELD 15
#define JavaTextDateFormat_HOUR_OF_DAY0_FIELD 5
#define JavaTextDateFormat_HOUR_OF_DAY1_FIELD 4
#define JavaTextDateFormat_LONG 1
#define JavaTextDateFormat_MEDIUM 2
#define JavaTextDateFormat_MILLISECOND_FIELD 8
#define JavaTextDateFormat_MINUTE_FIELD 6
#define JavaTextDateFormat_MONTH_FIELD 2
#define JavaTextDateFormat_SECOND_FIELD 7
#define JavaTextDateFormat_SHORT 3
#define JavaTextDateFormat_TIMEZONE_FIELD 17
#define JavaTextDateFormat_WEEK_OF_MONTH_FIELD 13
#define JavaTextDateFormat_WEEK_OF_YEAR_FIELD 12
#define JavaTextDateFormat_YEAR_FIELD 1

@interface JavaTextDateFormat : JavaTextFormat {
 @public
  JavaUtilTimeZone *timezone_;
  id proxy_;
}

+ (int)AM_PM_FIELD;
+ (int)DATE_FIELD;
+ (int)DAY_OF_WEEK_FIELD;
+ (int)DAY_OF_WEEK_IN_MONTH_FIELD;
+ (int)DAY_OF_YEAR_FIELD;
+ (int)DEFAULT;
+ (int)ERA_FIELD;
+ (int)FULL;
+ (int)HOUR0_FIELD;
+ (int)HOUR1_FIELD;
+ (int)HOUR_OF_DAY0_FIELD;
+ (int)HOUR_OF_DAY1_FIELD;
+ (int)LONG;
+ (int)MEDIUM;
+ (int)MILLISECOND_FIELD;
+ (int)MINUTE_FIELD;
+ (int)MONTH_FIELD;
+ (int)SECOND_FIELD;
+ (int)SHORT;
+ (int)TIMEZONE_FIELD;
+ (int)WEEK_OF_MONTH_FIELD;
+ (int)WEEK_OF_YEAR_FIELD;
+ (int)YEAR_FIELD;
- (id)init;
- (id)clone;
- (NSString *)formatWithJavaUtilDate:(JavaUtilDate *)date;
- (JavaLangStringBuffer *)formatWithId:(id)obj
              withJavaLangStringBuffer:(JavaLangStringBuffer *)toAppendTo
             withJavaTextFieldPosition:(JavaTextFieldPosition *)pos;
- (JavaLangStringBuffer *)formatWithJavaUtilDate:(JavaUtilDate *)date
                        withJavaLangStringBuffer:(JavaLangStringBuffer *)toAppendTo
                       withJavaTextFieldPosition:(JavaTextFieldPosition *)fieldPosition;
- (JavaUtilDate *)parseWithNSString:(NSString *)source;
- (JavaUtilDate *)parseWithNSString:(NSString *)source
          withJavaTextParsePosition:(JavaTextParsePosition *)pos;
- (void)setLenientWithBoolean:(BOOL)value;
- (void)setTimeZoneWithJavaUtilTimeZone:(JavaUtilTimeZone *)tz;
+ (NSString *)getDateFormatWithInt:(int)dateStyle
                withJavaUtilLocale:(JavaUtilLocale *)locale;
+ (JavaTextDateFormat *)getDateInstance;
+ (JavaTextDateFormat *)getDateInstanceWithInt:(int)style;
+ (JavaTextDateFormat *)getDateInstanceWithInt:(int)style
                            withJavaUtilLocale:(JavaUtilLocale *)locale;
+ (JavaTextDateFormat *)getDateTimeInstance;
+ (JavaTextDateFormat *)getDateTimeInstanceWithInt:(int)dateStyle
                                           withInt:(int)timeStyle;
+ (JavaTextDateFormat *)getDateTimeInstanceWithInt:(int)dateStyle
                                           withInt:(int)timeStyle
                                withJavaUtilLocale:(JavaUtilLocale *)locale;
+ (JavaTextDateFormat *)getInstance;
+ (NSString *)getTimeFormatWithInt:(int)timeStyle
                withJavaUtilLocale:(JavaUtilLocale *)locale;
+ (JavaTextDateFormat *)getTimeInstance;
+ (JavaTextDateFormat *)getTimeInstanceWithInt:(int)style;
+ (JavaTextDateFormat *)getTimeInstanceWithInt:(int)style
                            withJavaUtilLocale:(JavaUtilLocale *)locale;
- (JavaUtilTimeZone *)getTimeZone;
- (BOOL)isLenient;
+ (void)checkDateStyleWithInt:(int)style;
+ (void)checkTimeStyleWithInt:(int)style;
+ (NSString *)getDefaultPatternWithNSString:(NSString *)components
                         withJavaUtilLocale:(JavaUtilLocale *)locale;
- (void)copyAllFieldsTo:(JavaTextDateFormat *)other;
@end

J2OBJC_FIELD_SETTER(JavaTextDateFormat, timezone_, JavaUtilTimeZone *)
J2OBJC_FIELD_SETTER(JavaTextDateFormat, proxy_, id)

#define JavaTextDateFormat_Field_serialVersionUID 7441350119349544720

@interface JavaTextDateFormat_Field : JavaTextFormat_Field {
 @public
  int calendarField_;
}

+ (JavaUtilHashtable *)table;
+ (void)setTable:(JavaUtilHashtable *)table;
+ (JavaTextDateFormat_Field *)ERA;
+ (JavaTextDateFormat_Field *)YEAR;
+ (JavaTextDateFormat_Field *)MONTH;
+ (JavaTextDateFormat_Field *)HOUR_OF_DAY0;
+ (JavaTextDateFormat_Field *)HOUR_OF_DAY1;
+ (JavaTextDateFormat_Field *)MINUTE;
+ (JavaTextDateFormat_Field *)SECOND;
+ (JavaTextDateFormat_Field *)MILLISECOND;
+ (JavaTextDateFormat_Field *)DAY_OF_WEEK;
+ (JavaTextDateFormat_Field *)DAY_OF_MONTH;
+ (JavaTextDateFormat_Field *)DAY_OF_YEAR;
+ (JavaTextDateFormat_Field *)DAY_OF_WEEK_IN_MONTH;
+ (JavaTextDateFormat_Field *)WEEK_OF_YEAR;
+ (JavaTextDateFormat_Field *)WEEK_OF_MONTH;
+ (JavaTextDateFormat_Field *)AM_PM;
+ (JavaTextDateFormat_Field *)HOUR0;
+ (JavaTextDateFormat_Field *)HOUR1;
+ (JavaTextDateFormat_Field *)TIME_ZONE;
- (id)initWithNSString:(NSString *)fieldName
               withInt:(int)calendarField;
- (int)getCalendarField;
+ (JavaTextDateFormat_Field *)ofCalendarFieldWithInt:(int)calendarField;
- (void)copyAllFieldsTo:(JavaTextDateFormat_Field *)other;
@end

#endif // _JavaTextDateFormat_H_
