//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/locks/AbstractQueuedLongSynchronizer.java
//
//  Created by tball on 11/23/13.
//

#ifndef _JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_H_
#define _JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_H_

@class JavaLangThread;
@class JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject;
@class JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node;
@class JavaUtilConcurrentTimeUnitEnum;
@class JavaUtilDate;
@class SunMiscUnsafe;
@protocol JavaUtilCollection;

#import "JreEmulation.h"
#include "java/io/Serializable.h"
#include "java/util/concurrent/locks/AbstractOwnableSynchronizer.h"
#include "java/util/concurrent/locks/Condition.h"

#define JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_serialVersionUID 7373984972572414692
#define JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_spinForTimeoutThreshold 1000

@interface JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer : JavaUtilConcurrentLocksAbstractOwnableSynchronizer < JavaIoSerializable > {
 @public
  JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *head_;
  JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *tail_;
  long long int state_;
}

+ (long long int)spinForTimeoutThreshold;
+ (SunMiscUnsafe *)unsafe;
+ (long long int)stateOffset;
+ (long long int)headOffset;
+ (long long int)tailOffset;
+ (long long int)waitStatusOffset;
+ (long long int)nextOffset;
- (id)init;
- (long long int)getState;
- (void)setStateWithLong:(long long int)newState;
- (BOOL)compareAndSetStateWithLong:(long long int)expect
                          withLong:(long long int)update;
- (JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)enqWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node;
- (JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)addWaiterWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)mode;
- (void)setHeadWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node;
- (void)unparkSuccessorWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node;
- (void)doReleaseShared;
- (void)setHeadAndPropagateWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node
                                                                                 withLong:(long long int)propagate;
- (void)cancelAcquireWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node;
+ (BOOL)shouldParkAfterFailedAcquireWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)pred
                                    withJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node;
+ (void)selfInterrupt;
- (BOOL)parkAndCheckInterrupt;
- (BOOL)acquireQueuedWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node
                                                                           withLong:(long long int)arg;
- (void)doAcquireInterruptiblyWithLong:(long long int)arg;
- (BOOL)doAcquireNanosWithLong:(long long int)arg
                      withLong:(long long int)nanosTimeout;
- (void)doAcquireSharedWithLong:(long long int)arg;
- (void)doAcquireSharedInterruptiblyWithLong:(long long int)arg;
- (BOOL)doAcquireSharedNanosWithLong:(long long int)arg
                            withLong:(long long int)nanosTimeout;
- (BOOL)tryAcquireWithLong:(long long int)arg;
- (BOOL)tryReleaseWithLong:(long long int)arg;
- (long long int)tryAcquireSharedWithLong:(long long int)arg;
- (BOOL)tryReleaseSharedWithLong:(long long int)arg;
- (BOOL)isHeldExclusively;
- (void)acquireWithLong:(long long int)arg;
- (void)acquireInterruptiblyWithLong:(long long int)arg;
- (BOOL)tryAcquireNanosWithLong:(long long int)arg
                       withLong:(long long int)nanosTimeout;
- (BOOL)release__WithLong:(long long int)arg;
- (void)acquireSharedWithLong:(long long int)arg;
- (void)acquireSharedInterruptiblyWithLong:(long long int)arg;
- (BOOL)tryAcquireSharedNanosWithLong:(long long int)arg
                             withLong:(long long int)nanosTimeout;
- (BOOL)releaseSharedWithLong:(long long int)arg;
- (BOOL)hasQueuedThreads;
- (BOOL)hasContended;
- (JavaLangThread *)getFirstQueuedThread;
- (JavaLangThread *)fullGetFirstQueuedThread;
- (BOOL)isQueuedWithJavaLangThread:(JavaLangThread *)thread;
- (BOOL)apparentlyFirstQueuedIsExclusive;
- (BOOL)hasQueuedPredecessors;
- (int)getQueueLength;
- (id<JavaUtilCollection>)getQueuedThreads;
- (id<JavaUtilCollection>)getExclusiveQueuedThreads;
- (id<JavaUtilCollection>)getSharedQueuedThreads;
- (NSString *)description;
- (BOOL)isOnSyncQueueWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node;
- (BOOL)findNodeFromTailWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node;
- (BOOL)transferForSignalWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node;
- (BOOL)transferAfterCancelledWaitWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node;
- (long long int)fullyReleaseWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node;
- (BOOL)ownsWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject *)condition;
- (BOOL)hasWaitersWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject *)condition;
- (int)getWaitQueueLengthWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject *)condition;
- (id<JavaUtilCollection>)getWaitingThreadsWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject *)condition;
- (BOOL)compareAndSetHeadWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)update;
- (BOOL)compareAndSetTailWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)expect
                         withJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)update;
+ (BOOL)compareAndSetWaitStatusWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node
                                                                                      withInt:(int)expect
                                                                                      withInt:(int)update;
+ (BOOL)compareAndSetNextWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node
                         withJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)expect
                         withJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)update;
- (void)copyAllFieldsTo:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer, head_, JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer, tail_, JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)

#define JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node_CANCELLED 1
#define JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node_CONDITION -2
#define JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node_PROPAGATE -3
#define JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node_SIGNAL -1

@interface JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node : NSObject {
 @public
  int waitStatus_;
  JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *prev_;
  JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *next_;
  JavaLangThread *thread_;
  JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *nextWaiter_;
}

+ (JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)SHARED;
+ (JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)EXCLUSIVE;
+ (int)CANCELLED;
+ (int)SIGNAL;
+ (int)CONDITION;
+ (int)PROPAGATE;
- (BOOL)isShared;
- (JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)predecessor;
- (id)init;
- (id)initWithJavaLangThread:(JavaLangThread *)thread
withJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)mode;
- (id)initWithJavaLangThread:(JavaLangThread *)thread
                     withInt:(int)waitStatus;
- (void)copyAllFieldsTo:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node, prev_, JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node, next_, JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node, thread_, JavaLangThread *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node, nextWaiter_, JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)

#define JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject_REINTERRUPT 1
#define JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject_THROW_IE -1
#define JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject_serialVersionUID 1173984872572414699

@interface JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject : NSObject < JavaUtilConcurrentLocksCondition, JavaIoSerializable > {
 @public
  JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer *this$0_;
  JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *firstWaiter_;
  JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *lastWaiter_;
}

- (id)initWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer *)outer$;
- (JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)addConditionWaiter;
- (void)doSignalWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)first;
- (void)doSignalAllWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)first;
- (void)unlinkCancelledWaiters;
- (void)signal;
- (void)signalAll;
- (void)awaitUninterruptibly;
- (int)checkInterruptWhileWaitingWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)node;
- (void)reportInterruptAfterWaitWithInt:(int)interruptMode;
- (void)await;
- (long long int)awaitNanosWithLong:(long long int)nanosTimeout;
- (BOOL)awaitUntilWithJavaUtilDate:(JavaUtilDate *)deadline;
- (BOOL)awaitWithLong:(long long int)time
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (BOOL)isOwnedByWithJavaUtilConcurrentLocksAbstractQueuedLongSynchronizer:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer *)sync;
- (BOOL)hasWaiters;
- (int)getWaitQueueLength;
- (id<JavaUtilCollection>)getWaitingThreads;
- (void)copyAllFieldsTo:(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject, this$0_, JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject, firstWaiter_, JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_ConditionObject, lastWaiter_, JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_Node *)

#endif // _JavaUtilConcurrentLocksAbstractQueuedLongSynchronizer_H_
