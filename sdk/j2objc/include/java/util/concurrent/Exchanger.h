//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/Exchanger.java
//
//  Created by tball on 11/23/13.
//

#ifndef _JavaUtilConcurrentExchanger_H_
#define _JavaUtilConcurrentExchanger_H_

@class IOSObjectArray;
@class JavaLangThread;
@class JavaUtilConcurrentAtomicAtomicInteger;
@class JavaUtilConcurrentExchanger_Node;
@class JavaUtilConcurrentExchanger_Slot;
@class JavaUtilConcurrentTimeUnitEnum;

#import "JreEmulation.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

#define JavaUtilConcurrentExchanger_CAPACITY 32

@interface JavaUtilConcurrentExchanger : NSObject {
 @public
  IOSObjectArray *arena_;
  JavaUtilConcurrentAtomicAtomicInteger *max_;
}

+ (int)NCPU;
+ (int)FULL;
+ (int)SPINS;
+ (int)TIMED_SPINS;
+ (id)CANCEL;
+ (id)NULL_ITEM;
- (id)doExchangeWithId:(id)item
           withBoolean:(BOOL)timed
              withLong:(long long int)nanos;
- (int)hashIndex;
- (void)createSlotWithInt:(int)index;
+ (BOOL)tryCancelWithJavaUtilConcurrentExchanger_Node:(JavaUtilConcurrentExchanger_Node *)node
                 withJavaUtilConcurrentExchanger_Slot:(JavaUtilConcurrentExchanger_Slot *)slot;
+ (id)spinWaitWithJavaUtilConcurrentExchanger_Node:(JavaUtilConcurrentExchanger_Node *)node
              withJavaUtilConcurrentExchanger_Slot:(JavaUtilConcurrentExchanger_Slot *)slot;
+ (id)awaitWithJavaUtilConcurrentExchanger_Node:(JavaUtilConcurrentExchanger_Node *)node
           withJavaUtilConcurrentExchanger_Slot:(JavaUtilConcurrentExchanger_Slot *)slot;
- (id)awaitNanosWithJavaUtilConcurrentExchanger_Node:(JavaUtilConcurrentExchanger_Node *)node
                withJavaUtilConcurrentExchanger_Slot:(JavaUtilConcurrentExchanger_Slot *)slot
                                            withLong:(long long int)nanos;
- (id)scanOnTimeoutWithJavaUtilConcurrentExchanger_Node:(JavaUtilConcurrentExchanger_Node *)node;
- (id)init;
- (id)exchangeWithId:(id)x;
- (id)exchangeWithId:(id)x
            withLong:(long long int)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (void)copyAllFieldsTo:(JavaUtilConcurrentExchanger *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentExchanger, arena_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentExchanger, max_, JavaUtilConcurrentAtomicAtomicInteger *)

@interface JavaUtilConcurrentExchanger_Node : JavaUtilConcurrentAtomicAtomicReference {
 @public
  id item_;
  JavaLangThread *waiter_;
}

- (id)initWithId:(id)item;
- (void)copyAllFieldsTo:(JavaUtilConcurrentExchanger_Node *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentExchanger_Node, item_, id)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentExchanger_Node, waiter_, JavaLangThread *)

@interface JavaUtilConcurrentExchanger_Slot : JavaUtilConcurrentAtomicAtomicReference {
 @public
  long long int q0_, q1_, q2_, q3_, q4_, q5_, q6_, q7_, q8_, q9_, qa_, qb_, qc_, qd_, qe_;
}

- (id)init;
- (void)copyAllFieldsTo:(JavaUtilConcurrentExchanger_Slot *)other;
@end

#endif // _JavaUtilConcurrentExchanger_H_
