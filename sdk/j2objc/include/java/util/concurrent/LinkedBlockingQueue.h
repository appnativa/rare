//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/LinkedBlockingQueue.java
//
//  Created by tball on 11/23/13.
//

#ifndef _JavaUtilConcurrentLinkedBlockingQueue_H_
#define _JavaUtilConcurrentLinkedBlockingQueue_H_

@class IOSObjectArray;
@class JavaUtilConcurrentAtomicAtomicInteger;
@class JavaUtilConcurrentLinkedBlockingQueue_Node;
@class JavaUtilConcurrentLocksReentrantLock;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentLocksCondition;

#import "JreEmulation.h"
#include "java/io/Serializable.h"
#include "java/util/AbstractQueue.h"
#include "java/util/Iterator.h"
#include "java/util/concurrent/BlockingQueue.h"

#define JavaUtilConcurrentLinkedBlockingQueue_serialVersionUID -6903933977591709194

@interface JavaUtilConcurrentLinkedBlockingQueue : JavaUtilAbstractQueue < JavaUtilConcurrentBlockingQueue, JavaIoSerializable > {
 @public
  int capacity_;
  JavaUtilConcurrentAtomicAtomicInteger *count_;
  JavaUtilConcurrentLinkedBlockingQueue_Node *head_;
  JavaUtilConcurrentLinkedBlockingQueue_Node *last_;
  JavaUtilConcurrentLocksReentrantLock *takeLock_;
  id<JavaUtilConcurrentLocksCondition> notEmpty_;
  JavaUtilConcurrentLocksReentrantLock *putLock_;
  id<JavaUtilConcurrentLocksCondition> notFull_;
}

- (void)signalNotEmpty;
- (void)signalNotFull;
- (void)enqueueWithJavaUtilConcurrentLinkedBlockingQueue_Node:(JavaUtilConcurrentLinkedBlockingQueue_Node *)node;
- (id)dequeue;
- (void)fullyLock;
- (void)fullyUnlock;
- (id)init;
- (id)initWithInt:(int)capacity;
- (id)initWithJavaUtilCollection:(id<JavaUtilCollection>)c;
- (int)size;
- (int)remainingCapacity;
- (void)putWithId:(id)e;
- (BOOL)offerWithId:(id)e
           withLong:(long long int)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (BOOL)offerWithId:(id)e;
- (id)take;
- (id)pollWithLong:(long long int)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (id)poll;
- (id)peek;
- (void)unlinkWithJavaUtilConcurrentLinkedBlockingQueue_Node:(JavaUtilConcurrentLinkedBlockingQueue_Node *)p
              withJavaUtilConcurrentLinkedBlockingQueue_Node:(JavaUtilConcurrentLinkedBlockingQueue_Node *)trail;
- (BOOL)removeWithId:(id)o;
- (BOOL)containsWithId:(id)o;
- (IOSObjectArray *)toArray;
- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a;
- (NSString *)description;
- (void)clear;
- (int)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c;
- (int)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c
                             withInt:(int)maxElements;
- (id<JavaUtilIterator>)iterator;
- (void)copyAllFieldsTo:(JavaUtilConcurrentLinkedBlockingQueue *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue, count_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue, head_, JavaUtilConcurrentLinkedBlockingQueue_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue, last_, JavaUtilConcurrentLinkedBlockingQueue_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue, takeLock_, JavaUtilConcurrentLocksReentrantLock *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue, notEmpty_, id<JavaUtilConcurrentLocksCondition>)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue, putLock_, JavaUtilConcurrentLocksReentrantLock *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue, notFull_, id<JavaUtilConcurrentLocksCondition>)

@interface JavaUtilConcurrentLinkedBlockingQueue_Node : NSObject {
 @public
  id item_;
  JavaUtilConcurrentLinkedBlockingQueue_Node *next_;
}

- (id)initWithId:(id)x;
- (void)copyAllFieldsTo:(JavaUtilConcurrentLinkedBlockingQueue_Node *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue_Node, item_, id)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue_Node, next_, JavaUtilConcurrentLinkedBlockingQueue_Node *)

@interface JavaUtilConcurrentLinkedBlockingQueue_Itr : NSObject < JavaUtilIterator > {
 @public
  JavaUtilConcurrentLinkedBlockingQueue *this$0_;
  JavaUtilConcurrentLinkedBlockingQueue_Node *current_;
  JavaUtilConcurrentLinkedBlockingQueue_Node *lastRet_;
  id currentElement_;
}

- (id)initWithJavaUtilConcurrentLinkedBlockingQueue:(JavaUtilConcurrentLinkedBlockingQueue *)outer$;
- (BOOL)hasNext;
- (JavaUtilConcurrentLinkedBlockingQueue_Node *)nextNodeWithJavaUtilConcurrentLinkedBlockingQueue_Node:(JavaUtilConcurrentLinkedBlockingQueue_Node *)p;
- (id)next;
- (void)remove;
- (void)copyAllFieldsTo:(JavaUtilConcurrentLinkedBlockingQueue_Itr *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue_Itr, this$0_, JavaUtilConcurrentLinkedBlockingQueue *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue_Itr, current_, JavaUtilConcurrentLinkedBlockingQueue_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue_Itr, lastRet_, JavaUtilConcurrentLinkedBlockingQueue_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue_Itr, currentElement_, id)

#endif // _JavaUtilConcurrentLinkedBlockingQueue_H_
