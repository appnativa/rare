//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/Phaser.java
//
//  Created by tball on 11/23/13.
//

#ifndef _JavaUtilConcurrentPhaser_H_
#define _JavaUtilConcurrentPhaser_H_

@class JavaLangThread;
@class JavaUtilConcurrentAtomicAtomicReference;
@class JavaUtilConcurrentPhaser_QNode;
@class JavaUtilConcurrentTimeUnitEnum;
@class SunMiscUnsafe;

#import "JreEmulation.h"
#include "java/util/concurrent/ForkJoinPool.h"

#define JavaUtilConcurrentPhaser_COUNTS_MASK 4294967295
#define JavaUtilConcurrentPhaser_EMPTY 1
#define JavaUtilConcurrentPhaser_MAX_PARTIES 65535
#define JavaUtilConcurrentPhaser_MAX_PHASE 2147483647
#define JavaUtilConcurrentPhaser_ONE_ARRIVAL 1
#define JavaUtilConcurrentPhaser_ONE_DEREGISTER 65537
#define JavaUtilConcurrentPhaser_ONE_PARTY 65536
#define JavaUtilConcurrentPhaser_PARTIES_MASK 4294901760
#define JavaUtilConcurrentPhaser_PARTIES_SHIFT 16
#define JavaUtilConcurrentPhaser_PHASE_SHIFT 32
#define JavaUtilConcurrentPhaser_TERMINATION_BIT ((long long) 0x8000000000000000LL)
#define JavaUtilConcurrentPhaser_UNARRIVED_MASK 65535

@interface JavaUtilConcurrentPhaser : NSObject {
 @public
  long long int state_;
  JavaUtilConcurrentPhaser *parent_;
  JavaUtilConcurrentPhaser *root_;
  JavaUtilConcurrentAtomicAtomicReference *evenQ_;
  JavaUtilConcurrentAtomicAtomicReference *oddQ_;
}

+ (int)NCPU;
+ (int)SPINS_PER_ARRIVAL;
+ (SunMiscUnsafe *)UNSAFE;
+ (long long int)stateOffset;
+ (int)unarrivedOfWithLong:(long long int)s;
+ (int)partiesOfWithLong:(long long int)s;
+ (int)phaseOfWithLong:(long long int)s;
+ (int)arrivedOfWithLong:(long long int)s;
- (JavaUtilConcurrentAtomicAtomicReference *)queueForWithInt:(int)phase;
- (NSString *)badArriveWithLong:(long long int)s;
- (NSString *)badRegisterWithLong:(long long int)s;
- (int)doArriveWithInt:(int)adjust;
- (int)doRegisterWithInt:(int)registrations;
- (long long int)reconcileState;
- (id)init;
- (id)initWithInt:(int)parties;
- (id)initWithJavaUtilConcurrentPhaser:(JavaUtilConcurrentPhaser *)parent;
- (id)initWithJavaUtilConcurrentPhaser:(JavaUtilConcurrentPhaser *)parent
                               withInt:(int)parties;
- (int)register__;
- (int)bulkRegisterWithInt:(int)parties;
- (int)arrive;
- (int)arriveAndDeregister;
- (int)arriveAndAwaitAdvance;
- (int)awaitAdvanceWithInt:(int)phase;
- (int)awaitAdvanceInterruptiblyWithInt:(int)phase;
- (int)awaitAdvanceInterruptiblyWithInt:(int)phase
                               withLong:(long long int)timeout
     withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (void)forceTermination;
- (int)getPhase;
- (int)getRegisteredParties;
- (int)getArrivedParties;
- (int)getUnarrivedParties;
- (JavaUtilConcurrentPhaser *)getParent;
- (JavaUtilConcurrentPhaser *)getRoot;
- (BOOL)isTerminated;
- (BOOL)onAdvanceWithInt:(int)phase
                 withInt:(int)registeredParties;
- (NSString *)description;
- (NSString *)stateToStringWithLong:(long long int)s;
- (void)releaseWaitersWithInt:(int)phase;
- (int)abortWaitWithInt:(int)phase;
- (int)internalAwaitAdvanceWithInt:(int)phase
withJavaUtilConcurrentPhaser_QNode:(JavaUtilConcurrentPhaser_QNode *)node;
- (void)copyAllFieldsTo:(JavaUtilConcurrentPhaser *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentPhaser, parent_, JavaUtilConcurrentPhaser *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentPhaser, root_, JavaUtilConcurrentPhaser *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentPhaser, evenQ_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentPhaser, oddQ_, JavaUtilConcurrentAtomicAtomicReference *)

@interface JavaUtilConcurrentPhaser_QNode : NSObject < JavaUtilConcurrentForkJoinPool_ManagedBlocker > {
 @public
  JavaUtilConcurrentPhaser *phaser_;
  int phase_;
  BOOL interruptible_;
  BOOL timed_;
  BOOL wasInterrupted_;
  long long int nanos_;
  long long int lastTime_;
  JavaLangThread *thread_;
  JavaUtilConcurrentPhaser_QNode *next_;
}

- (id)initWithJavaUtilConcurrentPhaser:(JavaUtilConcurrentPhaser *)phaser
                               withInt:(int)phase
                           withBoolean:(BOOL)interruptible
                           withBoolean:(BOOL)timed
                              withLong:(long long int)nanos;
- (BOOL)isReleasable;
- (BOOL)block;
- (void)copyAllFieldsTo:(JavaUtilConcurrentPhaser_QNode *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentPhaser_QNode, phaser_, JavaUtilConcurrentPhaser *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentPhaser_QNode, thread_, JavaLangThread *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentPhaser_QNode, next_, JavaUtilConcurrentPhaser_QNode *)

#endif // _JavaUtilConcurrentPhaser_H_
