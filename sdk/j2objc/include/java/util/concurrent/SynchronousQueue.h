//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/SynchronousQueue.java
//
//  Created by tball on 11/23/13.
//

#ifndef _JavaUtilConcurrentSynchronousQueue_H_
#define _JavaUtilConcurrentSynchronousQueue_H_

@class IOSClass;
@class IOSObjectArray;
@class JavaLangThread;
@class JavaUtilConcurrentLocksReentrantLock;
@class JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode;
@class JavaUtilConcurrentSynchronousQueue_TransferStack_SNode;
@class JavaUtilConcurrentSynchronousQueue_Transferer;
@class JavaUtilConcurrentSynchronousQueue_WaitQueue;
@class JavaUtilConcurrentTimeUnitEnum;
@class SunMiscUnsafe;
@protocol JavaUtilCollection;

#import "JreEmulation.h"
#include "java/io/Serializable.h"
#include "java/util/AbstractQueue.h"
#include "java/util/Iterator.h"
#include "java/util/concurrent/BlockingQueue.h"

#define JavaUtilConcurrentSynchronousQueue_serialVersionUID -3223113410248163686
#define JavaUtilConcurrentSynchronousQueue_spinForTimeoutThreshold 1000

@interface JavaUtilConcurrentSynchronousQueue : JavaUtilAbstractQueue < JavaUtilConcurrentBlockingQueue, JavaIoSerializable > {
 @public
  JavaUtilConcurrentSynchronousQueue_Transferer *transferer_;
  JavaUtilConcurrentLocksReentrantLock *qlock_;
  JavaUtilConcurrentSynchronousQueue_WaitQueue *waitingProducers_;
  JavaUtilConcurrentSynchronousQueue_WaitQueue *waitingConsumers_;
}

+ (int)NCPUS;
+ (int)maxTimedSpins;
+ (int)maxUntimedSpins;
+ (long long int)spinForTimeoutThreshold;
- (id)init;
- (id)initWithBoolean:(BOOL)fair;
- (void)putWithId:(id)o;
- (BOOL)offerWithId:(id)o
           withLong:(long long int)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (BOOL)offerWithId:(id)e;
- (id)take;
- (id)pollWithLong:(long long int)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;
- (id)poll;
- (BOOL)isEmpty;
- (int)size;
- (int)remainingCapacity;
- (void)clear;
- (BOOL)containsWithId:(id)o;
- (BOOL)removeWithId:(id)o;
- (BOOL)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;
- (BOOL)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;
- (BOOL)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;
- (id)peek;
- (id<JavaUtilIterator>)iterator;
- (IOSObjectArray *)toArray;
- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a;
- (int)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c;
- (int)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c
                             withInt:(int)maxElements;
+ (long long int)objectFieldOffsetWithSunMiscUnsafe:(SunMiscUnsafe *)UNSAFE
                                       withNSString:(NSString *)field
                                       withIOSClass:(IOSClass *)klazz;
- (void)copyAllFieldsTo:(JavaUtilConcurrentSynchronousQueue *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue, transferer_, JavaUtilConcurrentSynchronousQueue_Transferer *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue, qlock_, JavaUtilConcurrentLocksReentrantLock *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue, waitingProducers_, JavaUtilConcurrentSynchronousQueue_WaitQueue *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue, waitingConsumers_, JavaUtilConcurrentSynchronousQueue_WaitQueue *)

@interface JavaUtilConcurrentSynchronousQueue_Transferer : NSObject {
}

- (id)transferWithId:(id)e
         withBoolean:(BOOL)timed
            withLong:(long long int)nanos;
- (id)init;
@end

#define JavaUtilConcurrentSynchronousQueue_TransferStack_DATA 1
#define JavaUtilConcurrentSynchronousQueue_TransferStack_FULFILLING 2
#define JavaUtilConcurrentSynchronousQueue_TransferStack_REQUEST 0

@interface JavaUtilConcurrentSynchronousQueue_TransferStack : JavaUtilConcurrentSynchronousQueue_Transferer {
 @public
  JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *head_;
}

+ (int)REQUEST;
+ (int)DATA;
+ (int)FULFILLING;
+ (SunMiscUnsafe *)UNSAFE;
+ (long long int)headOffset;
+ (BOOL)isFulfillingWithInt:(int)m;
- (BOOL)casHeadWithJavaUtilConcurrentSynchronousQueue_TransferStack_SNode:(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)h
               withJavaUtilConcurrentSynchronousQueue_TransferStack_SNode:(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)nh;
+ (JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)snodeWithJavaUtilConcurrentSynchronousQueue_TransferStack_SNode:(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)s
                                                                                                                     withId:(id)e
                                                                 withJavaUtilConcurrentSynchronousQueue_TransferStack_SNode:(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)next
                                                                                                                    withInt:(int)mode;
- (id)transferWithId:(id)e
         withBoolean:(BOOL)timed
            withLong:(long long int)nanos;
- (JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)awaitFulfillWithJavaUtilConcurrentSynchronousQueue_TransferStack_SNode:(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)s
                                                                                                                       withBoolean:(BOOL)timed
                                                                                                                          withLong:(long long int)nanos;
- (BOOL)shouldSpinWithJavaUtilConcurrentSynchronousQueue_TransferStack_SNode:(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)s;
- (void)cleanWithJavaUtilConcurrentSynchronousQueue_TransferStack_SNode:(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)s;
- (id)init;
- (void)copyAllFieldsTo:(JavaUtilConcurrentSynchronousQueue_TransferStack *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue_TransferStack, head_, JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)

@interface JavaUtilConcurrentSynchronousQueue_TransferStack_SNode : NSObject {
 @public
  JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *next_;
  JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *match_;
  JavaLangThread *waiter_;
  id item_;
  int mode_;
}

+ (SunMiscUnsafe *)UNSAFE;
+ (long long int)matchOffset;
+ (long long int)nextOffset;
- (id)initWithId:(id)item;
- (BOOL)casNextWithJavaUtilConcurrentSynchronousQueue_TransferStack_SNode:(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)cmp
               withJavaUtilConcurrentSynchronousQueue_TransferStack_SNode:(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)val;
- (BOOL)tryMatchWithJavaUtilConcurrentSynchronousQueue_TransferStack_SNode:(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)s;
- (void)tryCancel;
- (BOOL)isCancelled;
- (void)copyAllFieldsTo:(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode, next_, JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode, match_, JavaUtilConcurrentSynchronousQueue_TransferStack_SNode *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode, waiter_, JavaLangThread *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue_TransferStack_SNode, item_, id)

@interface JavaUtilConcurrentSynchronousQueue_TransferQueue : JavaUtilConcurrentSynchronousQueue_Transferer {
 @public
  JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *head_;
  JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *tail_;
  JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *cleanMe_;
}

+ (SunMiscUnsafe *)UNSAFE;
+ (long long int)headOffset;
+ (long long int)tailOffset;
+ (long long int)cleanMeOffset;
- (id)init;
- (void)advanceHeadWithJavaUtilConcurrentSynchronousQueue_TransferQueue_QNode:(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)h
                   withJavaUtilConcurrentSynchronousQueue_TransferQueue_QNode:(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)nh;
- (void)advanceTailWithJavaUtilConcurrentSynchronousQueue_TransferQueue_QNode:(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)t
                   withJavaUtilConcurrentSynchronousQueue_TransferQueue_QNode:(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)nt;
- (BOOL)casCleanMeWithJavaUtilConcurrentSynchronousQueue_TransferQueue_QNode:(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)cmp
                  withJavaUtilConcurrentSynchronousQueue_TransferQueue_QNode:(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)val;
- (id)transferWithId:(id)e
         withBoolean:(BOOL)timed
            withLong:(long long int)nanos;
- (id)awaitFulfillWithJavaUtilConcurrentSynchronousQueue_TransferQueue_QNode:(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)s
                                                                      withId:(id)e
                                                                 withBoolean:(BOOL)timed
                                                                    withLong:(long long int)nanos;
- (void)cleanWithJavaUtilConcurrentSynchronousQueue_TransferQueue_QNode:(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)pred
             withJavaUtilConcurrentSynchronousQueue_TransferQueue_QNode:(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)s;
- (void)copyAllFieldsTo:(JavaUtilConcurrentSynchronousQueue_TransferQueue *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue_TransferQueue, head_, JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue_TransferQueue, tail_, JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue_TransferQueue, cleanMe_, JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)

@interface JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode : NSObject {
 @public
  JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *next_;
  id item_;
  JavaLangThread *waiter_;
  BOOL isData_;
}

+ (SunMiscUnsafe *)UNSAFE;
+ (long long int)itemOffset;
+ (long long int)nextOffset;
- (id)initWithId:(id)item
     withBoolean:(BOOL)isData;
- (BOOL)casNextWithJavaUtilConcurrentSynchronousQueue_TransferQueue_QNode:(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)cmp
               withJavaUtilConcurrentSynchronousQueue_TransferQueue_QNode:(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)val;
- (BOOL)casItemWithId:(id)cmp
               withId:(id)val;
- (void)tryCancelWithId:(id)cmp;
- (BOOL)isCancelled;
- (BOOL)isOffList;
- (void)copyAllFieldsTo:(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)other;
@end

J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode, next_, JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode, item_, id)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentSynchronousQueue_TransferQueue_QNode, waiter_, JavaLangThread *)

@interface JavaUtilConcurrentSynchronousQueue_EmptyIterator : NSObject < JavaUtilIterator > {
}

+ (JavaUtilConcurrentSynchronousQueue_EmptyIterator *)EMPTY_ITERATOR;
- (BOOL)hasNext;
- (id)next;
- (void)remove;
- (id)init;
@end

@interface JavaUtilConcurrentSynchronousQueue_WaitQueue : NSObject < JavaIoSerializable > {
}

- (id)init;
@end

#define JavaUtilConcurrentSynchronousQueue_LifoWaitQueue_serialVersionUID -3633113410248163686

@interface JavaUtilConcurrentSynchronousQueue_LifoWaitQueue : JavaUtilConcurrentSynchronousQueue_WaitQueue {
}

- (id)init;
@end

#define JavaUtilConcurrentSynchronousQueue_FifoWaitQueue_serialVersionUID -3623113410248163686

@interface JavaUtilConcurrentSynchronousQueue_FifoWaitQueue : JavaUtilConcurrentSynchronousQueue_WaitQueue {
}

- (id)init;
@end

#endif // _JavaUtilConcurrentSynchronousQueue_H_
