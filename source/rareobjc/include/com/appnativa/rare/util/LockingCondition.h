//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/util/LockingCondition.java
//
//  Created by decoteaud on 3/11/16.
//

#ifndef _RARELockingCondition_H_
#define _RARELockingCondition_H_

@class JavaUtilConcurrentAtomicAtomicInteger;
@protocol JavaUtilConcurrentLocksCondition;
@protocol JavaUtilConcurrentLocksLock;

#import "JreEmulation.h"

@interface RARELockingCondition : NSObject {
 @public
  id proxy_;
  JavaUtilConcurrentAtomicAtomicInteger *waiters_;
  id<JavaUtilConcurrentLocksLock> lock__;
  id<JavaUtilConcurrentLocksCondition> condition_;
}

- (id)init;
- (void)lock;
- (void)unlock;
- (void)awaitSignal;
- (void)awaitSignalEx;
- (void)awaitSignalWithLong:(long long int)milliseconds;
- (void)awaitSignalExWithLong:(long long int)milliseconds;
- (void)signalAll;
- (void)signal;
+ (id)createProxy;
- (void)copyAllFieldsTo:(RARELockingCondition *)other;
@end

J2OBJC_FIELD_SETTER(RARELockingCondition, proxy_, id)
J2OBJC_FIELD_SETTER(RARELockingCondition, waiters_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(RARELockingCondition, lock__, id<JavaUtilConcurrentLocksLock>)
J2OBJC_FIELD_SETTER(RARELockingCondition, condition_, id<JavaUtilConcurrentLocksCondition>)

typedef RARELockingCondition ComAppnativaRareUtilLockingCondition;

#endif // _RARELockingCondition_H_
