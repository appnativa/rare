//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../util/src/com/appnativa/util/SDecimal.java
//
//  Created by decoteaud on 12/8/15.
//

#ifndef _RAREUTSDecimal_H_
#define _RAREUTSDecimal_H_

@class IOSByteArray;
@class IOSCharArray;
@class JavaMathBigDecimal;
@class JavaMathBigInteger;
@class JavaMathMathContext;
@class RAREUTCharArray;
@class RAREUTSNumber;

#import "JreEmulation.h"
#include "java/lang/Comparable.h"
#include "java/lang/ThreadLocal.h"

#define RAREUTSDecimal_dot 1
#define RAREUTSDecimal_exponent 2

@interface RAREUTSDecimal : NSObject < JavaLangComparable, NSCopying > {
 @public
  RAREUTCharArray *charBuf_;
  JavaMathBigDecimal *theNumber_;
  BOOL immutable_;
}

+ (NSString *)divideByZero;
+ (NSString *)numberToLarge;
+ (JavaMathMathContext *)mathContext;
+ (RAREUTSDecimal *)zeroDecimal;
+ (RAREUTSDecimal *)thirtySixHundredDecimal;
+ (RAREUTSDecimal *)tenDecimal;
+ (RAREUTSDecimal *)bd8192;
+ (RAREUTSDecimal *)bd65536;
+ (RAREUTSDecimal *)bd60;
+ (RAREUTSDecimal *)bd512;
+ (RAREUTSDecimal *)bd4096;
+ (RAREUTSDecimal *)bd4;
+ (RAREUTSDecimal *)bd365;
+ (RAREUTSDecimal *)bd3600;
+ (RAREUTSDecimal *)bd32768;
+ (RAREUTSDecimal *)bd256;
+ (RAREUTSDecimal *)bd24;
+ (RAREUTSDecimal *)bd2048;
+ (RAREUTSDecimal *)bd2;
+ (RAREUTSDecimal *)bd128;
+ (RAREUTSDecimal *)bd1024;
+ (RAREUTSDecimal *)ptZeroOneDecimal;
+ (JavaLangThreadLocal *)perThreadNumber;
+ (void)setPerThreadNumber:(JavaLangThreadLocal *)perThreadNumber;
+ (JavaLangThreadLocal *)perThreadCA;
+ (void)setPerThreadCA:(JavaLangThreadLocal *)perThreadCA;
+ (JavaMathBigDecimal *)minLong;
+ (JavaMathBigDecimal *)maxLong;
+ (RAREUTSDecimal *)oneHundredDecimal;
+ (RAREUTSDecimal *)oneDecimal;
- (id)init;
- (id)initWithJavaMathBigDecimal:(JavaMathBigDecimal *)num;
- (id)initWithJavaMathBigInteger:(JavaMathBigInteger *)num;
- (id)initWithDouble:(double)num;
- (id)initWithInt:(int)num;
- (id)initWithLong:(long long int)num;
- (id)initWithRAREUTSDecimal:(RAREUTSDecimal *)snum;
- (id)initWithRAREUTSNumber:(RAREUTSNumber *)snum;
- (id)initWithNSString:(NSString *)str;
- (id)initWithNSString:(NSString *)str
           withBoolean:(BOOL)javaparsecompat;
- (id)initWithCharArray:(IOSCharArray *)chars
                withInt:(int)pos
                withInt:(int)len;
- (id)initWithCharArray:(IOSCharArray *)chars
                withInt:(int)pos
                withInt:(int)len
            withBoolean:(BOOL)javaparsecompat;
- (RAREUTSDecimal *)addWithJavaMathBigDecimal:(JavaMathBigDecimal *)num;
- (RAREUTSDecimal *)addWithDouble:(double)num;
- (RAREUTSDecimal *)addWithInt:(int)num;
- (RAREUTSDecimal *)addWithLong:(long long int)num;
- (RAREUTSDecimal *)addWithRAREUTSDecimal:(RAREUTSDecimal *)num;
- (RAREUTSDecimal *)addWithNSString:(NSString *)str;
- (RAREUTSDecimal *)and__WithRAREUTSDecimal:(RAREUTSDecimal *)num;
- (RAREUTSDecimal *)and__WithNSString:(NSString *)str;
- (id)clone;
- (int)compareToWithId:(id)obj;
- (int)compareToWithRAREUTSDecimal:(RAREUTSDecimal *)num;
- (int)decimalPlaces;
- (RAREUTSDecimal *)divideWithDouble:(double)num;
- (RAREUTSDecimal *)divideWithInt:(int)num;
- (RAREUTSDecimal *)divideWithLong:(long long int)num;
- (RAREUTSDecimal *)divideWithRAREUTSDecimal:(RAREUTSDecimal *)num;
- (RAREUTSDecimal *)divideWithRAREUTSNumber:(RAREUTSNumber *)num;
- (RAREUTSDecimal *)divideWithNSString:(NSString *)str;
+ (NSString *)divideWithJavaMathBigDecimal:(JavaMathBigDecimal *)num1
                    withJavaMathBigDecimal:(JavaMathBigDecimal *)num2;
- (RAREUTSDecimal *)divideIntegerWithRAREUTSDecimal:(RAREUTSDecimal *)val;
- (RAREUTSDecimal *)divideIntegerWithRAREUTSNumber:(RAREUTSNumber *)val;
+ (JavaMathBigDecimal *)divideIntegerWithJavaMathBigDecimal:(JavaMathBigDecimal *)num1
                                     withJavaMathBigDecimal:(JavaMathBigDecimal *)num2;
- (double)doubleValue;
- (BOOL)equalsWithDouble:(double)num;
- (BOOL)equalsWithInt:(int)num;
- (BOOL)equalsWithLong:(long long int)num;
- (BOOL)isEqual:(id)obj;
- (BOOL)equalsWithRAREUTSDecimal:(RAREUTSDecimal *)num;
- (long long int)fractionValue;
- (NSString *)fractionValueString;
- (JavaMathBigDecimal *)getBigDecimal;
- (BOOL)getSNumberWithRAREUTSNumber:(RAREUTSNumber *)outArg;
- (BOOL)gtWithDouble:(double)num;
- (BOOL)gtWithInt:(int)num;
- (BOOL)gtWithLong:(long long int)num;
- (BOOL)gtWithRAREUTSDecimal:(RAREUTSDecimal *)snum;
- (NSUInteger)hash;
- (NSString *)hexMantissaValueStringWithBoolean:(BOOL)sign;
- (int)intValue;
- (int)intValueMax;
- (BOOL)isInteger;
- (BOOL)isNegative;
- (BOOL)isZero;
- (long long int)longValue;
- (BOOL)ltWithDouble:(double)num;
- (BOOL)ltWithInt:(int)num;
- (BOOL)ltWithLong:(long long int)num;
- (BOOL)ltWithRAREUTSDecimal:(RAREUTSDecimal *)snum;
- (RAREUTSDecimal *)makeImmutable;
- (RAREUTSDecimal *)modWithRAREUTSDecimal:(RAREUTSDecimal *)num;
- (RAREUTSDecimal *)modWithRAREUTSDecimal:(RAREUTSDecimal *)snum
                              withBoolean:(BOOL)special;
+ (JavaMathBigDecimal *)modWithJavaMathBigDecimal:(JavaMathBigDecimal *)num1
                           withJavaMathBigDecimal:(JavaMathBigDecimal *)num2
                                      withBoolean:(BOOL)special;
- (RAREUTSDecimal *)moveDecimalPointWithInt:(int)places;
- (RAREUTSDecimal *)multiplyWithDouble:(double)num;
- (RAREUTSDecimal *)multiplyWithInt:(int)num;
- (RAREUTSDecimal *)multiplyWithLong:(long long int)num;
- (RAREUTSDecimal *)multiplyWithRAREUTSDecimal:(RAREUTSDecimal *)num;
- (RAREUTSDecimal *)multiplyWithRAREUTSNumber:(RAREUTSNumber *)num;
- (RAREUTSDecimal *)multiplyWithNSString:(NSString *)str;
+ (JavaMathBigDecimal *)multiplyWithJavaMathBigDecimal:(JavaMathBigDecimal *)num1
                                withJavaMathBigDecimal:(JavaMathBigDecimal *)num2;
- (RAREUTSDecimal *)negate;
- (RAREUTSDecimal *)not__;
- (RAREUTSDecimal *)oneOver;
- (RAREUTSDecimal *)or__WithDouble:(double)num;
- (RAREUTSDecimal *)or__WithInt:(int)num;
- (RAREUTSDecimal *)or__WithLong:(long long int)num;
- (RAREUTSDecimal *)or__WithRAREUTSDecimal:(RAREUTSDecimal *)snum;
- (RAREUTSDecimal *)or__WithNSString:(NSString *)str;
- (RAREUTSDecimal *)powWithRAREUTSDecimal:(RAREUTSDecimal *)snum;
- (RAREUTSDecimal *)powWithRAREUTSNumber:(RAREUTSNumber *)snum;
- (RAREUTSDecimal *)roundWithInt:(int)places
                     withBoolean:(BOOL)up;
- (int)scale__;
- (RAREUTSDecimal *)setValueWithJavaMathBigDecimal:(JavaMathBigDecimal *)num;
- (RAREUTSDecimal *)setValueWithJavaMathBigInteger:(JavaMathBigInteger *)num;
- (RAREUTSDecimal *)setValueWithDouble:(double)val;
- (RAREUTSDecimal *)setValueWithLong:(long long int)val;
- (RAREUTSDecimal *)setValueWithRAREUTSDecimal:(RAREUTSDecimal *)num;
- (RAREUTSDecimal *)setValueWithRAREUTSNumber:(RAREUTSNumber *)num;
- (RAREUTSDecimal *)setValueWithNSString:(NSString *)str;
- (RAREUTSDecimal *)setValueWithNSString:(NSString *)str
                             withBoolean:(BOOL)javaparsecompat;
- (RAREUTSDecimal *)setValueWithCharArray:(IOSCharArray *)chars
                                  withInt:(int)pos
                                  withInt:(int)len;
- (RAREUTSDecimal *)setValueWithLong:(long long int)mantissa
                            withLong:(long long int)fraction
                             withInt:(int)decplaces;
- (RAREUTSDecimal *)setValueWithCharArray:(IOSCharArray *)chars
                                  withInt:(int)pos
                                  withInt:(int)len
                              withBoolean:(BOOL)javaparsecompat;
- (BOOL)setValueExWithCharArray:(IOSCharArray *)chars
                        withInt:(int)pos
                        withInt:(int)len
                    withBoolean:(BOOL)javaparsecompat;
+ (JavaMathBigDecimal *)sqrtWithJavaMathBigDecimal:(JavaMathBigDecimal *)num;
- (RAREUTSDecimal *)subtractWithJavaMathBigDecimal:(JavaMathBigDecimal *)num;
- (RAREUTSDecimal *)subtractWithDouble:(double)num;
- (RAREUTSDecimal *)subtractWithInt:(int)num;
- (RAREUTSDecimal *)subtractWithLong:(long long int)num;
- (RAREUTSDecimal *)subtractWithRAREUTSDecimal:(RAREUTSDecimal *)snum;
- (RAREUTSDecimal *)subtractWithNSString:(NSString *)str;
+ (JavaMathBigDecimal *)toBigDecimalWithRAREUTSNumber:(RAREUTSNumber *)snum;
- (int)toBytesWithByteArray:(IOSByteArray *)outArg;
- (RAREUTCharArray *)toCharBufferWithRAREUTCharArray:(RAREUTCharArray *)outArg;
- (NSString *)toFormattedStringWithNSString:(NSString *)format
                                    withInt:(int)places;
- (NSString *)description;
+ (NSString *)toStringWithJavaMathBigDecimal:(JavaMathBigDecimal *)num;
- (RAREUTCharArray *)toStringWithRAREUTCharArray:(RAREUTCharArray *)outArg;
- (RAREUTCharArray *)toStringWithRAREUTCharArray:(RAREUTCharArray *)outArg
                                     withBoolean:(BOOL)append;
- (NSString *)toStringExWithNSString:(NSString *)tab;
+ (RAREUTSDecimal *)valueOfWithDouble:(double)num;
+ (RAREUTSDecimal *)valueOfWithLong:(long long int)num;
+ (RAREUTSDecimal *)valueOfWithRAREUTSNumber:(RAREUTSNumber *)val;
- (RAREUTSDecimal *)xor__WithInt:(int)num;
- (RAREUTSDecimal *)xor__WithLong:(long long int)num;
- (RAREUTSDecimal *)xor__WithRAREUTSDecimal:(RAREUTSDecimal *)snum;
- (RAREUTSDecimal *)xor__WithNSString:(NSString *)str;
- (RAREUTSDecimal *)zero;
- (BOOL)isPowerOfTenWithLong:(long long int)num;
- (BOOL)setValueExWithNSString:(NSString *)str
                   withBoolean:(BOOL)javaparsecompat;
- (id)copyWithZone:(NSZone *)zone;
- (void)copyAllFieldsTo:(RAREUTSDecimal *)other;
@end

J2OBJC_FIELD_SETTER(RAREUTSDecimal, charBuf_, RAREUTCharArray *)
J2OBJC_FIELD_SETTER(RAREUTSDecimal, theNumber_, JavaMathBigDecimal *)

typedef RAREUTSDecimal ComAppnativaUtilSDecimal;

@interface RAREUTSDecimal_$1 : JavaLangThreadLocal {
}

- (id)initialValue OBJC_METHOD_FAMILY_NONE;
- (id)init;
@end

@interface RAREUTSDecimal_$2 : JavaLangThreadLocal {
}

- (id)initialValue OBJC_METHOD_FAMILY_NONE;
- (id)init;
@end

#endif // _RAREUTSDecimal_H_
