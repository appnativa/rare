//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/ios/com/appnativa/rare/platform/apple/ui/view/TextFieldView.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/platform/apple/ui/view/TextFieldView.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/platform/apple/ui/view/aView.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/text/HTMLCharSequence.h"
#include "java/lang/CharSequence.h"
#import "RAREAPTextField.h"
 #import "APView+Component.h"

@implementation RARETextFieldView

- (id)init {
  return [self initRARETextFieldViewWithId:[RARETextFieldView createProxy]];
}

- (id)initRARETextFieldViewWithId:(id)nsview {
  return [super initWithId:nsview];
}

- (id)initWithId:(id)nsview {
  return [self initRARETextFieldViewWithId:nsview];
}

- (void)removeNativeBorder {
  if(!marginSet_) {
    [((RAREAPTextField*)proxy_) setInsetsWithTop: 2 right: 2 bottom: 2 left: 4];
  }
  ((RAREAPTextField*)proxy_).borderStyle=UITextBorderStyleNone;
}

- (void)setAutoShowKeyboardWithBoolean:(BOOL)show {
  [((RAREAPTextField*)proxy_) setAutoShowKeyboard: show];
}

- (void)setBorderWithRAREiPlatformBorder:(id<RAREiPlatformBorder>)b {
  [super setBorderWithRAREiPlatformBorder:b];
}

- (void)borderChangedWithRAREiPlatformBorder:(id<RAREiPlatformBorder>)newBorder {
  [super borderChangedWithRAREiPlatformBorder:newBorder];
  if (newBorder == nil) {
    [self setMarginWithFloat:2 withFloat:2 withFloat:2 withFloat:2];
  }
  else {
    [self setMarginWithRAREUIInsets:[newBorder getBorderInsetsWithRAREUIInsets:nil]];
  }
}

- (void)setEditableWithBoolean:(BOOL)editable {
  [((RAREAPTextField*)proxy_) setEditable: editable];
}

- (void)setEmptyFieldColorWithRAREUIColor:(RAREUIColor *)color {
  ((RAREAPTextField*)proxy_).emptyFieldColor=color ? (UIColor*)color.getAPColor : nil;
}

- (void)setEmptyFieldFontWithRAREUIFont:(RAREUIFont *)font {
  ((RAREAPTextField*)proxy_).emptyFieldFont=font ? (UIFont*)font.getIOSProxy : nil;
}

- (void)setEmptyFieldTextWithNSString:(NSString *)text {
  ((RAREAPTextField*)proxy_).placeholder=(text && text.length>0) ? text : nil;
}

- (void)setFontWithRAREUIFont:(RAREUIFont *)font {
  font_ = font;
  if(font) {
    [((RAREAPTextField*)proxy_) setFont: (UIFont*)[font getIOSProxy]];
  }
}

- (void)setMarginWithFloat:(float)top
                 withFloat:(float)right
                 withFloat:(float)bottom
                 withFloat:(float)left {
  marginSet_=YES;
  [((RAREAPTextField*)proxy_) setInsetsWithTop: top right: right bottom: bottom left: left];
}

- (void)setShowKeyBoardWithBoolean:(BOOL)show {
  [((RAREAPTextField*)proxy_) setShowKeyBoard: show];
}

- (void)setShowMenuWithBoolean:(BOOL)show {
  [((RAREAPTextField*)proxy_) setShowMenu: show];
}

- (void)setTextWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  [self setTextExWithJavaLangCharSequence:[RAREHTMLCharSequence checkSequenceWithJavaLangCharSequence:text withRAREUIFont:[self getFontAlways]]];
}

- (void)setTextWithNSString:(NSString *)text {
  ((RAREAPTextField*)proxy_).text=text;
}

- (void)setTextAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:(RARERenderableDataItem_HorizontalAlignEnum *)hal
                          withRARERenderableDataItem_VerticalAlignEnum:(RARERenderableDataItem_VerticalAlignEnum *)val {
  [((RAREAPTextField*)proxy_)  setTextHorizontalAlignment: hal.ordinal];
}

- (void)setTextExWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  [((RAREAPTextField*)proxy_) setCharSequence: text];
}

- (NSString *)getHtmlText {
  return [((RAREAPTextField*)proxy_) getHTML];
}

- (RAREUIInsets *)getMargin {
  RAREUIInsets *in = [[RAREUIInsets alloc] init];
  [self getMarginExWithRAREUIInsets:in];
  return in;
}

- (NSString *)getPlainText {
  return ((RAREAPTextField*)proxy_).text;
}

- (int)getSelectionEnd {
  NSRange r=((RAREAPTextField*)proxy_).selectedRangeEx;
  if(r.length==0 && r.location==0) {
    int n=[self getTextLength];
    if(n<cursorPosition_) {
      cursorPosition_=n;
    }
    return cursorPosition_;
  }
  else {
    cursorPosition_=(int)r.location;
    return (int)(r.location+r.length);
  }
}

- (int)getSelectionStart {
  NSRange r=((RAREAPTextField*)proxy_).selectedRangeEx;
  if(r.length==0 && r.location==0) {
    int n=[self getTextLength];
    if(n<cursorPosition_) {
      cursorPosition_=n;
    }
    return cursorPosition_;
  }
  else {
    cursorPosition_=(int)r.location;
    return cursorPosition_;
  }
}

- (id<JavaLangCharSequence>)getText {
  return ((RAREAPTextField*)proxy_).text;
}

- (int)getTextLength {
  return (int)((RAREAPTextField*)proxy_).text.length;
}

- (BOOL)isEditable {
  return [((RAREAPTextField*)proxy_) isEditable];
}

- (void)getMarginExWithRAREUIInsets:(RAREUIInsets *)insets {
  [((RAREAPTextField*)proxy_) getInsets: insets];
}

- (void)setForegroundColorExWithRAREUIColor:(RAREUIColor *)fg {
  if(fg) {
    ((RAREAPTextField*)proxy_).textColor=[fg getAPColor];
  }
}

+ (id)createProxy {
  RAREAPTextField *f= [[RAREAPTextField alloc]init];
  f.allowsEditingTextAttributes=NO;
  [f setEditable:YES];
  return f;
}

- (void)setSuggestionsEnabledWithBoolean:(BOOL)enabled {
  ((RAREAPTextField*)proxy_).autocorrectionType = enabled ? UITextAutocorrectionTypeYes : UITextAutocorrectionTypeNo;
}

- (void)copyAllFieldsTo:(RARETextFieldView *)other {
  [super copyAllFieldsTo:other];
  other->marginSet_ = marginSet_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "removeNativeBorder", NULL, "V", 0x101, NULL },
    { "setAutoShowKeyboardWithBoolean:", NULL, "V", 0x101, NULL },
    { "setEditableWithBoolean:", NULL, "V", 0x101, NULL },
    { "setEmptyFieldColorWithRAREUIColor:", NULL, "V", 0x101, NULL },
    { "setEmptyFieldFontWithRAREUIFont:", NULL, "V", 0x101, NULL },
    { "setEmptyFieldTextWithNSString:", NULL, "V", 0x101, NULL },
    { "setFontWithRAREUIFont:", NULL, "V", 0x101, NULL },
    { "setMarginWithFloat:withFloat:withFloat:withFloat:", NULL, "V", 0x101, NULL },
    { "setShowKeyBoardWithBoolean:", NULL, "V", 0x101, NULL },
    { "setShowMenuWithBoolean:", NULL, "V", 0x101, NULL },
    { "setTextWithNSString:", NULL, "V", 0x101, NULL },
    { "setTextAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:withRARERenderableDataItem_VerticalAlignEnum:", NULL, "V", 0x101, NULL },
    { "setTextExWithJavaLangCharSequence:", NULL, "V", 0x101, NULL },
    { "getHtmlText", NULL, "LNSString", 0x101, NULL },
    { "getMargin", NULL, "LRAREUIInsets", 0x1, NULL },
    { "getPlainText", NULL, "LNSString", 0x101, NULL },
    { "getSelectionEnd", NULL, "I", 0x101, NULL },
    { "getSelectionStart", NULL, "I", 0x101, NULL },
    { "getText", NULL, "LJavaLangCharSequence", 0x101, NULL },
    { "getTextLength", NULL, "I", 0x101, NULL },
    { "isEditable", NULL, "Z", 0x101, NULL },
    { "getMarginExWithRAREUIInsets:", NULL, "V", 0x100, NULL },
    { "setForegroundColorExWithRAREUIColor:", NULL, "V", 0x104, NULL },
    { "createProxy", NULL, "LNSObject", 0x10a, NULL },
    { "setSuggestionsEnabledWithBoolean:", NULL, "V", 0x101, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "marginSet_", NULL, 0x4, "Z" },
  };
  static J2ObjcClassInfo _RARETextFieldView = { "TextFieldView", "com.appnativa.rare.platform.apple.ui.view", NULL, 0x1, 25, methods, 1, fields, 0, NULL};
  return &_RARETextFieldView;
}

@end
