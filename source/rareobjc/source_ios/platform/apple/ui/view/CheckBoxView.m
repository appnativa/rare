//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/ios/com/appnativa/rare/platform/apple/ui/view/CheckBoxView.java
//
//  Created by decoteaud on 7/29/15.
//

#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/platform/apple/ui/view/CheckBoxView.h"
#include "com/appnativa/rare/platform/apple/ui/view/CustomButtonView.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/widget/aCheckBoxWidget.h"
#import "RAREUIControl.h"

@implementation RARECheckBoxView

- (id)initWithBoolean:(BOOL)onOffSwitch {
  if (self = [super init]) {
    if (onOffSwitch) {
      isSwitch_ = YES;
      [self makeSwitch];
    }
    else {
      [self setButtonStyle];
      [self setDefaultIcons];
    }
  }
  return self;
}

- (void)makeTriState {
  if (!tristate_) {
    id<RAREiPlatformIcon> icon;
    id<RAREiPlatformIcon> picon;
    if ([((RAREUIColor *) nil_chk([RAREColorUtils getForeground])) isDarkColor]) {
      icon = [RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.indeterminate.light"];
      picon = [RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.indeterminate.pressed.light"];
    }
    else {
      icon = [RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.indeterminate.dark"];
      picon = [RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.indeterminate.pressed.dark"];
    }
    [self makeTriStateCheckboxWithRAREiPlatformIcon:icon withRAREiPlatformIcon:picon];
    self->tristate_ = YES;
  }
}

- (void)setCheckedWithBoolean:(BOOL)checked {
  [self setSelectedWithBoolean:checked];
}

- (void)setIndeterminate {
  if(tristate_) {
    [((RAREUIControl*)proxy_) setIndeterminate];
  }
}

- (void)setStateWithRAREaCheckBoxWidget_StateEnum:(RAREaCheckBoxWidget_StateEnum *)state {
  switch ([state ordinal]) {
    case RAREaCheckBoxWidget_State_DESELECTED:
    [self setSelectedWithBoolean:NO];
    break;
    case RAREaCheckBoxWidget_State_SELECTED:
    [self setSelectedWithBoolean:YES];
    break;
    default:
    if ([self isTriState]) {
      [self setIndeterminate];
    }
    else {
      [self setSelectedWithBoolean:YES];
    }
    break;
  }
}

- (RAREaCheckBoxWidget_StateEnum *)getState {
  if ([self isIndeterminate]) {
    return [RAREaCheckBoxWidget_StateEnum INDETERMINATE];
  }
  return [self isSelected] ? [RAREaCheckBoxWidget_StateEnum SELECTED] : [RAREaCheckBoxWidget_StateEnum DESELECTED];
}

- (BOOL)isChecked {
  return [self isSelected];
}

- (BOOL)isIndeterminate {
  return [((RAREUIControl*)proxy_) isIndeterminate];
}

- (BOOL)isTriState {
  return tristate_;
}

- (void)makeSwitch {
  return [((RAREUIControl*)proxy_) makeSwitch];
}

- (void)makeTriStateCheckboxWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon
                            withRAREiPlatformIcon:(id<RAREiPlatformIcon>)pressedIcon {
  [((RAREUIControl*)proxy_) makeTriState: icon pressedIcon: pressedIcon];
}

- (void)setDefaultIcons {
  if ([((RAREUIColor *) nil_chk([RAREColorUtils getForeground])) isDarkColor]) {
    [self setIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.off.light"]];
    [self setPressedIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.off.pressed.light"]];
    [self setDisabledIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.off.disabled.light"]];
    [self setSelectedIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.on.light"]];
    [self setPressedSelectedIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.on.pressed.light"]];
    [self setDisabledSelectedIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.on.disabled.light"]];
  }
  else {
    [self setIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.off.dark"]];
    [self setPressedIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.off.pressed.dark"]];
    [self setDisabledIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.off.disabled.dark"]];
    [self setSelectedIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.on.dark"]];
    [self setPressedSelectedIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.on.pressed.dark"]];
    [self setDisabledSelectedIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.checkbox.on.disabled.dark"]];
  }
}

- (void)setButtonStyle {
  ((RAREUIControl*)proxy_).isToggle= YES;
}

- (void)copyAllFieldsTo:(RARECheckBoxView *)other {
  [super copyAllFieldsTo:other];
  other->isSwitch_ = isSwitch_;
  other->tristate_ = tristate_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "setIndeterminate", NULL, "V", 0x101, NULL },
    { "getState", NULL, "LRAREaCheckBoxWidget_StateEnum", 0x1, NULL },
    { "isChecked", NULL, "Z", 0x1, NULL },
    { "isIndeterminate", NULL, "Z", 0x101, NULL },
    { "isTriState", NULL, "Z", 0x1, NULL },
    { "makeSwitch", NULL, "V", 0x104, NULL },
    { "makeTriStateCheckboxWithRAREiPlatformIcon:withRAREiPlatformIcon:", NULL, "V", 0x104, NULL },
    { "setDefaultIcons", NULL, "V", 0x4, NULL },
    { "setButtonStyle", NULL, "V", 0x102, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "isSwitch_", NULL, 0x0, "Z" },
    { "tristate_", NULL, 0x0, "Z" },
  };
  static J2ObjcClassInfo _RARECheckBoxView = { "CheckBoxView", "com.appnativa.rare.platform.apple.ui.view", NULL, 0x1, 9, methods, 2, fields, 0, NULL};
  return &_RARECheckBoxView;
}

@end
