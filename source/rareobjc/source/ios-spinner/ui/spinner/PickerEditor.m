//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/ios-spinner/com/appnativa/rare/ui/spinner/PickerEditor.java
//
//  Created by decoteaud on 3/11/16.
//

#include "com/appnativa/rare/platform/apple/ui/view/LabelView.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/ui/FontUtils.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/aSpinnerComponent.h"
#include "com/appnativa/rare/ui/renderer/UILabelRenderer.h"
#include "com/appnativa/rare/ui/spinner/PickerEditor.h"
#include "com/appnativa/rare/ui/spinner/PickerView.h"
#include "com/appnativa/rare/ui/spinner/SpinnerDateModel.h"
#include "com/appnativa/rare/ui/spinner/SpinnerListModel.h"
#include "com/appnativa/rare/ui/spinner/SpinnerNumberModel.h"
#include "com/appnativa/rare/ui/spinner/aSpinnerEditor.h"
#include "com/appnativa/rare/ui/spinner/iSpinnerModel.h"
#include "com/appnativa/util/SNumber.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Math.h"
#include "java/lang/Short.h"
#include "java/util/Date.h"
#include "java/util/EventObject.h"
#include "java/util/List.h"

@implementation RAREPickerEditor

- (id)initWithRAREiSpinnerModel:(id<RAREiSpinnerModel>)model {
  if (self = [super initWithRAREiSpinnerModel:model]) {
    RAREPickerView *pv = [[RAREPickerView alloc] init];
    [pv setChangeListenerWithRAREiChangeListener:self];
    [pv setPickerHelperWithRAREPickerView_iPickerHelper:self];
    [pv setIsCircularWithBoolean:[((id<RAREiSpinnerModel>) nil_chk(model)) isCircular]];
    editorView_ = pv;
  }
  return self;
}

- (void)modelChanged {
  [super modelChanged];
  minSize_ = nil;
}

- (void)renderValueWithInt:(int)row
                    withId:(id)nativeView {
  RAREaSpinnerComponent *spinner = [self getSpinner];
  if (renderingComponent_ == nil) {
    renderingComponent_ = [[RAREUILabelRenderer alloc] initWithRARELabelView:[[RARELabelView alloc] initWithId:nativeView]];
  }
  else {
    [renderingComponent_ setNativeViewWithId:nativeView];
  }
  [((RAREUILabelRenderer *) nil_chk(renderingComponent_)) setFontWithRAREUIFont:[((RAREView *) nil_chk(editorView_)) getFontAlways]];
  id o = @"";
  do {
    if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerListModel class]]) {
      RARESpinnerListModel *lm = (RARESpinnerListModel *) check_class_cast(spinnerModel_, [RARESpinnerListModel class]);
      id<JavaUtilList> list = [((RARESpinnerListModel *) nil_chk(lm)) getList];
      int len = [((id<JavaUtilList>) nil_chk(list)) size];
      if (len == 0) {
        break;
      }
      row = row % len;
      o = [list getWithInt:row];
    }
    else if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerNumberModel class]]) {
      if (defaultItem_ == nil) {
        defaultItem_ = [[RARERenderableDataItem alloc] initWithId:@""];
        [defaultItem_ setHorizontalAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:[RARERenderableDataItem_HorizontalAlignEnum CENTER]];
      }
      o = defaultItem_;
      RARESpinnerNumberModel *nm = (RARESpinnerNumberModel *) check_class_cast(spinnerModel_, [RARESpinnerNumberModel class]);
      if (workValue_ == nil) {
        workValue_ = [[RAREUTSNumber alloc] init];
      }
      (void) [((RAREUTSNumber *) nil_chk(workValue_)) setValueWithRAREUTSNumber:[((RARESpinnerNumberModel *) nil_chk(nm)) getStepSize]];
      (void) [workValue_ multiplyWithInt:row % numberRowCount_];
      (void) [workValue_ addWithRAREUTSNumber:[nm getMinimum]];
      [((RARERenderableDataItem *) nil_chk(defaultItem_)) setValueWithId:[nm toStringWithId:workValue_]];
    }
  }
  while (NO);
  [((RAREaSpinnerComponent *) nil_chk(spinner)) renderItemAtWithId:o withRAREiPlatformRenderingComponent:renderingComponent_];
}

- (void)stateChangedWithJavaUtilEventObject:(JavaUtilEventObject *)e {
  int index = [((RAREPickerView *) check_class_cast(editorView_, [RAREPickerView class])) getSelectedIndex];
  if (index > -1) {
    id o = [self getObjectWithInt:index];
    if (o != nil) {
      [((id<RAREiSpinnerModel>) nil_chk(spinnerModel_)) setValueWithId:o];
    }
  }
}

- (void)setValueWithId:(id)value {
  if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerListModel class]]) {
    RARESpinnerListModel *lm = (RARESpinnerListModel *) check_class_cast(spinnerModel_, [RARESpinnerListModel class]);
    id<JavaUtilList> list = [((RARESpinnerListModel *) nil_chk(lm)) getList];
    int n = [RARERenderableDataItem findValueExWithJavaUtilList:list withId:value];
    if (n != -1) {
      [((RAREPickerView *) check_class_cast(editorView_, [RAREPickerView class])) setSelectedIndexWithInt:n];
    }
  }
  else if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerNumberModel class]]) {
    RARESpinnerNumberModel *nm = (RARESpinnerNumberModel *) check_class_cast(spinnerModel_, [RARESpinnerNumberModel class]);
    [((RARESpinnerNumberModel *) nil_chk(nm)) setValueWithId:value];
    RAREUTSNumber *num = (RAREUTSNumber *) check_class_cast([nm getValue], [RAREUTSNumber class]);
    int n = (num == nil) ? -1 : [self indexForNumberWithRAREUTSNumber:num];
    if (n != -1 && n < [self getRowCount]) {
      [((RAREPickerView *) check_class_cast(editorView_, [RAREPickerView class])) setSelectedIndexWithInt:n];
    }
  }
}

- (void)getMinimumSizeWithRAREUIDimension:(RAREUIDimension *)size {
  if (minSize_ == nil) {
    RAREUIFont *f = [((RAREPickerView *) check_class_cast(editorView_, [RAREPickerView class])) getFontAlways];
    int chars = 5;
    if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerNumberModel class]]) {
      RARESpinnerNumberModel *m = (RARESpinnerNumberModel *) check_class_cast(spinnerModel_, [RARESpinnerNumberModel class]);
      chars = [JavaLangMath maxWithInt:chars withInt:[((NSString *) nil_chk([((RAREUTSNumber *) nil_chk([((RARESpinnerNumberModel *) nil_chk(m)) getMaximum])) description])) sequenceLength]];
      chars = [JavaLangMath maxWithInt:chars withInt:[((NSString *) nil_chk([((RAREUTSNumber *) nil_chk([m getMinimum])) description])) sequenceLength]];
    }
    else if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerListModel class]]) {
      RARESpinnerListModel *m = (RARESpinnerListModel *) check_class_cast(spinnerModel_, [RARESpinnerListModel class]);
      id<JavaUtilList> list = [((RARESpinnerListModel *) nil_chk(m)) getList];
      int len = [((id<JavaUtilList>) nil_chk(list)) size];
      for (int i = 0; i < len; i++) {
        chars = [JavaLangMath maxWithInt:chars withInt:[((NSString *) nil_chk([nil_chk([list getWithInt:i]) description])) sequenceLength]];
      }
    }
    else if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerDateModel class]]) {
      RARESpinnerDateModel *m = (RARESpinnerDateModel *) check_class_cast(spinnerModel_, [RARESpinnerDateModel class]);
      JavaUtilDate *date = [[JavaUtilDate alloc] init];
      chars = [JavaLangMath maxWithInt:chars withInt:[((NSString *) nil_chk([((RARESpinnerDateModel *) nil_chk(m)) toStringWithId:date])) sequenceLength]];
      chars = [JavaLangMath maxWithInt:chars withInt:[((NSString *) nil_chk([((JavaUtilDate *) nil_chk([m getMinimum])) description])) sequenceLength]];
    }
    minSize_ = [[RAREUIDimension alloc] initWithFloat:[RAREFontUtils getCharacterWidthWithRAREUIFont:f] * chars withFloat:[RAREFontUtils getFontHeightWithRAREUIFont:f withBoolean:YES] * 4];
  }
  [((RAREUIDimension *) nil_chk(size)) setSizeWithRAREUIDimension:minSize_];
}

- (int)getRowCount {
  if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerNumberModel class]]) {
    RARESpinnerNumberModel *nm = (RARESpinnerNumberModel *) check_class_cast(spinnerModel_, [RARESpinnerNumberModel class]);
    RAREUTSNumber *min = [((RARESpinnerNumberModel *) nil_chk(nm)) getMinimum];
    RAREUTSNumber *max = [nm getMaximum];
    if (max == nil) {
      max = [[RAREUTSNumber alloc] initWithInt:JavaLangShort_MAX_VALUE - 2];
    }
    if (min == nil) {
      min = [RAREUTSNumber ZERO];
    }
    int count = [((RAREUTSNumber *) nil_chk([((RAREUTSNumber *) nil_chk([((RAREUTSNumber *) nil_chk(max)) subtractWithRAREUTSNumber:min])) divideWithRAREUTSNumber:[nm getStepSize]])) intValue];
    if (count < 0) {
      count *= -1;
    }
    numberRowCount_ = count + 1;
    return numberRowCount_;
  }
  if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerListModel class]]) {
    RARESpinnerListModel *lm = (RARESpinnerListModel *) check_class_cast(spinnerModel_, [RARESpinnerListModel class]);
    return [((id<JavaUtilList>) nil_chk([((RARESpinnerListModel *) nil_chk(lm)) getList])) size];
  }
  return 0;
}

- (id)getValue {
  int index = [((RAREPickerView *) check_class_cast(editorView_, [RAREPickerView class])) getSelectedIndex];
  return (index == -1) ? nil : [self getObjectWithInt:index];
}

- (id<JavaLangCharSequence>)getValueWithInt:(int)row {
  if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerListModel class]]) {
    RARESpinnerListModel *lm = (RARESpinnerListModel *) check_class_cast(spinnerModel_, [RARESpinnerListModel class]);
    id<JavaUtilList> list = [((RARESpinnerListModel *) nil_chk(lm)) getList];
    int len = [((id<JavaUtilList>) nil_chk(list)) size];
    if (len == 0) {
      return nil;
    }
    row = row % len;
    id o = [list getWithInt:row];
    if ([o isKindOfClass:[RARERenderableDataItem class]]) {
      return [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) toCharSequence];
    }
    return [nil_chk(o) description];
  }
  if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerNumberModel class]]) {
    RARESpinnerNumberModel *nm = (RARESpinnerNumberModel *) check_class_cast(spinnerModel_, [RARESpinnerNumberModel class]);
    if (workValue_ == nil) {
      workValue_ = [[RAREUTSNumber alloc] init];
    }
    (void) [((RAREUTSNumber *) nil_chk(workValue_)) setValueWithRAREUTSNumber:[((RARESpinnerNumberModel *) nil_chk(nm)) getStepSize]];
    (void) [workValue_ multiplyWithInt:row % numberRowCount_];
    (void) [workValue_ addWithRAREUTSNumber:[nm getMinimum]];
    return [nm toStringWithId:workValue_];
  }
  return nil;
}

- (id)getObjectWithInt:(int)row {
  if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerListModel class]]) {
    RARESpinnerListModel *lm = (RARESpinnerListModel *) check_class_cast(spinnerModel_, [RARESpinnerListModel class]);
    id<JavaUtilList> list = [((RARESpinnerListModel *) nil_chk(lm)) getList];
    row = row % [((id<JavaUtilList>) nil_chk(list)) size];
    return [list getWithInt:row];
  }
  if ([(id) spinnerModel_ isKindOfClass:[RARESpinnerNumberModel class]]) {
    RARESpinnerNumberModel *nm = (RARESpinnerNumberModel *) check_class_cast(spinnerModel_, [RARESpinnerNumberModel class]);
    if (returnValue_ == nil) {
      returnValue_ = [[RAREUTSNumber alloc] init];
    }
    (void) [((RAREUTSNumber *) nil_chk(returnValue_)) setValueWithRAREUTSNumber:[((RARESpinnerNumberModel *) nil_chk(nm)) getStepSize]];
    (void) [returnValue_ multiplyWithInt:row % numberRowCount_];
    (void) [returnValue_ addWithRAREUTSNumber:[nm getMinimum]];
    return returnValue_;
  }
  return nil;
}

- (int)indexForNumberWithRAREUTSNumber:(RAREUTSNumber *)num {
  RARESpinnerNumberModel *nm = (RARESpinnerNumberModel *) check_class_cast(spinnerModel_, [RARESpinnerNumberModel class]);
  (void) [((RAREUTSNumber *) nil_chk(num)) subtractWithRAREUTSNumber:[((RARESpinnerNumberModel *) nil_chk(nm)) getMinimum]];
  (void) [num divideIntegerWithRAREUTSNumber:[nm getStepSize]];
  return [num intValue];
}

- (BOOL)isTextField {
  return NO;
}

- (id)removeSelectedDataWithBoolean:(BOOL)returnData {
  return nil;
}

- (void)selectField {
}

- (void)copyAllFieldsTo:(RAREPickerEditor *)other {
  [super copyAllFieldsTo:other];
  other->defaultItem_ = defaultItem_;
  other->minSize_ = minSize_;
  other->numberRowCount_ = numberRowCount_;
  other->renderingComponent_ = renderingComponent_;
  other->returnValue_ = returnValue_;
  other->workValue_ = workValue_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getValue", NULL, "LNSObject", 0x1, NULL },
    { "getValueWithInt:", NULL, "LJavaLangCharSequence", 0x1, NULL },
    { "getObjectWithInt:", NULL, "LNSObject", 0x4, NULL },
    { "indexForNumberWithRAREUTSNumber:", NULL, "I", 0x4, NULL },
    { "isTextField", NULL, "Z", 0x1, NULL },
    { "removeSelectedDataWithBoolean:", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "minSize_", NULL, 0x0, "LRAREUIDimension" },
    { "numberRowCount_", NULL, 0x0, "I" },
    { "renderingComponent_", NULL, 0x0, "LRAREUILabelRenderer" },
    { "returnValue_", NULL, 0x0, "LRAREUTSNumber" },
    { "workValue_", NULL, 0x0, "LRAREUTSNumber" },
    { "defaultItem_", NULL, 0x0, "LRARERenderableDataItem" },
  };
  static J2ObjcClassInfo _RAREPickerEditor = { "PickerEditor", "com.appnativa.rare.ui.spinner", NULL, 0x1, 6, methods, 6, fields, 0, NULL};
  return &_RAREPickerEditor;
}

@end
