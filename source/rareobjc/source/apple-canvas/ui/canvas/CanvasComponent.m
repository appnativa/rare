//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple-canvas/com/appnativa/rare/ui/canvas/CanvasComponent.java
//
//  Created by decoteaud on 3/11/16.
//

#include "com/appnativa/rare/platform/apple/ui/util/AppleGraphics.h"
#include "com/appnativa/rare/platform/apple/ui/view/ParentView.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/canvas/CanvasComponent.h"
#include "com/appnativa/rare/ui/canvas/CanvasRenderingContext2D.h"
#include "com/appnativa/rare/ui/canvas/iContext.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/viewer/CanvasViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"

@implementation RARECanvasComponent

- (id)initWithRAREiWidget:(id<RAREiWidget>)w {
  return [super initWithRAREView:[[RARECanvasComponent_CanvasView alloc] init]];
}

- (void)setContextWithRAREiContext:(id<RAREiContext>)context {
  self->context_ = context;
  [((RARECanvasComponent_CanvasView *) check_class_cast(view_, [RARECanvasComponent_CanvasView class])) setContextWithRAREiContext:context];
}

- (id<RAREiContext>)getContext {
  return context_;
}

- (void)setBoundsWithFloat:(float)x
                 withFloat:(float)y
                 withFloat:(float)width
                 withFloat:(float)height {
  if (!settingCanvasSize_) {
    settingCanvasSize_ = YES;
    [super setBoundsWithFloat:x withFloat:y withFloat:width withFloat:height];
    [((RARECanvasViewer *) check_class_cast(widget_, [RARECanvasViewer class])) setSizeWithInt:(int) width withInt:(int) height withBoolean:NO];
    settingCanvasSize_ = NO;
  }
}

- (void)getPreferredSizeExWithRAREUIDimension:(RAREUIDimension *)size
                                    withFloat:(float)maxWidth {
  ((RAREUIDimension *) nil_chk(size))->width_ = 50;
  size->height_ = 50;
}

- (id<RAREiPlatformComponent>)getPlatformComponent {
  return self;
}

- (void)copyAllFieldsTo:(RARECanvasComponent *)other {
  [super copyAllFieldsTo:other];
  other->context_ = context_;
  other->settingCanvasSize_ = settingCanvasSize_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getContext", NULL, "LRAREiContext", 0x1, NULL },
    { "getPreferredSizeExWithRAREUIDimension:withFloat:", NULL, "V", 0x4, NULL },
    { "getPlatformComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "context_", NULL, 0x0, "LRAREiContext" },
  };
  static J2ObjcClassInfo _RARECanvasComponent = { "CanvasComponent", "com.appnativa.rare.ui.canvas", NULL, 0x1, 3, methods, 1, fields, 0, NULL};
  return &_RARECanvasComponent;
}

@end
@implementation RARECanvasComponent_CanvasView

- (id)init {
  if (self = [super initWithId:[RAREaView createAPView]]) {
    [self setPaintHandlerEnabledWithBoolean:YES];
  }
  return self;
}

- (void)paintBackgroundWithRAREAppleGraphics:(RAREAppleGraphics *)g
                                withRAREView:(RAREView *)v
                         withRAREUIRectangle:(RAREUIRectangle *)rect {
  [super paintBackgroundWithRAREAppleGraphics:g withRAREView:v withRAREUIRectangle:rect];
  if ([(id) context_ isKindOfClass:[RARECanvasRenderingContext2D class]]) {
    [((RARECanvasRenderingContext2D *) check_class_cast(context_, [RARECanvasRenderingContext2D class])) renderWithRAREiPlatformGraphics:g];
  }
}

- (void)setContextWithRAREiContext:(id<RAREiContext>)context {
  self->context_ = context;
}

- (void)copyAllFieldsTo:(RARECanvasComponent_CanvasView *)other {
  [super copyAllFieldsTo:other];
  other->context_ = context_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _RARECanvasComponent_CanvasView = { "CanvasView", "com.appnativa.rare.ui.canvas", "CanvasComponent", 0x8, 0, NULL, 0, NULL, 0, NULL};
  return &_RARECanvasComponent_CanvasView;
}

@end
