//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-charts/com/appnativa/rare/ui/chart/ChartDefinition.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/converters/iDataConverter.h"
#include "com/appnativa/rare/ui/Location.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/chart/ChartAxis.h"
#include "com/appnativa/rare/ui/chart/ChartDataItem.h"
#include "com/appnativa/rare/ui/chart/ChartDefinition.h"
#include "com/appnativa/rare/ui/chart/PlotInformation.h"
#include "com/appnativa/rare/ui/chart/iMouseHandler.h"
#include "com/appnativa/rare/ui/event/MouseEvent.h"
#include "com/appnativa/rare/util/EmptyTextItem.h"
#include "com/appnativa/rare/viewer/aChartViewer.h"
#include "com/appnativa/util/FilterableList.h"
#include "java/lang/Comparable.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@implementation RAREChartDefinition

- (id)initWithRAREaChartViewer:(RAREaChartViewer *)cv {
  if (self = [super init]) {
    maxZoomFactor_ = 5;
    titleSide_ = [RARELocationEnum TOP];
    legendSide_ = [RARELocationEnum RIGHT];
    contextWidget_ = cv;
  }
  return self;
}

- (id)initWithRAREaChartViewer:(RAREaChartViewer *)cv
withRAREChartDefinition_ChartTypeEnum:(RAREChartDefinition_ChartTypeEnum *)type
                   withBoolean:(BOOL)vertical
             withRAREChartAxis:(RAREChartAxis *)domain
             withRAREChartAxis:(RAREChartAxis *)range {
  if (self = [super init]) {
    maxZoomFactor_ = 5;
    titleSide_ = [RARELocationEnum TOP];
    legendSide_ = [RARELocationEnum RIGHT];
    contextWidget_ = cv;
    chartType_ = type;
    self->vertical_ = vertical;
    self->domainAxis_ = domain;
    self->rangeAxis_ = range;
  }
  return self;
}

- (id)initWithRAREaChartViewer:(RAREaChartViewer *)cv
withRAREChartDefinition_ChartTypeEnum:(RAREChartDefinition_ChartTypeEnum *)type
                   withBoolean:(BOOL)vertical
                  withNSString:(NSString *)domainLabel
                  withNSString:(NSString *)rangeLabel {
  if (self = [super init]) {
    maxZoomFactor_ = 5;
    titleSide_ = [RARELocationEnum TOP];
    legendSide_ = [RARELocationEnum RIGHT];
    contextWidget_ = cv;
    chartType_ = type;
    self->vertical_ = vertical;
    self->domainAxis_ = [[RAREChartAxis alloc] initWithNSString:domainLabel withInt:RARERenderableDataItem_TYPE_STRING withId:nil withRAREiPlatformIcon:nil];
    self->rangeAxis_ = [[RAREChartAxis alloc] initWithNSString:rangeLabel withInt:RARERenderableDataItem_TYPE_DECIMAL withId:nil withRAREiPlatformIcon:nil];
  }
  return self;
}

- (void)addAnnotationWithRAREChartDataItem:(RAREChartDataItem *)annotation {
  if (annotations_ == nil) {
    annotations_ = [[RAREUTFilterableList alloc] init];
  }
  [((id<JavaUtilList>) nil_chk(annotations_)) addWithId:annotation];
}

- (void)addDomainMarkerWithRAREChartDataItem:(RAREChartDataItem *)marker {
  if (domainMarkers_ == nil) {
    domainMarkers_ = [[RAREUTFilterableList alloc] init];
  }
  [((RAREChartDataItem *) nil_chk(marker)) setItemTypeWithRAREChartDataItem_ItemTypeEnum:[RAREChartDataItem_ItemTypeEnum DOMAIN_MARKER]];
  [marker setTypeWithInt:[((RAREChartAxis *) nil_chk(domainAxis_)) getAxisType]];
  [marker setDataConverterWithRAREiDataConverter:[domainAxis_ getDomainDataConverter]];
  [marker setValueContextWithId:[domainAxis_ getDomainContext]];
  [marker setConverterClassWithIOSClass:[domainAxis_ getDomainConverterClass]];
  [((id<JavaUtilList>) nil_chk(domainMarkers_)) addWithId:marker];
}

- (void)addDomainValueWithJavaLangComparable:(id<JavaLangComparable>)value {
  if ([(id) value isKindOfClass:[RARERenderableDataItem class]]) {
    [self addDomainValueWithRARERenderableDataItem:(RARERenderableDataItem *) check_class_cast(value, [RARERenderableDataItem class])];
  }
  else {
    [self addDomainValueWithRARERenderableDataItem:[[RARERenderableDataItem alloc] initWithId:value]];
  }
}

- (void)addDomainValueWithRARERenderableDataItem:(RARERenderableDataItem *)value {
  if (columns_ == nil) {
    columns_ = [[JavaUtilArrayList alloc] init];
  }
  [((RARERenderableDataItem *) nil_chk(value)) setTypeWithInt:[((RAREChartAxis *) nil_chk(domainAxis_)) getAxisType]];
  [value setDataConverterWithRAREiDataConverter:[domainAxis_ getDomainDataConverter]];
  [value setValueContextWithId:[domainAxis_ getDomainContext]];
  [value setConverterClassWithIOSClass:[domainAxis_ getDomainConverterClass]];
  [((id<JavaUtilList>) nil_chk(columns_)) addWithId:value];
}

- (void)addRangeMarkerWithRAREChartDataItem:(RAREChartDataItem *)marker {
  if (rangeMarkers_ == nil) {
    rangeMarkers_ = [[RAREUTFilterableList alloc] init];
  }
  [((RAREChartDataItem *) nil_chk(marker)) setItemTypeWithRAREChartDataItem_ItemTypeEnum:[RAREChartDataItem_ItemTypeEnum RANGE_MARKER]];
  [marker setTypeWithInt:[((RAREChartAxis *) nil_chk(rangeAxis_)) getAxisType]];
  [marker setDataConverterWithRAREiDataConverter:[rangeAxis_ getDomainDataConverter]];
  [marker setValueContextWithId:[rangeAxis_ getDomainContext]];
  [marker setConverterClassWithIOSClass:[rangeAxis_ getDomainConverterClass]];
  [((id<JavaUtilList>) nil_chk(rangeMarkers_)) addWithId:marker];
}

- (void)addSeriesWithRAREChartDataItem:(RAREChartDataItem *)series {
  [((RAREChartDataItem *) nil_chk(series)) setItemTypeWithRAREChartDataItem_ItemTypeEnum:[RAREChartDataItem_ItemTypeEnum SERIES]];
  if (self->series_ == nil) {
    self->series_ = [[RAREUTFilterableList alloc] init];
  }
  [((id<JavaUtilList>) nil_chk(self->series_)) addWithId:series];
}

- (void)addSubtitleWithRAREChartDataItem:(RAREChartDataItem *)subtitle {
  if (subTitles_ == nil) {
    subTitles_ = [[RAREUTFilterableList alloc] init];
  }
  [((id<JavaUtilList>) nil_chk(subTitles_)) addWithId:subtitle];
}

- (void)annotationClickedWithInt:(int)index
                         withInt:(int)clickCount {
}

- (void)clear {
  [self clearData];
  if (columns_ != nil) {
    [columns_ clear];
  }
}

- (void)clearData {
  int len = (series_ == nil) ? 0 : [series_ size];
  if (len > 0) {
    for (int i = 0; i < len; i++) {
      RARERenderableDataItem *di = [((id<JavaUtilList>) nil_chk(series_)) getWithInt:i];
      [((RARERenderableDataItem *) nil_chk(di)) clearSubItemParents];
      [di clear];
    }
    [((id<JavaUtilList>) nil_chk(series_)) clear];
  }
  if (annotations_ != nil) {
    [annotations_ clear];
  }
  if (rangeMarkers_ != nil) {
    [rangeMarkers_ clear];
  }
  if (domainMarkers_ != nil) {
    [domainMarkers_ clear];
  }
  if (subTitles_ != nil) {
    [subTitles_ clear];
  }
}

- (int)findSeriesIndexWithRAREChartDataItem:(RAREChartDataItem *)item {
  if (series_ == nil) {
    return -1;
  }
  id<JavaUtilList> a = series_;
  int len = [((id<JavaUtilList>) nil_chk(a)) size];
  for (int i = 0; i < len; i++) {
    RARERenderableDataItem *s = [a getWithInt:i];
    if ([((RARERenderableDataItem *) nil_chk(s)) indexOfWithId:item] != -1) {
      return i;
    }
  }
  return -1;
}

- (void)legendClickedWithInt:(int)index
                     withInt:(int)clickCount {
}

- (void)mouseClickedWithRAREMouseEvent:(RAREMouseEvent *)event
                 withRAREChartDataItem:(RAREChartDataItem *)item {
  if (mouseHandler_ != nil) {
    RARERenderableDataItem *parent = [((RAREChartDataItem *) nil_chk(item)) getParentItem];
    int n = -1;
    if (parent == nil) {
      n = [self findSeriesIndexWithRAREChartDataItem:item];
    }
    else {
      n = [((id<JavaUtilList>) nil_chk(series_)) indexOfWithId:parent];
    }
    if ((n != -1) && (parent == nil)) {
      parent = [((id<JavaUtilList>) nil_chk(series_)) getWithInt:n];
    }
    if (parent != nil) {
      self->visitedSeries_ = n;
      visitedColumn_ = [parent identityIndexOfWithId:item];
      visitedItem_ = item;
    }
    [mouseHandler_ mouseClickedWithRAREMouseEvent:event withRAREChartDataItem:item];
  }
}

- (void)mouseMovedWithRAREMouseEvent:(RAREMouseEvent *)event
               withRAREChartDataItem:(RAREChartDataItem *)item {
  if (mouseHandler_ != nil) {
    if (item != nil) {
      [self setCurrentValuesWithId:[item getValue] withId:[item getDomainValue]];
    }
    else {
      [self setCurrentValuesWithId:nil withId:nil];
    }
    [mouseHandler_ mouseMovedWithRAREMouseEvent:event withRAREChartDataItem:item];
  }
}

- (BOOL)wantsMouseEvents {
  return mouseHandler_ != nil;
}

- (void)setAllowZoomingWithBoolean:(BOOL)allow {
  self->zoomingAllowed_ = allow;
}

- (void)setAnnotationsWithJavaUtilList:(id<JavaUtilList>)annotations {
  self->annotations_ = annotations;
}

- (void)setAutoSortWithBoolean:(BOOL)sort {
  self->autoSort_ = sort;
}

- (void)setBackgroundColorWithRAREUIColor:(RAREUIColor *)color {
  self->bgColor_ = color;
}

- (void)setChartHandlerInfoWithId:(id)info {
  self->chartHandlerInfo_ = info;
}

- (void)setChartTypeWithRAREChartDefinition_ChartTypeEnum:(RAREChartDefinition_ChartTypeEnum *)chartType {
  self->chartType_ = chartType;
}

- (void)setCurrentValuesWithId:(id)range
                        withId:(id)domain {
  currentRangeValue_ = range;
  currentDomainValue_ = domain;
}

- (void)setDomainMarkersWithJavaUtilList:(id<JavaUtilList>)markers {
  self->domainMarkers_ = markers;
}

- (void)setDraw3DWithBoolean:(BOOL)draw3D {
  self->draw3D_ = draw3D;
}

- (void)setEmptyTextItemWithRAREEmptyTextItem:(RAREEmptyTextItem *)item {
  self->emptyTextItem_ = item;
}

- (void)setEndColumnWithInt:(int)endColumn {
  self->endColumn_ = endColumn;
}

- (void)setForegroundColorWithRAREUIColor:(RAREUIColor *)color {
  self->fgColor_ = color;
}

- (void)setLegendSideWithRARELocationEnum:(RARELocationEnum *)legendSide {
  self->legendSide_ = legendSide;
}

- (void)setMaxZoomFactorWithInt:(int)maxZoomFactor {
  self->maxZoomFactor_ = maxZoomFactor;
}

- (void)setMouseHandlerWithRAREiMouseHandler:(id<RAREiMouseHandler>)handler {
  self->mouseHandler_ = handler;
}

- (void)setOrientationWithBoolean:(BOOL)vertical {
  self->vertical_ = vertical;
}

- (void)setPlotInformationWithRAREPlotInformation:(RAREPlotInformation *)plotInfo {
  self->plotInfo_ = plotInfo;
}

- (void)setRangeMarkersWithJavaUtilList:(id<JavaUtilList>)markers {
  self->rangeMarkers_ = markers;
}

- (void)setScrollWheelZoomingAllowedWithBoolean:(BOOL)allowed {
  scrollWheelZoomingAllowed_ = allowed;
}

- (void)setSeriesWithJavaUtilList:(id<JavaUtilList>)series {
  self->series_ = series;
}

- (void)setShowLegendsWithBoolean:(BOOL)show {
  self->showLegends_ = show;
}

- (void)setShowTooltipsWithBoolean:(BOOL)show {
  self->showToolTips_ = show;
}

- (void)setStartColumnWithInt:(int)startColumn {
  self->startColumn_ = startColumn;
}

- (void)setSubTitlesWithJavaUtilList:(id<JavaUtilList>)subTitles {
  self->subTitles_ = subTitles;
}

- (void)setTitleWithRARERenderableDataItem:(RARERenderableDataItem *)title {
  self->title_ = title;
}

- (void)setTitleSideWithRARELocationEnum:(RARELocationEnum *)titleSide {
  self->titleSide_ = titleSide;
}

- (void)setVisitedItemWithInt:(int)series
                      withInt:(int)item {
  self->visitedSeries_ = series;
  visitedColumn_ = item;
  if ((series == -1) || (item == -1)) {
    visitedItem_ = nil;
  }
  else {
    visitedItem_ = [self getSeriesItemWithInt:series withInt:item];
  }
}

- (RAREChartDataItem *)getAnnotationWithInt:(int)index {
  int len = (annotations_ == nil) ? 0 : [annotations_ size];
  return (index >= len) ? nil : [((id<JavaUtilList>) nil_chk(annotations_)) getWithInt:index];
}

- (id<JavaUtilList>)getAnnotations {
  return annotations_;
}

- (RAREUIColor *)getBackgroundColor {
  return bgColor_;
}

- (id)getChartHandlerInfo {
  return chartHandlerInfo_;
}

- (RAREChartDefinition_ChartTypeEnum *)getChartType {
  return chartType_;
}

- (RAREaChartViewer *)getChartViewer {
  return contextWidget_;
}

- (id)getCurrentDomainValue {
  return currentDomainValue_;
}

- (id)getCurrentRangeValue {
  return currentRangeValue_;
}

- (RAREChartAxis *)getDomainAxis {
  return domainAxis_;
}

- (NSString *)getDomainLabel {
  return [((RAREChartAxis *) nil_chk(domainAxis_)) getLabel];
}

- (id<JavaUtilList>)getDomainMarkers {
  return domainMarkers_;
}

- (RARERenderableDataItem *)getDomainValueWithInt:(int)col {
  if ((columns_ == nil) || ([columns_ size] <= col)) {
    return nil;
  }
  return [((id<JavaUtilList>) nil_chk(columns_)) getWithInt:col];
}

- (id<JavaUtilList>)getDomainValues {
  return columns_;
}

- (RAREEmptyTextItem *)getEmptyTextItem {
  return emptyTextItem_;
}

- (int)getEndColumn {
  return endColumn_;
}

- (RARELocationEnum *)getLegendSide {
  return legendSide_;
}

- (int)getMaxZoomFactor {
  return maxZoomFactor_;
}

- (id<RAREiMouseHandler>)getMouseHandler {
  return mouseHandler_;
}

- (RAREPlotInformation *)getPlotInformation {
  return plotInfo_;
}

- (RAREChartAxis *)getRangeAxis {
  return rangeAxis_;
}

- (NSString *)getRangeLabel {
  return [((RAREChartAxis *) nil_chk(rangeAxis_)) getLabel];
}

- (id<JavaUtilList>)getRangeMarkers {
  return rangeMarkers_;
}

- (id<JavaUtilList>)getSeries {
  return series_;
}

- (RAREChartDataItem *)getSeriesWithInt:(int)index {
  return ((series_ == nil) || (index < 0) || (index >= [series_ size])) ? nil : (RAREChartDataItem *) check_class_cast([series_ getWithInt:index], [RAREChartDataItem class]);
}

- (int)getSeriesCount {
  return (series_ == nil) ? 0 : [series_ size];
}

- (RAREChartDataItem *)getSeriesItemWithInt:(int)series
                                    withInt:(int)item {
  RAREChartDataItem *row = [self getSeriesWithInt:series];
  return (row == nil) ? nil : (RAREChartDataItem *) check_class_cast([row getItemExWithInt:item], [RAREChartDataItem class]);
}

- (int)getStartColumn {
  return startColumn_;
}

- (id<JavaUtilList>)getSubTitles {
  return subTitles_;
}

- (RAREUIColor *)getTextColorWithRAREUIColor:(RAREUIColor *)def {
  RAREUIColor *fg = nil;
  RAREPlotInformation *pi = plotInfo_;
  if (pi != nil) {
    fg = [pi getLabelsForeground];
  }
  if (fg == nil) {
    fg = fgColor_;
  }
  if (fg == nil) {
    fg = [((RAREChartAxis *) nil_chk([self getRangeAxis])) getLabelColor];
  }
  if (fg == nil) {
    fg = [((RAREChartAxis *) nil_chk([self getRangeAxis])) getForeground];
  }
  return (fg == nil) ? def : fg;
}

- (RAREUIFont *)getTextFontWithRAREUIFont:(RAREUIFont *)def {
  RAREUIFont *font = nil;
  RAREPlotInformation *pi = plotInfo_;
  if (pi != nil) {
    font = [pi getLabelsFont];
  }
  if (font == nil) {
    font = [((RAREChartAxis *) nil_chk([self getRangeAxis])) getLabelFont];
  }
  if (font == nil) {
    font = [((RAREChartAxis *) nil_chk([self getRangeAxis])) getFont];
  }
  return (font == nil) ? def : font;
}

- (RARERenderableDataItem *)getTitle {
  return title_;
}

- (RARELocationEnum *)getTitleSide {
  return titleSide_;
}

- (RAREChartDataItem *)getVisitedItem {
  return visitedItem_;
}

- (int)getVisitedItemIndex {
  return visitedColumn_;
}

- (int)getVisitedSeriesIndex {
  return visitedSeries_;
}

- (BOOL)isAllowZooming {
  return zoomingAllowed_;
}

- (BOOL)isAutoSort {
  return autoSort_;
}

- (BOOL)isCategoryType {
  switch ([((RAREChartAxis *) nil_chk([self getDomainAxis])) getAxisType]) {
    case RARERenderableDataItem_TYPE_DATE:
    case RARERenderableDataItem_TYPE_DATETIME:
    case RARERenderableDataItem_TYPE_TIME:
    case RARERenderableDataItem_TYPE_INTEGER:
    case RARERenderableDataItem_TYPE_DECIMAL:
    return NO;
    default:
    return YES;
  }
}

- (BOOL)isDateTimeType {
  switch ([((RAREChartAxis *) nil_chk([self getDomainAxis])) getAxisType]) {
    case RARERenderableDataItem_TYPE_DATE:
    case RARERenderableDataItem_TYPE_DATETIME:
    case RARERenderableDataItem_TYPE_TIME:
    return YES;
    default:
    return NO;
  }
}

- (BOOL)isDraw3D {
  return draw3D_;
}

- (BOOL)isScrollWheelZoomingAllowed {
  return scrollWheelZoomingAllowed_;
}

- (BOOL)isShowLegends {
  return showLegends_;
}

- (BOOL)isShowToolTips {
  return showToolTips_;
}

- (BOOL)isVertical {
  return vertical_;
}

- (BOOL)isShowPlotLabels {
  return showPlotLabels_;
}

- (void)setShowPlotLabelsWithBoolean:(BOOL)showPlotLabels {
  self->showPlotLabels_ = showPlotLabels;
}

- (void)copyAllFieldsTo:(RAREChartDefinition *)other {
  [super copyAllFieldsTo:other];
  other->annotations_ = annotations_;
  other->autoSort_ = autoSort_;
  other->bgColor_ = bgColor_;
  other->chartHandlerInfo_ = chartHandlerInfo_;
  other->chartType_ = chartType_;
  other->columns_ = columns_;
  other->contextWidget_ = contextWidget_;
  other->currentDomainValue_ = currentDomainValue_;
  other->currentRangeValue_ = currentRangeValue_;
  other->domainAxis_ = domainAxis_;
  other->domainMarkers_ = domainMarkers_;
  other->draw3D_ = draw3D_;
  other->emptyTextItem_ = emptyTextItem_;
  other->endColumn_ = endColumn_;
  other->fgColor_ = fgColor_;
  other->legendSide_ = legendSide_;
  other->maxZoomFactor_ = maxZoomFactor_;
  other->mouseHandler_ = mouseHandler_;
  other->plotInfo_ = plotInfo_;
  other->rangeAxis_ = rangeAxis_;
  other->rangeMarkers_ = rangeMarkers_;
  other->scrollWheelZoomingAllowed_ = scrollWheelZoomingAllowed_;
  other->series_ = series_;
  other->showLegends_ = showLegends_;
  other->showPlotLabels_ = showPlotLabels_;
  other->showToolTips_ = showToolTips_;
  other->startColumn_ = startColumn_;
  other->subTitles_ = subTitles_;
  other->title_ = title_;
  other->titleSide_ = titleSide_;
  other->vertical_ = vertical_;
  other->visitedColumn_ = visitedColumn_;
  other->visitedItem_ = visitedItem_;
  other->visitedSeries_ = visitedSeries_;
  other->zoomingAllowed_ = zoomingAllowed_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "wantsMouseEvents", NULL, "Z", 0x1, NULL },
    { "getAnnotationWithInt:", NULL, "LRAREChartDataItem", 0x1, NULL },
    { "getAnnotations", NULL, "LJavaUtilList", 0x1, NULL },
    { "getBackgroundColor", NULL, "LRAREUIColor", 0x1, NULL },
    { "getChartHandlerInfo", NULL, "LNSObject", 0x1, NULL },
    { "getChartType", NULL, "LRAREChartDefinition_ChartTypeEnum", 0x1, NULL },
    { "getChartViewer", NULL, "LRAREaChartViewer", 0x1, NULL },
    { "getCurrentDomainValue", NULL, "LNSObject", 0x1, NULL },
    { "getCurrentRangeValue", NULL, "LNSObject", 0x1, NULL },
    { "getDomainAxis", NULL, "LRAREChartAxis", 0x1, NULL },
    { "getDomainLabel", NULL, "LNSString", 0x1, NULL },
    { "getDomainMarkers", NULL, "LJavaUtilList", 0x1, NULL },
    { "getDomainValueWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getDomainValues", NULL, "LJavaUtilList", 0x1, NULL },
    { "getEmptyTextItem", NULL, "LRAREEmptyTextItem", 0x1, NULL },
    { "getLegendSide", NULL, "LRARELocationEnum", 0x1, NULL },
    { "getMouseHandler", NULL, "LRAREiMouseHandler", 0x1, NULL },
    { "getPlotInformation", NULL, "LRAREPlotInformation", 0x1, NULL },
    { "getRangeAxis", NULL, "LRAREChartAxis", 0x1, NULL },
    { "getRangeLabel", NULL, "LNSString", 0x1, NULL },
    { "getRangeMarkers", NULL, "LJavaUtilList", 0x1, NULL },
    { "getSeries", NULL, "LJavaUtilList", 0x1, NULL },
    { "getSeriesWithInt:", NULL, "LRAREChartDataItem", 0x1, NULL },
    { "getSeriesItemWithInt:withInt:", NULL, "LRAREChartDataItem", 0x1, NULL },
    { "getSubTitles", NULL, "LJavaUtilList", 0x1, NULL },
    { "getTextColorWithRAREUIColor:", NULL, "LRAREUIColor", 0x1, NULL },
    { "getTextFontWithRAREUIFont:", NULL, "LRAREUIFont", 0x1, NULL },
    { "getTitle", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getTitleSide", NULL, "LRARELocationEnum", 0x1, NULL },
    { "getVisitedItem", NULL, "LRAREChartDataItem", 0x1, NULL },
    { "isAllowZooming", NULL, "Z", 0x1, NULL },
    { "isAutoSort", NULL, "Z", 0x1, NULL },
    { "isCategoryType", NULL, "Z", 0x1, NULL },
    { "isDateTimeType", NULL, "Z", 0x1, NULL },
    { "isDraw3D", NULL, "Z", 0x1, NULL },
    { "isScrollWheelZoomingAllowed", NULL, "Z", 0x1, NULL },
    { "isShowLegends", NULL, "Z", 0x1, NULL },
    { "isShowToolTips", NULL, "Z", 0x1, NULL },
    { "isVertical", NULL, "Z", 0x1, NULL },
    { "isShowPlotLabels", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "annotations_", NULL, 0x4, "LJavaUtilList" },
    { "chartType_", NULL, 0x4, "LRAREChartDefinition_ChartTypeEnum" },
    { "columns_", NULL, 0x4, "LJavaUtilList" },
    { "contextWidget_", NULL, 0x4, "LRAREaChartViewer" },
    { "domainAxis_", NULL, 0x4, "LRAREChartAxis" },
    { "domainMarkers_", NULL, 0x4, "LJavaUtilList" },
    { "mouseHandler_", NULL, 0x4, "LRAREiMouseHandler" },
    { "plotInfo_", NULL, 0x4, "LRAREPlotInformation" },
    { "rangeAxis_", NULL, 0x4, "LRAREChartAxis" },
    { "rangeMarkers_", NULL, 0x4, "LJavaUtilList" },
    { "series_", NULL, 0x4, "LJavaUtilList" },
    { "subTitles_", NULL, 0x4, "LJavaUtilList" },
    { "title_", NULL, 0x4, "LRARERenderableDataItem" },
    { "visitedColumn_", NULL, 0x4, "I" },
    { "visitedItem_", NULL, 0x4, "LRAREChartDataItem" },
    { "visitedSeries_", NULL, 0x4, "I" },
    { "zoomingAllowed_", NULL, 0x4, "Z" },
  };
  static J2ObjcClassInfo _RAREChartDefinition = { "ChartDefinition", "com.appnativa.rare.ui.chart", NULL, 0x1, 40, methods, 17, fields, 0, NULL};
  return &_RAREChartDefinition;
}

@end

static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_LINE;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_BAR;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_STACKED_BAR;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_RANGE_BAR;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_PIE;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_AREA;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_STACKED_AREA;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_RANGE_AREA;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_STEP_AREA;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_STEP_LINE;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_BUBBLE;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_HI_LO;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_HI_LO_OPEN_CLOSE;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_CANDLESTICK;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_FUNNEL;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_SPLINE;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_SPLINE_AREA;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_POINT;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_ROSE;
static RAREChartDefinition_ChartTypeEnum *RAREChartDefinition_ChartTypeEnum_PYRAMID;
IOSObjectArray *RAREChartDefinition_ChartTypeEnum_values;

@implementation RAREChartDefinition_ChartTypeEnum

+ (RAREChartDefinition_ChartTypeEnum *)LINE {
  return RAREChartDefinition_ChartTypeEnum_LINE;
}
+ (RAREChartDefinition_ChartTypeEnum *)BAR {
  return RAREChartDefinition_ChartTypeEnum_BAR;
}
+ (RAREChartDefinition_ChartTypeEnum *)STACKED_BAR {
  return RAREChartDefinition_ChartTypeEnum_STACKED_BAR;
}
+ (RAREChartDefinition_ChartTypeEnum *)RANGE_BAR {
  return RAREChartDefinition_ChartTypeEnum_RANGE_BAR;
}
+ (RAREChartDefinition_ChartTypeEnum *)PIE {
  return RAREChartDefinition_ChartTypeEnum_PIE;
}
+ (RAREChartDefinition_ChartTypeEnum *)AREA {
  return RAREChartDefinition_ChartTypeEnum_AREA;
}
+ (RAREChartDefinition_ChartTypeEnum *)STACKED_AREA {
  return RAREChartDefinition_ChartTypeEnum_STACKED_AREA;
}
+ (RAREChartDefinition_ChartTypeEnum *)RANGE_AREA {
  return RAREChartDefinition_ChartTypeEnum_RANGE_AREA;
}
+ (RAREChartDefinition_ChartTypeEnum *)STEP_AREA {
  return RAREChartDefinition_ChartTypeEnum_STEP_AREA;
}
+ (RAREChartDefinition_ChartTypeEnum *)STEP_LINE {
  return RAREChartDefinition_ChartTypeEnum_STEP_LINE;
}
+ (RAREChartDefinition_ChartTypeEnum *)BUBBLE {
  return RAREChartDefinition_ChartTypeEnum_BUBBLE;
}
+ (RAREChartDefinition_ChartTypeEnum *)HI_LO {
  return RAREChartDefinition_ChartTypeEnum_HI_LO;
}
+ (RAREChartDefinition_ChartTypeEnum *)HI_LO_OPEN_CLOSE {
  return RAREChartDefinition_ChartTypeEnum_HI_LO_OPEN_CLOSE;
}
+ (RAREChartDefinition_ChartTypeEnum *)CANDLESTICK {
  return RAREChartDefinition_ChartTypeEnum_CANDLESTICK;
}
+ (RAREChartDefinition_ChartTypeEnum *)FUNNEL {
  return RAREChartDefinition_ChartTypeEnum_FUNNEL;
}
+ (RAREChartDefinition_ChartTypeEnum *)SPLINE {
  return RAREChartDefinition_ChartTypeEnum_SPLINE;
}
+ (RAREChartDefinition_ChartTypeEnum *)SPLINE_AREA {
  return RAREChartDefinition_ChartTypeEnum_SPLINE_AREA;
}
+ (RAREChartDefinition_ChartTypeEnum *)POINT {
  return RAREChartDefinition_ChartTypeEnum_POINT;
}
+ (RAREChartDefinition_ChartTypeEnum *)ROSE {
  return RAREChartDefinition_ChartTypeEnum_ROSE;
}
+ (RAREChartDefinition_ChartTypeEnum *)PYRAMID {
  return RAREChartDefinition_ChartTypeEnum_PYRAMID;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [RAREChartDefinition_ChartTypeEnum class]) {
    RAREChartDefinition_ChartTypeEnum_LINE = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"LINE" withInt:0];
    RAREChartDefinition_ChartTypeEnum_BAR = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"BAR" withInt:1];
    RAREChartDefinition_ChartTypeEnum_STACKED_BAR = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"STACKED_BAR" withInt:2];
    RAREChartDefinition_ChartTypeEnum_RANGE_BAR = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"RANGE_BAR" withInt:3];
    RAREChartDefinition_ChartTypeEnum_PIE = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"PIE" withInt:4];
    RAREChartDefinition_ChartTypeEnum_AREA = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"AREA" withInt:5];
    RAREChartDefinition_ChartTypeEnum_STACKED_AREA = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"STACKED_AREA" withInt:6];
    RAREChartDefinition_ChartTypeEnum_RANGE_AREA = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"RANGE_AREA" withInt:7];
    RAREChartDefinition_ChartTypeEnum_STEP_AREA = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"STEP_AREA" withInt:8];
    RAREChartDefinition_ChartTypeEnum_STEP_LINE = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"STEP_LINE" withInt:9];
    RAREChartDefinition_ChartTypeEnum_BUBBLE = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"BUBBLE" withInt:10];
    RAREChartDefinition_ChartTypeEnum_HI_LO = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"HI_LO" withInt:11];
    RAREChartDefinition_ChartTypeEnum_HI_LO_OPEN_CLOSE = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"HI_LO_OPEN_CLOSE" withInt:12];
    RAREChartDefinition_ChartTypeEnum_CANDLESTICK = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"CANDLESTICK" withInt:13];
    RAREChartDefinition_ChartTypeEnum_FUNNEL = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"FUNNEL" withInt:14];
    RAREChartDefinition_ChartTypeEnum_SPLINE = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"SPLINE" withInt:15];
    RAREChartDefinition_ChartTypeEnum_SPLINE_AREA = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"SPLINE_AREA" withInt:16];
    RAREChartDefinition_ChartTypeEnum_POINT = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"POINT" withInt:17];
    RAREChartDefinition_ChartTypeEnum_ROSE = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"ROSE" withInt:18];
    RAREChartDefinition_ChartTypeEnum_PYRAMID = [[RAREChartDefinition_ChartTypeEnum alloc] initWithNSString:@"PYRAMID" withInt:19];
    RAREChartDefinition_ChartTypeEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ RAREChartDefinition_ChartTypeEnum_LINE, RAREChartDefinition_ChartTypeEnum_BAR, RAREChartDefinition_ChartTypeEnum_STACKED_BAR, RAREChartDefinition_ChartTypeEnum_RANGE_BAR, RAREChartDefinition_ChartTypeEnum_PIE, RAREChartDefinition_ChartTypeEnum_AREA, RAREChartDefinition_ChartTypeEnum_STACKED_AREA, RAREChartDefinition_ChartTypeEnum_RANGE_AREA, RAREChartDefinition_ChartTypeEnum_STEP_AREA, RAREChartDefinition_ChartTypeEnum_STEP_LINE, RAREChartDefinition_ChartTypeEnum_BUBBLE, RAREChartDefinition_ChartTypeEnum_HI_LO, RAREChartDefinition_ChartTypeEnum_HI_LO_OPEN_CLOSE, RAREChartDefinition_ChartTypeEnum_CANDLESTICK, RAREChartDefinition_ChartTypeEnum_FUNNEL, RAREChartDefinition_ChartTypeEnum_SPLINE, RAREChartDefinition_ChartTypeEnum_SPLINE_AREA, RAREChartDefinition_ChartTypeEnum_POINT, RAREChartDefinition_ChartTypeEnum_ROSE, RAREChartDefinition_ChartTypeEnum_PYRAMID, nil } count:20 type:[IOSClass classWithClass:[RAREChartDefinition_ChartTypeEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:RAREChartDefinition_ChartTypeEnum_values];
}

+ (RAREChartDefinition_ChartTypeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [RAREChartDefinition_ChartTypeEnum_values count]; i++) {
    RAREChartDefinition_ChartTypeEnum *e = RAREChartDefinition_ChartTypeEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LRAREChartDefinition_ChartTypeEnum"};
  static J2ObjcClassInfo _RAREChartDefinition_ChartTypeEnum = { "ChartType", "com.appnativa.rare.ui.chart", "ChartDefinition", 0x4019, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_RAREChartDefinition_ChartTypeEnum;
}

@end
