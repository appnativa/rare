//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-charts/com/appnativa/rare/ui/chart/ChartDataItem.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/converters/iDataConverter.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/chart/ChartDataItem.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/util/SubItemComparator.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/iFilterableList.h"
#include "java/lang/CharSequence.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/Date.h"
#include "java/util/List.h"

@implementation RAREChartDataItem

- (id)init {
  if (self = [super init]) {
    domainType_ = RARERenderableDataItem_TYPE_DECIMAL;
    itemType_ = [RAREChartDataItem_ItemTypeEnum POINT];
    domainDouble_ = JavaLangDouble_MIN_VALUE;
  }
  return self;
}

- (id)initWithRAREChartDataItem_ItemTypeEnum:(RAREChartDataItem_ItemTypeEnum *)itemType {
  if (self = [super init]) {
    domainType_ = RARERenderableDataItem_TYPE_DECIMAL;
    itemType_ = [RAREChartDataItem_ItemTypeEnum POINT];
    domainDouble_ = JavaLangDouble_MIN_VALUE;
    self->itemType_ = itemType;
  }
  return self;
}

- (id)initWithId:(id)range
         withInt:(int)type
          withId:(id)data
withRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  if (self = [super initWithId:range withInt:type withId:data withRAREiPlatformIcon:icon]) {
    domainType_ = RARERenderableDataItem_TYPE_DECIMAL;
    itemType_ = [RAREChartDataItem_ItemTypeEnum POINT];
    domainDouble_ = JavaLangDouble_MIN_VALUE;
  }
  return self;
}

- (id)initWithId:(id)range
         withInt:(int)type
          withId:(id)data
withRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon
 withRAREUIColor:(RAREUIColor *)c
          withId:(id)domain {
  if (self = [super initWithId:range withInt:type withId:data withRAREiPlatformIcon:icon]) {
    domainType_ = RARERenderableDataItem_TYPE_DECIMAL;
    itemType_ = [RAREChartDataItem_ItemTypeEnum POINT];
    domainDouble_ = JavaLangDouble_MIN_VALUE;
    self->fgColor_ = c;
    domainValue_ = domain;
  }
  return self;
}

- (void)clear {
  [super clear];
  chartLinkedData_ = nil;
  domainValue_ = nil;
  _domainString_ = nil;
  domainDouble_ = JavaLangDouble_MIN_VALUE;
}

- (int)compareToWithId:(RARERenderableDataItem *)o {
  if (o != nil && ![o isKindOfClass:[RARERenderableDataItem class]]) {
    @throw [[JavaLangClassCastException alloc] init];
  }
  if (!([o isKindOfClass:[RAREChartDataItem class]])) {
    return 1;
  }
  return [self compareToWithRAREChartDataItem:(RAREChartDataItem *) check_class_cast(o, [RAREChartDataItem class])];
}

- (int)compareToWithRAREChartDataItem:(RAREChartDataItem *)o {
  if (subItems_ != nil) {
    return [super compareToWithId:o];
  }
  return [RARESubItemComparator compareObjectsWithId:[self getDomainValue] withId:(o == nil) ? nil : [o getDomainValue]];
}

- (void)copy__WithRARERenderableDataItem:(RARERenderableDataItem *)item {
  [super copyExWithRARERenderableDataItem:item];
  id<JavaUtilList> items = [((RARERenderableDataItem *) nil_chk(item)) getItems];
  int count = (items == nil) ? 0 : [items size];
  if (count == 0) {
    [self clearSubItems];
  }
  else {
    id<JavaUtilList> subs = [self emptySubItemsListWithInt:count];
    RARERenderableDataItem *di;
    RAREChartDataItem *ci;
    for (int i = 0; i < count; i++) {
      di = [((id<JavaUtilList>) nil_chk(items)) getWithInt:i];
      if ([di isKindOfClass:[RAREChartDataItem class]]) {
        [((id<JavaUtilList>) nil_chk(subs)) addWithId:di];
      }
      else {
        ci = [[RAREChartDataItem alloc] init];
        [ci copy__WithRARERenderableDataItem:di];
        [((id<JavaUtilList>) nil_chk(subs)) addWithId:ci];
      }
    }
  }
}

- (void)copyExWithRAREChartDataItem:(RAREChartDataItem *)item {
  [super copyExWithRARERenderableDataItem:item];
  _domainString_ = nil;
  domainValue_ = ((RAREChartDataItem *) nil_chk(item))->domainValue_;
  domainType_ = item->domainType_;
  ;
  domainConverterClass_ = item->domainConverterClass_;
  ;
  domainContext_ = item->domainContext_;
  theTitle_ = item->theTitle_;
  domainConverted_ = item->domainConverted_;
}

- (void)setChartLinkedDataWithId:(id)chartLinkedData {
  self->chartLinkedData_ = chartLinkedData;
}

- (void)setDomainContextWithId:(id)context {
  self->domainContext_ = context;
}

- (void)setDomainConverterClassWithIOSClass:(IOSClass *)cls {
  self->domainConverterClass_ = cls;
}

- (void)setDomainDataConverterWithRAREiDataConverter:(id<RAREiDataConverter>)cvt {
  self->domainDataConverter_ = cvt;
}

- (void)setDomainInformationWithId:(id)value
                           withInt:(int)type
                      withIOSClass:(IOSClass *)cvtclass
                            withId:(id)context {
  domainValue_ = value;
  domainType_ = type;
  domainConverterClass_ = cvtclass;
  domainContext_ = context;
  _domainString_ = nil;
}

- (void)setDomainTypeWithInt:(int)type {
  self->domainType_ = type;
}

- (void)setDomainValueWithId:(id)value {
  self->domainValue_ = value;
  _domainString_ = nil;
}

- (void)setItemTypeWithRAREChartDataItem_ItemTypeEnum:(RAREChartDataItem_ItemTypeEnum *)itemType {
  self->itemType_ = itemType;
}

- (void)setTitleWithNSString:(NSString *)title {
  self->theTitle_ = title;
}

- (id)getChartLinkedData {
  return chartLinkedData_;
}

- (id)getDomainContext {
  return domainContext_;
}

- (IOSClass *)getDomainConverterClass {
  return domainConverterClass_;
}

- (id<RAREiDataConverter>)getDomainDataConverter {
  return domainDataConverter_;
}

- (double)getDomainDouble {
  if (domainDouble_ == JavaLangDouble_MIN_VALUE) {
    id o = [self getDomainValue];
    if ([o isKindOfClass:[JavaUtilDate class]]) {
      domainDouble_ = [((JavaUtilDate *) check_class_cast(o, [JavaUtilDate class])) getTime];
    }
    else if ([o isKindOfClass:[NSNumber class]]) {
      domainDouble_ = [((NSNumber *) check_class_cast(o, [NSNumber class])) doubleValue];
    }
  }
  return domainDouble_;
}

- (NSString *)getDomainString {
  if (_domainString_ != nil) {
    return _domainString_;
  }
  id o = [self getDomainValue];
  if ((o == nil) || ([o isKindOfClass:[NSString class]])) {
    return (NSString *) check_class_cast(o, [NSString class]);
  }
  if (domainDataConverter_ != nil) {
    _domainString_ = [((id<JavaLangCharSequence>) nil_chk([domainDataConverter_ objectToStringWithRAREiWidget:[RAREPlatform getContextRootViewer] withId:o withId:domainContext_])) sequenceDescription];
  }
  else {
    _domainString_ = [nil_chk(o) description];
  }
  return _domainString_;
}

- (int)getDomainType {
  return domainType_;
}

- (id)getDomainValue {
  if (!domainConverted_) {
    if ([domainValue_ isKindOfClass:[NSString class]]) {
      if (domainDataConverter_ == nil) {
        domainConverterClass_ = (domainConverterClass_ == nil) ? [RARERenderableDataItem getDefaultConverterClassWithInt:domainType_] : domainConverterClass_;
        domainDataConverter_ = [RAREPlatform getDataConverterWithIOSClass:domainConverterClass_];
      }
      domainValue_ = [self fromStringWithRAREiWidget:[RAREPlatform getContextRootViewer] withInt:domainType_ withNSString:(NSString *) check_class_cast(domainValue_, [NSString class]) withRAREiDataConverter:domainDataConverter_ withId:domainContext_];
    }
    domainConverted_ = YES;
  }
  return domainValue_;
}

- (NSNumber *)getDomainNumberValue {
  id o = [self getDomainValue];
  if ([o isKindOfClass:[NSNumber class]]) {
    return (NSNumber *) check_class_cast(o, [NSNumber class]);
  }
  if ([o isKindOfClass:[JavaUtilDate class]]) {
    return [[RAREUTSNumber alloc] initWithLong:[((JavaUtilDate *) check_class_cast(o, [JavaUtilDate class])) getTime]];
  }
  return (o == nil) ? [JavaLangInteger valueOfWithInt:0] : [[RAREUTSNumber alloc] initWithNSString:[o description]];
}

- (RAREChartDataItem_ItemTypeEnum *)getItemType {
  return itemType_;
}

- (NSString *)getRangeString {
  return [self description];
}

- (NSString *)getTitle {
  return theTitle_;
}

- (id)fromStringWithRAREiWidget:(id<RAREiWidget>)widget
                        withInt:(int)type
                   withNSString:(NSString *)value
         withRAREiDataConverter:(id<RAREiDataConverter>)cvt
                         withId:(id)context {
  if ((type == RARERenderableDataItem_TYPE_DECIMAL) || (type == RARERenderableDataItem_TYPE_INTEGER)) {
    if ((value == nil) || ([value sequenceLength] == 0)) {
      [self setConvertedWithBoolean:YES];
      return nil;
    }
  }
  if (widget == nil) {
    widget = [RAREPlatform getContextRootViewer];
  }
  return [super fromStringWithRAREiWidget:widget withInt:type withNSString:value withRAREiDataConverter:cvt withId:context];
}

- (void)copyAllFieldsTo:(RAREChartDataItem *)other {
  [super copyAllFieldsTo:other];
  other->_domainString_ = _domainString_;
  other->chartLinkedData_ = chartLinkedData_;
  other->domainContext_ = domainContext_;
  other->domainConverted_ = domainConverted_;
  other->domainConverterClass_ = domainConverterClass_;
  other->domainDataConverter_ = domainDataConverter_;
  other->domainDouble_ = domainDouble_;
  other->domainType_ = domainType_;
  other->domainValue_ = domainValue_;
  other->itemType_ = itemType_;
  other->theTitle_ = theTitle_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getChartLinkedData", NULL, "LNSObject", 0x1, NULL },
    { "getDomainContext", NULL, "LNSObject", 0x1, NULL },
    { "getDomainConverterClass", NULL, "LIOSClass", 0x1, NULL },
    { "getDomainDataConverter", NULL, "LRAREiDataConverter", 0x1, NULL },
    { "getDomainString", NULL, "LNSString", 0x1, NULL },
    { "getDomainValue", NULL, "LNSObject", 0x1, NULL },
    { "getDomainNumberValue", NULL, "LNSNumber", 0x1, NULL },
    { "getItemType", NULL, "LRAREChartDataItem_ItemTypeEnum", 0x1, NULL },
    { "getRangeString", NULL, "LNSString", 0x1, NULL },
    { "getTitle", NULL, "LNSString", 0x1, NULL },
    { "fromStringWithRAREiWidget:withInt:withNSString:withRAREiDataConverter:withId:", NULL, "LNSObject", 0x4, NULL },
  };
  static J2ObjcClassInfo _RAREChartDataItem = { "ChartDataItem", "com.appnativa.rare.ui.chart", NULL, 0x1, 11, methods, 0, NULL, 0, NULL};
  return &_RAREChartDataItem;
}

@end

static RAREChartDataItem_ItemTypeEnum *RAREChartDataItem_ItemTypeEnum_SERIES;
static RAREChartDataItem_ItemTypeEnum *RAREChartDataItem_ItemTypeEnum_POINT;
static RAREChartDataItem_ItemTypeEnum *RAREChartDataItem_ItemTypeEnum_RANGE_MARKER;
static RAREChartDataItem_ItemTypeEnum *RAREChartDataItem_ItemTypeEnum_DOMAIN_MARKER;
IOSObjectArray *RAREChartDataItem_ItemTypeEnum_values;

@implementation RAREChartDataItem_ItemTypeEnum

+ (RAREChartDataItem_ItemTypeEnum *)SERIES {
  return RAREChartDataItem_ItemTypeEnum_SERIES;
}
+ (RAREChartDataItem_ItemTypeEnum *)POINT {
  return RAREChartDataItem_ItemTypeEnum_POINT;
}
+ (RAREChartDataItem_ItemTypeEnum *)RANGE_MARKER {
  return RAREChartDataItem_ItemTypeEnum_RANGE_MARKER;
}
+ (RAREChartDataItem_ItemTypeEnum *)DOMAIN_MARKER {
  return RAREChartDataItem_ItemTypeEnum_DOMAIN_MARKER;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [RAREChartDataItem_ItemTypeEnum class]) {
    RAREChartDataItem_ItemTypeEnum_SERIES = [[RAREChartDataItem_ItemTypeEnum alloc] initWithNSString:@"SERIES" withInt:0];
    RAREChartDataItem_ItemTypeEnum_POINT = [[RAREChartDataItem_ItemTypeEnum alloc] initWithNSString:@"POINT" withInt:1];
    RAREChartDataItem_ItemTypeEnum_RANGE_MARKER = [[RAREChartDataItem_ItemTypeEnum alloc] initWithNSString:@"RANGE_MARKER" withInt:2];
    RAREChartDataItem_ItemTypeEnum_DOMAIN_MARKER = [[RAREChartDataItem_ItemTypeEnum alloc] initWithNSString:@"DOMAIN_MARKER" withInt:3];
    RAREChartDataItem_ItemTypeEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ RAREChartDataItem_ItemTypeEnum_SERIES, RAREChartDataItem_ItemTypeEnum_POINT, RAREChartDataItem_ItemTypeEnum_RANGE_MARKER, RAREChartDataItem_ItemTypeEnum_DOMAIN_MARKER, nil } count:4 type:[IOSClass classWithClass:[RAREChartDataItem_ItemTypeEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:RAREChartDataItem_ItemTypeEnum_values];
}

+ (RAREChartDataItem_ItemTypeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [RAREChartDataItem_ItemTypeEnum_values count]; i++) {
    RAREChartDataItem_ItemTypeEnum *e = RAREChartDataItem_ItemTypeEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LRAREChartDataItem_ItemTypeEnum"};
  static J2ObjcClassInfo _RAREChartDataItem_ItemTypeEnum = { "ItemType", "com.appnativa.rare.ui.chart", "ChartDataItem", 0x4019, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_RAREChartDataItem_ItemTypeEnum;
}

@end
