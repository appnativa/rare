//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-collapsible/com/appnativa/rare/ui/aCollapsiblePane.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/exception/ExpandVetoException.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/ui/AnimationComponent.h"
#include "com/appnativa/rare/ui/BorderUtils.h"
#include "com/appnativa/rare/ui/Component.h"
#include "com/appnativa/rare/ui/Container.h"
#include "com/appnativa/rare/ui/FontUtils.h"
#include "com/appnativa/rare/ui/Location.h"
#include "com/appnativa/rare/ui/PainterUtils.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIImageIcon.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/XPContainer.h"
#include "com/appnativa/rare/ui/aBorderPanel.h"
#include "com/appnativa/rare/ui/aCollapsiblePane.h"
#include "com/appnativa/rare/ui/aComponent.h"
#include "com/appnativa/rare/ui/border/UICompoundBorder.h"
#include "com/appnativa/rare/ui/border/UIEmptyBorder.h"
#include "com/appnativa/rare/ui/effects/aSizeAnimation.h"
#include "com/appnativa/rare/ui/effects/iPlatformAnimator.h"
#include "com/appnativa/rare/ui/effects/iTransitionAnimator.h"
#include "com/appnativa/rare/ui/event/EventListenerList.h"
#include "com/appnativa/rare/ui/event/ExpansionEvent.h"
#include "com/appnativa/rare/ui/event/iActionListener.h"
#include "com/appnativa/rare/ui/event/iChangeListener.h"
#include "com/appnativa/rare/ui/event/iExpandedListener.h"
#include "com/appnativa/rare/ui/event/iExpansionListener.h"
#include "com/appnativa/rare/ui/iActionComponent.h"
#include "com/appnativa/rare/ui/iCollapsible.h"
#include "com/appnativa/rare/ui/iPaintedButton.h"
#include "com/appnativa/rare/ui/iParentComponent.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/painter/UIBackgroundPainter.h"
#include "com/appnativa/rare/ui/painter/iBackgroundPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Math.h"
#include "java/util/Map.h"

@implementation RAREaCollapsiblePane

- (id)init {
  if (self = [super init]) {
    paneExpanded_ = YES;
    userControllable_ = YES;
    toggleOnTitleSingleClick_ = NO;
    titleIconOnLeft_ = NO;
    eventsEnabled_ = YES;
  }
  return self;
}

- (id)initWithId:(id)view {
  if (self = [super initWithId:view]) {
    paneExpanded_ = YES;
    userControllable_ = YES;
    toggleOnTitleSingleClick_ = NO;
    titleIconOnLeft_ = NO;
    eventsEnabled_ = YES;
  }
  return self;
}

- (void)addWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                               withId:(id)constraints {
  [self addWithRAREiPlatformComponent:c withId:constraints withInt:-1];
}

- (void)addWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                               withId:(id)constraints
                              withInt:(int)position {
  if ([constraints isKindOfClass:[RARELocationEnum class]]) {
    [super addWithRAREiPlatformComponent:c withId:constraints withInt:position];
  }
  else {
    [self setContentWithRAREiPlatformComponent:c];
  }
}

- (void)addExpandedListenerWithRAREiExpandedListener:(id<RAREiExpandedListener>)l {
  [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiExpandedListener)] withId:l];
}

- (void)addExpansionListenerWithRAREiExpansionListener:(id<RAREiExpansionListener>)l {
  [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiExpansionListener)] withId:l];
}

- (void)collapsePane {
  if (paneExpanded_) {
    [self togglePane];
  }
}

- (void)dispose {
  [super dispose];
  if ((transitionAnimator_ != nil) && [transitionAnimator_ isAutoDispose]) {
    [transitionAnimator_ dispose];
  }
  transitionAnimator_ = nil;
  [self disposePane];
}

- (void)disposePane {
  if (listenerList_ != nil) {
    [listenerList_ clear];
  }
  listenerList_ = nil;
  transitionAnimator_ = nil;
  titleProvider_ = nil;
  titleIcon_ = nil;
  titleComponent_ = nil;
  titleBorder_ = nil;
  mainComponent_ = nil;
  expandIcon_ = nil;
  eventObject_ = nil;
  collapseIcon_ = nil;
}

- (void)expandPane {
  if (!paneExpanded_) {
    [self togglePane];
  }
}

- (void)removeExpandedListenerWithRAREiExpandedListener:(id<RAREiExpandedListener>)l {
  if (listenerList_ != nil) {
    [listenerList_ removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiExpandedListener)] withId:l];
  }
}

- (void)removeExpansionListenerWithRAREiExpansionListener:(id<RAREiExpansionListener>)l {
  if (listenerList_ != nil) {
    [listenerList_ removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiExpansionListener)] withId:l];
  }
}

- (void)togglePane {
  inAnimation_ = NO;
  @try {
    [self fireExpansionWithBoolean:!paneExpanded_];
  }
  @catch (RAREExpandVetoException *ignored) {
    return;
  }
  BOOL expand = !paneExpanded_;
  if (expand) {
    [self togglePaneExWithBoolean:NO];
  }
  if (expand) {
    [self refreshWithBoolean:YES];
  }
  else {
    [self togglePaneExWithBoolean:YES];
  }
}

- (void)setAnimateTransitionsWithBoolean:(BOOL)animateTransitions {
  self->animateTransitions_ = animateTransitions;
  if (animateTransitions) {
    if (sizingAnimation_ == nil) {
      sizingAnimation_ = [self createAnimation];
    }
  }
  else if (sizingAnimation_ != nil) {
    [sizingAnimation_ dispose];
    sizingAnimation_ = nil;
  }
}

- (void)setAnimationOptionsWithJavaUtilMap:(id<JavaUtilMap>)options {
  if (sizingAnimation_ == nil) {
    sizingAnimation_ = [self createAnimation];
  }
  if (options != nil) {
    [((RAREaCollapsiblePane_PaneSizingAnimation *) nil_chk(sizingAnimation_)) handlePropertiesWithJavaUtilMap:options];
  }
}

- (void)setAnimatorOptionsWithJavaUtilMap:(id<JavaUtilMap>)options {
}

- (void)setCollapseIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  self->collapseIcon_ = icon;
  if (self->paneExpanded_ && userControllable_) {
    [self setIcons];
  }
}

- (void)setCollapseTipWithNSString:(NSString *)collapseTip {
  self->collapseTip_ = collapseTip;
}

- (void)setCollapsedWithBoolean:(BOOL)collapsed {
  if (paneExpanded_) {
    [self togglePane];
  }
}

- (void)setCollapsedTitleWithNSString:(NSString *)title {
  collapsedTitle_ = title;
  if (!paneExpanded_) {
    [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setTextWithJavaLangCharSequence:title];
  }
}

- (void)setContentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  if (mainComponent_ != nil) {
    [self removeWithRAREiPlatformComponent:mainComponent_];
  }
  mainComponent_ = c;
  [((RAREExpansionEvent *) nil_chk(eventObject_)) setItemWithId:c];
  [self setMainComponentVisibleWithRAREiPlatformComponent:c withBoolean:paneExpanded_];
  id<JavaLangCharSequence> title = nil;
  if (titleProvider_ != nil) {
    title = paneExpanded_ ? [titleProvider_ getExpandedTitleWithRAREiCollapsible:self withRAREiPlatformComponent:c] : [titleProvider_ getCollapsedTitleWithRAREiCollapsible:self withRAREiPlatformComponent:c];
  }
  if (title == nil) {
    title = paneTitle_;
    if (!paneExpanded_ && (collapsedTitle_ != nil)) {
      title = collapsedTitle_;
    }
  }
  [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setTextWithJavaLangCharSequence:title];
}

- (void)setEnabledWithBoolean:(BOOL)enabled {
  [super setEnabledWithBoolean:enabled];
  [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setEnabledWithBoolean:enabled];
}

- (void)setEventsEnabledWithBoolean:(BOOL)eventsEnabled {
  self->eventsEnabled_ = eventsEnabled;
}

- (void)setExpandIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  self->expandIcon_ = icon;
  if (!self->paneExpanded_ && userControllable_) {
    [self setIcons];
  }
}

- (void)setExpandOnDragOverWithBoolean:(BOOL)expand {
}

- (void)setExpandTipWithNSString:(NSString *)expandTip {
  self->expandTip_ = expandTip;
}

- (void)setShowTitleWithBoolean:(BOOL)show {
  [self setTitleVisibleWithBoolean:show];
}

- (void)setTitleBackgroundWithRAREUIColor:(RAREUIColor *)bg {
  [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setBackgroundWithRAREUIColor:bg];
}

- (void)setTitleBorderWithRAREiPlatformBorder:(id<RAREiPlatformBorder>)b {
  [((RAREUICompoundBorder *) nil_chk(titleBorder_)) setOutsideBorderWithRAREiPlatformBorder:b];
  [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setBorderWithRAREiPlatformBorder:titleBorder_];
}

- (void)setTitleFontWithRAREUIFont:(RAREUIFont *)font {
  [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setFontWithRAREUIFont:font];
}

- (void)setTitleForegroundWithRAREUIColor:(RAREUIColor *)fg {
  [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setForegroundWithRAREUIColor:fg];
}

- (void)setTitleIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  titleIcon_ = icon;
  [self setIcons];
}

- (void)setTitleIconOnLeftWithBoolean:(BOOL)flag {
  if (titleIconOnLeft_ != flag) {
    titleIconOnLeft_ = flag;
    [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setIconOnLeftWithBoolean:flag];
    [self setIcons];
  }
}

- (void)setTitleIconToolTipWithNSString:(NSString *)tooltip {
}

- (void)setTitleOpaqueWithBoolean:(BOOL)opaque {
  if (opaque) {
    [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setOpaqueWithBoolean:YES];
    if (([titleComponent_ getComponentPainter] == nil) || ([((id<RAREiPlatformComponentPainter>) nil_chk([titleComponent_ getComponentPainter])) getBackgroundPainter] == nil)) {
      [RAREUtils setBackgroundPainterWithRAREiPainterSupport:titleComponent_ withRAREiBackgroundPainter:[RAREUIBackgroundPainter BGCOLOR_GRADIENT_PAINTER_LT]];
    }
  }
  else {
    [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setOpaqueWithBoolean:NO];
    if (([titleComponent_ getComponentPainter] != nil) && ([((id<RAREiPlatformComponentPainter>) nil_chk([titleComponent_ getComponentPainter])) getBackgroundPainter] == [RAREUIBackgroundPainter BGCOLOR_GRADIENT_PAINTER_LT])) {
      [((id<RAREiPlatformComponentPainter>) nil_chk([titleComponent_ getComponentPainter])) setBackgroundPainterWithRAREiBackgroundPainter:nil withBoolean:NO];
      [((id<RAREiPlatformComponentPainter>) nil_chk([titleComponent_ getComponentPainter])) setBackgroundColorWithRAREUIColor:nil];
    }
  }
}

- (void)setTitleProviderWithRAREiCollapsible_iTitleProvider:(id<RAREiCollapsible_iTitleProvider>)tp {
  titleProvider_ = tp;
}

- (void)setTitleTextWithJavaLangCharSequence:(id<JavaLangCharSequence>)title {
  [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setTextWithJavaLangCharSequence:title];
  paneTitle_ = title;
}

- (void)setTitleTextComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component {
  [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setCenterViewWithRAREiPlatformComponent:component];
}

- (id<RAREiPlatformComponent>)getTitleTextComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component {
  return [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) getCenterView];
}

- (void)setTitleTextHAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:(RARERenderableDataItem_HorizontalAlignEnum *)align {
  [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:align withRARERenderableDataItem_VerticalAlignEnum:[RARERenderableDataItem_VerticalAlignEnum CENTER]];
}

- (void)setToggleOnTitleSingleClickWithBoolean:(BOOL)toggle {
  toggleOnTitleSingleClick_ = toggle;
}

- (void)setUseChevronWithBoolean:(BOOL)useChevron {
  self->useChevron_ = useChevron;
  [self setTitleIconOnLeftWithBoolean:useChevron];
  [self initIcons];
}

- (void)setUserControllableWithBoolean:(BOOL)uc {
  self->userControllable_ = uc;
  if (uc && (collapseIcon_ == nil)) {
    [self initIcons];
  }
  [self revalidate];
  [self repaint];
}

- (id<JavaLangCharSequence>)getColapsedTitle {
  return collapsedTitle_;
}

- (id<JavaLangCharSequence>)getCollapseTip {
  return collapseTip_;
}

- (id<RAREiPlatformComponent>)getContent {
  return mainComponent_;
}

- (id<JavaLangCharSequence>)getExpandTip {
  return expandTip_;
}

- (id<RAREiParentComponent>)getPane {
  return self;
}

- (id<JavaLangCharSequence>)getTitle {
  return paneTitle_;
}

- (id<RAREiPlatformComponent>)getTitleComponent {
  return titleComponent_;
}

- (id<RAREiPlatformIcon>)getTitleIcon {
  return titleIcon_;
}

- (id<RAREiTransitionAnimator>)getTransitionAnimator {
  return transitionAnimator_;
}

- (BOOL)isAnimateTransitions {
  return animateTransitions_;
}

- (BOOL)isEventsEnabled {
  return eventsEnabled_;
}

- (BOOL)isExpanded {
  return paneExpanded_;
}

- (BOOL)isUserControllable {
  return userControllable_;
}

- (void)configuredVisualsForState {
  id<JavaLangCharSequence> title = nil;
  id<RAREiPlatformComponent> c = mainComponent_;
  if (titleProvider_ != nil) {
    title = paneExpanded_ ? [titleProvider_ getExpandedTitleWithRAREiCollapsible:self withRAREiPlatformComponent:c] : [titleProvider_ getCollapsedTitleWithRAREiCollapsible:self withRAREiPlatformComponent:c];
    if ((title != nil) && ([title sequenceLength] > 0)) {
      [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setTextWithJavaLangCharSequence:title];
    }
    else {
      title = nil;
    }
  }
  if ((title == nil) && (paneTitle_ != nil)) {
    title = paneTitle_;
    if (!paneExpanded_ && (collapsedTitle_ != nil)) {
      title = collapsedTitle_;
    }
    [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setTextWithJavaLangCharSequence:title];
  }
  [self setIcons];
}

- (void)createAndAddTitleLabel {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (RAREaCollapsiblePane_PaneSizingAnimation *)createAnimation {
  return [[RAREaCollapsiblePane_PaneSizingAnimation alloc] initWithRAREaCollapsiblePane:self];
}

- (id<RAREiPlatformIcon>)createChevronIconWithBoolean:(BOOL)up {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiPlatformIcon>)createTwistyIconWithBoolean:(BOOL)up {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)fireExpandedWithBoolean:(BOOL)expanded {
  if ((listenerList_ == nil) || ![self isEventsEnabled]) {
    return;
  }
  id<RAREiPlatformComponent> c = mainComponent_;
  id<RAREiWidget> w = [RAREPlatform findWidgetForComponentWithId:c];
  id<RAREiExpandedListener> expandedListener = nil;
  if ((w != nil) && ([w getViewer] != nil)) {
    expandedListener = [((id<RAREiViewer>) nil_chk([w getViewer])) getExpandedListener];
  }
  if (expandedListener != nil) {
    if (expanded) {
      [expandedListener itemHasExpandedWithRAREExpansionEvent:eventObject_];
    }
    else {
      [expandedListener itemHasCollapsedWithRAREExpansionEvent:eventObject_];
    }
  }
  IOSObjectArray *listeners = [((RAREEventListenerList *) nil_chk(listenerList_)) getListenerList];
  id<RAREiExpandedListener> t;
  for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
    if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiExpandedListener)]) {
      t = (id<RAREiExpandedListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiExpandedListener));
      if (expanded) {
        [((id<RAREiExpandedListener>) nil_chk(t)) itemHasExpandedWithRAREExpansionEvent:eventObject_];
      }
      else {
        [((id<RAREiExpandedListener>) nil_chk(t)) itemHasCollapsedWithRAREExpansionEvent:eventObject_];
      }
    }
  }
}

- (void)fireExpansionWithBoolean:(BOOL)expanded {
  if ((listenerList_ == nil) || ![self isEventsEnabled]) {
    return;
  }
  IOSObjectArray *listeners = [((RAREEventListenerList *) nil_chk(listenerList_)) getListenerList];
  id<RAREiExpansionListener> t;
  for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
    if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiExpansionListener)]) {
      t = (id<RAREiExpansionListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiExpansionListener));
      if (expanded) {
        [((id<RAREiExpansionListener>) nil_chk(t)) itemWillExpandWithRAREExpansionEvent:eventObject_];
      }
      else {
        [((id<RAREiExpansionListener>) nil_chk(t)) itemWillCollapseWithRAREExpansionEvent:eventObject_];
      }
    }
  }
}

- (void)initComponents {
  [self createAndAddTitleLabel];
  id<RAREiPlatformBorder> in = [RAREBorderUtils TWO_POINT_EMPTY_BORDER];
  id<RAREiPlatformBorder> out = [RAREBorderUtils EMPTY_BORDER];
  titleBorder_ = [[RAREUICompoundBorder alloc] initWithRAREiPlatformBorder:out withRAREiPlatformBorder:in];
  [((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) setBorderWithRAREiPlatformBorder:titleBorder_];
  [self setIcons];
  [self setTitleOpaqueWithBoolean:YES];
}

- (void)initIcons {
  expandIcon_ = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getImageIconWithNSString:@"Rare.CollapsiblePane.collapsedIcon"];
  collapseIcon_ = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getImageIconWithNSString:@"Rare.CollapsiblePane.expandedIcon"];
  if (expandIcon_ == nil) {
    expandIcon_ = useChevron_ ? [self createChevronIconWithBoolean:NO] : [self createTwistyIconWithBoolean:YES];
  }
  if (collapseIcon_ == nil) {
    collapseIcon_ = useChevron_ ? [self createChevronIconWithBoolean:YES] : [self createTwistyIconWithBoolean:NO];
  }
  [self setIcons];
}

- (BOOL)needsHiearachyInvalidated {
  return YES;
}

- (void)refreshWithBoolean:(BOOL)fire {
  [self revalidate];
  if (fire) {
    [self repaint];
    [self fireExpandedWithBoolean:paneExpanded_];
  }
}

- (void)togglePaneExWithBoolean:(BOOL)fire {
  paneExpanded_ = !paneExpanded_;
  [self configuredVisualsForState];
  id<RAREiPlatformComponent> c = mainComponent_;
  if (c != nil) {
    [self setMainComponentVisibleWithRAREiPlatformComponent:c withBoolean:paneExpanded_];
    [self refreshWithBoolean:fire];
    if (animateTransitions_) {
      [((RAREaCollapsiblePane_PaneSizingAnimation *) nil_chk(sizingAnimation_)) animateTransition];
    }
  }
}

- (void)setIcons {
  if (![((RAREaCollapsiblePane_aTitleComponent *) nil_chk(titleComponent_)) isVisible]) {
    return;
  }
  if ([self isUserControllable] && (collapseIcon_ != nil)) {
    if ([self isExpanded]) {
      [titleComponent_ setTwistyWithRAREiPlatformIcon:collapseIcon_];
    }
    else {
      [titleComponent_ setTwistyWithRAREiPlatformIcon:expandIcon_];
    }
  }
}

- (void)setMainComponentVisibleWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                              withBoolean:(BOOL)visible {
  if (c != nil) {
    if (visible) {
      [self setCenterViewWithRAREiPlatformComponent:c];
    }
    else {
      [self removeWithRAREiPlatformComponent:c];
    }
  }
}

- (void)setTitleVisibleWithBoolean:(BOOL)visible {
  if (visible) {
    [self setTopViewWithRAREiPlatformComponent:titleComponent_];
  }
  else {
    [self removeWithRAREiPlatformComponent:titleComponent_];
  }
}

- (void)copyAllFieldsTo:(RAREaCollapsiblePane *)other {
  [super copyAllFieldsTo:other];
  other->animateTransitions_ = animateTransitions_;
  other->collapseIcon_ = collapseIcon_;
  other->collapseTip_ = collapseTip_;
  other->collapsedTitle_ = collapsedTitle_;
  other->eventObject_ = eventObject_;
  other->eventsEnabled_ = eventsEnabled_;
  other->expandIcon_ = expandIcon_;
  other->expandTip_ = expandTip_;
  other->inAnimation_ = inAnimation_;
  other->mainComponent_ = mainComponent_;
  other->paneExpanded_ = paneExpanded_;
  other->paneTitle_ = paneTitle_;
  other->sizingAnimation_ = sizingAnimation_;
  other->titleBorder_ = titleBorder_;
  other->titleComponent_ = titleComponent_;
  other->titleIcon_ = titleIcon_;
  other->titleIconOnLeft_ = titleIconOnLeft_;
  other->titleProvider_ = titleProvider_;
  other->toggleOnTitleSingleClick_ = toggleOnTitleSingleClick_;
  other->transitionAnimator_ = transitionAnimator_;
  other->useChevron_ = useChevron_;
  other->userControllable_ = userControllable_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getTitleTextComponentWithRAREiPlatformComponent:", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getColapsedTitle", NULL, "LJavaLangCharSequence", 0x1, NULL },
    { "getCollapseTip", NULL, "LJavaLangCharSequence", 0x1, NULL },
    { "getContent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getExpandTip", NULL, "LJavaLangCharSequence", 0x1, NULL },
    { "getPane", NULL, "LRAREiParentComponent", 0x1, NULL },
    { "getTitle", NULL, "LJavaLangCharSequence", 0x1, NULL },
    { "getTitleComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getTitleIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getTransitionAnimator", NULL, "LRAREiTransitionAnimator", 0x1, NULL },
    { "isAnimateTransitions", NULL, "Z", 0x1, NULL },
    { "isEventsEnabled", NULL, "Z", 0x1, NULL },
    { "isExpanded", NULL, "Z", 0x1, NULL },
    { "isUserControllable", NULL, "Z", 0x1, NULL },
    { "configuredVisualsForState", NULL, "V", 0x4, NULL },
    { "createAndAddTitleLabel", NULL, "V", 0x404, NULL },
    { "createAnimation", NULL, "LRAREaCollapsiblePane_PaneSizingAnimation", 0x4, NULL },
    { "createChevronIconWithBoolean:", NULL, "LRAREiPlatformIcon", 0x404, NULL },
    { "createTwistyIconWithBoolean:", NULL, "LRAREiPlatformIcon", 0x404, NULL },
    { "fireExpandedWithBoolean:", NULL, "V", 0x4, NULL },
    { "fireExpansionWithBoolean:", NULL, "V", 0x4, "RAREExpandVetoException" },
    { "initComponents", NULL, "V", 0x4, NULL },
    { "initIcons", NULL, "V", 0x4, NULL },
    { "needsHiearachyInvalidated", NULL, "Z", 0x4, NULL },
    { "refreshWithBoolean:", NULL, "V", 0x4, NULL },
    { "togglePaneExWithBoolean:", NULL, "V", 0x4, NULL },
    { "setIcons", NULL, "V", 0x4, NULL },
    { "setMainComponentVisibleWithRAREiPlatformComponent:withBoolean:", NULL, "V", 0x4, NULL },
    { "setTitleVisibleWithBoolean:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "sizingAnimation_", NULL, 0x0, "LRAREaCollapsiblePane_PaneSizingAnimation" },
    { "paneExpanded_", NULL, 0x4, "Z" },
    { "userControllable_", NULL, 0x4, "Z" },
    { "toggleOnTitleSingleClick_", NULL, 0x4, "Z" },
    { "titleIconOnLeft_", NULL, 0x4, "Z" },
    { "eventsEnabled_", NULL, 0x4, "Z" },
    { "animateTransitions_", NULL, 0x4, "Z" },
    { "collapseIcon_", NULL, 0x4, "LRAREiPlatformIcon" },
    { "collapseTip_", NULL, 0x4, "LJavaLangCharSequence" },
    { "collapsedTitle_", NULL, 0x4, "LJavaLangCharSequence" },
    { "eventObject_", NULL, 0x4, "LRAREExpansionEvent" },
    { "expandIcon_", NULL, 0x4, "LRAREiPlatformIcon" },
    { "expandTip_", NULL, 0x4, "LJavaLangCharSequence" },
    { "inAnimation_", NULL, 0x44, "Z" },
    { "mainComponent_", NULL, 0x4, "LRAREiPlatformComponent" },
    { "paneTitle_", NULL, 0x4, "LJavaLangCharSequence" },
    { "titleBorder_", NULL, 0x4, "LRAREUICompoundBorder" },
    { "titleComponent_", NULL, 0x4, "LRAREaCollapsiblePane_aTitleComponent" },
    { "titleIcon_", NULL, 0x4, "LRAREiPlatformIcon" },
    { "titleProvider_", NULL, 0x4, "LRAREiCollapsible_iTitleProvider" },
    { "transitionAnimator_", NULL, 0x4, "LRAREiTransitionAnimator" },
    { "useChevron_", NULL, 0x4, "Z" },
  };
  static J2ObjcClassInfo _RAREaCollapsiblePane = { "aCollapsiblePane", "com.appnativa.rare.ui", NULL, 0x401, 29, methods, 22, fields, 0, NULL};
  return &_RAREaCollapsiblePane;
}

@end
@implementation RAREaCollapsiblePane_PaneSizingAnimation

- (id)initWithRAREaCollapsiblePane:(RAREaCollapsiblePane *)outer$ {
  this$0_ = outer$;
  if (self = [super initWithBoolean:NO]) {
    diagonal_ = NO;
  }
  return self;
}

- (void)animateTransition {
  RAREUIDimension *md = this$0_->paneExpanded_ ? [((id<RAREiPlatformComponent>) nil_chk(this$0_->mainComponent_)) getPreferredSize] : [((id<RAREiPlatformComponent>) nil_chk(this$0_->mainComponent_)) getSize];
  RAREUIDimension *d = [this$0_ getPreferredSize];
  RAREUIRectangle *to = [[RAREUIRectangle alloc] initWithFloat:[this$0_ getX] withFloat:[this$0_ getY] withFloat:[this$0_ getWidth] withFloat:((RAREUIDimension *) nil_chk(d))->height_];
  RAREAnimationComponent *c = [RAREaPlatformHelper createAnimationComponentWithRAREiWidget:[this$0_ getWidget]];
  [((RAREAnimationComponent *) nil_chk(c)) setComponentWithRAREiPlatformComponent:this$0_->mainComponent_ withFloat:md->width_ withFloat:md->height_];
  [this$0_ setCenterViewWithRAREiPlatformComponent:c];
  animationComponent_ = c;
  [self animateToWithRAREiPlatformComponent:this$0_ withRAREUIRectangle:to];
}

- (void)notifyListenersWithRAREiPlatformAnimator:(id<RAREiPlatformAnimator>)animator
                                     withBoolean:(BOOL)ended {
  [super notifyListenersWithRAREiPlatformAnimator:animator withBoolean:ended];
  if (ended) {
    [((id<RAREiPlatformComponent>) nil_chk(this$0_->mainComponent_)) removeFromParent];
    [((RAREAnimationComponent *) nil_chk(animationComponent_)) removeFromParent];
    if (this$0_->paneExpanded_) {
      [this$0_ setCenterViewWithRAREiPlatformComponent:this$0_->mainComponent_];
    }
    [self clear];
    [this$0_ revalidate];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "notifyListenersWithRAREiPlatformAnimator:withBoolean:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaCollapsiblePane" },
  };
  static J2ObjcClassInfo _RAREaCollapsiblePane_PaneSizingAnimation = { "PaneSizingAnimation", "com.appnativa.rare.ui", "aCollapsiblePane", 0x0, 1, methods, 1, fields, 0, NULL};
  return &_RAREaCollapsiblePane_PaneSizingAnimation;
}

@end
@implementation RAREaCollapsiblePane_aTitleComponent

- (id)init {
  return [super init];
}

- (id)initWithId:(id)view {
  return [super initWithId:view];
}

- (void)addActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
}

- (void)addChangeListenerWithRAREiChangeListener:(id<RAREiChangeListener>)l {
}

- (void)dispose {
  if (titleLabel_ != nil) {
    [titleLabel_ dispose];
  }
  if (twistyLabel_ != nil) {
    [twistyLabel_ dispose];
  }
  if (iconLabel_ != nil) {
    [iconLabel_ dispose];
  }
  [super dispose];
  twistyLabel_ = nil;
  titleLabel_ = nil;
  iconLabel_ = nil;
  icon_ = nil;
}

- (void)doClick {
}

- (void)fireActionEvent {
}

- (void)removeActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
}

- (void)removeChangeListenerWithRAREiChangeListener:(id<RAREiChangeListener>)l {
}

- (void)setActionWithRAREUIAction:(RAREUIAction *)a {
}

- (void)setAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:(RARERenderableDataItem_HorizontalAlignEnum *)hal
                      withRARERenderableDataItem_VerticalAlignEnum:(RARERenderableDataItem_VerticalAlignEnum *)val {
}

- (void)setCenterViewWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  [super setCenterViewWithRAREiPlatformComponent:c];
  if ([(id) c conformsToProtocol: @protocol(RAREiActionComponent)]) {
    [((id<RAREiActionComponent>) check_protocol_cast(c, @protocol(RAREiActionComponent))) setWordWrapWithBoolean:YES];
  }
}

- (void)setDisabledIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
}

- (void)setDisabledSelectedIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
}

- (void)setEnabledWithBoolean:(BOOL)enabled {
  [super setEnabledWithBoolean:enabled];
  [((id<RAREiActionComponent>) nil_chk(titleLabel_)) setEnabledWithBoolean:enabled];
  if (iconLabel_ != nil) {
    [iconLabel_ setEnabledWithBoolean:enabled];
  }
  if (twistyLabel_ != nil) {
    [twistyLabel_ setEnabledWithBoolean:enabled];
  }
}

- (void)setFontWithRAREUIFont:(RAREUIFont *)f {
  [super setFontWithRAREUIFont:f];
  if (f != nil) {
    [((id<RAREiActionComponent>) nil_chk(titleLabel_)) setFontWithRAREUIFont:f];
    [self updateTwistyIcon];
  }
}

- (void)setForegroundWithRAREUIColor:(RAREUIColor *)fg {
  [super setForegroundWithRAREUIColor:fg];
  if (fg != nil) {
    [((id<RAREiActionComponent>) nil_chk(titleLabel_)) setForegroundWithRAREUIColor:fg];
  }
}

- (void)setIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  if (iconLabel_ == nil) {
    iconLabel_ = [self createIconComponent];
    [((id<RAREiActionComponent>) nil_chk(iconLabel_)) putClientPropertyWithNSString:[RAREiConstants RARE_HALIGN_PROPERTY] withId:[RARERenderableDataItem_HorizontalAlignEnum FILL]];
    [iconLabel_ putClientPropertyWithNSString:[RAREiConstants RARE_VALIGN_PROPERTY] withId:[RARERenderableDataItem_VerticalAlignEnum FILL]];
  }
  [((id<RAREiActionComponent>) nil_chk(iconLabel_)) setIconWithRAREiPlatformIcon:icon];
  if (iconOnLeft_) {
    [self setLeftViewWithRAREiPlatformComponent:iconLabel_];
    [iconLabel_ setIconPositionWithRARERenderableDataItem_IconPositionEnum:[RARERenderableDataItem_IconPositionEnum LEFT]];
  }
  else {
    [self setRightViewWithRAREiPlatformComponent:iconLabel_];
    [iconLabel_ setIconPositionWithRARERenderableDataItem_IconPositionEnum:[RARERenderableDataItem_IconPositionEnum RIGHT_JUSTIFIED]];
  }
}

- (void)setIconGapWithInt:(int)iconGap {
}

- (void)setIconOnLeftWithBoolean:(BOOL)iconOnLeft {
  self->iconOnLeft_ = iconOnLeft;
}

- (void)setIconPositionWithRARERenderableDataItem_IconPositionEnum:(RARERenderableDataItem_IconPositionEnum *)iconPosition {
  if (iconPosition != nil) {
    switch ([iconPosition ordinal]) {
      case RARERenderableDataItem_IconPosition_RIGHT_JUSTIFIED:
      case RARERenderableDataItem_IconPosition_RIGHT:
      case RARERenderableDataItem_IconPosition_TRAILING:
      iconOnLeft_ = NO;
      break;
      default:
      iconOnLeft_ = YES;
      break;
    }
  }
}

- (void)setMarginWithRAREUIInsets:(RAREUIInsets *)insets {
  if (insets == nil) {
    [self setMarginWithFloat:0 withFloat:0 withFloat:0 withFloat:0];
  }
  else {
    [self setMarginWithFloat:insets->top_ withFloat:insets->right_ withFloat:insets->bottom_ withFloat:insets->left_];
  }
}

- (void)setMarginWithFloat:(float)top
                 withFloat:(float)right
                 withFloat:(float)bottom
                 withFloat:(float)left {
  if (titleLabel_ != nil) {
    [titleLabel_ setMarginWithFloat:top withFloat:right withFloat:bottom withFloat:left];
  }
}

- (void)setMnemonicWithChar:(unichar)mn {
}

- (void)setOrientationWithRARERenderableDataItem_OrientationEnum:(RARERenderableDataItem_OrientationEnum *)orientation {
}

- (void)setPressedIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)pressedIcon {
}

- (void)setRolloverIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
}

- (void)setRolloverSelectedIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
}

- (void)setSelectedIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)selectedIcon {
}

- (void)setTextWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  [((id<RAREiActionComponent>) nil_chk(titleLabel_)) setTextWithJavaLangCharSequence:(text == nil) ? nil : [text sequenceDescription]];
  [self updateTwistyIcon];
}

- (void)setToolTipTextWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  [((id<RAREiActionComponent>) nil_chk(titleLabel_)) setToolTipTextWithJavaLangCharSequence:text];
}

- (void)setTwistyWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  if (twistyLabel_ == nil) {
    twistyLabel_ = [self createIconComponent];
    [((id<RAREiActionComponent>) nil_chk(twistyLabel_)) putClientPropertyWithNSString:[RAREiConstants RARE_HALIGN_PROPERTY] withId:[RARERenderableDataItem_HorizontalAlignEnum FILL]];
    [twistyLabel_ putClientPropertyWithNSString:[RAREiConstants RARE_VALIGN_PROPERTY] withId:[RARERenderableDataItem_VerticalAlignEnum FILL]];
  }
  [((id<RAREiActionComponent>) nil_chk(twistyLabel_)) setIconWithRAREiPlatformIcon:icon];
  if (!iconOnLeft_) {
    [self setLeftViewWithRAREiPlatformComponent:twistyLabel_];
    [twistyLabel_ setIconPositionWithRARERenderableDataItem_IconPositionEnum:[RARERenderableDataItem_IconPositionEnum LEFT]];
  }
  else {
    [self setRightViewWithRAREiPlatformComponent:twistyLabel_];
    [twistyLabel_ setIconPositionWithRARERenderableDataItem_IconPositionEnum:[RARERenderableDataItem_IconPositionEnum RIGHT_JUSTIFIED]];
  }
  [self updateTwistyIcon];
}

- (void)setWordWrapWithBoolean:(BOOL)wrap {
  if (titleLabel_ != nil) {
    [titleLabel_ setWordWrapWithBoolean:wrap];
  }
}

- (RAREUIAction *)getAction {
  return nil;
}

- (RAREiPaintedButton_ButtonStateEnum *)getButtonState {
  return [RAREUtils getStateWithBoolean:[self isEnabled] withBoolean:[self isPressed] withBoolean:[self isSelected] withBoolean:NO];
}

- (id<RAREiPlatformIcon>)getDisabledIcon {
  return nil;
}

- (id<RAREiPlatformIcon>)getIcon {
  return icon_;
}

- (int)getIconGap {
  return 4;
}

- (RARERenderableDataItem_IconPositionEnum *)getIconPosition {
  return iconOnLeft_ ? [RARERenderableDataItem_IconPositionEnum LEFT] : [RARERenderableDataItem_IconPositionEnum RIGHT_JUSTIFIED];
}

- (RAREUIInsets *)getMargin {
  if (titleLabel_ != nil) {
    return [titleLabel_ getMargin];
  }
  return [[RAREUIInsets alloc] initWithFloat:0];
}

- (id<RAREiPlatformIcon>)getPressedIcon {
  return icon_;
}

- (id<RAREiPlatformIcon>)getSelectedIcon {
  return icon_;
}

- (id<JavaLangCharSequence>)getText {
  return [((id<RAREiActionComponent>) nil_chk(titleLabel_)) getText];
}

- (BOOL)isIconOnLeft {
  return iconOnLeft_;
}

- (BOOL)isWordWrap {
  if (titleLabel_ != nil) {
    return [titleLabel_ isWordWrap];
  }
  return NO;
}

- (id<RAREiActionComponent>)createIconComponent {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)updateTwistyIcon {
  if (twistyLabel_ != nil) {
    id<RAREiPlatformIcon> icon = [twistyLabel_ getIcon];
    if ([(id) icon isKindOfClass:[RAREPainterUtils_ChevronIcon class]]) {
      int n = [((RAREUIDimension *) nil_chk([((id<RAREiActionComponent>) nil_chk(titleLabel_)) getPreferredSize])) intHeight];
      n = [JavaLangMath maxWithInt:n withInt:[RAREFontUtils getDefaultLineHeight]];
      [((RAREPainterUtils_ChevronIcon *) check_class_cast(icon, [RAREPainterUtils_ChevronIcon class])) setIconSizeWithInt:n];
    }
    if ([(id) icon isKindOfClass:[RAREPainterUtils_TwistyIcon class]]) {
      int n = [((RAREUIDimension *) nil_chk([((id<RAREiActionComponent>) nil_chk(titleLabel_)) getPreferredSize])) intHeight];
      n = [JavaLangMath maxWithInt:n withInt:[RAREFontUtils getDefaultLineHeight]];
      [((RAREPainterUtils_TwistyIcon *) check_class_cast(icon, [RAREPainterUtils_TwistyIcon class])) setIconSizeWithInt:n];
    }
    [twistyLabel_ setIconWithRAREiPlatformIcon:nil];
    [twistyLabel_ setIconWithRAREiPlatformIcon:icon];
  }
}

- (void)copyAllFieldsTo:(RAREaCollapsiblePane_aTitleComponent *)other {
  [super copyAllFieldsTo:other];
  other->icon_ = icon_;
  other->iconLabel_ = iconLabel_;
  other->iconOnLeft_ = iconOnLeft_;
  other->titleLabel_ = titleLabel_;
  other->twistyLabel_ = twistyLabel_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getAction", NULL, "LRAREUIAction", 0x1, NULL },
    { "getButtonState", NULL, "LRAREiPaintedButton_ButtonStateEnum", 0x1, NULL },
    { "getDisabledIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getIconPosition", NULL, "LRARERenderableDataItem_IconPositionEnum", 0x1, NULL },
    { "getMargin", NULL, "LRAREUIInsets", 0x1, NULL },
    { "getPressedIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getSelectedIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getText", NULL, "LJavaLangCharSequence", 0x1, NULL },
    { "isIconOnLeft", NULL, "Z", 0x1, NULL },
    { "isWordWrap", NULL, "Z", 0x1, NULL },
    { "createIconComponent", NULL, "LRAREiActionComponent", 0x404, NULL },
    { "updateTwistyIcon", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "icon_", NULL, 0x4, "LRAREiPlatformIcon" },
    { "iconLabel_", NULL, 0x4, "LRAREiActionComponent" },
    { "iconOnLeft_", NULL, 0x4, "Z" },
    { "titleLabel_", NULL, 0x4, "LRAREiActionComponent" },
    { "twistyLabel_", NULL, 0x4, "LRAREiActionComponent" },
  };
  static J2ObjcClassInfo _RAREaCollapsiblePane_aTitleComponent = { "aTitleComponent", "com.appnativa.rare.ui", "aCollapsiblePane", 0x40c, 13, methods, 5, fields, 0, NULL};
  return &_RAREaCollapsiblePane_aTitleComponent;
}

@end
