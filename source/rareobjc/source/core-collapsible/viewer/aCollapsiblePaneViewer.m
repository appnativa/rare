//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-collapsible/com/appnativa/rare/viewer/aCollapsiblePaneViewer.java
//
//  Created by decoteaud on 3/11/16.
//

#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/spot/CollapsibleInfo.h"
#include "com/appnativa/rare/spot/CollapsiblePane.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/ui/aWidgetListener.h"
#include "com/appnativa/rare/ui/iCollapsible.h"
#include "com/appnativa/rare/ui/iParentComponent.h"
#include "com/appnativa/rare/ui/iPlatformComponentFactory.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/viewer/aCollapsiblePaneViewer.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/viewer/aWidgetPaneViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "java/lang/CharSequence.h"

@implementation RAREaCollapsiblePaneViewer

- (id)init {
  return [self initRAREaCollapsiblePaneViewerWithRAREiContainer:nil];
}

- (id)initRAREaCollapsiblePaneViewerWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    widgetType_ = [RAREiWidget_WidgetTypeEnum CollapsiblePane];
  }
  return self;
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  return [self initRAREaCollapsiblePaneViewerWithRAREiContainer:parent];
}

- (void)configureWithRARESPOTViewer:(RARESPOTViewer *)vcfg {
  [self configureExWithRARESPOTCollapsiblePane:(RARESPOTCollapsiblePane *) check_class_cast(vcfg, [RARESPOTCollapsiblePane class])];
  [self fireConfigureEventWithRARESPOTWidget:vcfg withNSString:[RAREiConstants EVENT_CONFIGURE]];
}

- (void)setEventsEnabledWithBoolean:(BOOL)enabled {
  [((id<RAREiCollapsible>) nil_chk([self getCollapsiblePane])) setEventsEnabledWithBoolean:enabled];
}

- (void)setExpandedWithBoolean:(BOOL)expanded {
  if (expanded) {
    [((id<RAREiCollapsible>) check_protocol_cast(dataComponent_, @protocol(RAREiCollapsible))) expandPane];
  }
  else {
    [((id<RAREiCollapsible>) check_protocol_cast(dataComponent_, @protocol(RAREiCollapsible))) collapsePane];
  }
}

- (void)setTitleIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  [((id<RAREiCollapsible>) nil_chk([self getCollapsiblePane])) setTitleIconWithRAREiPlatformIcon:icon];
}

- (void)setTitleTextWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  [((id<RAREiCollapsible>) nil_chk([self getCollapsiblePane])) setTitleTextWithJavaLangCharSequence:text];
}

- (void)setTitleWithNSString:(NSString *)title {
  [super setTitleWithNSString:title];
  [((id<RAREiCollapsible>) nil_chk([self getCollapsiblePane])) setTitleTextWithJavaLangCharSequence:title];
}

- (void)setUserControllableWithBoolean:(BOOL)uc {
  [((id<RAREiCollapsible>) check_protocol_cast(dataComponent_, @protocol(RAREiCollapsible))) setUserControllableWithBoolean:uc];
}

- (id<RAREiCollapsible>)getCollapsiblePane {
  return (id<RAREiCollapsible>) check_protocol_cast(dataComponent_, @protocol(RAREiCollapsible));
}

- (NSString *)getTitleText {
  id<JavaLangCharSequence> cs = [((id<RAREiCollapsible>) nil_chk([self getCollapsiblePane])) getTitle];
  return (cs == nil) ? @"" : [cs sequenceDescription];
}

- (BOOL)isEventsEnabled {
  return [((id<RAREiCollapsible>) nil_chk([self getCollapsiblePane])) isEventsEnabled];
}

- (BOOL)isExpanded {
  return [((id<RAREiCollapsible>) check_protocol_cast(dataComponent_, @protocol(RAREiCollapsible))) isExpanded];
}

- (BOOL)isUserControllable {
  return [((id<RAREiCollapsible>) check_protocol_cast(dataComponent_, @protocol(RAREiCollapsible))) isUserControllable];
}

- (void)configureExWithRARESPOTCollapsiblePane:(RARESPOTCollapsiblePane *)cfg {
  id<RAREiCollapsible> col = [((id<RAREiPlatformComponentFactory>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getComponentCreator])) getCollapsibleWithRAREiWidget:self withRARESPOTCollapsibleInfo:((RARESPOTCollapsiblePane *) nil_chk(cfg))->collapsibleInfo_];
  id<RAREiParentComponent> comp = [((id<RAREiCollapsible>) nil_chk(col)) getPane];
  [self configureExWithRAREiParentComponent:comp withRAREiParentComponent:comp withRARESPOTWidgetPane:cfg];
  id<JavaLangCharSequence> title = [col getTitle];
  if ((title == nil) || ([title sequenceLength] == 0)) {
    title = widgetTitle_;
    if ((title != nil) && ([title sequenceLength] == 0)) {
      title = nil;
    }
  }
  if (title != nil) {
    [col setTitleTextWithJavaLangCharSequence:[self expandStringWithNSString:[title sequenceDescription] withBoolean:NO]];
  }
  else if ([((SPOTPrintableString *) nil_chk(cfg->collapsedTitle_)) getValue] == nil) {
    [col setTitleProviderWithRAREiCollapsible_iTitleProvider:[RAREaViewer viewerListener]];
  }
  if ([self getWidgetListener] != nil) {
    [col addExpandedListenerWithRAREiExpandedListener:[self getWidgetListener]];
    [col addExpansionListenerWithRAREiExpansionListener:[self getWidgetListener]];
  }
  [self configureGenericDnDWithRAREiPlatformComponent:dataComponent_ withRARESPOTWidget:cfg];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getCollapsiblePane", NULL, "LRAREiCollapsible", 0x1, NULL },
    { "getTitleText", NULL, "LNSString", 0x1, NULL },
    { "isEventsEnabled", NULL, "Z", 0x1, NULL },
    { "isExpanded", NULL, "Z", 0x1, NULL },
    { "isUserControllable", NULL, "Z", 0x1, NULL },
    { "configureExWithRARESPOTCollapsiblePane:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcClassInfo _RAREaCollapsiblePaneViewer = { "aCollapsiblePaneViewer", "com.appnativa.rare.viewer", NULL, 0x401, 6, methods, 0, NULL, 0, NULL};
  return &_RAREaCollapsiblePaneViewer;
}

@end
