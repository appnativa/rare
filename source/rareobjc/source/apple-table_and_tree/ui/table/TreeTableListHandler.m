//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple-table_and_tree/com/appnativa/rare/ui/table/TreeTableListHandler.java
//
//  Created by decoteaud on 3/11/16.
//

#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/iPlatformListDataModel.h"
#include "com/appnativa/rare/ui/table/TableComponent.h"
#include "com/appnativa/rare/ui/table/TreeTableListHandler.h"
#include "com/appnativa/rare/ui/tree/DataItemTreeModel.h"
#include "com/appnativa/util/iFilter.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"

@implementation RARETreeTableListHandler

- (id)initWithRARETableComponent:(RARETableComponent *)table
  withRAREiPlatformListDataModel:(id<RAREiPlatformListDataModel>)model
       withRAREDataItemTreeModel:(RAREDataItemTreeModel *)tm {
  if (self = [super initWithRARETableComponent:table withRAREiPlatformListDataModel:model]) {
    treeModel_ = tm;
  }
  return self;
}

- (void)dispose {
  [super dispose];
  treeModel_ = nil;
}

- (BOOL)setAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) setAllWithJavaUtilCollection:collection];
}

- (void)refreshItems {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) refreshItems];
}

- (void)addWithInt:(int)index
            withId:(RARERenderableDataItem *)element {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) addWithInt:index withId:element];
}

- (BOOL)addWithId:(RARERenderableDataItem *)child {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) addWithId:child];
}

- (BOOL)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) addAllWithJavaUtilCollection:c];
}

- (BOOL)addAllWithInt:(int)index
withJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) addAllWithInt:index withJavaUtilCollection:c];
}

- (void)clear {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) clear];
}

- (void)sortWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) sortWithJavaUtilComparator:comparator];
}

- (BOOL)filterWithRAREUTiFilter:(id<RAREUTiFilter>)filter {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) filterWithRAREUTiFilter:filter];
}

- (BOOL)filterWithNSString:(NSString *)filter
               withBoolean:(BOOL)contains {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) filterWithNSString:filter withBoolean:contains];
}

- (BOOL)filterWithNSString:(NSString *)filter
               withBoolean:(BOOL)contains
               withBoolean:(BOOL)nullPasses
               withBoolean:(BOOL)emptyPasses {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) filterWithNSString:filter withBoolean:contains withBoolean:nullPasses withBoolean:emptyPasses];
}

- (void)copyAllFieldsTo:(RARETreeTableListHandler *)other {
  [super copyAllFieldsTo:other];
  other->treeModel_ = treeModel_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "setAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "addWithRARERenderableDataItem:", NULL, "Z", 0x1, NULL },
    { "addAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "addAllWithInt:withJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "filterWithRAREUTiFilter:", NULL, "Z", 0x1, NULL },
    { "filterWithNSString:withBoolean:", NULL, "Z", 0x1, NULL },
    { "filterWithNSString:withBoolean:withBoolean:withBoolean:", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "treeModel_", NULL, 0x0, "LRAREDataItemTreeModel" },
  };
  static J2ObjcClassInfo _RARETreeTableListHandler = { "TreeTableListHandler", "com.appnativa.rare.ui.table", NULL, 0x1, 7, methods, 1, fields, 0, NULL};
  return &_RARETreeTableListHandler;
}

@end
