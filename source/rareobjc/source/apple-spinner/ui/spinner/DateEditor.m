//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple-spinner/com/appnativa/rare/ui/spinner/DateEditor.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/platform/apple/ui/view/TextFieldView.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/ui/KeyboardType.h"
#include "com/appnativa/rare/ui/event/MouseEvent.h"
#include "com/appnativa/rare/ui/listener/iMouseListener.h"
#include "com/appnativa/rare/ui/spinner/DateEditor.h"
#include "com/appnativa/rare/ui/spinner/SpinnerDateModel.h"
#include "com/appnativa/rare/ui/spinner/iSpinnerModel.h"
#include "java/lang/CharSequence.h"
#include "java/text/AttributedCharacterIterator.h"
#include "java/text/CharacterIterator.h"
#include "java/text/DateFormat.h"
#include "java/text/Format.h"
#include "java/util/ArrayList.h"
#include "java/util/Calendar.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@implementation RAREDateEditor

static IOSObjectArray * RAREDateEditor_EMPTY_FIELD_ARRAY_;

+ (IOSObjectArray *)EMPTY_FIELD_ARRAY {
  return RAREDateEditor_EMPTY_FIELD_ARRAY_;
}

- (id)initWithRARESpinnerDateModel:(RARESpinnerDateModel *)model {
  if (self = [super initWithRAREiSpinnerModel:model]) {
    incrementFieldDirty_ = YES;
    [((RARESpinnerDateModel *) nil_chk(model)) setIncrementFiedlCallbackWithRARESpinnerDateModel_iIncrementFiedlCallback:self];
  }
  return self;
}

- (void)focusChangedWithId:(id)view
               withBoolean:(BOOL)hasFocus
                    withId:(id)otherView
               withBoolean:(BOOL)temporary {
  [super focusChangedWithId:view withBoolean:hasFocus withId:otherView withBoolean:temporary];
  if (hasFocus) {
    [self selectField];
  }
}

- (int)getIncrementFieldWithRARESpinnerDateModel:(RARESpinnerDateModel *)model {
  int oldcf = [((RARESpinnerDateModel *) nil_chk(model)) getIncrementField];
  int cf = -1;
  if (incrementFieldDirty_) {
    cf = [self getCalendarField];
  }
  return (cf == -1) ? oldcf : cf;
}

- (void)mouseEnteredWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (appMouseHandler_ != nil) {
    [appMouseHandler_ mouseEnteredWithRAREMouseEvent:e];
  }
}

- (void)mouseExitedWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (appMouseHandler_ != nil) {
    [appMouseHandler_ mouseExitedWithRAREMouseEvent:e];
  }
}

- (void)mousePressedWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (appMouseHandler_ != nil) {
    [appMouseHandler_ mousePressedWithRAREMouseEvent:e];
  }
}

- (void)mouseReleasedWithRAREMouseEvent:(RAREMouseEvent *)e {
  incrementFieldDirty_ = YES;
  if (appMouseHandler_ != nil) {
    [appMouseHandler_ mouseReleasedWithRAREMouseEvent:e];
  }
}

- (void)pressCanceledWithRAREMouseEvent:(RAREMouseEvent *)e {
  [self mouseReleasedWithRAREMouseEvent:e];
}

- (void)selectField {
  int cf = [((RARESpinnerDateModel *) check_class_cast(spinnerModel_, [RARESpinnerDateModel class])) getIncrementField];
  JavaTextDateFormat_Field *field = [JavaTextDateFormat_Field ofCalendarFieldWithInt:cf];
  if (field == [JavaTextDateFormat_Field HOUR0]) {
    field = [JavaTextDateFormat_Field HOUR1];
  }
  if (field != nil) {
    [self selectWithJavaTextDateFormat_Field:field];
    [((RARESpinnerDateModel *) check_class_cast(spinnerModel_, [RARESpinnerDateModel class])) setIncrementFieldWithInt:cf];
  }
}

- (void)setValueWithId:(id)value {
  NSString *v = [((id<RAREiSpinnerModel>) nil_chk(spinnerModel_)) toStringWithId:value];
  [((RAREView *) nil_chk(editorView_)) setTextWithJavaLangCharSequence:v];
  iterator_ = [((JavaTextDateFormat *) nil_chk([((RARESpinnerDateModel *) check_class_cast(spinnerModel_, [RARESpinnerDateModel class])) getFormat])) formatToCharacterIteratorWithId:value];
  JavaTextDateFormat_Field *field = [JavaTextDateFormat_Field ofCalendarFieldWithInt:[((RARESpinnerDateModel *) check_class_cast(spinnerModel_, [RARESpinnerDateModel class])) getIncrementField]];
  if (field != nil) {
    [self selectWithJavaTextDateFormat_Field:field];
  }
}

- (BOOL)wantsLongPress {
  if (appMouseHandler_ != nil) {
    return [appMouseHandler_ wantsLongPress];
  }
  return NO;
}

- (void)customizeEditor {
  [super customizeEditor];
  [((RAREView *) nil_chk(editorView_)) setMouseListenerWithRAREiMouseListener:self];
  RARETextFieldView *v = (RARETextFieldView *) check_class_cast(editorView_, [RARETextFieldView class]);
  [v setKeyboardTypeWithRAREKeyboardTypeEnum:[RAREKeyboardTypeEnum NUMBER_PUNCTUATION_TYPE]];
  [v setShowMenuWithBoolean:NO];
}

- (int)getCalendarField {
  int cf = -1;
  int n = [((RARETextFieldView *) check_class_cast(editorView_, [RARETextFieldView class])) getSelectionStart];
  while ((n > -1) && (cf == -1)) {
    cf = [self getCalendarFieldWithInt:n--];
  }
  return cf;
}

- (int)getCalendarFieldWithInt:(int)index {
  IOSObjectArray *fields = [self getFieldsWithInt:index];
  for (int counter = 0; counter < (int) [((IOSObjectArray *) nil_chk(fields)) count]; counter++) {
    if ([IOSObjectArray_Get(fields, counter) isKindOfClass:[JavaTextDateFormat_Field class]]) {
      int calendarField;
      if (IOSObjectArray_Get(fields, counter) == [JavaTextDateFormat_Field HOUR1]) {
        calendarField = JavaUtilCalendar_HOUR;
      }
      else {
        calendarField = [((JavaTextDateFormat_Field *) check_class_cast(IOSObjectArray_Get(fields, counter), [JavaTextDateFormat_Field class])) getCalendarField];
      }
      if (calendarField != -1) {
        return calendarField;
      }
    }
  }
  return -1;
}

- (BOOL)selectWithJavaTextDateFormat_Field:(JavaTextDateFormat_Field *)field {
  if (iterator_ != nil) {
    [iterator_ first];
    int max = [((id<JavaLangCharSequence>) nil_chk([((RAREView *) nil_chk(editorView_)) getText])) sequenceLength];
    RARETextFieldView *v = (RARETextFieldView *) check_class_cast(editorView_, [RARETextFieldView class]);
    do {
      id<JavaUtilMap> attrs = [iterator_ getAttributes];
      if ((attrs != nil) && [attrs containsKeyWithId:field]) {
        int start = [iterator_ getRunStartWithJavaTextAttributedCharacterIterator_Attribute:field];
        int end = [iterator_ getRunLimitWithJavaTextAttributedCharacterIterator_Attribute:field];
        if ((start != -1) && (end != -1) && (start <= max) && (end <= max)) {
          [v setSelectionWithInt:start withInt:end];
        }
        return YES;
      }
    }
    while ([iterator_ next] != JavaTextCharacterIterator_DONE);
  }
  return NO;
}

- (IOSObjectArray *)getFieldsWithInt:(int)index {
  if (iterator_ != nil) {
    id<JavaUtilMap> attrs = nil;
    if ((index >= 0) && (index <= [iterator_ getEndIndex])) {
      [iterator_ setIndexWithInt:index];
      attrs = [iterator_ getAttributes];
    }
    if ((attrs != nil) && ([attrs size] > 0)) {
      JavaUtilArrayList *al = [[JavaUtilArrayList alloc] init];
      [al addAllWithJavaUtilCollection:[attrs keySet]];
      return (IOSObjectArray *) check_class_cast([al toArrayWithNSObjectArray:RAREDateEditor_EMPTY_FIELD_ARRAY_], [IOSObjectArray class]);
    }
  }
  return RAREDateEditor_EMPTY_FIELD_ARRAY_;
}

+ (void)initialize {
  if (self == [RAREDateEditor class]) {
    RAREDateEditor_EMPTY_FIELD_ARRAY_ = [IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[JavaTextFormat_Field class]]];
  }
}

- (void)copyAllFieldsTo:(RAREDateEditor *)other {
  [super copyAllFieldsTo:other];
  other->incrementFieldDirty_ = incrementFieldDirty_;
  other->iterator_ = iterator_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "wantsLongPress", NULL, "Z", 0x1, NULL },
    { "customizeEditor", NULL, "V", 0x4, NULL },
    { "getCalendarField", NULL, "I", 0x4, NULL },
    { "getCalendarFieldWithInt:", NULL, "I", 0x4, NULL },
    { "selectWithJavaTextDateFormat_Field:", NULL, "Z", 0x4, NULL },
    { "getFieldsWithInt:", NULL, "LIOSObjectArray", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "EMPTY_FIELD_ARRAY_", NULL, 0x1a, "LIOSObjectArray" },
    { "iterator_", NULL, 0x4, "LJavaTextAttributedCharacterIterator" },
  };
  static J2ObjcClassInfo _RAREDateEditor = { "DateEditor", "com.appnativa.rare.ui.spinner", NULL, 0x1, 6, methods, 2, fields, 0, NULL};
  return &_RAREDateEditor;
}

@end
