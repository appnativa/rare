//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple-coreplot/com/appnativa/rare/ui/chart/coreplot/ChartView.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSDoubleArray.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIPoint.h"
#include "com/appnativa/rare/ui/chart/ChartAxis.h"
#include "com/appnativa/rare/ui/chart/ChartDataItem.h"
#include "com/appnativa/rare/ui/chart/ChartDefinition.h"
#include "com/appnativa/rare/ui/chart/aChartHandler.h"
#include "com/appnativa/rare/ui/chart/coreplot/ChartHandler.h"
#include "com/appnativa/rare/ui/chart/coreplot/ChartPlot.h"
#include "com/appnativa/rare/ui/chart/coreplot/ChartView.h"
#import "RARECPTHostView.h"
#import "AppleHelper.h"
 #import "RARECPTLegendView.h"

@implementation RAREChartView

- (id)initWithRAREChartHandler:(RAREChartHandler *)ch {
  return [super initWithId:[RAREChartView createProxyWithRAREChartHandler:ch]];
}

- (void)addPlotWithRAREChartPlot:(RAREChartPlot *)plot {
  RARECPTHostView* hv=(RARECPTHostView*)proxy_;
  [hv addPlot: (CPTPlot*)plot->proxy_];
}

- (void)rowAndColumnAtWithFloat:(float)x
                      withFloat:(float)y
                withRAREUIPoint:(RAREUIPoint *)outPoint {
  RARECPTHostView* hv=(RARECPTHostView*)proxy_;
  CGPoint p=[hv rowAndColumnAtX: x andY: y];
  outPoint->x_=p.x;
  outPoint->y_=p.y;
}

- (RAREChartPlot *)createPlotWithRAREaChartHandler_SeriesData:(RAREaChartHandler_SeriesData *)data
                                                  withBoolean:(BOOL)category {
  RARECPTHostView* hv=(RARECPTHostView*)proxy_;
  RAREChartDefinition* cd=hv->chartDefinition_;
  switch([data->chartType_ ordinal]) {
    case RAREChartDefinition_ChartType_LINE:
    return [hv createLineChartWithData: data isCategory: category isSpline: NO isArea: NO];
    case RAREChartDefinition_ChartType_SPLINE:
    return [hv createLineChartWithData: data isCategory: category isSpline: YES isArea: NO];
    case RAREChartDefinition_ChartType_AREA:
    return [hv createLineChartWithData: data isCategory: category isSpline: NO isArea: YES];
    case RAREChartDefinition_ChartType_SPLINE_AREA:
    return [hv createLineChartWithData: data isCategory: category isSpline: YES isArea: YES];
    case RAREChartDefinition_ChartType_STACKED_BAR:
    return [hv createBarChartWithData: data isCategory: category isHorizontal:![cd isVertical] isStacked: YES is3D:[cd isDraw3D]];
    case RAREChartDefinition_ChartType_BAR:
    return [hv createBarChartWithData: data isCategory: category isHorizontal:![cd isVertical] isStacked: NO is3D:[cd isDraw3D]];
    case RAREChartDefinition_ChartType_RANGE_BAR:
    return[ hv createRangeChartWithData: data isCategory: category isArea:NO is3D:[cd isDraw3D]];
    case RAREChartDefinition_ChartType_RANGE_AREA:
    return[ hv createRangeChartWithData: data isCategory: category isArea:YES is3D:[cd isDraw3D]];
    case RAREChartDefinition_ChartType_PIE:
    return [hv createPieChartWithData: data is3D: [cd isDraw3D]];
    default:
    return nil;
  }
}

- (void)addMarkerWithRAREChartDataItem:(RAREChartDataItem *)item
                       withRAREUIColor:(RAREUIColor *)bg
                       withRAREUIColor:(RAREUIColor *)fg
                           withBoolean:(BOOL)rangeMarker {
  RARECPTHostView* hv=(RARECPTHostView*)proxy_;
  [hv addMarker: item defaultBackground:  bg defaultForeground: fg range: rangeMarker];
}

- (void)reloadAllPlots {
  [((RARECPTHostView*)proxy_) reloadAllPlots];
}

- (void)reloadSeriesWithInt:(int)index {
  [((RARECPTHostView*)proxy_) reloadSeries: index];
}

- (void)resetWithRAREChartDefinition:(RAREChartDefinition *)cd
                         withBoolean:(BOOL)createNewGraph {
  RARECPTHostView* hv=(RARECPTHostView*)proxy_;
  [hv  reset: cd andCreateNewGraph: createNewGraph];
}

- (void)updateAxisWithBoolean:(BOOL)rangeAxis
                  withBoolean:(BOOL)label
                  withBoolean:(BOOL)angle {
  [((RARECPTHostView*)proxy_) updateAxis: rangeAxis label: label angle: angle];
}

- (void)setAxisRangeWithRAREChartAxis:(RAREChartAxis *)ai
                           withDouble:(double)min
                           withDouble:(double)max
                           withDouble:(double)inc {
  RARECPTHostView* hv=(RARECPTHostView*)proxy_;
  [hv setAxisRange:ai loValue:min hiValue:max increment: inc expand: YES];
}

- (void)setAxisRangesWithDouble:(double)xMin
                     withDouble:(double)xMax
                     withDouble:(double)xInc
                     withDouble:(double)yMin
                     withDouble:(double)yMax
                     withDouble:(double)yInc
withRAREChartHandler_LabelsManager:(RAREChartHandler_LabelsManager *)domainManager
withRAREChartHandler_LabelsManager:(RAREChartHandler_LabelsManager *)rangeManager {
  RARECPTHostView* hv=(RARECPTHostView*)proxy_;
  [hv setAxisRange:[hv->chartDefinition_ getDomainAxis] loValue:xMin hiValue:xMax increment: xInc expand: NO];
  [hv setAxisRange:[hv->chartDefinition_ getRangeAxis] loValue:yMin hiValue:yMax increment: yInc expand: NO];
  [hv configureGraphLabels:domainManager rangeLabels:rangeManager];
}

- (void)updateAxisIncrementsWithDouble:(double)xInc
                            withDouble:(double)yInc {
  RARECPTHostView* hv=(RARECPTHostView*)proxy_;
  [hv updateAxisXincrement: xInc yIncrement: yInc];
}

- (RAREView *)createLegendView {
  return [[RAREView alloc] initWithId:[self createLegendViewProxy]];
}

- (id)createLegendViewProxy {
  RARECPTHostView* hv=(RARECPTHostView*)proxy_;
  return [[RARECPTLegendView alloc] initWithHostView: hv];
}

+ (id)createProxyWithRAREChartHandler:(RAREChartHandler *)ch {
  return [[RARECPTHostView alloc] initWithChartHandler: ch];
}

- (void)setAxisTickWithRAREChartAxis:(RAREChartAxis *)rangeAxis
                          withDouble:(double)increment {
}

- (void)setShowPlotValuesWithBoolean:(BOOL)show {
  RARECPTHostView* hv=(RARECPTHostView*)proxy_;
  [hv setShowPlotValues: show];
}

- (RAREUIDimension *)getPlotAreaSize {
  return [((RARECPTHostView*)proxy_) getPlotAreaSize];
}

- (void)removeMarkersWithBoolean:(BOOL)range {
  RARECPTHostView* hv=(RARECPTHostView*)proxy_;
  [hv removeMarkers: range];
}

- (void)copyAllFieldsTo:(RAREChartView *)other {
  [super copyAllFieldsTo:other];
  other->xAxisValues_ = xAxisValues_;
  other->yAxisValues_ = yAxisValues_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addPlotWithRAREChartPlot:", NULL, "V", 0x101, NULL },
    { "rowAndColumnAtWithFloat:withFloat:withRAREUIPoint:", NULL, "V", 0x101, NULL },
    { "createPlotWithRAREaChartHandler_SeriesData:withBoolean:", NULL, "LRAREChartPlot", 0x101, NULL },
    { "addMarkerWithRAREChartDataItem:withRAREUIColor:withRAREUIColor:withBoolean:", NULL, "V", 0x101, NULL },
    { "reloadAllPlots", NULL, "V", 0x101, NULL },
    { "reloadSeriesWithInt:", NULL, "V", 0x101, NULL },
    { "resetWithRAREChartDefinition:withBoolean:", NULL, "V", 0x101, NULL },
    { "updateAxisWithBoolean:withBoolean:withBoolean:", NULL, "V", 0x101, NULL },
    { "setAxisRangeWithRAREChartAxis:withDouble:withDouble:withDouble:", NULL, "V", 0x101, NULL },
    { "setAxisRangesWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withRAREChartHandler_LabelsManager:withRAREChartHandler_LabelsManager:", NULL, "V", 0x101, NULL },
    { "updateAxisIncrementsWithDouble:withDouble:", NULL, "V", 0x101, NULL },
    { "createLegendView", NULL, "LRAREView", 0x1, NULL },
    { "createLegendViewProxy", NULL, "LNSObject", 0x100, NULL },
    { "createProxyWithRAREChartHandler:", NULL, "LNSObject", 0x10a, NULL },
    { "setShowPlotValuesWithBoolean:", NULL, "V", 0x101, NULL },
    { "getPlotAreaSize", NULL, "LRAREUIDimension", 0x101, NULL },
    { "removeMarkersWithBoolean:", NULL, "V", 0x101, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "xAxisValues_", NULL, 0x0, "LIOSDoubleArray" },
    { "yAxisValues_", NULL, 0x0, "LIOSDoubleArray" },
  };
  static J2ObjcClassInfo _RAREChartView = { "ChartView", "com.appnativa.rare.ui.chart.coreplot", NULL, 0x1, 17, methods, 2, fields, 0, NULL};
  return &_RAREChartView;
}

@end
