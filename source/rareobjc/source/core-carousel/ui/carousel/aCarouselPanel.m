//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-carousel/com/appnativa/rare/ui/carousel/aCarouselPanel.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/ui/Component.h"
#include "com/appnativa/rare/ui/Container.h"
#include "com/appnativa/rare/ui/GraphicsComposite.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/XPContainer.h"
#include "com/appnativa/rare/ui/aComponent.h"
#include "com/appnativa/rare/ui/carousel/aCarouselPanel.h"
#include "com/appnativa/rare/ui/carousel/iImageCreator.h"
#include "com/appnativa/rare/ui/event/ChangeEvent.h"
#include "com/appnativa/rare/ui/event/EventListenerList.h"
#include "com/appnativa/rare/ui/event/iActionListener.h"
#include "com/appnativa/rare/ui/event/iChangeListener.h"
#include "com/appnativa/rare/ui/iAdjustable.h"
#include "com/appnativa/rare/ui/iComposite.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/painter/PaintBucket.h"
#include "com/appnativa/rare/ui/painter/iImagePainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/ui/renderer/aListItemRenderer.h"
#include "com/appnativa/rare/widget/aPlatformWidget.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "com/appnativa/util/SNumber.h"
#include "java/lang/Boolean.h"
#include "java/lang/CharSequence.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/Short.h"
#include "java/util/Collections.h"
#include "java/util/EventObject.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@implementation RAREaCarouselPanel

static NSString * RAREaCarouselPanel_RARE_CAROUSEL_ITEM_ = @"__RARE_CAROUSEL_ITEM__";
static NSString * RAREaCarouselPanel_RARE_CAROUSEL_SHOWTITLE_PROPERTY_ = @"__RARE_CAROUSEL_SHOWTITLE_PROPERTY__";

+ (NSString *)RARE_CAROUSEL_ITEM {
  return RAREaCarouselPanel_RARE_CAROUSEL_ITEM_;
}

+ (NSString *)RARE_CAROUSEL_SHOWTITLE_PROPERTY {
  return RAREaCarouselPanel_RARE_CAROUSEL_SHOWTITLE_PROPERTY_;
}

- (id)initWithRAREaCarouselPanel_DataTypeEnum:(RAREaCarouselPanel_DataTypeEnum *)type {
  if (self = [super init]) {
    blockIncrement_ = 1;
    imageGap_ = 0;
    maxSideItems_ = JavaLangShort_MAX_VALUE;
    perspectiveFraction_ = 0.3f;
    preserveAspectRatio_ = YES;
    primaryFraction_ = 1.0f;
    reflectionFraction_ = 0;
    reflectionOpacity_ = .5f;
    selectedIndex_ = -1;
    sideFraction_ = .5f;
    scalingType_ = [RAREiImagePainter_ScalingTypeEnum BILINEAR];
    prefImageSize_ = [[RAREUIDimension alloc] initWithFloat:[RAREScreenUtils platformPixelsWithFloat:100] withFloat:[RAREScreenUtils platformPixelsWithFloat:100]];
    minImageSize_ = [[RAREUIDimension alloc] initWithFloat:[RAREScreenUtils platformPixelsWithFloat:32] withFloat:[RAREScreenUtils platformPixelsWithFloat:32]];
    maxImageSize_ = [[RAREUIDimension alloc] initWithFloat:[RAREScreenUtils platformPixelsWithFloat:600] withFloat:[RAREScreenUtils platformPixelsWithFloat:600]];
    flowInsets_ = [[RAREUIInsets alloc] initWithInt:0 withInt:0 withInt:0 withInt:0];
    componentCache_ = [[RAREUTIdentityArrayList alloc] init];
    animate_ = YES;
    dataModel_ = [JavaUtilCollections EMPTY_LIST];
    changeEventsEnabled_ = YES;
    fadeAlpha_ = 0.3f;
    dataType_ = type;
  }
  return self;
}

- (void)addActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
  [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiActionListener)] withId:l];
}

- (void)addChangeListenerWithRAREiChangeListener:(id<RAREiChangeListener>)l {
  [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiChangeListener)] withId:l];
}

- (void)animateSelectWithInt:(int)index {
  [self updateContentWithInt:index];
}

- (void)dispose {
  [super dispose];
  if (imageCreator_ != nil) {
    [imageCreator_ disposeWithRAREaCarouselPanel:self];
  }
  if (animatorOptions_ != nil) {
    [animatorOptions_ clear];
  }
  if (componentCache_ != nil) {
    for (id<RAREiPlatformComponent> __strong c in componentCache_) {
      [((id<RAREiPlatformComponent>) nil_chk(c)) dispose];
    }
    [componentCache_ clear];
  }
  componentCache_ = nil;
  secondaryLeftComponent_ = nil;
  secondaryRightComponent_ = nil;
  centerComponent_ = nil;
  scalingType_ = nil;
  changeEvent_ = nil;
  cellPainter_ = nil;
  adjustable_ = nil;
  animatorOptions_ = nil;
  imageCreator_ = nil;
  dataModel_ = nil;
  itemRenderer_ = nil;
}

- (void)imageLoadedWithRAREUIImage:(RAREUIImage *)image {
  [self revalidate];
  [self repaint];
}

- (void)refreshItems {
  oldWidth_ = -1;
  int sel = selectedIndex_;
  selectedIndex_ = -1;
  [self configureAdjustable];
  [self revalidate];
  [self repaint];
  if (sel != -1) {
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREaCarouselPanel_$1 alloc] initWithRAREaCarouselPanel:self]];
  }
}

- (void)removeActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
  [((RAREEventListenerList *) nil_chk(listenerList_)) removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiActionListener)] withId:l];
}

- (void)removeChangeListenerWithRAREiChangeListener:(id<RAREiChangeListener>)l {
  [((RAREEventListenerList *) nil_chk(listenerList_)) removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiChangeListener)] withId:l];
}

- (void)scrollHome {
  if ((adjustable_ != nil) && ([adjustable_ getValue] != [adjustable_ getMinimum])) {
    [adjustable_ setValueWithDouble:[adjustable_ getMinimum]];
  }
  else {
    [self updateContentWithInt:0];
  }
}

- (void)setChangeEventsEnabledWithBoolean:(BOOL)enabled {
  changeEventsEnabled_ = enabled;
}

- (BOOL)isScrolling {
  return [((id<RAREiAdjustable>) nil_chk(adjustable_)) isAdjusting];
}

- (BOOL)scrollLeft {
  if (selectedIndex_ >= [((id<JavaUtilList>) nil_chk(dataModel_)) size]) {
    return NO;
  }
  if (adjustable_ != nil) {
    double n = [adjustable_ getValue] + [adjustable_ getBlockIncrement];
    [adjustable_ setValueWithDouble:[JavaLangMath minWithDouble:n withDouble:[adjustable_ getMaximum]]];
  }
  else {
    [self updateContentWithInt:selectedIndex_ + 1];
  }
  return YES;
}

- (BOOL)scrollRight {
  if (selectedIndex_ == 0) {
    return NO;
  }
  if (adjustable_ != nil) {
    double n = [adjustable_ getValue] - [adjustable_ getBlockIncrement];
    [adjustable_ setValueWithDouble:[JavaLangMath maxWithDouble:n withDouble:0]];
  }
  else {
    [self updateContentWithInt:selectedIndex_ - 1];
  }
  return YES;
}

- (void)scrollToWithInt:(int)index {
  if ((adjustable_ != nil) && ([adjustable_ getValue] != index)) {
    [adjustable_ setValueWithDouble:index];
  }
  else {
    [self updateContentWithInt:index];
  }
}

- (void)scrollToEnd {
  if ((adjustable_ != nil) && ([adjustable_ getValue] != [adjustable_ getMaximum])) {
    [adjustable_ setValueWithDouble:[adjustable_ getMaximum]];
  }
  else {
    [self updateContentWithInt:[((id<JavaUtilList>) nil_chk(dataModel_)) size] - 1];
  }
}

- (void)stateChangedWithJavaUtilEventObject:(JavaUtilEventObject *)e {
  if ((adjustable_ != nil) && !ignoreAdjustment_) {
    double value = [adjustable_ getValue];
    int index = (int) [JavaLangMath roundWithDouble:value / blockIncrement_];
    if (![adjustable_ isAdjusting]) {
      [self animateSelectWithInt:index];
    }
    else {
      [self updateContentWithInt:index];
    }
  }
}

- (void)stopAnimation {
}

- (void)updateContentWithInt:(int)selectedIndex {
  int len = [self getComponentCount];
  id<JavaUtilList> list = dataModel_;
  int size = [((id<JavaUtilList>) nil_chk(list)) size];
  if (size == 0) {
    selectedIndex = -1;
    return;
  }
  selectedIndex = [JavaLangMath maxWithInt:0 withInt:selectedIndex];
  BOOL fire = self->selectedIndex_ != selectedIndex;
  self->selectedIndex_ = selectedIndex;
  int ci = (int) [JavaLangMath floorWithDouble:len / 2];
  int j = selectedIndex;
  int i = ci;
  id<RAREiPlatformComponent> c;
  while (i > 0) {
    i--;
    c = [self getComponentAtWithInt:i];
    j--;
    if (j > -1) {
      [((id<RAREiPlatformComponent>) nil_chk(c)) setVisibleWithBoolean:YES];
      [self updateComponentContentWithRAREiPlatformComponent:c withId:[list getWithInt:j] withBoolean:renderSecondaryTitles_ && (i == ci - 1)];
      [c putClientPropertyWithNSString:RAREaCarouselPanel_RARE_CAROUSEL_ITEM_ withId:[JavaLangInteger valueOfWithInt:j]];
      [self setCompositeWithRAREiPlatformComponent:c withRAREGraphicsComposite:nil];
      [c repaint];
    }
    else {
      [self updateComponentContentWithRAREiPlatformComponent:c withId:nil withBoolean:renderSecondaryTitles_ && (i == ci - 1)];
      [((id<RAREiPlatformComponent>) nil_chk(c)) putClientPropertyWithNSString:RAREaCarouselPanel_RARE_CAROUSEL_ITEM_ withId:nil];
      [c setVisibleWithBoolean:NO];
    }
  }
  i = ci;
  j = selectedIndex - 1;
  BOOL showTitle;
  while (i < len) {
    c = [self getComponentAtWithInt:i];
    if (renderTitles_ && (i == ci)) {
      showTitle = YES;
    }
    else if (renderSecondaryTitles_ && (i == ci + 1)) {
      showTitle = YES;
    }
    else {
      showTitle = YES;
    }
    j++;
    if (j < size) {
      [((id<RAREiPlatformComponent>) nil_chk(c)) setVisibleWithBoolean:YES];
      [self updateComponentContentWithRAREiPlatformComponent:c withId:[list getWithInt:j] withBoolean:showTitle];
      [c putClientPropertyWithNSString:RAREaCarouselPanel_RARE_CAROUSEL_ITEM_ withId:[JavaLangInteger valueOfWithInt:j]];
      [self setCompositeWithRAREiPlatformComponent:c withRAREGraphicsComposite:nil];
      [c repaint];
    }
    else {
      [((id<RAREiPlatformComponent>) nil_chk(c)) setVisibleWithBoolean:NO];
      [self updateComponentContentWithRAREiPlatformComponent:c withId:nil withBoolean:showTitle];
      [c putClientPropertyWithNSString:RAREaCarouselPanel_RARE_CAROUSEL_ITEM_ withId:nil];
    }
    i++;
  }
  if (smallComposite_ == nil) {
    [self initAlphaComposites];
  }
  j = -1;
  float startx = ((RAREUIInsets *) nil_chk(flowInsets_))->left_ - [self getX];
  float endx = startx + fadeSize_;
  for (i = 0; i < ci - 1; i++) {
    c = [self getComponentAtWithInt:i];
    if (![((id<RAREiPlatformComponent>) nil_chk(c)) isVisible]) {
      continue;
    }
    if ([c getX] + [c getWidth] > startx) {
      j = i;
      break;
    }
  }
  if (j != -1) {
    c = [self getComponentAtWithInt:j];
    JavaLangInteger *index = (JavaLangInteger *) check_class_cast([((id<RAREiPlatformComponent>) nil_chk(c)) getClientPropertyWithNSString:RAREaCarouselPanel_RARE_CAROUSEL_ITEM_], [JavaLangInteger class]);
    if (index != nil) {
      if ([index intValue] == 0) {
        if ([c getX] < startx) {
          [self setCompositeWithRAREiPlatformComponent:c withRAREGraphicsComposite:smallComposite_];
        }
      }
      else {
        if (j < (ci - 2)) {
          [self setCompositeWithRAREiPlatformComponent:c withRAREGraphicsComposite:smallerComposite_];
          c = [self getComponentAtWithInt:j + 1];
          [self setCompositeWithRAREiPlatformComponent:c withRAREGraphicsComposite:smallComposite_];
        }
        else {
          [self setCompositeWithRAREiPlatformComponent:c withRAREGraphicsComposite:smallComposite_];
        }
      }
    }
  }
  endx = [self getWidth] - flowInsets_->right_ + [self getX];
  startx = endx - fadeSize_;
  j = -1;
  int endIndex = [self getItemCount] - 1;
  for (i = len - 1; i > ci + 1; i--) {
    c = [self getComponentAtWithInt:i];
    if (![((id<RAREiPlatformComponent>) nil_chk(c)) isVisible]) {
      continue;
    }
    if ([c getX] < endx) {
      j = i;
      break;
    }
  }
  if (j != -1) {
    c = [self getComponentAtWithInt:j];
    JavaLangInteger *index = (JavaLangInteger *) check_class_cast([((id<RAREiPlatformComponent>) nil_chk(c)) getClientPropertyWithNSString:RAREaCarouselPanel_RARE_CAROUSEL_ITEM_], [JavaLangInteger class]);
    if (index != nil) {
      if ([index intValue] == endIndex) {
        if ([c getX] + [c getWidth] > endx) {
          [self setCompositeWithRAREiPlatformComponent:c withRAREGraphicsComposite:smallComposite_];
        }
      }
      else {
        if (j > (ci + 2)) {
          [self setCompositeWithRAREiPlatformComponent:c withRAREGraphicsComposite:smallerComposite_];
          c = [self getComponentAtWithInt:j - 1];
          [self setCompositeWithRAREiPlatformComponent:c withRAREGraphicsComposite:smallComposite_];
        }
        else {
          [self setCompositeWithRAREiPlatformComponent:c withRAREGraphicsComposite:smallComposite_];
        }
      }
    }
  }
  if (fire) {
    [self fireChangeEvent];
    [self conditionallyUpdateAdjustable];
  }
}

- (void)refreshVisibleContent {
  int len = [self getComponentCount];
  id<JavaUtilList> list = dataModel_;
  for (int i = 0; i < len; i++) {
    id<RAREiPlatformComponent> c = [self getComponentAtWithInt:i];
    JavaLangInteger *index = (JavaLangInteger *) check_class_cast([((id<RAREiPlatformComponent>) nil_chk(c)) getClientPropertyWithNSString:RAREaCarouselPanel_RARE_CAROUSEL_ITEM_], [JavaLangInteger class]);
    JavaLangBoolean *showTitle = (JavaLangBoolean *) check_class_cast([c getClientPropertyWithNSString:RAREaCarouselPanel_RARE_CAROUSEL_SHOWTITLE_PROPERTY_], [JavaLangBoolean class]);
    if (index != nil) {
      [self updateComponentContentWithRAREiPlatformComponent:c withId:[((id<JavaUtilList>) nil_chk(list)) getWithInt:[index intValue]] withBoolean:(showTitle == nil) ? NO : [showTitle booleanValue]];
    }
  }
}

- (void)setAdjustableWithRAREiAdjustable:(id<RAREiAdjustable>)adjustable {
  if (self->adjustable_ != nil) {
    [self->adjustable_ removeChangeListenerWithRAREiChangeListener:self];
  }
  self->adjustable_ = adjustable;
  if (self->adjustable_ != nil) {
    [self->adjustable_ addChangeListenerWithRAREiChangeListener:self];
  }
  [self configureAdjustable];
  [self repaint];
}

- (void)setAnimateSelectionWithBoolean:(BOOL)animate {
  self->animate_ = animate;
}

- (void)setAnimatorOptionsWithJavaUtilMap:(id<JavaUtilMap>)animatorOptions {
  self->animatorOptions_ = animatorOptions;
}

- (void)setCellPaintWithRAREPaintBucket:(RAREPaintBucket *)pb {
  cellPainter_ = (pb == nil) ? nil : [pb getComponentPainter];
  [self installPaints];
}

- (void)setFlatListWithBoolean:(BOOL)flatList {
  self->flatList_ = flatList;
}

- (void)setFlowInsetsWithRAREUIInsets:(RAREUIInsets *)insets {
  if (insets == nil) {
    self->flowInsets_ = [[RAREUIInsets alloc] initWithInt:10 withInt:0 withInt:0 withInt:0];
  }
  else {
    self->flowInsets_ = (RAREUIInsets *) check_class_cast([insets clone], [RAREUIInsets class]);
  }
}

- (void)setImageGapWithInt:(int)imageGap {
  self->imageGap_ = imageGap;
}

- (void)setImageGetterWithRAREiImageCreator:(id<RAREiImageCreator>)imageGetter {
  self->imageCreator_ = imageGetter;
}

- (void)setItemRendererWithRAREaListItemRenderer:(RAREaListItemRenderer *)renderer {
  self->itemRenderer_ = renderer;
}

- (void)setDataModelWithJavaUtilList:(id<JavaUtilList>)model {
  dataModel_ = model;
  [self configureAdjustable];
  [self revalidate];
  [self repaint];
}

- (void)setMaxImageSizeWithInt:(int)width
                       withInt:(int)height {
  [((RAREUIDimension *) nil_chk(maxImageSize_)) setSizeWithInt:width withInt:height];
}

- (void)setMaxSideItemsWithInt:(int)max {
  max = [JavaLangMath maxWithInt:max withInt:1];
  self->maxSideItems_ = max;
}

- (void)setMinImageSizeWithInt:(int)width
                       withInt:(int)height {
  [((RAREUIDimension *) nil_chk(minImageSize_)) setSizeWithInt:width withInt:height];
}

- (void)setPerspectiveFractionWithFloat:(float)f {
  f = [JavaLangMath minWithFloat:f withFloat:0.9f];
  f = [JavaLangMath maxWithFloat:f withFloat:0.0f];
  perspectiveFraction_ = f;
}

- (void)setPreferedImageSizeWithInt:(int)width
                            withInt:(int)height {
  [((RAREUIDimension *) nil_chk(prefImageSize_)) setSizeWithInt:width withInt:height];
  prefSizeSet_ = YES;
  if ((((RAREUIDimension *) nil_chk(minImageSize_))->width_ > width) || (minImageSize_->height_ > height)) {
    [((RAREUIDimension *) nil_chk(maxImageSize_)) setSizeWithInt:width withInt:height];
  }
}

- (void)setPreserveAspectRatioWithBoolean:(BOOL)preserveAspectRatio {
  self->preserveAspectRatio_ = preserveAspectRatio;
}

- (void)setReflectionFractionWithFloat:(float)f {
  f = [JavaLangMath minWithFloat:f withFloat:0.5f];
  f = [JavaLangMath maxWithFloat:f withFloat:0];
  self->reflectionFraction_ = f;
}

- (void)setReflectionOpacityWithFloat:(float)opacity {
  opacity = [JavaLangMath minWithFloat:opacity withFloat:1.0f];
  opacity = [JavaLangMath maxWithFloat:opacity withFloat:0.0f];
  self->reflectionOpacity_ = opacity;
}

- (void)setRenderSecondaryTitleWithBoolean:(BOOL)render {
  self->renderSecondaryTitles_ = render;
}

- (void)setRenderTitlesWithBoolean:(BOOL)render {
  self->renderTitles_ = render;
  if (render) {
    if (titleHeight_ == 0) {
      titleHeight_ = [RAREPlatformHelper getFontHeightWithRAREUIFont:[self getFont] withBoolean:YES] * 2;
    }
  }
}

- (void)setScalingTypeWithRAREiImagePainter_ScalingTypeEnum:(RAREiImagePainter_ScalingTypeEnum *)scalingType {
  self->scalingType_ = scalingType;
}

- (void)setSelectedCellPaintWithRAREPaintBucket:(RAREPaintBucket *)pb {
  selectionPainter_ = (pb == nil) ? nil : [pb getComponentPainter];
  if (centerComponent_ != nil) {
    [centerComponent_ setComponentPainterWithRAREiPlatformComponentPainter:selectionPainter_];
  }
}

- (void)setSelectedItemWithId:(id)item {
  int n = [((id<JavaUtilList>) nil_chk(dataModel_)) indexOfWithId:item];
  if (n > -1) {
    [self scrollToWithInt:n];
  }
}

- (void)setSelectionFractionWithFloat:(float)f {
  f = [JavaLangMath minWithFloat:f withFloat:1.0f];
  f = [JavaLangMath maxWithFloat:f withFloat:0.2f];
  self->primaryFraction_ = f;
}

- (void)setSideFractionWithFloat:(float)f {
  f = [JavaLangMath minWithFloat:f withFloat:1.0f];
  f = [JavaLangMath maxWithFloat:f withFloat:0.1f];
  self->sideFraction_ = f;
}

- (void)setUseLinkedDataWithBoolean:(BOOL)use {
  useLinkedData_ = use;
}

- (id<JavaUtilMap>)getAnimatorOptions {
  return animatorOptions_;
}

- (RAREUIInsets *)getFlowInsets {
  return (RAREUIInsets *) check_class_cast(((flowInsets_ == nil) ? nil : [flowInsets_ clone]), [RAREUIInsets class]);
}

- (int)getImageGap {
  return imageGap_;
}

- (id<RAREiImageCreator>)getImageGetter {
  return imageCreator_;
}

- (id)getItemAtWithInt:(int)x
               withInt:(int)y {
  id<RAREiPlatformComponent> c = [self getComponentAtWithFloat:x withFloat:y withBoolean:NO];
  if (c == nil) {
    return nil;
  }
  JavaLangInteger *pos = (JavaLangInteger *) check_class_cast([((id<RAREiPlatformComponent>) nil_chk(c)) getClientPropertyWithNSString:RAREaCarouselPanel_RARE_CAROUSEL_ITEM_], [JavaLangInteger class]);
  if (pos == nil) {
    return nil;
  }
  int n = [((JavaLangInteger *) nil_chk(pos)) intValue];
  if ((n < 0) || (n >= [((id<JavaUtilList>) nil_chk(dataModel_)) size])) {
    return nil;
  }
  return [((id<JavaUtilList>) nil_chk(dataModel_)) getWithInt:n];
}

- (int)getItemCount {
  return [((id<JavaUtilList>) nil_chk(dataModel_)) size];
}

- (RAREaListItemRenderer *)getItemRenderer {
  return itemRenderer_;
}

- (int)getMaxSideItems {
  return maxSideItems_;
}

- (float)getPrimaryFraction {
  return primaryFraction_;
}

- (float)getReflectionFraction {
  return reflectionFraction_;
}

- (float)getReflectionOpacity {
  return reflectionOpacity_;
}

- (RAREiImagePainter_ScalingTypeEnum *)getScalingType {
  return scalingType_;
}

- (float)getSecondaryFraction {
  return sideFraction_;
}

- (int)getSelectedIndex {
  return selectedIndex_;
}

- (id)getSelectedItem {
  if (selectedIndex_ == -1) {
    return nil;
  }
  return [((id<JavaUtilList>) nil_chk(dataModel_)) getWithInt:selectedIndex_];
}

- (BOOL)getUseLinkedData {
  return useLinkedData_;
}

- (BOOL)isAnimated {
  return animate_;
}

- (BOOL)isAnimating {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isFlatList {
  return flatList_;
}

- (BOOL)isPerspectiveTransformSupported {
  return NO;
}

- (BOOL)isPreserveAspectRatio {
  return preserveAspectRatio_;
}

- (BOOL)isUseLinkedData {
  return useLinkedData_;
}

- (void)animateMoveWithFloat:(float)dx {
}

- (void)bringToFrontOrClipWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                           withFloat:(float)clipWidth
                                         withBoolean:(BOOL)leftSide {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)callImageCreatorWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                        withRARERenderableDataItem:(RARERenderableDataItem *)item
                                       withBoolean:(BOOL)showTitle {
  id<JavaLangCharSequence> title = [self isUseLinkedData] ? [((RARERenderableDataItem *) nil_chk(item)) toCharSequence] : nil;
  if (!showTitle) {
    title = nil;
  }
  [self updateComponentContentWithRAREiPlatformComponent:c withRAREUIImage:[((id<RAREiImageCreator>) nil_chk(imageCreator_)) createImageWithRAREaCarouselPanel:self withId:item] withJavaLangCharSequence:title];
}

- (void)clearPerspectiveFilterWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)conditionallyUpdateAdjustable {
  if ((adjustable_ != nil) && ![adjustable_ isAdjusting]) {
    @try {
      ignoreAdjustment_ = YES;
      double value = [adjustable_ getValue];
      double nvalue = selectedIndex_ * [adjustable_ getBlockIncrement];
      if (![RAREUTSNumber isEqualWithDouble:value withDouble:nvalue]) {
        [adjustable_ setValueWithDouble:nvalue];
      }
    }
    @finally {
      ignoreAdjustment_ = NO;
    }
  }
}

- (void)configureAdjustable {
  if (adjustable_ != nil) {
    int size = [((id<JavaUtilList>) nil_chk(dataModel_)) size];
    @try {
      ignoreAdjustment_ = YES;
      [adjustable_ setMinimumWithDouble:0];
      [adjustable_ setMaximumWithDouble:size * blockIncrement_];
      [adjustable_ setVisibleAmountWithDouble:1];
      [adjustable_ setBlockIncrementWithDouble:blockIncrement_];
      [adjustable_ setUnitIncrementWithDouble:1];
    }
    @finally {
      ignoreAdjustment_ = NO;
    }
  }
}

- (RAREUIImage *)createImageFromComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiPlatformComponent>)createLayoutComponent {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)fireChangeEvent {
  if (changeEventsEnabled_ && ([((RAREEventListenerList *) nil_chk(listenerList_)) getListenerCount] > 0)) {
    if (changeEvent_ == nil) {
      changeEvent_ = [[RAREChangeEvent alloc] initWithId:self];
    }
    [RAREUtils fireChangeEventWithRAREEventListenerList:listenerList_ withRAREChangeEvent:changeEvent_];
  }
}

- (void)setFadeAlphaWithFloat:(float)alpha {
  fadeAlpha_ = alpha;
}

- (void)initAlphaComposites {
  float small = fadeAlpha_;
  float smaller = fadeAlpha_ / 2;
  smallComposite_ = [[RAREGraphicsComposite alloc] initWithRAREiComposite_CompositeTypeEnum:[RAREiComposite_CompositeTypeEnum SRC_OVER] withFloat:small];
  smallerComposite_ = [[RAREGraphicsComposite alloc] initWithRAREiComposite_CompositeTypeEnum:[RAREiComposite_CompositeTypeEnum SRC_OVER] withFloat:smaller];
}

- (void)initComponents {
  [self setForegroundWithRAREUIColor:[RAREUIColor WHITE]];
  centerComponent_ = [self createLayoutComponent];
  secondaryLeftComponent_ = [self createLayoutComponent];
  secondaryRightComponent_ = [self createLayoutComponent];
  [((id<RAREiPlatformComponent>) nil_chk(centerComponent_)) setVisibleWithBoolean:NO];
  [((id<RAREiPlatformComponent>) nil_chk(secondaryLeftComponent_)) setVisibleWithBoolean:NO];
  [((id<RAREiPlatformComponent>) nil_chk(secondaryRightComponent_)) setVisibleWithBoolean:NO];
}

- (void)installPaints {
  if (centerComponent_ != nil) {
    [centerComponent_ setComponentPainterWithRAREiPlatformComponentPainter:selectionPainter_];
    [((id<RAREiPlatformComponent>) nil_chk(secondaryLeftComponent_)) setComponentPainterWithRAREiPlatformComponentPainter:cellPainter_];
    [((id<RAREiPlatformComponent>) nil_chk(secondaryRightComponent_)) setComponentPainterWithRAREiPlatformComponentPainter:cellPainter_];
  }
}

- (void)layoutWithFloat:(float)x
              withFloat:(float)y
              withFloat:(float)width
              withFloat:(float)height {
  if ((oldWidth_ == width) && (oldHeight_ == height)) {
    return;
  }
  if (centerComponent_ == nil) {
    [self initComponents];
    [self installPaints];
  }
  oldWidth_ = width;
  oldHeight_ = height;
  float h = height - (((RAREUIInsets *) nil_chk(flowInsets_))->top_ + flowInsets_->bottom_ + titleHeight_);
  float w = width - (flowInsets_->left_ + flowInsets_->right_);
  y += flowInsets_->top_;
  x += flowInsets_->left_;
  imageHeight_ = (int) [JavaLangMath ceilWithDouble:[JavaLangMath minWithFloat:h * primaryFraction_ withFloat:((RAREUIDimension *) nil_chk(maxImageSize_))->height_]];
  imageWidth_ = (int) [JavaLangMath ceilWithDouble:[JavaLangMath minWithFloat:h * primaryFraction_ withFloat:maxImageSize_->width_]];
  imageWidth_ = (int) [JavaLangMath maxWithFloat:imageWidth_ withFloat:((RAREUIDimension *) nil_chk(minImageSize_))->width_];
  imageHeight_ = (int) [JavaLangMath maxWithFloat:imageHeight_ withFloat:minImageSize_->height_];
  secondaryWidth_ = [RAREUIScreen snapToSizeWithFloat:imageWidth_ * sideFraction_];
  float odw, sdw;
  BOOL flat = flatList_ || ![self isPerspectiveTransformSupported];
  if (flat) {
    sdw = odw = secondaryWidth_;
  }
  else {
    odw = secondaryWidth_ / 4;
    sdw = odw * 2;
    odw += (odw / 2);
  }
  sdw += imageGap_;
  odw += imageGap_;
  int otherCount = 1;
  float cx = x + ((w - imageWidth_) / 2);
  float cy = y + ((h - imageHeight_) / 2);
  float lo = cx - sdw - odw;
  while (lo > 0) {
    otherCount++;
    lo = lo - odw;
  }
  otherCount = [JavaLangMath minWithInt:otherCount withInt:(int) [JavaLangMath ceilWithDouble:([self getItemCount] - 3) / 2]];
  otherCount = [JavaLangMath maxWithInt:otherCount withInt:1];
  float sh = [RAREUIScreen snapToSizeWithFloat:imageHeight_ * sideFraction_];
  float sy = cy + ((imageHeight_ - sh) / 2);
  otherCount = [JavaLangMath minWithInt:otherCount + 3 withInt:maxSideItems_];
  int len = [self getComponentCount];
  id<RAREiPlatformComponent> c;
  for (int i = len - 1; i > -1; i--) {
    c = [self getComponentAtWithInt:i];
    [self clearComponentContentWithRAREiPlatformComponent:c];
    if ((c != centerComponent_) && (c != secondaryLeftComponent_) && (c != secondaryRightComponent_)) {
      [((RAREUTIdentityArrayList *) nil_chk(componentCache_)) addWithId:c];
    }
    [self removeWithRAREiPlatformComponent:c];
  }
  if ([((id<JavaUtilList>) nil_chk(dataModel_)) isEmpty]) {
    return;
  }
  fadeSize_ = (int) (odw * 2);
  float sx = cx - (otherCount * odw) - sdw;
  for (int i = 0; i < otherCount; i++) {
    c = [self getComponentToAdd];
    [self addWithRAREiPlatformComponent:c];
    if (!flat) {
      [self setPerspectiveFilterWithRAREiPlatformComponent:c withFloat:imageWidth_ withFloat:imageHeight_ withBoolean:YES withInt:otherCount - i];
    }
    [((id<RAREiPlatformComponent>) nil_chk(c)) setBoundsWithFloat:sx withFloat:sy withFloat:secondaryWidth_ withFloat:sh];
    [self bringToFrontOrClipWithRAREiPlatformComponent:c withFloat:odw withBoolean:YES];
    sx += odw;
  }
  [self addWithRAREiPlatformComponent:secondaryLeftComponent_];
  [self addWithRAREiPlatformComponent:centerComponent_];
  [self addWithRAREiPlatformComponent:secondaryRightComponent_];
  [((id<RAREiPlatformComponent>) nil_chk(secondaryLeftComponent_)) setBoundsWithFloat:cx - sdw withFloat:sy withFloat:secondaryWidth_ withFloat:sh];
  [((id<RAREiPlatformComponent>) nil_chk(centerComponent_)) setBoundsWithFloat:cx withFloat:cy withFloat:imageWidth_ withFloat:imageHeight_];
  [((id<RAREiPlatformComponent>) nil_chk(secondaryRightComponent_)) setBoundsWithFloat:cx + imageWidth_ - secondaryWidth_ + sdw withFloat:sy withFloat:secondaryWidth_ withFloat:sh];
  if (!flat) {
    [self setPerspectiveFilterWithRAREiPlatformComponent:secondaryLeftComponent_ withFloat:imageWidth_ withFloat:imageHeight_ withBoolean:YES withInt:0];
    [self setPerspectiveFilterWithRAREiPlatformComponent:secondaryRightComponent_ withFloat:imageWidth_ withFloat:imageHeight_ withBoolean:NO withInt:0];
  }
  int compPos = [self getComponentCount];
  sx = cx + imageWidth_ - secondaryWidth_ + sdw + sdw;
  for (int i = 0; i < otherCount; i++) {
    c = [self getComponentToAdd];
    [self addWithRAREiPlatformComponent:c];
    if (!flat) {
      [self setPerspectiveFilterWithRAREiPlatformComponent:c withFloat:imageWidth_ withFloat:imageHeight_ withBoolean:NO withInt:i];
    }
    [((id<RAREiPlatformComponent>) nil_chk(c)) setBoundsWithFloat:sx withFloat:sy withFloat:secondaryWidth_ withFloat:sh];
    [self bringToFrontOrClipWithRAREiPlatformComponent:c withFloat:odw withBoolean:YES];
    sx += odw;
  }
  for (int i = 0; i < otherCount; i++) {
    c = [self getComponentAtWithInt:compPos++];
    [self bringToFrontOrClipWithRAREiPlatformComponent:c withFloat:odw withBoolean:YES];
  }
  [self bringToFrontOrClipWithRAREiPlatformComponent:secondaryLeftComponent_ withFloat:secondaryWidth_ withBoolean:YES];
  [self bringToFrontOrClipWithRAREiPlatformComponent:secondaryRightComponent_ withFloat:secondaryWidth_ withBoolean:NO];
  [self bringToFrontOrClipWithRAREiPlatformComponent:centerComponent_ withFloat:0 withBoolean:NO];
}

- (void)clearComponentContentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)dst {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)renderComponentContentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)dst
                              withRARERenderableDataItem:(RARERenderableDataItem *)src {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)updateComponentContentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)dst
                              withRAREiPlatformComponent:(id<RAREiPlatformComponent>)src
                                withJavaLangCharSequence:(id<JavaLangCharSequence>)title {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)updateComponentContentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                                  withId:(id)value
                                             withBoolean:(BOOL)showTitle {
  [((id<RAREiPlatformComponent>) nil_chk(c)) putClientPropertyWithNSString:RAREaCarouselPanel_RARE_CAROUSEL_SHOWTITLE_PROPERTY_ withId:[JavaLangBoolean valueOfWithBoolean:showTitle]];
  switch ([dataType_ ordinal]) {
    case RAREaCarouselPanel_DataType_WIDGET_URLS:
    {
      if ((value == nil) || ([value conformsToProtocol: @protocol(RAREiPlatformComponent)])) {
        [self updateComponentContentWithRAREiPlatformComponent:c withRAREiPlatformComponent:(id<RAREiPlatformComponent>) check_protocol_cast(value, @protocol(RAREiPlatformComponent)) withJavaLangCharSequence:nil];
        break;
      }
      if ([value isKindOfClass:[RAREaPlatformWidget class]]) {
        RAREaPlatformWidget *w = (RAREaPlatformWidget *) check_class_cast(value, [RAREaPlatformWidget class]);
        NSString *s = showTitle ? [((RAREaPlatformWidget *) nil_chk(w)) getTitle] : nil;
        [self updateComponentContentWithRAREiPlatformComponent:c withRAREiPlatformComponent:[((RAREaPlatformWidget *) nil_chk(w)) getContainerComponent] withJavaLangCharSequence:s];
        break;
      }
      if (!([value isKindOfClass:[RARERenderableDataItem class]])) {
        [self updateComponentContentWithRAREiPlatformComponent:c withRAREiPlatformComponent:(id<RAREiPlatformComponent>) check_protocol_cast(nil, @protocol(RAREiPlatformComponent)) withJavaLangCharSequence:nil];
      }
      RARERenderableDataItem *item = (RARERenderableDataItem *) check_class_cast(value, [RARERenderableDataItem class]);
      id<JavaLangCharSequence> title = showTitle ? [((RARERenderableDataItem *) nil_chk(item)) toCharSequence] : nil;
      [self updateComponentContentWithRAREiPlatformComponent:c withRAREiPlatformComponent:[((RARERenderableDataItem *) nil_chk(item)) getRenderingComponent] withJavaLangCharSequence:title];
    }
    break;
    case RAREaCarouselPanel_DataType_IMAGE_URLS:
    {
      if ((value == nil) || ([value isKindOfClass:[RAREUIImage class]])) {
        [self updateComponentContentWithRAREiPlatformComponent:c withRAREUIImage:(RAREUIImage *) check_class_cast(value, [RAREUIImage class]) withJavaLangCharSequence:nil];
      }
      else {
        [self callImageCreatorWithRAREiPlatformComponent:c withRARERenderableDataItem:(RARERenderableDataItem *) check_class_cast(value, [RARERenderableDataItem class]) withBoolean:showTitle];
      }
    }
    break;
    default:
    if (imageCreator_ != nil) {
      [self callImageCreatorWithRAREiPlatformComponent:c withRARERenderableDataItem:(RARERenderableDataItem *) check_class_cast(value, [RARERenderableDataItem class]) withBoolean:showTitle];
    }
    else {
      [self renderComponentContentWithRAREiPlatformComponent:c withRARERenderableDataItem:(RARERenderableDataItem *) check_class_cast(value, [RARERenderableDataItem class])];
    }
    break;
  }
}

- (void)setCompositeWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component
                     withRAREGraphicsComposite:(RAREGraphicsComposite *)composite {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)updateComponentContentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)dst
                                         withRAREUIImage:(RAREUIImage *)src
                                withJavaLangCharSequence:(id<JavaLangCharSequence>)title {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setPerspectiveFilterWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                             withFloat:(float)width
                                             withFloat:(float)height
                                           withBoolean:(BOOL)left
                                               withInt:(int)pos {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<RAREiPlatformComponent>)getComponentToAdd {
  if (![((RAREUTIdentityArrayList *) nil_chk(componentCache_)) isEmpty]) {
    return [componentCache_ removeWithInt:[componentCache_ size] - 1];
  }
  id<RAREiPlatformComponent> c = [self createLayoutComponent];
  [((id<RAREiPlatformComponent>) nil_chk(c)) setComponentPainterWithRAREiPlatformComponentPainter:cellPainter_];
  [c setVisibleWithBoolean:NO];
  return c;
}

- (int)getDataIndexWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  JavaLangInteger *i = (JavaLangInteger *) check_class_cast([((id<RAREiPlatformComponent>) nil_chk(c)) getClientPropertyWithNSString:RAREaCarouselPanel_RARE_CAROUSEL_ITEM_], [JavaLangInteger class]);
  return (i == nil) ? -1 : [i intValue];
}

- (void)getMinimumSizeExWithRAREUIDimension:(RAREUIDimension *)size {
  [((RAREUIDimension *) nil_chk(size)) setSizeWithRAREUIDimension:minImageSize_];
  float odw = secondaryWidth_ / 3;
  float sdw = odw * 2;
  size->width_ += ((RAREUIInsets *) nil_chk(flowInsets_))->left_ + flowInsets_->right_;
  size->height_ += flowInsets_->top_ + flowInsets_->bottom_;
  size->width_ += (sdw * 2);
  size->height_ += titleHeight_;
}

- (void)getPreferredSizeExWithRAREUIDimension:(RAREUIDimension *)size
                                    withFloat:(float)maxWidth {
  if (prefSizeSet_) {
    [((RAREUIDimension *) nil_chk(size)) setSizeWithRAREUIDimension:prefImageSize_];
  }
  else if (imageWidth_ == 0) {
    [((RAREUIDimension *) nil_chk(size)) setSizeWithRAREUIDimension:minImageSize_];
  }
  else {
    [((RAREUIDimension *) nil_chk(size)) setSizeWithInt:imageWidth_ withInt:imageHeight_];
  }
  float odw = secondaryWidth_ / 3;
  float sdw = odw * 2;
  ((RAREUIDimension *) nil_chk(size))->width_ += ((RAREUIInsets *) nil_chk(flowInsets_))->left_ + flowInsets_->right_;
  size->height_ += flowInsets_->top_ + flowInsets_->bottom_;
  size->width_ += ([JavaLangMath maxWithInt:1 withInt:maxSideItems_ - 2] * odw);
  size->width_ += (sdw * 2);
  size->height_ += titleHeight_;
}

- (BOOL)isUsesImagesAlways {
  return usesImagesAlways_;
}

- (void)setUsesImagesAlwaysWithBoolean:(BOOL)usesImagesAlways {
  self->usesImagesAlways_ = usesImagesAlways;
}

- (int)getVisibleItemCount {
  return [self getComponentCount];
}

- (void)copyAllFieldsTo:(RAREaCarouselPanel *)other {
  [super copyAllFieldsTo:other];
  other->adjustable_ = adjustable_;
  other->animate_ = animate_;
  other->animatorOptions_ = animatorOptions_;
  other->blockIncrement_ = blockIncrement_;
  other->cellPainter_ = cellPainter_;
  other->centerComponent_ = centerComponent_;
  other->changeEventsEnabled_ = changeEventsEnabled_;
  other->componentCache_ = componentCache_;
  other->dataModel_ = dataModel_;
  other->dataType_ = dataType_;
  other->fadeAlpha_ = fadeAlpha_;
  other->fadeSize_ = fadeSize_;
  other->flatList_ = flatList_;
  other->flowInsets_ = flowInsets_;
  other->ignoreAdjustment_ = ignoreAdjustment_;
  other->imageCreator_ = imageCreator_;
  other->imageGap_ = imageGap_;
  other->imageHeight_ = imageHeight_;
  other->imageWidth_ = imageWidth_;
  other->itemRenderer_ = itemRenderer_;
  other->maxImageSize_ = maxImageSize_;
  other->maxSideItems_ = maxSideItems_;
  other->minImageSize_ = minImageSize_;
  other->oldHeight_ = oldHeight_;
  other->oldWidth_ = oldWidth_;
  other->perspectiveFraction_ = perspectiveFraction_;
  other->prefImageSize_ = prefImageSize_;
  other->prefSizeSet_ = prefSizeSet_;
  other->preserveAspectRatio_ = preserveAspectRatio_;
  other->primaryFraction_ = primaryFraction_;
  other->reflectionFraction_ = reflectionFraction_;
  other->reflectionOpacity_ = reflectionOpacity_;
  other->renderSecondaryTitles_ = renderSecondaryTitles_;
  other->renderTitles_ = renderTitles_;
  other->scalingType_ = scalingType_;
  other->secondaryLeftComponent_ = secondaryLeftComponent_;
  other->secondaryRightComponent_ = secondaryRightComponent_;
  other->secondaryWidth_ = secondaryWidth_;
  other->selectedIndex_ = selectedIndex_;
  other->selectionPainter_ = selectionPainter_;
  other->sideFraction_ = sideFraction_;
  other->smallComposite_ = smallComposite_;
  other->smallerComposite_ = smallerComposite_;
  other->titleHeight_ = titleHeight_;
  other->useLinkedData_ = useLinkedData_;
  other->usesImagesAlways_ = usesImagesAlways_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "isScrolling", NULL, "Z", 0x1, NULL },
    { "scrollLeft", NULL, "Z", 0x1, NULL },
    { "scrollRight", NULL, "Z", 0x1, NULL },
    { "getAnimatorOptions", NULL, "LJavaUtilMap", 0x1, NULL },
    { "getFlowInsets", NULL, "LRAREUIInsets", 0x1, NULL },
    { "getImageGetter", NULL, "LRAREiImageCreator", 0x1, NULL },
    { "getItemAtWithInt:withInt:", NULL, "LNSObject", 0x1, NULL },
    { "getItemRenderer", NULL, "LRAREaListItemRenderer", 0x1, NULL },
    { "getScalingType", NULL, "LRAREiImagePainter_ScalingTypeEnum", 0x1, NULL },
    { "getSelectedItem", NULL, "LNSObject", 0x1, NULL },
    { "getUseLinkedData", NULL, "Z", 0x1, NULL },
    { "isAnimated", NULL, "Z", 0x1, NULL },
    { "isAnimating", NULL, "Z", 0x401, NULL },
    { "isFlatList", NULL, "Z", 0x1, NULL },
    { "isPerspectiveTransformSupported", NULL, "Z", 0x1, NULL },
    { "isPreserveAspectRatio", NULL, "Z", 0x1, NULL },
    { "isUseLinkedData", NULL, "Z", 0x1, NULL },
    { "animateMoveWithFloat:", NULL, "V", 0x4, NULL },
    { "bringToFrontOrClipWithRAREiPlatformComponent:withFloat:withBoolean:", NULL, "V", 0x404, NULL },
    { "callImageCreatorWithRAREiPlatformComponent:withRARERenderableDataItem:withBoolean:", NULL, "V", 0x4, NULL },
    { "clearPerspectiveFilterWithRAREiPlatformComponent:", NULL, "V", 0x404, NULL },
    { "conditionallyUpdateAdjustable", NULL, "V", 0x4, NULL },
    { "configureAdjustable", NULL, "V", 0x4, NULL },
    { "createImageFromComponentWithRAREiPlatformComponent:", NULL, "LRAREUIImage", 0x404, NULL },
    { "createLayoutComponent", NULL, "LRAREiPlatformComponent", 0x404, NULL },
    { "initAlphaComposites", NULL, "V", 0x4, NULL },
    { "initComponents", NULL, "V", 0x4, NULL },
    { "installPaints", NULL, "V", 0x4, NULL },
    { "layoutWithFloat:withFloat:withFloat:withFloat:", NULL, "V", 0x4, NULL },
    { "clearComponentContentWithRAREiPlatformComponent:", NULL, "V", 0x404, NULL },
    { "renderComponentContentWithRAREiPlatformComponent:withRARERenderableDataItem:", NULL, "V", 0x404, NULL },
    { "updateComponentContentWithRAREiPlatformComponent:withRAREiPlatformComponent:withJavaLangCharSequence:", NULL, "V", 0x404, NULL },
    { "updateComponentContentWithRAREiPlatformComponent:withId:withBoolean:", NULL, "V", 0x4, NULL },
    { "setCompositeWithRAREiPlatformComponent:withRAREGraphicsComposite:", NULL, "V", 0x404, NULL },
    { "updateComponentContentWithRAREiPlatformComponent:withRAREUIImage:withJavaLangCharSequence:", NULL, "V", 0x404, NULL },
    { "setPerspectiveFilterWithRAREiPlatformComponent:withFloat:withFloat:withBoolean:withInt:", NULL, "V", 0x404, NULL },
    { "getComponentToAdd", NULL, "LRAREiPlatformComponent", 0x4, NULL },
    { "getDataIndexWithRAREiPlatformComponent:", NULL, "I", 0x4, NULL },
    { "getMinimumSizeExWithRAREUIDimension:", NULL, "V", 0x4, NULL },
    { "getPreferredSizeExWithRAREUIDimension:withFloat:", NULL, "V", 0x4, NULL },
    { "isUsesImagesAlways", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "RARE_CAROUSEL_ITEM_", NULL, 0x19, "LNSString" },
    { "RARE_CAROUSEL_SHOWTITLE_PROPERTY_", NULL, 0x19, "LNSString" },
    { "blockIncrement_", NULL, 0x4, "F" },
    { "imageGap_", NULL, 0x4, "I" },
    { "maxSideItems_", NULL, 0x4, "I" },
    { "perspectiveFraction_", NULL, 0x4, "F" },
    { "preserveAspectRatio_", NULL, 0x4, "Z" },
    { "primaryFraction_", NULL, 0x4, "F" },
    { "reflectionFraction_", NULL, 0x4, "F" },
    { "reflectionOpacity_", NULL, 0x4, "F" },
    { "selectedIndex_", NULL, 0x4, "I" },
    { "sideFraction_", NULL, 0x4, "F" },
    { "scalingType_", NULL, 0x4, "LRAREiImagePainter_ScalingTypeEnum" },
    { "prefImageSize_", NULL, 0x4, "LRAREUIDimension" },
    { "minImageSize_", NULL, 0x4, "LRAREUIDimension" },
    { "maxImageSize_", NULL, 0x4, "LRAREUIDimension" },
    { "flowInsets_", NULL, 0x4, "LRAREUIInsets" },
    { "componentCache_", NULL, 0x4, "LRAREUTIdentityArrayList" },
    { "animate_", NULL, 0x4, "Z" },
    { "adjustable_", NULL, 0x4, "LRAREiAdjustable" },
    { "animatorOptions_", NULL, 0x4, "LJavaUtilMap" },
    { "cellPainter_", NULL, 0x4, "LRAREiPlatformComponentPainter" },
    { "centerComponent_", NULL, 0x4, "LRAREiPlatformComponent" },
    { "dataType_", NULL, 0x4, "LRAREaCarouselPanel_DataTypeEnum" },
    { "flatList_", NULL, 0x4, "Z" },
    { "ignoreAdjustment_", NULL, 0x4, "Z" },
    { "imageCreator_", NULL, 0x4, "LRAREiImageCreator" },
    { "imageHeight_", NULL, 0x4, "I" },
    { "imageWidth_", NULL, 0x4, "I" },
    { "itemRenderer_", NULL, 0x4, "LRAREaListItemRenderer" },
    { "oldHeight_", NULL, 0x4, "F" },
    { "oldWidth_", NULL, 0x4, "F" },
    { "prefSizeSet_", NULL, 0x4, "Z" },
    { "renderSecondaryTitles_", NULL, 0x4, "Z" },
    { "renderTitles_", NULL, 0x4, "Z" },
    { "secondaryLeftComponent_", NULL, 0x4, "LRAREiPlatformComponent" },
    { "secondaryRightComponent_", NULL, 0x4, "LRAREiPlatformComponent" },
    { "secondaryWidth_", NULL, 0x4, "I" },
    { "selectionPainter_", NULL, 0x4, "LRAREiPlatformComponentPainter" },
    { "titleHeight_", NULL, 0x4, "F" },
    { "useLinkedData_", NULL, 0x4, "Z" },
    { "dataModel_", NULL, 0x4, "LJavaUtilList" },
    { "changeEventsEnabled_", NULL, 0x4, "Z" },
    { "usesImagesAlways_", NULL, 0x4, "Z" },
    { "fadeAlpha_", NULL, 0x4, "F" },
    { "smallComposite_", NULL, 0x4, "LRAREGraphicsComposite" },
    { "smallerComposite_", NULL, 0x4, "LRAREGraphicsComposite" },
    { "fadeSize_", NULL, 0x4, "I" },
  };
  static J2ObjcClassInfo _RAREaCarouselPanel = { "aCarouselPanel", "com.appnativa.rare.ui.carousel", NULL, 0x401, 41, methods, 48, fields, 0, NULL};
  return &_RAREaCarouselPanel;
}

@end

static RAREaCarouselPanel_DataTypeEnum *RAREaCarouselPanel_DataTypeEnum_DATA_ITEMS;
static RAREaCarouselPanel_DataTypeEnum *RAREaCarouselPanel_DataTypeEnum_IMAGE_URLS;
static RAREaCarouselPanel_DataTypeEnum *RAREaCarouselPanel_DataTypeEnum_WIDGET_URLS;
IOSObjectArray *RAREaCarouselPanel_DataTypeEnum_values;

@implementation RAREaCarouselPanel_DataTypeEnum

+ (RAREaCarouselPanel_DataTypeEnum *)DATA_ITEMS {
  return RAREaCarouselPanel_DataTypeEnum_DATA_ITEMS;
}
+ (RAREaCarouselPanel_DataTypeEnum *)IMAGE_URLS {
  return RAREaCarouselPanel_DataTypeEnum_IMAGE_URLS;
}
+ (RAREaCarouselPanel_DataTypeEnum *)WIDGET_URLS {
  return RAREaCarouselPanel_DataTypeEnum_WIDGET_URLS;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [RAREaCarouselPanel_DataTypeEnum class]) {
    RAREaCarouselPanel_DataTypeEnum_DATA_ITEMS = [[RAREaCarouselPanel_DataTypeEnum alloc] initWithNSString:@"DATA_ITEMS" withInt:0];
    RAREaCarouselPanel_DataTypeEnum_IMAGE_URLS = [[RAREaCarouselPanel_DataTypeEnum alloc] initWithNSString:@"IMAGE_URLS" withInt:1];
    RAREaCarouselPanel_DataTypeEnum_WIDGET_URLS = [[RAREaCarouselPanel_DataTypeEnum alloc] initWithNSString:@"WIDGET_URLS" withInt:2];
    RAREaCarouselPanel_DataTypeEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ RAREaCarouselPanel_DataTypeEnum_DATA_ITEMS, RAREaCarouselPanel_DataTypeEnum_IMAGE_URLS, RAREaCarouselPanel_DataTypeEnum_WIDGET_URLS, nil } count:3 type:[IOSClass classWithClass:[RAREaCarouselPanel_DataTypeEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:RAREaCarouselPanel_DataTypeEnum_values];
}

+ (RAREaCarouselPanel_DataTypeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [RAREaCarouselPanel_DataTypeEnum_values count]; i++) {
    RAREaCarouselPanel_DataTypeEnum *e = RAREaCarouselPanel_DataTypeEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LRAREaCarouselPanel_DataTypeEnum"};
  static J2ObjcClassInfo _RAREaCarouselPanel_DataTypeEnum = { "DataType", "com.appnativa.rare.ui.carousel", "aCarouselPanel", 0x4019, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_RAREaCarouselPanel_DataTypeEnum;
}

@end
@implementation RAREaCarouselPanel_$1

- (void)run {
  [this$0_ fireChangeEvent];
}

- (id)initWithRAREaCarouselPanel:(RAREaCarouselPanel *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaCarouselPanel" },
  };
  static J2ObjcClassInfo _RAREaCarouselPanel_$1 = { "$1", "com.appnativa.rare.ui.carousel", "aCarouselPanel", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaCarouselPanel_$1;
}

@end
