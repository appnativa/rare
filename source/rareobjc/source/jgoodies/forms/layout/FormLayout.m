//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/jgoodies/forms/layout/FormLayout.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSBooleanArray.h"
#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/iParentComponent.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/jgoodies/forms/layout/CellConstraints.h"
#include "com/jgoodies/forms/layout/ColumnSpec.h"
#include "com/jgoodies/forms/layout/FormLayout.h"
#include "com/jgoodies/forms/layout/FormSpec.h"
#include "com/jgoodies/forms/layout/LayoutMap.h"
#include "com/jgoodies/forms/layout/RowSpec.h"
#include "com/jgoodies/forms/layout/Size.h"
#include "com/jgoodies/forms/util/FormUtils.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Short.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@implementation RAREJGFormLayout

- (id)init {
  return [self initRAREJGFormLayoutWithRAREJGColumnSpecArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[RAREJGColumnSpec class]]] withRAREJGRowSpecArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[RAREJGRowSpec class]]]];
}

- (id)initWithRAREJGColumnSpecArray:(IOSObjectArray *)colSpecs {
  return [self initRAREJGFormLayoutWithRAREJGColumnSpecArray:colSpecs withRAREJGRowSpecArray:[IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:[IOSClass classWithClass:[RAREJGRowSpec class]]]];
}

- (id)initWithNSString:(NSString *)encodedColumnSpecs {
  return [self initRAREJGFormLayoutWithNSString:encodedColumnSpecs withRAREJGLayoutMap:[RAREJGLayoutMap getRoot]];
}

- (id)initRAREJGFormLayoutWithRAREJGColumnSpecArray:(IOSObjectArray *)colSpecs
                             withRAREJGRowSpecArray:(IOSObjectArray *)rowSpecs {
  if (self = [super init]) {
    honorsVisibility_ = YES;
    if (colSpecs == nil) {
      @throw [[JavaLangNullPointerException alloc] initWithNSString:@"The column specifications must not be null."];
    }
    if (rowSpecs == nil) {
      @throw [[JavaLangNullPointerException alloc] initWithNSString:@"The row specifications must not be null."];
    }
    self->colSpecs_ = [[JavaUtilArrayList alloc] initWithJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:colSpecs]];
    self->rowSpecs_ = [[JavaUtilArrayList alloc] initWithJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:rowSpecs]];
    colGroupIndices_ = [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:[IOSIntArray iosClass]];
    rowGroupIndices_ = [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:[IOSIntArray iosClass]];
    int initialCapacity = [JavaLangMath minWithInt:(int) [((IOSObjectArray *) nil_chk(colSpecs)) count] * (int) [((IOSObjectArray *) nil_chk(rowSpecs)) count] / 4 withInt:5];
    componentSizeCache_ = [[RAREJGFormLayout_ComponentSizeCache alloc] initWithInt:initialCapacity];
    minimumWidthMeasure_ = [[RAREJGFormLayout_MinimumWidthMeasure alloc] initWithRAREJGFormLayout_ComponentSizeCache:componentSizeCache_];
    minimumHeightMeasure_ = [[RAREJGFormLayout_MinimumHeightMeasure alloc] initWithRAREJGFormLayout_ComponentSizeCache:componentSizeCache_];
    preferredWidthMeasure_ = [[RAREJGFormLayout_PreferredWidthMeasure alloc] initWithRAREJGFormLayout_ComponentSizeCache:componentSizeCache_];
    preferredHeightMeasure_ = [[RAREJGFormLayout_PreferredHeightMeasure alloc] initWithRAREJGFormLayout_ComponentSizeCache:componentSizeCache_];
  }
  return self;
}

- (id)initWithRAREJGColumnSpecArray:(IOSObjectArray *)colSpecs
             withRAREJGRowSpecArray:(IOSObjectArray *)rowSpecs {
  return [self initRAREJGFormLayoutWithRAREJGColumnSpecArray:colSpecs withRAREJGRowSpecArray:rowSpecs];
}

- (id)initRAREJGFormLayoutWithNSString:(NSString *)encodedColumnSpecs
                   withRAREJGLayoutMap:(RAREJGLayoutMap *)layoutMap {
  return [self initRAREJGFormLayoutWithRAREJGColumnSpecArray:[RAREJGColumnSpec decodeSpecsWithNSString:encodedColumnSpecs withRAREJGLayoutMap:layoutMap] withRAREJGRowSpecArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[RAREJGRowSpec class]]]];
}

- (id)initWithNSString:(NSString *)encodedColumnSpecs
   withRAREJGLayoutMap:(RAREJGLayoutMap *)layoutMap {
  return [self initRAREJGFormLayoutWithNSString:encodedColumnSpecs withRAREJGLayoutMap:layoutMap];
}

- (id)initWithNSString:(NSString *)encodedColumnSpecs
          withNSString:(NSString *)encodedRowSpecs {
  return [self initRAREJGFormLayoutWithNSString:encodedColumnSpecs withNSString:encodedRowSpecs withRAREJGLayoutMap:[RAREJGLayoutMap getRoot]];
}

- (id)initRAREJGFormLayoutWithNSString:(NSString *)encodedColumnSpecs
                          withNSString:(NSString *)encodedRowSpecs
                   withRAREJGLayoutMap:(RAREJGLayoutMap *)layoutMap {
  return [self initRAREJGFormLayoutWithRAREJGColumnSpecArray:[RAREJGColumnSpec decodeSpecsWithNSString:encodedColumnSpecs withRAREJGLayoutMap:layoutMap] withRAREJGRowSpecArray:[RAREJGRowSpec decodeSpecsWithNSString:encodedRowSpecs withRAREJGLayoutMap:layoutMap]];
}

- (id)initWithNSString:(NSString *)encodedColumnSpecs
          withNSString:(NSString *)encodedRowSpecs
   withRAREJGLayoutMap:(RAREJGLayoutMap *)layoutMap {
  return [self initRAREJGFormLayoutWithNSString:encodedColumnSpecs withNSString:encodedRowSpecs withRAREJGLayoutMap:layoutMap];
}

- (void)addGroupedColumnWithInt:(int)columnIndex {
  IOSObjectArray *newColGroups = [self getColumnGroups];
  if ((int) [((IOSObjectArray *) nil_chk(newColGroups)) count] == 0) {
    newColGroups = [IOSObjectArray arrayWithObjects:(id[]){ [IOSIntArray arrayWithInts:(int[]){ columnIndex } count:1] } count:1 type:[IOSIntArray iosClass]];
  }
  else {
    int lastGroupIndex = (int) [newColGroups count] - 1;
    IOSIntArray *lastGroup = IOSObjectArray_Get(newColGroups, lastGroupIndex);
    int groupSize = (int) [((IOSIntArray *) nil_chk(lastGroup)) count];
    IOSIntArray *newLastGroup = [IOSIntArray arrayWithLength:groupSize + 1];
    [JavaLangSystem arraycopyWithId:lastGroup withInt:0 withId:newLastGroup withInt:0 withInt:groupSize];
    (*IOSIntArray_GetRef(newLastGroup, groupSize)) = columnIndex;
    (void) IOSObjectArray_Set(newColGroups, lastGroupIndex, newLastGroup);
  }
  [self setColumnGroupsWithIntArray2:newColGroups];
}

- (void)addGroupedRowWithInt:(int)rowIndex {
  IOSObjectArray *newRowGroups = [self getRowGroups];
  if ((int) [((IOSObjectArray *) nil_chk(newRowGroups)) count] == 0) {
    newRowGroups = [IOSObjectArray arrayWithObjects:(id[]){ [IOSIntArray arrayWithInts:(int[]){ rowIndex } count:1] } count:1 type:[IOSIntArray iosClass]];
  }
  else {
    int lastGroupIndex = (int) [newRowGroups count] - 1;
    IOSIntArray *lastGroup = IOSObjectArray_Get(newRowGroups, lastGroupIndex);
    int groupSize = (int) [((IOSIntArray *) nil_chk(lastGroup)) count];
    IOSIntArray *newLastGroup = [IOSIntArray arrayWithLength:groupSize + 1];
    [JavaLangSystem arraycopyWithId:lastGroup withInt:0 withId:newLastGroup withInt:0 withInt:groupSize];
    (*IOSIntArray_GetRef(newLastGroup, groupSize)) = rowIndex;
    (void) IOSObjectArray_Set(newRowGroups, lastGroupIndex, newLastGroup);
  }
  [self setRowGroupsWithIntArray2:newRowGroups];
}

- (void)addLayoutComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component
                           withRAREJGCellConstraints:(RAREJGCellConstraints *)constraints {
  if (component == nil) {
    @throw [[JavaLangNullPointerException alloc] initWithNSString:@"The component must not be null."];
  }
  if (constraints == nil) {
    @throw [[JavaLangNullPointerException alloc] initWithNSString:@"The constraints must not be null."];
  }
  [self setComponentAlignmentFromClientPropertiesWithRAREiPlatformComponent:component withRAREJGCellConstraints:constraints];
  [((RAREJGCellConstraints *) nil_chk(constraints)) ensureValidGridBoundsWithInt:[self getColumnCount] withInt:[self getRowCount]];
  [self invalidateCaches];
}

- (void)appendColumnWithRAREJGColumnSpec:(RAREJGColumnSpec *)columnSpec {
  if (columnSpec == nil) {
    @throw [[JavaLangNullPointerException alloc] initWithNSString:@"The column spec must not be null."];
  }
  [((id<JavaUtilList>) nil_chk(colSpecs_)) addWithId:columnSpec];
}

- (void)appendRowWithRAREJGRowSpec:(RAREJGRowSpec *)rowSpec {
  if (rowSpec == nil) {
    @throw [[JavaLangNullPointerException alloc] initWithNSString:@"The row spec must not be null."];
  }
  [((id<JavaUtilList>) nil_chk(rowSpecs_)) addWithId:rowSpec];
}

- (RAREJGFormLayout_LayoutInfo *)computeLayoutWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                                   withRAREUIDimension:(RAREUIDimension *)size
                                                      withRAREUIInsets:(RAREUIInsets *)insets {
  int totalWidth = [RAREUIScreen snapToSizeWithFloat:((RAREUIDimension *) nil_chk(size))->width_ - ((RAREUIInsets *) nil_chk(insets))->left_ - insets->right_];
  int totalHeight = [RAREUIScreen snapToSizeWithFloat:size->height_ - insets->top_ - insets->bottom_];
  IOSIntArray *x = [self computeGridOriginsWithRAREiParentComponent:container withInt:totalWidth withInt:(int) insets->left_ withJavaUtilList:colSpecs_ withJavaUtilListArray:colComponents_ withIntArray2:colGroupIndices_ withRAREJGFormLayout_Measure:minimumWidthMeasure_ withRAREJGFormLayout_Measure:preferredWidthMeasure_];
  IOSIntArray *y = [self computeGridOriginsWithRAREiParentComponent:container withInt:totalHeight withInt:(int) insets->top_ withJavaUtilList:rowSpecs_ withJavaUtilListArray:rowComponents_ withIntArray2:rowGroupIndices_ withRAREJGFormLayout_Measure:minimumHeightMeasure_ withRAREJGFormLayout_Measure:preferredHeightMeasure_];
  return [[RAREJGFormLayout_LayoutInfo alloc] initWithIntArray:x withIntArray:y];
}

- (RAREUIDimension *)computeLayoutSizeWithRAREiParentComponent:(id<RAREiParentComponent>)parent
                                  withRAREJGFormLayout_Measure:(id<RAREJGFormLayout_Measure>)defaultWidthMeasure
                                  withRAREJGFormLayout_Measure:(id<RAREJGFormLayout_Measure>)defaultHeightMeasure
                                           withRAREUIDimension:(RAREUIDimension *)size {
  [self computeLayoutSizeExWithRAREiParentComponent:parent withRAREJGFormLayout_Measure:defaultWidthMeasure withRAREJGFormLayout_Measure:defaultHeightMeasure withRAREUIDimension:size withBoolean:YES];
  return size;
}

- (void)dispose {
  [self invalidateCaches];
  if (colComponents_ != nil) {
    [JavaUtilArrays fillWithNSObjectArray:colComponents_ withId:nil];
  }
  if (rowComponents_ != nil) {
    [JavaUtilArrays fillWithNSObjectArray:rowComponents_ withId:nil];
  }
}

- (void)initializeColAndRowComponentListsWithRAREiParentComponent:(id<RAREiParentComponent>)container {
  int clen = [self getColumnCount];
  colComponents_ = [IOSObjectArray arrayWithLength:clen type:[IOSClass classWithProtocol:@protocol(JavaUtilList)]];
  for (int i = 0; i < clen; i++) {
    (void) IOSObjectArray_Set(colComponents_, i, [[JavaUtilArrayList alloc] init]);
  }
  int rlen = [self getRowCount];
  rowComponents_ = [IOSObjectArray arrayWithLength:rlen type:[IOSClass classWithProtocol:@protocol(JavaUtilList)]];
  for (int i = 0; i < rlen; i++) {
    (void) IOSObjectArray_Set(rowComponents_, i, [[JavaUtilArrayList alloc] init]);
  }
  singleColumn_ = YES;
  hasComponentsThatChangeHeightBasedOnWidth_ = NO;
  int column = -1;
  int ocolumn = -1;
  int len = [((id<RAREiParentComponent>) nil_chk(container)) getComponentCount];
  for (int i = 0; i < len; i++) {
    id<RAREiPlatformComponent> component = [container getComponentAtWithInt:i];
    RAREJGCellConstraints *constraints = (RAREJGCellConstraints *) check_class_cast([container getComponentConstraintsWithRAREiPlatformComponent:component], [RAREJGCellConstraints class]);
    if ([self takeIntoAccountWithRAREiPlatformComponent:component withRAREJGCellConstraints:constraints]) {
      if (!hasComponentsThatChangeHeightBasedOnWidth_ && [((id<RAREiPlatformComponent>) nil_chk(component)) heightChangesBasedOnWidth]) {
        hasComponentsThatChangeHeightBasedOnWidth_ = YES;
      }
      column = ((RAREJGCellConstraints *) nil_chk(constraints))->gridX_ - 1;
      if (ocolumn != column) {
        if (ocolumn != -1) {
          singleColumn_ = NO;
        }
        ocolumn = column;
      }
      if (constraints->gridWidth_ == 1) {
        [((id<JavaUtilList>) IOSObjectArray_Get(colComponents_, column)) addWithId:component];
      }
      else {
        singleColumn_ = NO;
      }
      if (constraints->gridHeight_ == 1) {
        [((id<JavaUtilList>) IOSObjectArray_Get(rowComponents_, constraints->gridY_ - 1)) addWithId:component];
      }
    }
  }
}

- (void)insertColumnWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                     withInt:(int)columnIndex
                        withRAREJGColumnSpec:(RAREJGColumnSpec *)columnSpec {
  if ((columnIndex < 1) || (columnIndex > [self getColumnCount])) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"The column index %dmust be in the range [1, %d].", columnIndex, [self getColumnCount]]];
  }
  [((id<JavaUtilList>) nil_chk(colSpecs_)) addWithInt:columnIndex - 1 withId:columnSpec];
  [self shiftComponentsHorizontallyWithRAREiParentComponent:container withInt:columnIndex withBoolean:NO];
  [self adjustGroupIndicesWithIntArray2:colGroupIndices_ withInt:columnIndex withBoolean:NO];
}

- (void)insertRowWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                  withInt:(int)rowIndex
                        withRAREJGRowSpec:(RAREJGRowSpec *)rowSpec {
  if ((rowIndex < 1) || (rowIndex > [self getRowCount])) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"The row index %d must be in the range [1, %d].", rowIndex, [self getRowCount]]];
  }
  [((id<JavaUtilList>) nil_chk(rowSpecs_)) addWithInt:rowIndex - 1 withId:rowSpec];
  [self shiftComponentsVerticallyWithRAREiParentComponent:container withInt:rowIndex withBoolean:NO];
  [self adjustGroupIndicesWithIntArray2:rowGroupIndices_ withInt:rowIndex withBoolean:NO];
}

- (void)invalidateCaches {
  if (componentSizeCache_ != nil) {
    [componentSizeCache_ invalidate];
  }
}

- (void)invalidateMinimumCache {
  if (componentSizeCache_ != nil) {
    [((id<JavaUtilMap>) nil_chk(componentSizeCache_->minimumSizes_)) clear];
  }
}

- (void)invalidatePreferredCache {
  if (componentSizeCache_ != nil) {
    [((id<JavaUtilMap>) nil_chk(componentSizeCache_->preferredSizes_)) clear];
  }
}

- (RAREJGFormLayout_LayoutInfo *)layoutWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                            withRAREUIDimension:(RAREUIDimension *)size
                                               withRAREUIInsets:(RAREUIInsets *)insets {
  RAREJGFormLayout_LayoutInfo *l = [self computeLayoutWithRAREiParentComponent:container withRAREUIDimension:size withRAREUIInsets:insets];
  [self layoutComponentsWithRAREiParentComponent:container withIntArray:((RAREJGFormLayout_LayoutInfo *) nil_chk(l))->columnOrigins_ withIntArray:l->rowOrigins_];
  return l;
}

- (void)layoutComponentsWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                    withIntArray:(IOSIntArray *)x
                                    withIntArray:(IOSIntArray *)y {
  RAREUIRectangle *cellBounds = [[RAREUIRectangle alloc] init];
  int len = [((id<RAREiParentComponent>) nil_chk(container)) getComponentCount];
  for (int i = 0; i < len; i++) {
    id<RAREiPlatformComponent> component = [container getComponentAtWithInt:i];
    RAREJGCellConstraints *constraints = (RAREJGCellConstraints *) check_class_cast([container getComponentConstraintsWithRAREiPlatformComponent:component], [RAREJGCellConstraints class]);
    if (![self takeIntoAccountWithRAREiPlatformComponent:component withRAREJGCellConstraints:constraints]) {
      continue;
    }
    int gridX = ((RAREJGCellConstraints *) nil_chk(constraints))->gridX_ - 1;
    int gridY = constraints->gridY_ - 1;
    int gridWidth = constraints->gridWidth_;
    int gridHeight = constraints->gridHeight_;
    cellBounds->x_ = IOSIntArray_Get(nil_chk(x), gridX);
    cellBounds->y_ = IOSIntArray_Get(nil_chk(y), gridY);
    cellBounds->width_ = IOSIntArray_Get(x, gridX + gridWidth) - cellBounds->x_;
    cellBounds->height_ = IOSIntArray_Get(y, gridY + gridHeight) - cellBounds->y_;
    [constraints setBoundsWithRAREiPlatformComponent:component withRAREJGFormLayout:self withRAREUIRectangle:cellBounds withRAREJGFormLayout_Measure:minimumWidthMeasure_ withRAREJGFormLayout_Measure:minimumHeightMeasure_ withRAREJGFormLayout_Measure:preferredWidthMeasure_ withRAREJGFormLayout_Measure:preferredHeightMeasure_];
  }
}

- (void)calculateLayoutSizeWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                          withFloat:(float)width
                                          withFloat:(float)height
                                withRAREUIDimension:(RAREUIDimension *)size {
  [((RAREUIDimension *) nil_chk(size)) setSizeWithDouble:width withDouble:height];
  [self initializeColAndRowComponentListsWithRAREiParentComponent:container];
  if (!singleColumn_ && hasComponentsThatChangeHeightBasedOnWidth_) {
    RAREUIInsets *insets = [((id<RAREiParentComponent>) nil_chk(container)) getInsetsWithRAREUIInsets:nil];
    RAREJGFormLayout_LayoutInfo *l = [self computeLayoutWithRAREiParentComponent:container withRAREUIDimension:size withRAREUIInsets:insets];
    IOSIntArray *x = ((RAREJGFormLayout_LayoutInfo *) nil_chk(l))->columnOrigins_;
    IOSIntArray *y = l->rowOrigins_;
    RAREUIRectangle *cellBounds = [[RAREUIRectangle alloc] init];
    int len = [container getComponentCount];
    for (int i = 0; i < len; i++) {
      id<RAREiPlatformComponent> component = [container getComponentAtWithInt:i];
      RAREJGCellConstraints *constraints = (RAREJGCellConstraints *) check_class_cast([container getComponentConstraintsWithRAREiPlatformComponent:component], [RAREJGCellConstraints class]);
      if (![self takeIntoAccountWithRAREiPlatformComponent:component withRAREJGCellConstraints:constraints]) {
        continue;
      }
      if ([((id<RAREiPlatformComponent>) nil_chk(component)) heightChangesBasedOnWidth]) {
        int gridX = ((RAREJGCellConstraints *) nil_chk(constraints))->gridX_ - 1;
        int gridY = constraints->gridY_ - 1;
        int gridWidth = constraints->gridWidth_;
        int gridHeight = constraints->gridHeight_;
        cellBounds->x_ = IOSIntArray_Get(nil_chk(x), gridX);
        cellBounds->y_ = IOSIntArray_Get(nil_chk(y), gridY);
        cellBounds->width_ = IOSIntArray_Get(x, gridX + gridWidth) - cellBounds->x_;
        cellBounds->height_ = IOSIntArray_Get(y, gridY + gridHeight) - cellBounds->y_;
        int w = [constraints getMeasuredWidthWithRAREiPlatformComponent:component withRAREJGFormLayout:self withRAREUIRectangle:cellBounds withRAREJGFormLayout_Measure:minimumWidthMeasure_ withRAREJGFormLayout_Measure:minimumHeightMeasure_ withRAREJGFormLayout_Measure:preferredWidthMeasure_ withRAREJGFormLayout_Measure:preferredHeightMeasure_];
        RAREUIDimension *d = [((RAREJGFormLayout_ComponentSizeCache *) nil_chk(componentSizeCache_)) getPreferredSizeWithRAREiPlatformComponent:component withInt:w];
        if ([component adjustMinimumHeightForWidth]) {
          ((RAREUIDimension *) nil_chk([componentSizeCache_ getMinimumSizeWithRAREiPlatformComponent:component]))->height_ = ((RAREUIDimension *) nil_chk(d))->height_;
        }
      }
    }
  }
  [self computeLayoutSizeExWithRAREiParentComponent:container withRAREJGFormLayout_Measure:preferredWidthMeasure_ withRAREJGFormLayout_Measure:preferredHeightMeasure_ withRAREUIDimension:size withBoolean:NO];
}

- (void)removeColumnWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                     withInt:(int)columnIndex {
  if ((columnIndex < 1) || (columnIndex > [self getColumnCount])) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"The column index %d must be in the range [1, %d].", columnIndex, [self getColumnCount]]];
  }
  (void) [((id<JavaUtilList>) nil_chk(colSpecs_)) removeWithInt:columnIndex - 1];
  [self shiftComponentsHorizontallyWithRAREiParentComponent:container withInt:columnIndex withBoolean:YES];
  [self adjustGroupIndicesWithIntArray2:colGroupIndices_ withInt:columnIndex withBoolean:YES];
}

- (void)removeLayoutComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component {
  if (component != nil) {
    [((RAREJGFormLayout_ComponentSizeCache *) nil_chk(componentSizeCache_)) removeEntryWithRAREiPlatformComponent:component];
    [component putClientPropertyWithNSString:[RAREiConstants RARE_CONSTRAINTS_PROPERTY] withId:nil];
  }
}

- (void)removeRowWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                  withInt:(int)rowIndex {
  if ((rowIndex < 1) || (rowIndex > [self getRowCount])) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"The row index %dmust be in the range [1, %d].", rowIndex, [self getRowCount]]];
  }
  (void) [((id<JavaUtilList>) nil_chk(rowSpecs_)) removeWithInt:rowIndex - 1];
  [self shiftComponentsVerticallyWithRAREiParentComponent:container withInt:rowIndex withBoolean:YES];
  [self adjustGroupIndicesWithIntArray2:rowGroupIndices_ withInt:rowIndex withBoolean:YES];
}

- (void)setColumnGroupsWithIntArray2:(IOSObjectArray *)colGroupIndices {
  int maxColumn = [self getColumnCount];
  IOSBooleanArray *usedIndices = [IOSBooleanArray arrayWithLength:maxColumn + 1];
  for (int group = 0; group < (int) [((IOSObjectArray *) nil_chk(colGroupIndices)) count]; group++) {
    for (int j = 0; j < (int) [((IOSIntArray *) nil_chk(IOSObjectArray_Get(colGroupIndices, group))) count]; j++) {
      int colIndex = IOSIntArray_Get(nil_chk(IOSObjectArray_Get(colGroupIndices, group)), j);
      if ((colIndex < 1) || (colIndex > maxColumn)) {
        @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"Invalid column group index %d in group %d", colIndex, (group + 1)]];
      }
      if (IOSBooleanArray_Get(usedIndices, colIndex)) {
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"Column index %d must not be used in multiple column groups.", colIndex]];
      }
      (*IOSBooleanArray_GetRef(usedIndices, colIndex)) = YES;
    }
  }
  self->colGroupIndices_ = [self deepCloneWithIntArray2:colGroupIndices];
}

- (void)setColumnSpecWithInt:(int)columnIndex
        withRAREJGColumnSpec:(RAREJGColumnSpec *)columnSpec {
  if (columnSpec == nil) {
    @throw [[JavaLangNullPointerException alloc] initWithNSString:@"The column spec must not be null."];
  }
  (void) [((id<JavaUtilList>) nil_chk(colSpecs_)) setWithInt:columnIndex - 1 withId:columnSpec];
}

- (void)setComponentAlignmentFromClientPropertiesWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                                  withRAREJGCellConstraints:(RAREJGCellConstraints *)cc {
  RARERenderableDataItem_VerticalAlignEnum *va = (RARERenderableDataItem_VerticalAlignEnum *) [((id<RAREiPlatformComponent>) nil_chk(c)) getClientPropertyWithNSString:[RAREiConstants RARE_VALIGN_PROPERTY]];
  if (va != nil) {
    switch ([va ordinal]) {
      case RARERenderableDataItem_VerticalAlign_TOP:
      ((RAREJGCellConstraints *) nil_chk(cc))->vAlign_ = [RAREJGCellConstraints TOP];
      break;
      case RARERenderableDataItem_VerticalAlign_BOTTOM:
      ((RAREJGCellConstraints *) nil_chk(cc))->vAlign_ = [RAREJGCellConstraints BOTTOM];
      break;
      case RARERenderableDataItem_VerticalAlign_CENTER:
      ((RAREJGCellConstraints *) nil_chk(cc))->vAlign_ = [RAREJGCellConstraints CENTER];
      break;
      case RARERenderableDataItem_VerticalAlign_FILL:
      ((RAREJGCellConstraints *) nil_chk(cc))->vAlign_ = [RAREJGCellConstraints FILL];
      break;
      default:
      break;
    }
  }
  RARERenderableDataItem_HorizontalAlignEnum *ha = (RARERenderableDataItem_HorizontalAlignEnum *) [c getClientPropertyWithNSString:[RAREiConstants RARE_HALIGN_PROPERTY]];
  if (ha != nil) {
    switch ([ha ordinal]) {
      case RARERenderableDataItem_HorizontalAlign_LEFT:
      ((RAREJGCellConstraints *) nil_chk(cc))->hAlign_ = [RAREJGCellConstraints LEFT];
      break;
      case RARERenderableDataItem_HorizontalAlign_RIGHT:
      ((RAREJGCellConstraints *) nil_chk(cc))->hAlign_ = [RAREJGCellConstraints RIGHT];
      break;
      case RARERenderableDataItem_HorizontalAlign_CENTER:
      ((RAREJGCellConstraints *) nil_chk(cc))->hAlign_ = [RAREJGCellConstraints CENTER];
      break;
      case RARERenderableDataItem_HorizontalAlign_FILL:
      ((RAREJGCellConstraints *) nil_chk(cc))->hAlign_ = [RAREJGCellConstraints FILL];
      break;
      default:
      break;
    }
  }
}

- (void)setHonorsVisibilityWithBoolean:(BOOL)b {
  BOOL oldHonorsVisibility = [self getHonorsVisibility];
  if (oldHonorsVisibility == b) {
    return;
  }
  honorsVisibility_ = b;
}

- (void)setHonorsVisibilityWithRAREiParentComponent:(id<RAREiParentComponent>)container
                         withRAREiPlatformComponent:(id<RAREiPlatformComponent>)component
                                withJavaLangBoolean:(JavaLangBoolean *)b {
  RAREJGCellConstraints *constraints = (RAREJGCellConstraints *) check_class_cast([((id<RAREiParentComponent>) nil_chk(container)) getComponentConstraintsWithRAREiPlatformComponent:component], [RAREJGCellConstraints class]);
  if ([RAREJGFormUtils equalsWithId:b withId:((RAREJGCellConstraints *) nil_chk(constraints))->honorsVisibility_]) {
    return;
  }
  constraints->honorsVisibility_ = b;
}

- (void)setLayoutWithRAREJGColumnSpecArray:(IOSObjectArray *)colSpecs
                    withRAREJGRowSpecArray:(IOSObjectArray *)rowSpecs {
  if (colSpecs == nil) {
    @throw [[JavaLangNullPointerException alloc] initWithNSString:@"The column specifications must not be null."];
  }
  if (rowSpecs == nil) {
    @throw [[JavaLangNullPointerException alloc] initWithNSString:@"The row specifications must not be null."];
  }
  self->colSpecs_ = [[JavaUtilArrayList alloc] initWithJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:colSpecs]];
  self->rowSpecs_ = [[JavaUtilArrayList alloc] initWithJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:rowSpecs]];
  colGroupIndices_ = [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:[IOSIntArray iosClass]];
  rowGroupIndices_ = [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:[IOSIntArray iosClass]];
}

- (void)setLayoutWithNSString:(NSString *)encodedColumnSpecs
                 withNSString:(NSString *)encodedRowSpecs {
  [self setLayoutWithRAREJGColumnSpecArray:[RAREJGColumnSpec decodeSpecsWithNSString:encodedColumnSpecs withRAREJGLayoutMap:[RAREJGLayoutMap getRoot]] withRAREJGRowSpecArray:[RAREJGRowSpec decodeSpecsWithNSString:encodedRowSpecs withRAREJGLayoutMap:[RAREJGLayoutMap getRoot]]];
}

- (void)setRowGroupsWithIntArray2:(IOSObjectArray *)rowGroupIndices {
  int rowCount = [self getRowCount];
  IOSBooleanArray *usedIndices = [IOSBooleanArray arrayWithLength:rowCount + 1];
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(rowGroupIndices)) count]; i++) {
    for (int j = 0; j < (int) [((IOSIntArray *) nil_chk(IOSObjectArray_Get(rowGroupIndices, i))) count]; j++) {
      int rowIndex = IOSIntArray_Get(nil_chk(IOSObjectArray_Get(rowGroupIndices, i)), j);
      if ((rowIndex < 1) || (rowIndex > rowCount)) {
        @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"Invalid row group index %d in group %d", rowIndex, (i + 1)]];
      }
      if (IOSBooleanArray_Get(usedIndices, rowIndex)) {
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"Row index %d must not be used in multiple row groups.", rowIndex]];
      }
      (*IOSBooleanArray_GetRef(usedIndices, rowIndex)) = YES;
    }
  }
  self->rowGroupIndices_ = [self deepCloneWithIntArray2:rowGroupIndices];
}

- (void)setRowSpecWithInt:(int)rowIndex
        withRAREJGRowSpec:(RAREJGRowSpec *)rowSpec {
  if (rowSpec == nil) {
    @throw [[JavaLangNullPointerException alloc] initWithNSString:@"The row spec must not be null."];
  }
  (void) [((id<JavaUtilList>) nil_chk(rowSpecs_)) setWithInt:rowIndex - 1 withId:rowSpec];
}

- (int)getColumnCount {
  return [((id<JavaUtilList>) nil_chk(colSpecs_)) size];
}

- (IOSObjectArray *)getColumnGroups {
  return [self deepCloneWithIntArray2:colGroupIndices_];
}

- (RAREJGColumnSpec *)getColumnSpecWithInt:(int)columnIndex {
  return (RAREJGColumnSpec *) check_class_cast([((id<JavaUtilList>) nil_chk(colSpecs_)) getWithInt:columnIndex - 1], [RAREJGColumnSpec class]);
}

- (id<RAREiPlatformComponent>)getComponentAtWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                                             withInt:(int)col
                                                             withInt:(int)row {
  RAREJGCellConstraints *cc;
  int len = [((id<RAREiParentComponent>) nil_chk(container)) getComponentCount];
  for (int i = 0; i < len; i++) {
    id<RAREiPlatformComponent> c = [container getComponentAtWithInt:i];
    cc = (RAREJGCellConstraints *) check_class_cast([container getComponentConstraintsWithRAREiPlatformComponent:c], [RAREJGCellConstraints class]);
    if ((cc != nil) && (cc->gridX_ == col) && (cc->gridY_ == row)) {
      return c;
    }
  }
  return nil;
}

- (BOOL)getHonorsVisibility {
  return honorsVisibility_;
}

- (RAREJGFormLayout_LayoutInfo *)getLayoutInfoWithRAREiParentComponent:(id<RAREiParentComponent>)container {
  [self initializeColAndRowComponentListsWithRAREiParentComponent:container];
  id<RAREiParentComponent> parent = container;
  RAREUIDimension *size = [((id<RAREiParentComponent>) nil_chk(parent)) getSize];
  RAREUIInsets *insets = [parent getInsetsWithRAREUIInsets:nil];
  int totalWidth = [RAREUIScreen snapToSizeWithFloat:((RAREUIDimension *) nil_chk(size))->width_ - ((RAREUIInsets *) nil_chk(insets))->left_ - insets->right_];
  int totalHeight = [RAREUIScreen snapToSizeWithFloat:size->height_ - insets->top_ - insets->bottom_];
  IOSIntArray *x = [self computeGridOriginsWithRAREiParentComponent:parent withInt:totalWidth withInt:(int) insets->left_ withJavaUtilList:colSpecs_ withJavaUtilListArray:colComponents_ withIntArray2:colGroupIndices_ withRAREJGFormLayout_Measure:minimumWidthMeasure_ withRAREJGFormLayout_Measure:preferredWidthMeasure_];
  IOSIntArray *y = [self computeGridOriginsWithRAREiParentComponent:parent withInt:totalHeight withInt:(int) insets->top_ withJavaUtilList:rowSpecs_ withJavaUtilListArray:rowComponents_ withIntArray2:rowGroupIndices_ withRAREJGFormLayout_Measure:minimumHeightMeasure_ withRAREJGFormLayout_Measure:preferredHeightMeasure_];
  return [[RAREJGFormLayout_LayoutInfo alloc] initWithIntArray:x withIntArray:y];
}

- (RAREUIDimension *)getMinimumSizeWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                        withRAREUIDimension:(RAREUIDimension *)size {
  if (size == nil) {
    size = [[RAREUIDimension alloc] init];
  }
  (void) [self computeLayoutSizeWithRAREiParentComponent:container withRAREJGFormLayout_Measure:minimumWidthMeasure_ withRAREJGFormLayout_Measure:minimumHeightMeasure_ withRAREUIDimension:size];
  return size;
}

- (RAREUIDimension *)getPreferredSizeWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                          withRAREUIDimension:(RAREUIDimension *)size
                                                    withFloat:(float)maxWidth {
  if (size == nil) {
    size = [[RAREUIDimension alloc] init];
  }
  if (maxWidth < 1) {
    (void) [self computeLayoutSizeWithRAREiParentComponent:container withRAREJGFormLayout_Measure:preferredWidthMeasure_ withRAREJGFormLayout_Measure:preferredHeightMeasure_ withRAREUIDimension:size];
  }
  else {
    [self calculateLayoutSizeWithRAREiParentComponent:container withFloat:maxWidth withFloat:JavaLangShort_MAX_VALUE withRAREUIDimension:size];
  }
  return size;
}

- (int)getRowCount {
  return [((id<JavaUtilList>) nil_chk(rowSpecs_)) size];
}

- (IOSObjectArray *)getRowGroups {
  return [self deepCloneWithIntArray2:rowGroupIndices_];
}

- (RAREJGRowSpec *)getRowSpecWithInt:(int)rowIndex {
  return (RAREJGRowSpec *) check_class_cast([((id<JavaUtilList>) nil_chk(rowSpecs_)) getWithInt:rowIndex - 1], [RAREJGRowSpec class]);
}

- (float)getSuggestedMinimumWidthWithRAREiParentComponent:(id<RAREiParentComponent>)container {
  return ((RAREUIDimension *) nil_chk([self computeLayoutSizeWithRAREiParentComponent:container withRAREJGFormLayout_Measure:minimumWidthMeasure_ withRAREJGFormLayout_Measure:minimumHeightMeasure_ withRAREUIDimension:[[RAREUIDimension alloc] init]]))->width_;
}

- (IOSBooleanArray *)isColumnRowComponentsHiddenWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                                                 withInt:(int)col
                                                                 withInt:(int)row {
  RAREJGCellConstraints *cc;
  id<RAREiPlatformComponent> c;
  IOSBooleanArray *b = [IOSBooleanArray arrayWithBooleans:(BOOL[]){ YES, YES } count:2];
  int len = [((id<RAREiParentComponent>) nil_chk(container)) getComponentCount];
  for (int i = 0; i < len; i++) {
    c = [container getComponentAtWithInt:i];
    cc = (RAREJGCellConstraints *) check_class_cast([container getComponentConstraintsWithRAREiPlatformComponent:c], [RAREJGCellConstraints class]);
    if ((((RAREJGCellConstraints *) nil_chk(cc))->gridX_ == col) && [((id<RAREiPlatformComponent>) nil_chk(c)) isVisible]) {
      (*IOSBooleanArray_GetRef(b, 1)) = NO;
    }
    if ((cc->gridY_ == row) && [((id<RAREiPlatformComponent>) nil_chk(c)) isVisible]) {
      (*IOSBooleanArray_GetRef(b, 0)) = NO;
    }
  }
  return b;
}

- (void)computeLayoutSizeExWithRAREiParentComponent:(id<RAREiParentComponent>)parent
                       withRAREJGFormLayout_Measure:(id<RAREJGFormLayout_Measure>)defaultWidthMeasure
                       withRAREJGFormLayout_Measure:(id<RAREJGFormLayout_Measure>)defaultHeightMeasure
                                withRAREUIDimension:(RAREUIDimension *)size
                                        withBoolean:(BOOL)initializeComponents {
  if (initializeComponents) {
    [self initializeColAndRowComponentListsWithRAREiParentComponent:parent];
  }
  IOSIntArray *colWidths = [self maximumSizesWithRAREiParentComponent:parent withJavaUtilList:colSpecs_ withJavaUtilListArray:colComponents_ withRAREJGFormLayout_Measure:minimumWidthMeasure_ withRAREJGFormLayout_Measure:preferredWidthMeasure_ withRAREJGFormLayout_Measure:defaultWidthMeasure];
  IOSIntArray *rowHeights = [self maximumSizesWithRAREiParentComponent:parent withJavaUtilList:rowSpecs_ withJavaUtilListArray:rowComponents_ withRAREJGFormLayout_Measure:minimumHeightMeasure_ withRAREJGFormLayout_Measure:preferredHeightMeasure_ withRAREJGFormLayout_Measure:defaultHeightMeasure];
  IOSIntArray *groupedWidths = [self groupedSizesWithIntArray2:colGroupIndices_ withIntArray:colWidths];
  IOSIntArray *groupedHeights = [self groupedSizesWithIntArray2:rowGroupIndices_ withIntArray:rowHeights];
  IOSIntArray *xOrigins = [self computeOriginsWithIntArray:groupedWidths withInt:0];
  IOSIntArray *yOrigins = [self computeOriginsWithIntArray:groupedHeights withInt:0];
  int width1 = [RAREJGFormLayout sumWithIntArray:groupedWidths];
  int height1 = [RAREJGFormLayout sumWithIntArray:groupedHeights];
  int maxWidth = width1;
  int maxHeight = height1;
  IOSIntArray *maxFixedSizeColsTable = [self computeMaximumFixedSpanTableWithJavaUtilList:colSpecs_];
  IOSIntArray *maxFixedSizeRowsTable = [self computeMaximumFixedSpanTableWithJavaUtilList:rowSpecs_];
  int len = [((id<RAREiParentComponent>) nil_chk(parent)) getComponentCount];
  for (int i = 0; i < len; i++) {
    id<RAREiPlatformComponent> component = [parent getComponentAtWithInt:i];
    RAREJGCellConstraints *constraints = (RAREJGCellConstraints *) check_class_cast([parent getComponentConstraintsWithRAREiPlatformComponent:component], [RAREJGCellConstraints class]);
    if (![self takeIntoAccountWithRAREiPlatformComponent:component withRAREJGCellConstraints:constraints]) {
      continue;
    }
    if ((((RAREJGCellConstraints *) nil_chk(constraints))->gridWidth_ > 1) && (constraints->gridWidth_ > IOSIntArray_Get(nil_chk(maxFixedSizeColsTable), constraints->gridX_ - 1))) {
      int compWidth = [((id<RAREJGFormLayout_Measure>) nil_chk(defaultWidthMeasure)) sizeOfWithRAREiPlatformComponent:component];
      int gridX1 = constraints->gridX_ - 1;
      int gridX2 = gridX1 + constraints->gridWidth_;
      int lead = IOSIntArray_Get(nil_chk(xOrigins), gridX1);
      int trail = width1 - IOSIntArray_Get(xOrigins, gridX2);
      int myWidth = lead + compWidth + trail;
      if (myWidth > maxWidth) {
        maxWidth = myWidth;
      }
    }
    if ((constraints->gridHeight_ > 1) && (constraints->gridHeight_ > IOSIntArray_Get(nil_chk(maxFixedSizeRowsTable), constraints->gridY_ - 1))) {
      int compHeight = [((id<RAREJGFormLayout_Measure>) nil_chk(defaultHeightMeasure)) sizeOfWithRAREiPlatformComponent:component];
      int gridY1 = constraints->gridY_ - 1;
      int gridY2 = gridY1 + constraints->gridHeight_;
      int lead = IOSIntArray_Get(nil_chk(yOrigins), gridY1);
      int trail = height1 - IOSIntArray_Get(yOrigins, gridY2);
      int myHeight = lead + compHeight + trail;
      if (myHeight > maxHeight) {
        maxHeight = myHeight;
      }
    }
  }
  ((RAREUIDimension *) nil_chk(size))->width_ = maxWidth;
  size->height_ = maxHeight;
}

- (float)getSuggestedMinimumWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                         withBoolean:(BOOL)forHeight {
  RAREUIDimension *size = [self computeLayoutSizeWithRAREiParentComponent:container withRAREJGFormLayout_Measure:minimumWidthMeasure_ withRAREJGFormLayout_Measure:minimumHeightMeasure_ withRAREUIDimension:[[RAREUIDimension alloc] init]];
  return forHeight ? ((RAREUIDimension *) nil_chk(size))->height_ : ((RAREUIDimension *) nil_chk(size))->width_;
}

- (void)adjustGroupIndicesWithIntArray2:(IOSObjectArray *)allGroupIndices
                                withInt:(int)modifiedIndex
                            withBoolean:(BOOL)remove {
  int offset = remove ? -1 : +1;
  for (int group = 0; group < (int) [((IOSObjectArray *) nil_chk(allGroupIndices)) count]; group++) {
    IOSIntArray *groupIndices = IOSObjectArray_Get(allGroupIndices, group);
    for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(groupIndices)) count]; i++) {
      int index = IOSIntArray_Get(groupIndices, i);
      if ((index == modifiedIndex) && remove) {
        @throw [[JavaLangIllegalStateException alloc] initWithNSString:[NSString stringWithFormat:@"The removed index %d must not be grouped.", modifiedIndex]];
      }
      else if (index >= modifiedIndex) {
        (*IOSIntArray_GetRef(groupIndices, i)) += offset;
      }
    }
  }
}

- (IOSIntArray *)compressedSizesWithJavaUtilList:(id<JavaUtilList>)formSpecs
                                         withInt:(int)totalSize
                                         withInt:(int)totalMinSize
                                         withInt:(int)totalPrefSize
                                    withIntArray:(IOSIntArray *)minSizes
                                    withIntArray:(IOSIntArray *)prefSizes {
  if (totalSize < totalMinSize) {
    return minSizes;
  }
  if (totalSize >= totalPrefSize) {
    return prefSizes;
  }
  int count = [((id<JavaUtilList>) nil_chk(formSpecs)) size];
  IOSIntArray *sizes = [IOSIntArray arrayWithLength:count];
  double totalCompressionSpace = totalPrefSize - totalSize;
  double maxCompressionSpace = totalPrefSize - totalMinSize;
  double compressionFactor = totalCompressionSpace / maxCompressionSpace;
  for (int i = 0; i < count; i++) {
    RAREJGFormSpec *formSpec = (RAREJGFormSpec *) check_class_cast([formSpecs getWithInt:i], [RAREJGFormSpec class]);
    (*IOSIntArray_GetRef(sizes, i)) = IOSIntArray_Get(nil_chk(prefSizes), i);
    if ([((id<RAREJGSize>) nil_chk([((RAREJGFormSpec *) nil_chk(formSpec)) getSize])) compressible]) {
      (*IOSIntArray_GetRef(sizes, i)) -= (int) [JavaLangMath roundWithDouble:(IOSIntArray_Get(prefSizes, i) - IOSIntArray_Get(nil_chk(minSizes), i)) * compressionFactor];
    }
  }
  return sizes;
}

- (IOSIntArray *)computeGridOriginsWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                                    withInt:(int)totalSize
                                                    withInt:(int)offset
                                           withJavaUtilList:(id<JavaUtilList>)formSpecs
                                      withJavaUtilListArray:(IOSObjectArray *)componentLists
                                              withIntArray2:(IOSObjectArray *)groupIndices
                               withRAREJGFormLayout_Measure:(id<RAREJGFormLayout_Measure>)minMeasure
                               withRAREJGFormLayout_Measure:(id<RAREJGFormLayout_Measure>)prefMeasure {
  IOSIntArray *prefSizes = [self maximumSizesWithRAREiParentComponent:container withJavaUtilList:formSpecs withJavaUtilListArray:componentLists withRAREJGFormLayout_Measure:minMeasure withRAREJGFormLayout_Measure:prefMeasure withRAREJGFormLayout_Measure:prefMeasure];
  IOSIntArray *minSizes = [self maximumSizesWithRAREiParentComponent:container withJavaUtilList:formSpecs withJavaUtilListArray:componentLists withRAREJGFormLayout_Measure:minMeasure withRAREJGFormLayout_Measure:prefMeasure withRAREJGFormLayout_Measure:minMeasure];
  IOSIntArray *groupedMinSizes = [self groupedSizesWithIntArray2:groupIndices withIntArray:minSizes];
  IOSIntArray *groupedPrefSizes = [self groupedSizesWithIntArray2:groupIndices withIntArray:prefSizes];
  int totalMinSize = [RAREJGFormLayout sumWithIntArray:groupedMinSizes];
  int totalPrefSize = [RAREJGFormLayout sumWithIntArray:groupedPrefSizes];
  IOSIntArray *compressedSizes = [self compressedSizesWithJavaUtilList:formSpecs withInt:totalSize withInt:totalMinSize withInt:totalPrefSize withIntArray:groupedMinSizes withIntArray:prefSizes];
  IOSIntArray *groupedSizes = [self groupedSizesWithIntArray2:groupIndices withIntArray:compressedSizes];
  int totalGroupedSize = [RAREJGFormLayout sumWithIntArray:groupedSizes];
  IOSIntArray *sizes = [self distributedSizesWithJavaUtilList:formSpecs withInt:totalSize withInt:totalGroupedSize withIntArray:groupedSizes];
  return [self computeOriginsWithIntArray:sizes withInt:offset];
}

- (IOSIntArray *)computeMaximumFixedSpanTableWithJavaUtilList:(id<JavaUtilList>)formSpecs {
  int size = [((id<JavaUtilList>) nil_chk(formSpecs)) size];
  IOSIntArray *table = [IOSIntArray arrayWithLength:size];
  int maximumFixedSpan = JavaLangInteger_MAX_VALUE;
  for (int i = size - 1; i >= 0; i--) {
    RAREJGFormSpec *spec = (RAREJGFormSpec *) check_class_cast([formSpecs getWithInt:i], [RAREJGFormSpec class]);
    if ([((RAREJGFormSpec *) nil_chk(spec)) canGrow]) {
      maximumFixedSpan = 0;
    }
    (*IOSIntArray_GetRef(table, i)) = maximumFixedSpan;
    if (maximumFixedSpan < JavaLangInteger_MAX_VALUE) {
      maximumFixedSpan++;
    }
  }
  return table;
}

- (IOSIntArray *)computeOriginsWithIntArray:(IOSIntArray *)sizes
                                    withInt:(int)offset {
  int count = (int) [((IOSIntArray *) nil_chk(sizes)) count];
  IOSIntArray *origins = [IOSIntArray arrayWithLength:count + 1];
  (*IOSIntArray_GetRef(origins, 0)) = offset;
  for (int i = 1; i <= count; i++) {
    (*IOSIntArray_GetRef(origins, i)) = IOSIntArray_Get(origins, i - 1) + IOSIntArray_Get(sizes, i - 1);
  }
  return origins;
}

- (IOSObjectArray *)deepCloneWithIntArray2:(IOSObjectArray *)array {
  IOSObjectArray *result = [IOSObjectArray arrayWithLength:(int) [((IOSObjectArray *) nil_chk(array)) count] type:[IOSIntArray iosClass]];
  for (int i = 0; i < (int) [result count]; i++) {
    (void) IOSObjectArray_Set(result, i, [((IOSIntArray *) IOSObjectArray_Get(array, i)) clone]);
  }
  return result;
}

- (IOSIntArray *)distributedSizesWithJavaUtilList:(id<JavaUtilList>)formSpecs
                                          withInt:(int)totalSize
                                          withInt:(int)totalPrefSize
                                     withIntArray:(IOSIntArray *)inputSizes {
  double totalFreeSpace = totalSize - totalPrefSize;
  if (totalFreeSpace < 0) {
    return inputSizes;
  }
  int count = [((id<JavaUtilList>) nil_chk(formSpecs)) size];
  double totalWeight = 0.0;
  for (int i = 0; i < count; i++) {
    RAREJGFormSpec *formSpec = (RAREJGFormSpec *) check_class_cast([formSpecs getWithInt:i], [RAREJGFormSpec class]);
    totalWeight += [((RAREJGFormSpec *) nil_chk(formSpec)) getResizeWeight];
  }
  if (totalWeight == 0.0) {
    return inputSizes;
  }
  IOSIntArray *sizes = [IOSIntArray arrayWithLength:count];
  double restSpace = totalFreeSpace;
  int roundedRestSpace = (int) totalFreeSpace;
  for (int i = 0; i < count; i++) {
    RAREJGFormSpec *formSpec = (RAREJGFormSpec *) check_class_cast([formSpecs getWithInt:i], [RAREJGFormSpec class]);
    double weight = [((RAREJGFormSpec *) nil_chk(formSpec)) getResizeWeight];
    if (weight == RAREJGFormSpec_NO_GROW) {
      (*IOSIntArray_GetRef(sizes, i)) = IOSIntArray_Get(nil_chk(inputSizes), i);
    }
    else {
      double roundingCorrection = restSpace - roundedRestSpace;
      double extraSpace = totalFreeSpace * weight / totalWeight;
      double correctedExtraSpace = extraSpace - roundingCorrection;
      int roundedExtraSpace = (int) [JavaLangMath roundWithDouble:correctedExtraSpace];
      (*IOSIntArray_GetRef(sizes, i)) = IOSIntArray_Get(nil_chk(inputSizes), i) + roundedExtraSpace;
      restSpace -= extraSpace;
      roundedRestSpace -= roundedExtraSpace;
    }
  }
  return sizes;
}

- (IOSIntArray *)groupedSizesWithIntArray2:(IOSObjectArray *)groups
                              withIntArray:(IOSIntArray *)rawSizes {
  if ((groups == nil) || ((int) [groups count] == 0)) {
    return rawSizes;
  }
  IOSIntArray *sizes = [IOSIntArray arrayWithLength:(int) [((IOSIntArray *) nil_chk(rawSizes)) count]];
  for (int i = 0; i < (int) [sizes count]; i++) {
    (*IOSIntArray_GetRef(sizes, i)) = IOSIntArray_Get(rawSizes, i);
  }
  for (int group = 0; group < (int) [((IOSObjectArray *) nil_chk(groups)) count]; group++) {
    IOSIntArray *groupIndices = IOSObjectArray_Get(groups, group);
    int groupMaxSize = 0;
    for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(groupIndices)) count]; i++) {
      int index = IOSIntArray_Get(groupIndices, i) - 1;
      groupMaxSize = [JavaLangMath maxWithInt:groupMaxSize withInt:IOSIntArray_Get(sizes, index)];
    }
    for (int i = 0; i < (int) [groupIndices count]; i++) {
      int index = IOSIntArray_Get(groupIndices, i) - 1;
      (*IOSIntArray_GetRef(sizes, index)) = groupMaxSize;
    }
  }
  return sizes;
}

- (IOSIntArray *)maximumSizesWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                     withJavaUtilList:(id<JavaUtilList>)formSpecs
                                withJavaUtilListArray:(IOSObjectArray *)componentLists
                         withRAREJGFormLayout_Measure:(id<RAREJGFormLayout_Measure>)minMeasure
                         withRAREJGFormLayout_Measure:(id<RAREJGFormLayout_Measure>)prefMeasure
                         withRAREJGFormLayout_Measure:(id<RAREJGFormLayout_Measure>)defaultMeasure {
  RAREJGFormSpec *formSpec;
  int size = [((id<JavaUtilList>) nil_chk(formSpecs)) size];
  IOSIntArray *result = [IOSIntArray arrayWithLength:size];
  for (int i = 0; i < size; i++) {
    formSpec = (RAREJGFormSpec *) check_class_cast([formSpecs getWithInt:i], [RAREJGFormSpec class]);
    (*IOSIntArray_GetRef(result, i)) = [((RAREJGFormSpec *) nil_chk(formSpec)) maximumSizeWithRAREiParentComponent:container withJavaUtilList:IOSObjectArray_Get(nil_chk(componentLists), i) withRAREJGFormLayout_Measure:minMeasure withRAREJGFormLayout_Measure:prefMeasure withRAREJGFormLayout_Measure:defaultMeasure];
  }
  return result;
}

- (void)shiftComponentsHorizontallyWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                                    withInt:(int)columnIndex
                                                withBoolean:(BOOL)remove {
  int offset = remove ? -1 : 1;
  int len = [((id<RAREiParentComponent>) nil_chk(container)) getComponentCount];
  for (int i = 0; i < len; i++) {
    id<RAREiPlatformComponent> component = [container getComponentAtWithInt:i];
    RAREJGCellConstraints *constraints = (RAREJGCellConstraints *) check_class_cast([container getComponentConstraintsWithRAREiPlatformComponent:component], [RAREJGCellConstraints class]);
    int x1 = ((RAREJGCellConstraints *) nil_chk(constraints))->gridX_;
    int w = constraints->gridWidth_;
    int x2 = x1 + w - 1;
    if ((x1 == columnIndex) && remove) {
      @throw [[JavaLangIllegalStateException alloc] initWithNSString:[NSString stringWithFormat:@"The removed column %d must not contain component origins.\nIllegal component=%@", columnIndex, component]];
    }
    else if (x1 >= columnIndex) {
      constraints->gridX_ += offset;
    }
    else if (x2 >= columnIndex) {
      constraints->gridWidth_ += offset;
    }
  }
}

- (void)shiftComponentsVerticallyWithRAREiParentComponent:(id<RAREiParentComponent>)container
                                                  withInt:(int)rowIndex
                                              withBoolean:(BOOL)remove {
  int offset = remove ? -1 : 1;
  int len = [((id<RAREiParentComponent>) nil_chk(container)) getComponentCount];
  for (int i = 0; i < len; i++) {
    id<RAREiPlatformComponent> component = [container getComponentAtWithInt:i];
    RAREJGCellConstraints *constraints = (RAREJGCellConstraints *) check_class_cast([container getComponentConstraintsWithRAREiPlatformComponent:component], [RAREJGCellConstraints class]);
    int y1 = ((RAREJGCellConstraints *) nil_chk(constraints))->gridY_;
    int h = constraints->gridHeight_;
    int y2 = y1 + h - 1;
    if ((y1 == rowIndex) && remove) {
      @throw [[JavaLangIllegalStateException alloc] initWithNSString:[NSString stringWithFormat:@"The removed row %d must not contain component origins.\nIllegal component=%@", rowIndex, component]];
    }
    else if (y1 >= rowIndex) {
      constraints->gridY_ += offset;
    }
    else if (y2 >= rowIndex) {
      constraints->gridHeight_ += offset;
    }
  }
}

+ (int)sumWithIntArray:(IOSIntArray *)sizes {
  int sum = 0;
  for (int i = (int) [((IOSIntArray *) nil_chk(sizes)) count] - 1; i >= 0; i--) {
    sum += IOSIntArray_Get(sizes, i);
  }
  return sum;
}

- (BOOL)takeIntoAccountWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component
                        withRAREJGCellConstraints:(RAREJGCellConstraints *)cc {
  if (cc == nil) {
    return NO;
  }
  if (supportsUnmanagedComponents_ && [((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:[((id<RAREiPlatformComponent>) nil_chk(component)) getClientPropertyWithNSString:[RAREiConstants RARE_UNMANAGED_COMPONENT]]]) {
    return NO;
  }
  return [((id<RAREiPlatformComponent>) nil_chk(component)) isVisible] || ((((RAREJGCellConstraints *) nil_chk(cc))->honorsVisibility_ == nil) && ![self getHonorsVisibility]) || [((JavaLangBoolean *) nil_chk([JavaLangBoolean getFALSE])) isEqual:cc->honorsVisibility_];
}

- (BOOL)isSupportsUnmanagedComponents {
  return supportsUnmanagedComponents_;
}

- (void)setSupportsUnmanagedComponentsWithBoolean:(BOOL)supportsUnmanagedComponents {
  self->supportsUnmanagedComponents_ = supportsUnmanagedComponents;
}

- (void)copyAllFieldsTo:(RAREJGFormLayout *)other {
  [super copyAllFieldsTo:other];
  other->colComponents_ = colComponents_;
  other->colGroupIndices_ = colGroupIndices_;
  other->colSpecs_ = colSpecs_;
  other->componentSizeCache_ = componentSizeCache_;
  other->hasComponentsThatChangeHeightBasedOnWidth_ = hasComponentsThatChangeHeightBasedOnWidth_;
  other->honorsVisibility_ = honorsVisibility_;
  other->minimumHeightMeasure_ = minimumHeightMeasure_;
  other->minimumWidthMeasure_ = minimumWidthMeasure_;
  other->preferredHeightMeasure_ = preferredHeightMeasure_;
  other->preferredWidthMeasure_ = preferredWidthMeasure_;
  other->rowComponents_ = rowComponents_;
  other->rowGroupIndices_ = rowGroupIndices_;
  other->rowSpecs_ = rowSpecs_;
  other->singleColumn_ = singleColumn_;
  other->supportsUnmanagedComponents_ = supportsUnmanagedComponents_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "computeLayoutWithRAREiParentComponent:withRAREUIDimension:withRAREUIInsets:", NULL, "LRAREJGFormLayout_LayoutInfo", 0x1, NULL },
    { "computeLayoutSizeWithRAREiParentComponent:withRAREJGFormLayout_Measure:withRAREJGFormLayout_Measure:withRAREUIDimension:", NULL, "LRAREUIDimension", 0x1, NULL },
    { "layoutWithRAREiParentComponent:withRAREUIDimension:withRAREUIInsets:", NULL, "LRAREJGFormLayout_LayoutInfo", 0x1, NULL },
    { "getColumnGroups", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getColumnSpecWithInt:", NULL, "LRAREJGColumnSpec", 0x1, NULL },
    { "getComponentAtWithRAREiParentComponent:withInt:withInt:", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getHonorsVisibility", NULL, "Z", 0x1, NULL },
    { "getLayoutInfoWithRAREiParentComponent:", NULL, "LRAREJGFormLayout_LayoutInfo", 0x1, NULL },
    { "getMinimumSizeWithRAREiParentComponent:withRAREUIDimension:", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getPreferredSizeWithRAREiParentComponent:withRAREUIDimension:withFloat:", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getRowGroups", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getRowSpecWithInt:", NULL, "LRAREJGRowSpec", 0x1, NULL },
    { "isColumnRowComponentsHiddenWithRAREiParentComponent:withInt:withInt:", NULL, "LIOSBooleanArray", 0x1, NULL },
    { "computeLayoutSizeExWithRAREiParentComponent:withRAREJGFormLayout_Measure:withRAREJGFormLayout_Measure:withRAREUIDimension:withBoolean:", NULL, "V", 0x4, NULL },
    { "getSuggestedMinimumWithRAREiParentComponent:withBoolean:", NULL, "F", 0x4, NULL },
    { "adjustGroupIndicesWithIntArray2:withInt:withBoolean:", NULL, "V", 0x2, NULL },
    { "compressedSizesWithJavaUtilList:withInt:withInt:withInt:withIntArray:withIntArray:", NULL, "LIOSIntArray", 0x2, NULL },
    { "computeGridOriginsWithRAREiParentComponent:withInt:withInt:withJavaUtilList:withJavaUtilListArray:withIntArray2:withRAREJGFormLayout_Measure:withRAREJGFormLayout_Measure:", NULL, "LIOSIntArray", 0x2, NULL },
    { "computeMaximumFixedSpanTableWithJavaUtilList:", NULL, "LIOSIntArray", 0x2, NULL },
    { "computeOriginsWithIntArray:withInt:", NULL, "LIOSIntArray", 0x2, NULL },
    { "deepCloneWithIntArray2:", NULL, "LIOSObjectArray", 0x2, NULL },
    { "distributedSizesWithJavaUtilList:withInt:withInt:withIntArray:", NULL, "LIOSIntArray", 0x2, NULL },
    { "groupedSizesWithIntArray2:withIntArray:", NULL, "LIOSIntArray", 0x2, NULL },
    { "maximumSizesWithRAREiParentComponent:withJavaUtilList:withJavaUtilListArray:withRAREJGFormLayout_Measure:withRAREJGFormLayout_Measure:withRAREJGFormLayout_Measure:", NULL, "LIOSIntArray", 0x2, NULL },
    { "shiftComponentsHorizontallyWithRAREiParentComponent:withInt:withBoolean:", NULL, "V", 0x2, NULL },
    { "shiftComponentsVerticallyWithRAREiParentComponent:withInt:withBoolean:", NULL, "V", 0x2, NULL },
    { "sumWithIntArray:", NULL, "I", 0xa, NULL },
    { "takeIntoAccountWithRAREiPlatformComponent:withRAREJGCellConstraints:", NULL, "Z", 0x2, NULL },
    { "isSupportsUnmanagedComponents", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "colComponents_", NULL, 0x82, "LIOSObjectArray" },
    { "componentSizeCache_", NULL, 0x12, "LRAREJGFormLayout_ComponentSizeCache" },
    { "minimumHeightMeasure_", NULL, 0x12, "LRAREJGFormLayout_Measure" },
    { "minimumWidthMeasure_", NULL, 0x12, "LRAREJGFormLayout_Measure" },
    { "preferredHeightMeasure_", NULL, 0x12, "LRAREJGFormLayout_Measure" },
    { "preferredWidthMeasure_", NULL, 0x12, "LRAREJGFormLayout_Measure" },
    { "rowComponents_", NULL, 0x82, "LIOSObjectArray" },
    { "hasComponentsThatChangeHeightBasedOnWidth_", NULL, 0x0, "Z" },
    { "supportsUnmanagedComponents_", NULL, 0x0, "Z" },
  };
  static J2ObjcClassInfo _RAREJGFormLayout = { "FormLayout", "com.jgoodies.forms.layout", NULL, 0x1, 29, methods, 9, fields, 0, NULL};
  return &_RAREJGFormLayout;
}

@end
@implementation RAREJGFormLayout_LayoutInfo

- (id)initWithIntArray:(IOSIntArray *)xOrigins
          withIntArray:(IOSIntArray *)yOrigins {
  if (self = [super init]) {
    self->columnOrigins_ = xOrigins;
    self->rowOrigins_ = yOrigins;
  }
  return self;
}

- (int)getHeight {
  return IOSIntArray_Get(rowOrigins_, (int) [((IOSIntArray *) nil_chk(rowOrigins_)) count] - 1) - IOSIntArray_Get(rowOrigins_, 0);
}

- (int)getWidth {
  return IOSIntArray_Get(columnOrigins_, (int) [((IOSIntArray *) nil_chk(columnOrigins_)) count] - 1) - IOSIntArray_Get(columnOrigins_, 0);
}

- (int)getX {
  return IOSIntArray_Get(nil_chk(columnOrigins_), 0);
}

- (int)getY {
  return IOSIntArray_Get(nil_chk(rowOrigins_), 0);
}

- (void)copyAllFieldsTo:(RAREJGFormLayout_LayoutInfo *)other {
  [super copyAllFieldsTo:other];
  other->columnOrigins_ = columnOrigins_;
  other->rowOrigins_ = rowOrigins_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithIntArray:withIntArray:", NULL, NULL, 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "columnOrigins_", NULL, 0x11, "LIOSIntArray" },
    { "rowOrigins_", NULL, 0x11, "LIOSIntArray" },
  };
  static J2ObjcClassInfo _RAREJGFormLayout_LayoutInfo = { "LayoutInfo", "com.jgoodies.forms.layout", "FormLayout", 0x19, 1, methods, 2, fields, 0, NULL};
  return &_RAREJGFormLayout_LayoutInfo;
}

@end
@implementation RAREJGFormLayout_ComponentSizeCache

- (id)initWithInt:(int)initialCapacity {
  if (self = [super init]) {
    minimumSizes_ = [[JavaUtilHashMap alloc] initWithInt:initialCapacity];
    preferredSizes_ = [[JavaUtilHashMap alloc] initWithInt:initialCapacity];
  }
  return self;
}

- (RAREUIDimension *)getPreferredSizeWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component
                                                        withInt:(int)maxWidth {
  RAREUIDimension *size = (RAREUIDimension *) check_class_cast([((id<JavaUtilMap>) nil_chk(preferredSizes_)) getWithId:component], [RAREUIDimension class]);
  (void) [((id<RAREiPlatformComponent>) nil_chk(component)) getPreferredSizeWithRAREUIDimension:size withFloat:maxWidth];
  (void) [preferredSizes_ putWithId:component withId:size];
  return size;
}

- (void)invalidate {
  [((id<JavaUtilMap>) nil_chk(minimumSizes_)) clear];
  [((id<JavaUtilMap>) nil_chk(preferredSizes_)) clear];
}

- (void)removeEntryWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component {
  (void) [((id<JavaUtilMap>) nil_chk(minimumSizes_)) removeWithId:component];
  (void) [((id<JavaUtilMap>) nil_chk(preferredSizes_)) removeWithId:component];
}

- (RAREUIDimension *)getMinimumSizeWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component {
  RAREUIDimension *size = (RAREUIDimension *) check_class_cast([((id<JavaUtilMap>) nil_chk(minimumSizes_)) getWithId:component], [RAREUIDimension class]);
  if (size == nil) {
    size = [((id<RAREiPlatformComponent>) nil_chk(component)) getMinimumSize];
    (void) [minimumSizes_ putWithId:component withId:size];
  }
  return size;
}

- (RAREUIDimension *)getPreferredSizeWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component {
  RAREUIDimension *size = (RAREUIDimension *) check_class_cast([((id<JavaUtilMap>) nil_chk(preferredSizes_)) getWithId:component], [RAREUIDimension class]);
  if (size == nil) {
    size = [((id<RAREiPlatformComponent>) nil_chk(component)) getPreferredSizeWithRAREUIDimension:[[RAREUIDimension alloc] init] withFloat:0];
    (void) [preferredSizes_ putWithId:component withId:size];
  }
  return size;
}

- (void)copyAllFieldsTo:(RAREJGFormLayout_ComponentSizeCache *)other {
  [super copyAllFieldsTo:other];
  other->minimumSizes_ = minimumSizes_;
  other->preferredSizes_ = preferredSizes_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithInt:", NULL, NULL, 0x2, NULL },
    { "getPreferredSizeWithRAREiPlatformComponent:withInt:", NULL, "LRAREUIDimension", 0x1, NULL },
    { "invalidate", NULL, "V", 0x0, NULL },
    { "removeEntryWithRAREiPlatformComponent:", NULL, "V", 0x0, NULL },
    { "getMinimumSizeWithRAREiPlatformComponent:", NULL, "LRAREUIDimension", 0x10, NULL },
    { "getPreferredSizeWithRAREiPlatformComponent:", NULL, "LRAREUIDimension", 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "minimumSizes_", NULL, 0x12, "LJavaUtilMap" },
    { "preferredSizes_", NULL, 0x12, "LJavaUtilMap" },
  };
  static J2ObjcClassInfo _RAREJGFormLayout_ComponentSizeCache = { "ComponentSizeCache", "com.jgoodies.forms.layout", "FormLayout", 0x1a, 6, methods, 2, fields, 0, NULL};
  return &_RAREJGFormLayout_ComponentSizeCache;
}

@end

@interface RAREJGFormLayout_Measure : NSObject
@end

@implementation RAREJGFormLayout_Measure

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "sizeOfWithRAREiPlatformComponent:", NULL, "I", 0x401, NULL },
  };
  static J2ObjcClassInfo _RAREJGFormLayout_Measure = { "Measure", "com.jgoodies.forms.layout", "FormLayout", 0x209, 1, methods, 0, NULL, 0, NULL};
  return &_RAREJGFormLayout_Measure;
}

@end
@implementation RAREJGFormLayout_CachingMeasure

- (id)initWithRAREJGFormLayout_ComponentSizeCache:(RAREJGFormLayout_ComponentSizeCache *)cache {
  if (self = [super init]) {
    self->cache_ = cache;
  }
  return self;
}

- (int)sizeOfWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)copyAllFieldsTo:(RAREJGFormLayout_CachingMeasure *)other {
  [super copyAllFieldsTo:other];
  other->cache_ = cache_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithRAREJGFormLayout_ComponentSizeCache:", NULL, NULL, 0x2, NULL },
    { "sizeOfWithRAREiPlatformComponent:", NULL, "I", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "cache_", NULL, 0x14, "LRAREJGFormLayout_ComponentSizeCache" },
  };
  static J2ObjcClassInfo _RAREJGFormLayout_CachingMeasure = { "CachingMeasure", "com.jgoodies.forms.layout", "FormLayout", 0x40a, 2, methods, 1, fields, 0, NULL};
  return &_RAREJGFormLayout_CachingMeasure;
}

@end
@implementation RAREJGFormLayout_MinimumHeightMeasure

- (id)initWithRAREJGFormLayout_ComponentSizeCache:(RAREJGFormLayout_ComponentSizeCache *)cache {
  return [super initWithRAREJGFormLayout_ComponentSizeCache:cache];
}

- (int)sizeOfWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  return (int) ((RAREUIDimension *) nil_chk([((RAREJGFormLayout_ComponentSizeCache *) nil_chk(cache_)) getMinimumSizeWithRAREiPlatformComponent:c]))->height_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithRAREJGFormLayout_ComponentSizeCache:", NULL, NULL, 0x2, NULL },
  };
  static J2ObjcClassInfo _RAREJGFormLayout_MinimumHeightMeasure = { "MinimumHeightMeasure", "com.jgoodies.forms.layout", "FormLayout", 0x1a, 1, methods, 0, NULL, 0, NULL};
  return &_RAREJGFormLayout_MinimumHeightMeasure;
}

@end
@implementation RAREJGFormLayout_MinimumWidthMeasure

- (id)initWithRAREJGFormLayout_ComponentSizeCache:(RAREJGFormLayout_ComponentSizeCache *)cache {
  return [super initWithRAREJGFormLayout_ComponentSizeCache:cache];
}

- (int)sizeOfWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  return (int) ((RAREUIDimension *) nil_chk([((RAREJGFormLayout_ComponentSizeCache *) nil_chk(cache_)) getMinimumSizeWithRAREiPlatformComponent:c]))->width_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithRAREJGFormLayout_ComponentSizeCache:", NULL, NULL, 0x2, NULL },
  };
  static J2ObjcClassInfo _RAREJGFormLayout_MinimumWidthMeasure = { "MinimumWidthMeasure", "com.jgoodies.forms.layout", "FormLayout", 0x1a, 1, methods, 0, NULL, 0, NULL};
  return &_RAREJGFormLayout_MinimumWidthMeasure;
}

@end
@implementation RAREJGFormLayout_PreferredHeightMeasure

- (id)initWithRAREJGFormLayout_ComponentSizeCache:(RAREJGFormLayout_ComponentSizeCache *)cache {
  return [super initWithRAREJGFormLayout_ComponentSizeCache:cache];
}

- (int)sizeOfWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  return (int) ((RAREUIDimension *) nil_chk([((RAREJGFormLayout_ComponentSizeCache *) nil_chk(cache_)) getPreferredSizeWithRAREiPlatformComponent:c]))->height_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithRAREJGFormLayout_ComponentSizeCache:", NULL, NULL, 0x2, NULL },
  };
  static J2ObjcClassInfo _RAREJGFormLayout_PreferredHeightMeasure = { "PreferredHeightMeasure", "com.jgoodies.forms.layout", "FormLayout", 0x1a, 1, methods, 0, NULL, 0, NULL};
  return &_RAREJGFormLayout_PreferredHeightMeasure;
}

@end
@implementation RAREJGFormLayout_PreferredWidthMeasure

- (id)initWithRAREJGFormLayout_ComponentSizeCache:(RAREJGFormLayout_ComponentSizeCache *)cache {
  return [super initWithRAREJGFormLayout_ComponentSizeCache:cache];
}

- (int)sizeOfWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  return (int) ((RAREUIDimension *) nil_chk([((RAREJGFormLayout_ComponentSizeCache *) nil_chk(cache_)) getPreferredSizeWithRAREiPlatformComponent:c]))->width_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithRAREJGFormLayout_ComponentSizeCache:", NULL, NULL, 0x2, NULL },
  };
  static J2ObjcClassInfo _RAREJGFormLayout_PreferredWidthMeasure = { "PreferredWidthMeasure", "com.jgoodies.forms.layout", "FormLayout", 0x1a, 1, methods, 0, NULL, 0, NULL};
  return &_RAREJGFormLayout_PreferredWidthMeasure;
}

@end
