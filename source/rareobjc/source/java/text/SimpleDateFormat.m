//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/Projects/porting/src/java/text/SimpleDateFormat.java
//
//  Created by decoteaud on 2/17/14.
//

#include "IOSClass.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/InternalError.h"
#include "java/lang/StringBuffer.h"
#include "java/text/DateFormat.h"
#include "java/text/DateFormatSymbols.h"
#include "java/text/FieldPosition.h"
#include "java/text/ParseException.h"
#include "java/text/ParsePosition.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"
#include "java/util/Locale.h"
#import "AppleHelper.h"
#import "APView+Component.h"

@implementation JavaTextSimpleDateFormat

- (id)init {
  return [self initJavaTextSimpleDateFormatWithNSString:nil withJavaUtilLocale:[JavaUtilLocale getDefault]];
}

- (id)initWithNSString:(NSString *)pattern {
  return [self initJavaTextSimpleDateFormatWithNSString:pattern withJavaUtilLocale:[JavaUtilLocale getDefault]];
}

- (id)initWithNSString:(NSString *)template_
withJavaTextDateFormatSymbols:(JavaTextDateFormatSymbols *)symbols {
  if (self = [super init]) {
    pattern_ = template_;
    format__ = symbols;
    [self initialize__];
    if ((pattern_ != nil) && ([pattern_ length] > 0)) {
      [self applyPatternWithNSString:pattern_];
    }
  }
  return self;
}

- (id)initJavaTextSimpleDateFormatWithNSString:(NSString *)template_
                            withJavaUtilLocale:(JavaUtilLocale *)locale {
  if (self = [super init]) {
    pattern_ = template_;
    format__ = [[JavaTextDateFormatSymbols alloc] initWithJavaUtilLocale:locale];
    [self initialize__];
    if ((pattern_ != nil) && ([pattern_ length] > 0)) {
      [self applyPatternWithNSString:pattern_];
    }
  }
  return self;
}

- (id)initWithNSString:(NSString *)template_
    withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [self initJavaTextSimpleDateFormatWithNSString:template_ withJavaUtilLocale:locale];
}

- (void)applyLocalizedPatternWithNSString:(NSString *)template_ {
  [((NSDateFormatter*)proxy_) setDateFormat:template_];
}

- (void)applyPatternWithNSString:(NSString *)template_ {
  [((NSDateFormatter*)proxy_) setDateFormat:template_];
}

- (id)clone {
  @try {
    return [[JavaTextSimpleDateFormat alloc] initWithNSString:pattern_ withJavaTextDateFormatSymbols:(JavaTextDateFormatSymbols *) check_class_cast([((JavaTextDateFormatSymbols *) nil_chk(format__)) clone], [JavaTextDateFormatSymbols class])];
  }
  @catch (JavaLangCloneNotSupportedException *ex) {
    @throw [[JavaLangInternalError alloc] initWithNSString:@"Cant clone"];
  }
}

- (JavaLangStringBuffer *)formatWithJavaUtilDate:(JavaUtilDate *)date
                        withJavaLangStringBuffer:(JavaLangStringBuffer *)toAppendTo
                       withJavaTextFieldPosition:(JavaTextFieldPosition *)fieldPosition {
  (void) [((JavaLangStringBuffer *) nil_chk(toAppendTo)) appendWithNSString:[self formatWithJavaUtilDate:date]];
  return toAppendTo;
}

- (void)initialize__ {
  proxy_=format__->proxy_;
}

- (JavaUtilDate *)parseWithNSString:(NSString *)source
          withJavaTextParsePosition:(JavaTextParsePosition *)pos {
  NSDate* date=[((NSDateFormatter*)proxy_) dateFromString:source];
  if(!date) {
    return nil;
  }
  [pos setIndexWithInt:(int)source.length];
  return [[JavaUtilDate alloc] initWithLong: (([date timeIntervalSince1970])*1000)];
}

- (id)parseObjectWithNSString:(NSString *)string {
  return [self parseWithNSString:string];
}

- (NSString *)toLocalizedPattern {
  return pattern_;
}

- (NSString *)toPattern {
  return pattern_;
}

- (id)getNSDateFormatter {
  return proxy_;
}

- (void)set2DigitYearStartWithJavaUtilDate:(JavaUtilDate *)startDate {
  [((NSDateFormatter*)proxy_) setTwoDigitStartDate:[NSDate fromJavaDate: startDate]];
}

- (void)copyAllFieldsTo:(JavaTextSimpleDateFormat *)other {
  [super copyAllFieldsTo:other];
  other->format__ = format__;
  other->pattern_ = pattern_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "applyLocalizedPatternWithNSString:", NULL, "V", 0x101, NULL },
    { "applyPatternWithNSString:", NULL, "V", 0x101, NULL },
    { "clone", NULL, "LNSObject", 0x1, NULL },
    { "formatWithJavaUtilDate:withJavaLangStringBuffer:withJavaTextFieldPosition:", NULL, "LJavaLangStringBuffer", 0x1, NULL },
    { "initialize__", NULL, "V", 0x102, NULL },
    { "parseWithNSString:withJavaTextParsePosition:", NULL, "LJavaUtilDate", 0x101, NULL },
    { "parseObjectWithNSString:", NULL, "LNSObject", 0x1, "JavaTextParseException" },
    { "toLocalizedPattern", NULL, "LNSString", 0x1, NULL },
    { "toPattern", NULL, "LNSString", 0x1, NULL },
    { "getNSDateFormatter", NULL, "LNSObject", 0x1, NULL },
    { "set2DigitYearStartWithJavaUtilDate:", NULL, "V", 0x101, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "format__", "format", 0x4, "LJavaTextDateFormatSymbols" },
    { "pattern_", NULL, 0x4, "LNSString" },
  };
  static J2ObjcClassInfo _JavaTextSimpleDateFormat = { "SimpleDateFormat", "java.text", NULL, 0x1, 11, methods, 2, fields, 0, NULL};
  return &_JavaTextSimpleDateFormat;
}

@end
