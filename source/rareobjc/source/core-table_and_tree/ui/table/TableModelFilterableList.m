//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-table_and_tree/com/appnativa/rare/ui/table/TableModelFilterableList.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/iTableModel.h"
#include "com/appnativa/rare/ui/table/TableModelFilterableList.h"
#include "com/appnativa/util/iFilter.h"
#include "com/appnativa/util/iStringConverter.h"
#include "java/util/AbstractList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"

@implementation RARETableModelFilterableList

- (id)initWithRAREiTableModel:(id<RAREiTableModel>)tm {
  if (self = [super init]) {
    model_ = tm;
  }
  return self;
}

- (BOOL)addWithId:(RARERenderableDataItem *)item {
  [((id<RAREiTableModel>) nil_chk(model_)) addRowWithRARERenderableDataItem:item];
  return YES;
}

- (BOOL)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  int len = [self size];
  [((id<RAREiTableModel>) nil_chk(model_)) addRowsWithJavaUtilCollection:c];
  return len != [self size];
}

- (BOOL)addAllWithInt:(int)index
withJavaUtilCollection:(id<JavaUtilCollection>)c {
  int len = [self size];
  [((id<RAREiTableModel>) nil_chk(model_)) addRowsWithInt:index withJavaUtilCollection:c];
  return len != [self size];
}

- (void)addIndexToFilteredListWithInt:(int)index {
  [((id<RAREiTableModel>) nil_chk(model_)) filterWithInt:index];
}

- (void)addToFilteredListWithId:(RARERenderableDataItem *)item {
  [((id<RAREiTableModel>) nil_chk(model_)) addToFilteredListWithId:item];
}

- (void)addToFilteredListWithInt:(int)index
                          withId:(RARERenderableDataItem *)item {
  [((id<RAREiTableModel>) nil_chk(model_)) addToFilteredListWithInt:index withId:item];
}

- (void)clear {
  if ([self size] > 0) {
    [((id<RAREiTableModel>) nil_chk(model_)) clearTableData];
  }
}

- (void)moveWithInt:(int)from
            withInt:(int)to {
  [((id<RAREiTableModel>) nil_chk(model_)) moveWithInt:from withInt:to];
}

- (id<JavaUtilList>)concatWithJavaUtilListArray:(IOSObjectArray *)e {
  return [((id<RAREiTableModel>) nil_chk(model_)) concatWithJavaUtilListArray:e];
}

- (void)ensureCapacityWithInt:(int)capacity {
}

- (BOOL)filterWithRAREUTiFilter:(id<RAREUTiFilter>)filter {
  return [((id<RAREiTableModel>) nil_chk(model_)) filterWithRAREUTiFilter:filter];
}

- (BOOL)filterWithNSString:(NSString *)filter
               withBoolean:(BOOL)contains {
  return [((id<RAREiTableModel>) nil_chk(model_)) filterWithNSString:filter withBoolean:contains];
}

- (BOOL)filterWithNSString:(NSString *)filter
               withBoolean:(BOOL)contains
               withBoolean:(BOOL)nullPasses
               withBoolean:(BOOL)emptyPasses {
  return [((id<RAREiTableModel>) nil_chk(model_)) filterWithNSString:filter withBoolean:contains withBoolean:nullPasses withBoolean:emptyPasses];
}

- (int)findWithRAREUTiFilter:(id<RAREUTiFilter>)filter
                     withInt:(int)start {
  return [((id<RAREiTableModel>) nil_chk(model_)) findWithRAREUTiFilter:filter withInt:start];
}

- (int)findWithNSString:(NSString *)filter
                withInt:(int)start
            withBoolean:(BOOL)contains {
  return [((id<RAREiTableModel>) nil_chk(model_)) findWithNSString:filter withInt:start withBoolean:contains];
}

- (NSString *)join {
  return [self joinWithNSString:nil];
}

- (NSString *)joinWithNSString:(NSString *)sep {
  return [((id<RAREiTableModel>) nil_chk(model_)) joinWithNSString:sep];
}

- (RARERenderableDataItem *)pop {
  int n = (model_ == nil) ? -1 : [model_ getRowCount] - 1;
  if (n < 0) {
    return nil;
  }
  RARERenderableDataItem *item = [((id<RAREiTableModel>) nil_chk(model_)) getRowWithInt:n];
  [model_ removeRowWithInt:n];
  return item;
}

- (void)pushWithNSObjectArray:(IOSObjectArray *)e {
  if (e != nil) {
    {
      IOSObjectArray *a__ = e;
      id const *b__ = a__->buffer_;
      id const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        RARERenderableDataItem *v = (*b__++);
        [self addWithId:v];
      }
    }
  }
}

- (BOOL)refilter {
  return [((id<RAREiTableModel>) nil_chk(model_)) refilter];
}

- (RARERenderableDataItem *)removeWithInt:(int)index {
  RARERenderableDataItem *row = [((id<RAREiTableModel>) nil_chk(model_)) getRowWithInt:index];
  [model_ removeRowWithInt:index];
  return row;
}

- (id<JavaUtilList>)reverse {
  return [((id<RAREiTableModel>) nil_chk(model_)) reverse];
}

- (RARERenderableDataItem *)shift {
  if ((model_ == nil) || ([model_ getRowCount] == 0)) {
    return nil;
  }
  RARERenderableDataItem *item = [((id<RAREiTableModel>) nil_chk(model_)) getRowWithInt:0];
  [model_ removeRowWithInt:0];
  return item;
}

- (int)size {
  return [((id<RAREiTableModel>) nil_chk(model_)) getRowCount];
}

- (id<JavaUtilList>)sliceWithInt:(int)start {
  return [((id<RAREiTableModel>) nil_chk(model_)) sliceWithInt:start withInt:[self size]];
}

- (id<JavaUtilList>)sliceWithInt:(int)start
                         withInt:(int)end {
  return [((id<RAREiTableModel>) nil_chk(model_)) sliceWithInt:start withInt:end];
}

- (void)sortWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  [((id<RAREiTableModel>) nil_chk(model_)) sortWithJavaUtilComparator:comparator];
}

- (id<JavaUtilList>)spliceWithInt:(int)index
                          withInt:(int)howMany {
  return [self spliceWithInt:index withInt:howMany withNSObjectArray:(IOSObjectArray *) check_class_cast(nil, [IOSObjectArray class])];
}

- (id<JavaUtilList>)spliceWithInt:(int)index
                          withInt:(int)howMany
                withNSObjectArray:(IOSObjectArray *)e {
  return [self spliceListWithInt:index withInt:howMany withJavaUtilList:(e == nil) ? nil : [JavaUtilArrays asListWithNSObjectArray:e]];
}

- (id<JavaUtilList>)spliceListWithInt:(int)index
                              withInt:(int)howMany
                     withJavaUtilList:(id<JavaUtilList>)e {
  return [((id<RAREiTableModel>) nil_chk(model_)) spliceListWithInt:index withInt:howMany withJavaUtilList:e];
}

- (void)swapWithInt:(int)index1
            withInt:(int)index2 {
  RARERenderableDataItem *a = [self getWithInt:index1];
  RARERenderableDataItem *b = [self getWithInt:index2];
  (void) [self setWithInt:index1 withId:b];
  (void) [self setWithInt:index2 withId:a];
  if (index2 == (index1 + 1)) {
    [((id<RAREiTableModel>) nil_chk(model_)) rowsChangedWithInt:index1 withInt:index2];
  }
  else if (index1 == (index2 + 1)) {
    [((id<RAREiTableModel>) nil_chk(model_)) rowsChangedWithInt:index2 withInt:index1];
  }
  else {
    [((id<RAREiTableModel>) nil_chk(model_)) rowChangedWithInt:index1];
    [model_ rowChangedWithInt:index2];
  }
}

- (BOOL)unfilter {
  return [((id<RAREiTableModel>) nil_chk(model_)) unfilter];
}

- (void)unshiftWithId:(RARERenderableDataItem *)value {
  [self addWithInt:0 withId:value];
}

- (RARERenderableDataItem *)setWithInt:(int)index
                                withId:(RARERenderableDataItem *)item {
  RARERenderableDataItem *row = [((id<RAREiTableModel>) nil_chk(model_)) getRowWithInt:index];
  [model_ setRowWithInt:index withRARERenderableDataItem:item];
  return row;
}

- (void)setConverterWithRAREUTiStringConverter:(id<RAREUTiStringConverter>)converter {
  [((id<RAREiTableModel>) nil_chk(model_)) setConverterWithRAREUTiStringConverter:converter];
}

- (RARERenderableDataItem *)getWithInt:(int)index {
  return [((id<RAREiTableModel>) nil_chk(model_)) getRowWithInt:index];
}

- (id<RAREUTiStringConverter>)getConverter {
  return [((id<RAREiTableModel>) nil_chk(model_)) getConverter];
}

- (id<JavaUtilList>)getFilteredList {
  return self;
}

- (id<JavaUtilList>)getUnfilteredList {
  return [((id<RAREiTableModel>) nil_chk(model_)) getUnfilteredList];
}

- (BOOL)isFiltered {
  return [((id<RAREiTableModel>) nil_chk(model_)) isFiltered];
}

- (void)removeRowsWithIntArray:(IOSIntArray *)indexes {
  [((id<RAREiTableModel>) nil_chk(model_)) removeRowsWithIntArray:indexes];
}

- (id<RAREUTiFilter>)getLastFilter {
  return [((id<RAREiTableModel>) nil_chk(model_)) getLastFilter];
}

- (BOOL)setAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return [((id<RAREiTableModel>) nil_chk(model_)) setAllWithJavaUtilCollection:collection];
}

- (void)setFilteredListWithJavaUtilList:(id<JavaUtilList>)list
                      withRAREUTiFilter:(id<RAREUTiFilter>)lastFilter {
  [((id<RAREiTableModel>) nil_chk(model_)) setFilteredListWithJavaUtilList:list withRAREUTiFilter:lastFilter];
}

- (void)trimToSize {
  [((id<RAREiTableModel>) nil_chk(model_)) trimToSize];
}

- (void)copyAllFieldsTo:(RARETableModelFilterableList *)other {
  [super copyAllFieldsTo:other];
  other->model_ = model_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addWithRARERenderableDataItem:", NULL, "Z", 0x1, NULL },
    { "addAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "addAllWithInt:withJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "concatWithJavaUtilListArray:", NULL, "LJavaUtilList", 0x81, NULL },
    { "filterWithRAREUTiFilter:", NULL, "Z", 0x1, NULL },
    { "filterWithNSString:withBoolean:", NULL, "Z", 0x1, NULL },
    { "filterWithNSString:withBoolean:withBoolean:withBoolean:", NULL, "Z", 0x1, NULL },
    { "join", NULL, "LNSString", 0x1, NULL },
    { "joinWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "pop", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "pushWithRARERenderableDataItemArray:", NULL, "V", 0x81, NULL },
    { "refilter", NULL, "Z", 0x1, NULL },
    { "removeWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "reverse", NULL, "LJavaUtilList", 0x1, NULL },
    { "shift", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "sliceWithInt:", NULL, "LJavaUtilList", 0x1, NULL },
    { "sliceWithInt:withInt:", NULL, "LJavaUtilList", 0x1, NULL },
    { "spliceWithInt:withInt:", NULL, "LJavaUtilList", 0x1, NULL },
    { "spliceWithInt:withInt:withRARERenderableDataItemArray:", NULL, "LJavaUtilList", 0x81, NULL },
    { "spliceListWithInt:withInt:withJavaUtilList:", NULL, "LJavaUtilList", 0x1, NULL },
    { "unfilter", NULL, "Z", 0x1, NULL },
    { "setWithInt:withRARERenderableDataItem:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getConverter", NULL, "LRAREUTiStringConverter", 0x1, NULL },
    { "getFilteredList", NULL, "LJavaUtilList", 0x1, NULL },
    { "getUnfilteredList", NULL, "LJavaUtilList", 0x1, NULL },
    { "isFiltered", NULL, "Z", 0x1, NULL },
    { "getLastFilter", NULL, "LRAREUTiFilter", 0x1, NULL },
    { "setAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "model_", NULL, 0x0, "LRAREiTableModel" },
  };
  static const char *superclass_type_args[] = {"LRARERenderableDataItem"};
  static J2ObjcClassInfo _RARETableModelFilterableList = { "TableModelFilterableList", "com.appnativa.rare.ui.table", NULL, 0x1, 29, methods, 1, fields, 1, superclass_type_args};
  return &_RARETableModelFilterableList;
}

@end
