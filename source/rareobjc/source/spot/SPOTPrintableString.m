//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../spot/src/com/appnativa/spot/SPOTPrintableString.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/spot/SPOTException.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/aSPOTElement.h"
#include "com/appnativa/spot/iSPOTConstants.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/SNumber.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@implementation SPOTPrintableString

- (id)init {
  return [self initSPOTPrintableStringWithNSString:nil withInt:-1 withInt:-1 withBoolean:YES];
}

- (id)initWithBoolean:(BOOL)optional {
  return [self initSPOTPrintableStringWithNSString:nil withInt:-1 withInt:-1 withNSString:nil withBoolean:optional];
}

- (id)initWithNSString:(NSString *)val {
  return [self initSPOTPrintableStringWithNSString:val withInt:-1 withInt:-1 withNSString:nil withBoolean:NO];
}

- (id)initWithNSString:(NSString *)val
               withInt:(int)max {
  return [self initSPOTPrintableStringWithNSString:val withInt:-1 withInt:max withNSString:nil withBoolean:NO];
}

- (id)initWithNSString:(NSString *)val
               withInt:(int)min
               withInt:(int)max {
  return [self initSPOTPrintableStringWithNSString:val withInt:min withInt:max withNSString:nil withBoolean:NO];
}

- (id)initWithNSString:(NSString *)val
          withNSString:(NSString *)defaultval
           withBoolean:(BOOL)optional {
  return [self initSPOTPrintableStringWithNSString:val withInt:-1 withInt:-1 withNSString:defaultval withBoolean:optional];
}

- (id)initSPOTPrintableStringWithNSString:(NSString *)val
                                  withInt:(int)min
                                  withInt:(int)max
                              withBoolean:(BOOL)optional {
  return [self initSPOTPrintableStringWithNSString:val withInt:min withInt:max withNSString:nil withBoolean:optional];
}

- (id)initWithNSString:(NSString *)val
               withInt:(int)min
               withInt:(int)max
           withBoolean:(BOOL)optional {
  return [self initSPOTPrintableStringWithNSString:val withInt:min withInt:max withBoolean:optional];
}

- (id)initSPOTPrintableStringWithNSString:(NSString *)val
                                  withInt:(int)min
                                  withInt:(int)max
                             withNSString:(NSString *)defaultval
                              withBoolean:(BOOL)optional {
  if (self = [super init]) {
    _nRangeMin_ = min;
    _nRangeMax_ = max;
    _sValue_ = val;
    _sDefaultValue_ = defaultval;
    _isOptional_ = optional;
  }
  return self;
}

- (id)initWithNSString:(NSString *)val
               withInt:(int)min
               withInt:(int)max
          withNSString:(NSString *)defaultval
           withBoolean:(BOOL)optional {
  return [self initSPOTPrintableStringWithNSString:val withInt:min withInt:max withNSString:defaultval withBoolean:optional];
}

- (int)compareToWithId:(id)o {
  return [self compareToWithSPOTPrintableString:(SPOTPrintableString *) check_class_cast(o, [SPOTPrintableString class])];
}

- (int)compareToWithSPOTPrintableString:(SPOTPrintableString *)o {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  NSString *t2 = (((SPOTPrintableString *) nil_chk(o))->_sValue_ != nil) ? o->_sValue_ : o->_sDefaultValue_;
  if ((t1 == nil) || (t2 == nil)) {
    return (t1 == t2) ? 0 : ((t1 == nil) ? -1 : 1);
  }
  return [t1 compareToWithId:t2];
}

- (int)compareToWithNSString:(NSString *)o {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  NSString *t2 = o;
  if ((t1 == nil) || (t2 == nil)) {
    return (t1 == t2) ? 0 : ((t1 == nil) ? -1 : 1);
  }
  return [t1 compareToWithId:t2];
}

- (BOOL)containsWithNSString:(NSString *)s {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  if ((t1 == nil) || (s == nil)) {
    return NO;
  }
  return [t1 indexOfString:s] != -1;
}

- (BOOL)endsWithWithNSString:(NSString *)s {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  if ((t1 == nil) || (s == nil)) {
    return NO;
  }
  return [t1 hasSuffix:s];
}

- (BOOL)equalsWithNSString:(NSString *)s {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  NSString *t2 = s;
  if ((t1 == nil) || (t2 == nil)) {
    return t1 == t2;
  }
  return [t1 isEqual:t2];
}

- (NSUInteger)hash {
  NSString *s = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  return (s != nil) ? [s hash] : [super hash];
}

- (void)spot_clear {
  [super spot_clear];
  _sValue_ = nil;
}

- (IOSObjectArray *)spot_getRange {
  if ((_nRangeMin_ < 0) && (_nRangeMax_ < 0)) {
    return nil;
  }
  return [IOSObjectArray arrayWithObjects:(id[]){ [JavaLangInteger valueOfWithInt:_nRangeMin_], [JavaLangInteger valueOfWithInt:_nRangeMax_] } count:2 type:[IOSClass classWithClass:[NSObject class]]];
}

- (int)spot_getType {
  return iSPOTConstants_SPOT_TYPE_PRINTABLESTRING;
}

- (NSString *)spot_getValidityRange {
  if (_sChoices_ != nil) {
    return [self getChoicesInBrackets];
  }
  else {
    if ((_nRangeMin_ != -1) || (_nRangeMax_ != -1)) {
      NSString *s = @"";
      s = (_nRangeMin_ != -1) ? ([NSString stringWithFormat:@"%@..", [RAREUTSNumber toStringWithInt:_nRangeMin_]]) : @"..";
      if (_nRangeMax_ != -1) {
        s = [NSString stringWithFormat:@"%@%@", s, [RAREUTSNumber toStringWithInt:_nRangeMax_]];
      }
      return s;
    }
    else {
      return @"";
    }
  }
}

- (id)spot_getValue {
  return [self getValue];
}

- (void)spot_setChoicesWithNSObjectArray:(IOSObjectArray *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _sChoices_ = val;
}

- (void)spot_setDefaultValueWithNSString:(NSString *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if (val == nil) {
    _sDefaultValue_ = nil;
    return;
  }
  int len = [((NSString *) nil_chk(val)) sequenceLength];
  do {
    if ((_nRangeMin_ != -1) && (len < _nRangeMin_)) {
      break;
    }
    if ((_nRangeMax_ != -1) && (len > _nRangeMax_)) {
      break;
    }
    if (_sChoices_ != nil) {
      _sDefaultValue_ = [self checkChoicesWithNSString:val withBoolean:NO];
      return;
    }
    else {
      _sDefaultValue_ = val;
      return;
    }
  }
  while (NO);
  @throw [[SPOTException alloc] initWithNSString:[RAREUTHelper expandStringWithNSString:[iSPOTConstants STR_NOT_ONEOF] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ val, [self spot_getValidityRange] } count:2 type:[IOSClass classWithClass:[NSString class]]]]];
}

- (void)spot_setRangeWithLong:(long long int)min
                     withLong:(long long int)max {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _nRangeMin_ = (int) min;
  _nRangeMax_ = (int) max;
}

- (void)spot_setRangeWithNSString:(NSString *)min
                     withNSString:(NSString *)max {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if (min != nil) {
    _nRangeMin_ = [RAREUTSNumber intValueWithNSString:min];
  }
  if (max != nil) {
    _nRangeMax_ = [RAREUTSNumber intValueWithNSString:max];
  }
}

- (NSString *)spot_stringValue {
  return [self getValue];
}

- (NSString *)spot_stringValueEx {
  return ((_sValue_ == nil) && ![self spot_attributesWereSet]) ? nil : [self getValue];
}

- (BOOL)startsWithWithNSString:(NSString *)s {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  if ((t1 == nil) || (s == nil)) {
    return NO;
  }
  return [t1 hasPrefix:s];
}

- (void)setValueWithSPOTPrintableString:(SPOTPrintableString *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  NSString *s = [((SPOTPrintableString *) nil_chk(val)) spot_stringValue];
  _sValue_ = (_sChoices_ != nil) ? [self checkChoicesWithNSString:s withBoolean:YES] : s;
}

- (void)setValueWithNSString:(NSString *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _sValue_ = (_sChoices_ != nil) ? [self checkChoicesWithNSString:val withBoolean:YES] : val;
}

- (NSString *)getChoiceWithNSString:(NSString *)val {
  if (_sChoices_ == nil) {
    return nil;
  }
  return [self checkChoicesWithNSString:val withBoolean:NO];
}

- (NSString *)getChoicesInBrackets {
  if (_sValidRange_ != nil) {
    return _sValidRange_;
  }
  if (_sChoices_ == nil) {
    return @"{ }";
  }
  JavaLangStringBuilder *s = [[JavaLangStringBuilder alloc] initWithNSString:@"{ "];
  int i = 0;
  for (i = 0; i < ((int) [((IOSObjectArray *) nil_chk(_sChoices_)) count] - 1); i++) {
    (void) [s appendWithId:IOSObjectArray_Get(_sChoices_, i)];
    (void) [s appendWithNSString:@", "];
  }
  (void) [s appendWithId:IOSObjectArray_Get(_sChoices_, i)];
  (void) [s appendWithNSString:@" }"];
  _sValidRange_ = [s description];
  return _sValidRange_;
}

- (IOSObjectArray *)getCopyOfChoices {
  if (_sChoices_ == nil) {
    return nil;
  }
  IOSObjectArray *s = [IOSObjectArray arrayWithLength:(int) [((IOSObjectArray *) nil_chk(_sChoices_)) count] type:[IOSClass classWithClass:[NSString class]]];
  [JavaLangSystem arraycopyWithId:_sChoices_ withInt:0 withId:s withInt:0 withInt:(int) [_sChoices_ count]];
  return s;
}

- (NSString *)getValue {
  if ((_sValue_ == nil) && (_sDefaultValue_ != nil)) {
    return _sDefaultValue_;
  }
  return _sValue_;
}

- (NSString *)checkChoicesWithNSString:(NSString *)val
                           withBoolean:(BOOL)exception {
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(_sChoices_)) count]; i++) {
    id o = IOSObjectArray_Get(_sChoices_, i);
    if ([o isKindOfClass:[JavaUtilRegexPattern class]]) {
      return [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) check_class_cast(o, [JavaUtilRegexPattern class])) matcherWithJavaLangCharSequence:val])) matches] ? val : nil;
    }
    if ([((NSString *) nil_chk(val)) equalsIgnoreCase:(NSString *) check_class_cast(o, [NSString class])]) {
      return (NSString *) check_class_cast(o, [NSString class]);
    }
  }
  if (!exception) {
    return nil;
  }
  @throw [[SPOTException alloc] initWithNSString:[RAREUTHelper expandStringWithNSString:[iSPOTConstants STR_NOT_ONEOF] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ val, [self spot_getValidityRange] } count:2 type:[IOSClass classWithClass:[NSString class]]]]];
}

- (int)spot_checkRangeValidityEx {
  if ((_sValue_ == nil) && (_sDefaultValue_ != nil)) {
    return iSPOTConstants_VALUE_NULL_WITH_DEFAULT;
  }
  if ((_sValue_ == nil) && _isOptional_) {
    return iSPOTConstants_VALUE_NULL_AND_OPTIONAL;
  }
  if (_sValue_ == nil) {
    return iSPOTConstants_VALUE_NULL;
  }
  if ((_nRangeMin_ != -1) && ([((NSString *) nil_chk(_sValue_)) sequenceLength] < _nRangeMin_)) {
    return iSPOTConstants_VALUE_TO_SMALL;
  }
  if ((_nRangeMax_ != -1) && ([((NSString *) nil_chk(_sValue_)) sequenceLength] > _nRangeMax_)) {
    return iSPOTConstants_VALUE_TO_BIG;
  }
  return iSPOTConstants_VALUE_OK;
}

- (void)setValuesWithNSString:(NSString *)val
                 withNSString:(NSString *)min
                 withNSString:(NSString *)max
                  withBoolean:(BOOL)optional {
  _sValue_ = val;
  _isOptional_ = optional;
  if (min != nil) {
    _nRangeMin_ = [RAREUTSNumber intValueWithNSString:min];
  }
  if (max != nil) {
    _nRangeMax_ = [RAREUTSNumber intValueWithNSString:max];
  }
}

- (void)copyAllFieldsTo:(SPOTPrintableString *)other {
  [super copyAllFieldsTo:other];
  other->_nRangeMax_ = _nRangeMax_;
  other->_nRangeMin_ = _nRangeMin_;
  other->_sChoices_ = _sChoices_;
  other->_sDefaultValue_ = _sDefaultValue_;
  other->_sValidRange_ = _sValidRange_;
  other->_sValue_ = _sValue_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "containsWithNSString:", NULL, "Z", 0x1, NULL },
    { "endsWithWithNSString:", NULL, "Z", 0x1, NULL },
    { "equalsWithNSString:", NULL, "Z", 0x1, NULL },
    { "spot_getRange", NULL, "LIOSObjectArray", 0x1, NULL },
    { "spot_getType", NULL, "I", 0x11, NULL },
    { "spot_getValidityRange", NULL, "LNSString", 0x1, NULL },
    { "spot_getValue", NULL, "LNSObject", 0x1, NULL },
    { "spot_stringValue", NULL, "LNSString", 0x1, NULL },
    { "spot_stringValueEx", NULL, "LNSString", 0x1, NULL },
    { "startsWithWithNSString:", NULL, "Z", 0x1, NULL },
    { "getChoiceWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "getChoicesInBrackets", NULL, "LNSString", 0x1, NULL },
    { "getCopyOfChoices", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getValue", NULL, "LNSString", 0x1, NULL },
    { "checkChoicesWithNSString:withBoolean:", NULL, "LNSString", 0x0, NULL },
    { "spot_checkRangeValidityEx", NULL, "I", 0x4, NULL },
    { "setValuesWithNSString:withNSString:withNSString:withBoolean:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "_nRangeMax_", NULL, 0x0, "I" },
    { "_nRangeMin_", NULL, 0x0, "I" },
    { "_sChoices_", NULL, 0x0, "LIOSObjectArray" },
    { "_sDefaultValue_", NULL, 0x0, "LNSString" },
    { "_sValidRange_", NULL, 0x0, "LNSString" },
    { "_sValue_", NULL, 0x0, "LNSString" },
  };
  static J2ObjcClassInfo _SPOTPrintableString = { "SPOTPrintableString", "com.appnativa.spot", NULL, 0x1, 17, methods, 6, fields, 0, NULL};
  return &_SPOTPrintableString;
}

@end
