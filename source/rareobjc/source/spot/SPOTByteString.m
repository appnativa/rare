//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../spot/src/com/appnativa/spot/SPOTByteString.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSByteArray.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/spot/SPOTByteString.h"
#include "com/appnativa/spot/aSPOTElement.h"
#include "com/appnativa/spot/iSPOTConstants.h"
#include "com/appnativa/util/ByteArrayHolder.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/UTF8Helper.h"
#include "com/appnativa/util/aStreamer.h"
#include "com/appnativa/util/iCharsetHelper.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/Long.h"

@implementation SPOTByteString

- (id)init {
  return [self initSPOTByteStringWithNSString:nil withLong:-1 withLong:-1 withBoolean:YES];
}

- (id)initWithBoolean:(BOOL)optional {
  if (self = [super init]) {
    _baDefValue_ = nil;
    _baValue_ = nil;
    _sValue_ = nil;
    [self setValuesWithByteArray:nil withLong:-1 withLong:-1 withBoolean:optional];
  }
  return self;
}

- (id)initWithByteArray:(IOSByteArray *)val {
  if (self = [super init]) {
    _baDefValue_ = nil;
    _baValue_ = nil;
    _sValue_ = nil;
    [self setValuesWithByteArray:val withLong:-1 withLong:-1 withBoolean:NO];
  }
  return self;
}

- (id)initWithNSString:(NSString *)val {
  if (self = [super init]) {
    _baDefValue_ = nil;
    _baValue_ = nil;
    _sValue_ = nil;
    [self setValuesWithByteArray:(val == nil) ? nil : [val getBytes] withLong:-1 withLong:-1 withBoolean:NO];
  }
  return self;
}

- (id)initWithNSString:(NSString *)val
              withLong:(long long int)max {
  if (self = [super init]) {
    _baDefValue_ = nil;
    _baValue_ = nil;
    _sValue_ = nil;
    [self setValuesWithByteArray:(val == nil) ? nil : [val getBytes] withLong:-1 withLong:max withBoolean:NO];
  }
  return self;
}

- (id)initWithNSString:(NSString *)val
              withLong:(long long int)min
              withLong:(long long int)max {
  if (self = [super init]) {
    _baDefValue_ = nil;
    _baValue_ = nil;
    _sValue_ = nil;
    [self setValuesWithByteArray:(val == nil) ? nil : [val getBytes] withLong:min withLong:max withBoolean:NO];
  }
  return self;
}

- (id)initWithByteArray:(IOSByteArray *)val
           withNSString:(NSString *)min
           withNSString:(NSString *)max
            withBoolean:(BOOL)optional {
  if (self = [super init]) {
    _baDefValue_ = nil;
    _baValue_ = nil;
    _sValue_ = nil;
    [self setValuesWithNSString:nil withNSString:min withNSString:max withBoolean:optional];
    [self setValueWithByteArray:val];
  }
  return self;
}

- (id)initSPOTByteStringWithNSString:(NSString *)val
                            withLong:(long long int)min
                            withLong:(long long int)max
                         withBoolean:(BOOL)optional {
  if (self = [super init]) {
    _baDefValue_ = nil;
    _baValue_ = nil;
    _sValue_ = nil;
    [self setValuesWithByteArray:(val == nil) ? nil : [val getBytes] withLong:min withLong:max withBoolean:optional];
  }
  return self;
}

- (id)initWithNSString:(NSString *)val
              withLong:(long long int)min
              withLong:(long long int)max
           withBoolean:(BOOL)optional {
  return [self initSPOTByteStringWithNSString:val withLong:min withLong:max withBoolean:optional];
}

- (id)initWithNSString:(NSString *)val
          withNSString:(NSString *)min
          withNSString:(NSString *)max
           withBoolean:(BOOL)optional {
  if (self = [super init]) {
    _baDefValue_ = nil;
    _baValue_ = nil;
    _sValue_ = nil;
    [self setValuesWithNSString:val withNSString:min withNSString:max withBoolean:optional];
  }
  return self;
}

- (id)initWithNSString:(NSString *)val
          withNSString:(NSString *)min
          withNSString:(NSString *)max
          withNSString:(NSString *)defaultval
           withBoolean:(BOOL)optional {
  if (self = [super init]) {
    _baDefValue_ = nil;
    _baValue_ = nil;
    _sValue_ = nil;
    [self setValuesWithNSString:val withNSString:min withNSString:max withBoolean:optional];
    [self setDefaultValueWithNSString:defaultval];
  }
  return self;
}

- (int)compareToWithId:(id)o {
  return [self compareToWithSPOTByteString:(SPOTByteString *) check_class_cast(o, [SPOTByteString class])];
}

- (int)compareToWithSPOTByteString:(SPOTByteString *)o {
  if (o == nil) {
    return 1;
  }
  IOSByteArray *t1 = (_baValue_ != nil) ? _baValue_ : _baDefValue_;
  IOSByteArray *t2 = (((SPOTByteString *) nil_chk(o))->_baValue_ != nil) ? o->_baValue_ : o->_baDefValue_;
  if ((t1 == nil) || (t2 == nil)) {
    return (t1 == t2) ? 0 : ((t1 != nil) ? 1 : -1);
  }
  return [RAREUTHelper compareToWithByteArray:t1 withInt:_pos_ withInt:_len_ withByteArray:t2 withInt:o->_pos_ withInt:o->_len_];
}

- (BOOL)isEqual:(id)o {
  if (!([o isKindOfClass:[SPOTByteString class]])) {
    return NO;
  }
  return [self equalsWithASPOTElement:(SPOTByteString *) check_class_cast(o, [SPOTByteString class])];
}

- (BOOL)equalsWithASPOTElement:(aSPOTElement *)e {
  if (!([e isKindOfClass:[SPOTByteString class]])) {
    return NO;
  }
  SPOTByteString *o = (SPOTByteString *) check_class_cast(e, [SPOTByteString class]);
  if ((_baValue_ == nil) || (((SPOTByteString *) nil_chk(o))->_baValue_ == nil)) {
    if (_baValue_ != ((SPOTByteString *) nil_chk(o))->_baValue_) {
      return NO;
    }
  }
  else if ([RAREUTHelper compareToWithByteArray:_baValue_ withInt:_pos_ withInt:_len_ withByteArray:o->_baValue_ withInt:o->_pos_ withInt:o->_len_] != 0) {
    return NO;
  }
  return [aSPOTElement spot_attributesEqualWithISPOTElement:self withISPOTElement:e];
}

- (void)fromStreamWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _pos_ = 0;
  _len_ = 0;
  int len = [RAREUTaStreamer readVarLengthWithJavaIoInputStream:inArg];
  if (len == -1) {
    _baValue_ = nil;
  }
  else {
    _baValue_ = [IOSByteArray arrayWithLength:len];
    int n;
    int pos = 0;
    while (len > 0) {
      n = [((JavaIoInputStream *) nil_chk(inArg)) readWithByteArray:_baValue_ withInt:pos withInt:len];
      if (n == -1) {
        break;
      }
      pos += n;
      len -= n;
    }
    _len_ = len;
  }
}

- (NSUInteger)hash {
  int h = 0;
  IOSByteArray *a = (_baValue_ == nil) ? _baDefValue_ : _baValue_;
  if (a != nil) {
    int len = _len_ + _pos_;
    int i = _pos_;
    while (i < len) {
      h = (31 * h) + IOSByteArray_Get(a, i++);
    }
  }
  return h;
}

- (int)spot_checkRangeValidityEx {
  if (_isOptional_ && ((_baValue_ == nil) || (_len_ == 0) || (_baDefValue_ != nil))) {
    return iSPOTConstants_VALUE_NULL_AND_OPTIONAL;
  }
  if (_baValue_ == nil) {
    return iSPOTConstants_VALUE_NULL;
  }
  if ((_nRangeMin_ != -1) && (_len_ < _nRangeMin_)) {
    return iSPOTConstants_VALUE_TO_SMALL;
  }
  if ((_nRangeMax_ != -1) && (_len_ > _nRangeMax_)) {
    return iSPOTConstants_VALUE_TO_BIG;
  }
  return iSPOTConstants_VALUE_OK;
}

- (void)spot_clear {
  [super spot_clear];
  _baValue_ = nil;
}

- (IOSObjectArray *)spot_getRange {
  if ((_nRangeMin_ < 1) && (_nRangeMax_ < 1)) {
    return nil;
  }
  return [IOSObjectArray arrayWithObjects:(id[]){ [JavaLangLong valueOfWithLong:_nRangeMin_], [JavaLangLong valueOfWithLong:_nRangeMax_] } count:2 type:[IOSClass classWithClass:[NSObject class]]];
}

- (int)spot_getType {
  return iSPOTConstants_SPOT_TYPE_BYTESTRING;
}

- (NSString *)spot_getValidityRange {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  NSString *s = @"";
  if ((_nRangeMin_ != -1) || (_nRangeMax_ != -1)) {
    s = (_nRangeMin_ != -1) ? ([NSString stringWithFormat:@"%@..", [RAREUTSNumber toStringWithLong:_nRangeMin_]]) : @"..";
    if (_nRangeMax_ != -1) {
      s = [NSString stringWithFormat:@"%@%@", s, [RAREUTSNumber toStringWithLong:_nRangeMax_]];
    }
  }
  return s;
}

- (void)spot_setRangeWithLong:(long long int)min
                     withLong:(long long int)max {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _nRangeMin_ = min;
  _nRangeMax_ = max;
}

- (void)spot_setRangeWithNSString:(NSString *)min
                     withNSString:(NSString *)max {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if (min != nil) {
    _nRangeMin_ = [RAREUTSNumber longValueWithNSString:min];
  }
  if (max != nil) {
    _nRangeMax_ = [RAREUTSNumber longValueWithNSString:max];
  }
}

- (NSString *)spot_stringValue {
  id<RAREUTiCharsetHelper> csh = (_csh_ == nil) ? [RAREUTUTF8Helper getInstance] : ((id) _csh_);
  if (_baValue_ == nil) {
    if (_baDefValue_ == nil) {
      return nil;
    }
    if (_sValue_ == nil) {
      _sValue_ = [csh getStringWithByteArray:_baDefValue_];
    }
  }
  else {
    _sValue_ = [csh getStringWithByteArray:_baValue_ withInt:_pos_ withInt:_len_];
  }
  return _sValue_;
}

- (NSString *)spot_stringValueEx {
  return ((_baValue_ == nil) && ![self spot_attributesWereSet]) ? nil : [self spot_stringValue];
}

- (void)toStreamWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  if (_baValue_ == nil) {
    [RAREUTaStreamer writeVarLengthWithInt:-1 withJavaIoOutputStream:outArg];
  }
  else {
    [RAREUTaStreamer writeVarLengthWithInt:_len_ withJavaIoOutputStream:outArg];
    [((JavaIoOutputStream *) nil_chk(outArg)) writeWithByteArray:_baValue_ withInt:_pos_ withInt:_len_];
  }
}

- (void)setCharsetHelperWithRAREUTiCharsetHelper:(id<RAREUTiCharsetHelper>)csh {
  _csh_ = csh;
}

- (void)setDefaultValueWithNSString:(NSString *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  id<RAREUTiCharsetHelper> csh = (_csh_ == nil) ? [RAREUTUTF8Helper getInstance] : ((id) _csh_);
  _baDefValue_ = (val == nil) ? nil : [csh getBytesWithNSString:val];
  _len_ = (val == nil) ? 0 : (int) [_baDefValue_ count];
  _pos_ = 0;
}

- (void)setValueWithByteArray:(IOSByteArray *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _baValue_ = val;
  _sValue_ = nil;
  _len_ = (val == nil) ? 0 : (int) [val count];
  _pos_ = 0;
}

- (void)setValueWithNSString:(NSString *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  id<RAREUTiCharsetHelper> csh = (_csh_ == nil) ? [RAREUTUTF8Helper getInstance] : ((id) _csh_);
  _sValue_ = val;
  _baValue_ = (val == nil) ? nil : [csh getBytesWithNSString:val];
  _len_ = (val == nil) ? 0 : (int) [_baValue_ count];
  _pos_ = 0;
}

- (void)setValueWithByteArray:(IOSByteArray *)val
                      withInt:(int)pos
                      withInt:(int)len {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _sValue_ = nil;
  _baValue_ = val;
  _pos_ = pos;
  _len_ = len;
}

- (id)spot_getValue {
  return [self getValue];
}

- (RAREUTByteArrayHolder *)getValue {
  if ((_baValue_ == nil) && (_baDefValue_ == nil)) {
    return nil;
  }
  if (_outHolder_ == nil) {
    _outHolder_ = [[RAREUTByteArrayHolder alloc] init];
  }
  if (_baValue_ == nil) {
    [((RAREUTByteArrayHolder *) nil_chk(_outHolder_)) setWithByteArray:_baDefValue_ withInt:_pos_ withInt:_len_];
  }
  else {
    [((RAREUTByteArrayHolder *) nil_chk(_outHolder_)) setWithByteArray:_baValue_ withInt:_pos_ withInt:_len_];
  }
  return _outHolder_;
}

- (void)setValuesWithByteArray:(IOSByteArray *)val
                      withLong:(long long int)min
                      withLong:(long long int)max
                   withBoolean:(BOOL)optional {
  _sValue_ = nil;
  _baValue_ = val;
  _nRangeMin_ = min;
  _nRangeMax_ = max;
  _isOptional_ = optional;
  _len_ = (val == nil) ? 0 : (int) [val count];
  _pos_ = 0;
}

- (void)setValuesWithNSString:(NSString *)val
                 withNSString:(NSString *)min
                 withNSString:(NSString *)max
                  withBoolean:(BOOL)optional {
  long long int nmin = -1;
  long long int nmax = -1;
  id<RAREUTiCharsetHelper> csh = (_csh_ == nil) ? [RAREUTUTF8Helper getInstance] : ((id) _csh_);
  _sValue_ = val;
  if (min != nil) {
    nmin = [RAREUTSNumber longValueWithNSString:min];
  }
  if (max != nil) {
    nmax = [RAREUTSNumber longValueWithNSString:max];
  }
  _baValue_ = (val == nil) ? nil : [csh getBytesWithNSString:val];
  _len_ = (val == nil) ? 0 : (int) [_baValue_ count];
  _pos_ = 0;
  _nRangeMin_ = nmin;
  _nRangeMax_ = nmax;
  _isOptional_ = optional;
}

- (void)copyAllFieldsTo:(SPOTByteString *)other {
  [super copyAllFieldsTo:other];
  other->_baDefValue_ = _baDefValue_;
  other->_baValue_ = _baValue_;
  other->_csh_ = _csh_;
  other->_len_ = _len_;
  other->_nRangeMax_ = _nRangeMax_;
  other->_nRangeMin_ = _nRangeMin_;
  other->_outHolder_ = _outHolder_;
  other->_pos_ = _pos_;
  other->_sValue_ = _sValue_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "equalsWithASPOTElement:", NULL, "Z", 0x1, NULL },
    { "fromStreamWithJavaIoInputStream:", NULL, "V", 0x1, "JavaIoIOException" },
    { "spot_checkRangeValidityEx", NULL, "I", 0x4, NULL },
    { "spot_getRange", NULL, "LIOSObjectArray", 0x1, NULL },
    { "spot_getType", NULL, "I", 0x11, NULL },
    { "spot_getValidityRange", NULL, "LNSString", 0x1, NULL },
    { "spot_stringValue", NULL, "LNSString", 0x1, NULL },
    { "spot_stringValueEx", NULL, "LNSString", 0x1, NULL },
    { "toStreamWithJavaIoOutputStream:", NULL, "V", 0x1, "JavaIoIOException" },
    { "spot_getValue", NULL, "LNSObject", 0x1, NULL },
    { "getValue", NULL, "LRAREUTByteArrayHolder", 0x1, NULL },
    { "setValuesWithByteArray:withLong:withLong:withBoolean:", NULL, "V", 0x4, NULL },
    { "setValuesWithNSString:withNSString:withNSString:withBoolean:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "_baDefValue_", NULL, 0x0, "LIOSByteArray" },
    { "_baValue_", NULL, 0x0, "LIOSByteArray" },
    { "_sValue_", NULL, 0x0, "LNSString" },
    { "_csh_", NULL, 0x0, "LRAREUTiCharsetHelper" },
    { "_len_", NULL, 0x0, "I" },
    { "_nRangeMax_", NULL, 0x0, "J" },
    { "_nRangeMin_", NULL, 0x0, "J" },
    { "_outHolder_", NULL, 0x0, "LRAREUTByteArrayHolder" },
    { "_pos_", NULL, 0x0, "I" },
  };
  static J2ObjcClassInfo _SPOTByteString = { "SPOTByteString", "com.appnativa.spot", NULL, 0x1, 13, methods, 9, fields, 0, NULL};
  return &_SPOTByteString;
}

@end
