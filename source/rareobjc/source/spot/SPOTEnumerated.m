//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../spot/src/com/appnativa/spot/SPOTEnumerated.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSLongArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/spot/SPOTEnumerated.h"
#include "com/appnativa/spot/SPOTException.h"
#include "com/appnativa/spot/aSPOTElement.h"
#include "com/appnativa/spot/iSPOTConstants.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/MutableInteger.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/aStreamer.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/Integer.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"

@implementation SPOTEnumerated

- (id)init {
  return [self initSPOTEnumeratedWithBoolean:YES];
}

- (id)initSPOTEnumeratedWithBoolean:(BOOL)optional {
  if (self = [super init]) {
    _nChoices_ = nil;
    _sChoices_ = nil;
    _iValue_ = [[RAREUTMutableInteger alloc] initWithInt:0];
    _bValSet_ = NO;
    _isOptional_ = optional;
  }
  return self;
}

- (id)initWithBoolean:(BOOL)optional {
  return [self initSPOTEnumeratedWithBoolean:optional];
}

- (id)initWithInt:(int)val {
  return [self initSPOTEnumeratedWithInt:val withBoolean:NO];
}

- (id)initSPOTEnumeratedWithInt:(int)val
                    withBoolean:(BOOL)optional {
  if (self = [super init]) {
    _nChoices_ = nil;
    _sChoices_ = nil;
    _iValue_ = [[RAREUTMutableInteger alloc] initWithInt:0];
    _bValSet_ = NO;
    _isOptional_ = optional;
    [self setValueWithInt:val];
  }
  return self;
}

- (id)initWithInt:(int)val
      withBoolean:(BOOL)optional {
  return [self initSPOTEnumeratedWithInt:val withBoolean:optional];
}

- (id)initWithInt:(int)val
     withNSString:(NSString *)defaultval
      withBoolean:(BOOL)optional {
  if (self = [super init]) {
    _nChoices_ = nil;
    _sChoices_ = nil;
    _iValue_ = [[RAREUTMutableInteger alloc] initWithInt:0];
    _bValSet_ = NO;
    _isOptional_ = optional;
    [self setValueWithInt:val];
    [self spot_setDefaultValueWithNSString:defaultval];
  }
  return self;
}

- (id)initWithJavaLangInteger:(JavaLangInteger *)ival
                 withNSString:(NSString *)sval
          withJavaLangInteger:(JavaLangInteger *)idefaultval
                 withNSString:(NSString *)sdefaultval
                  withBoolean:(BOOL)optional {
  if (self = [super init]) {
    _nChoices_ = nil;
    _sChoices_ = nil;
    _iValue_ = [[RAREUTMutableInteger alloc] initWithInt:0];
    _bValSet_ = NO;
    _isOptional_ = optional;
    if (ival != nil) {
      [_iValue_ setValueWithInt:[ival intValue]];
      _sValue_ = sval;
    }
    if (idefaultval != nil) {
      _iDefValue_ = [[RAREUTMutableInteger alloc] initWithInt:[idefaultval intValue]];
      _sDefaultValue_ = sdefaultval;
    }
  }
  return self;
}

- (BOOL)booleanValue {
  return [self getValue] != 0;
}

- (id)clone {
  SPOTEnumerated *e = (SPOTEnumerated *) check_class_cast([super clone], [SPOTEnumerated class]);
  ((SPOTEnumerated *) nil_chk(e))->_iValue_ = [[RAREUTMutableInteger alloc] initWithInt:[((RAREUTMutableInteger *) nil_chk(_iValue_)) getValue]];
  return e;
}

- (int)compareToWithId:(id)o {
  return [self compareToWithSPOTEnumerated:(SPOTEnumerated *) check_class_cast(o, [SPOTEnumerated class])];
}

- (int)compareToWithSPOTEnumerated:(SPOTEnumerated *)o {
  if (o == nil) {
    return 1;
  }
  RAREUTMutableInteger *num1 = _bValSet_ ? _iValue_ : _iDefValue_;
  RAREUTMutableInteger *num2 = ((SPOTEnumerated *) nil_chk(o))->_bValSet_ ? o->_iValue_ : o->_iDefValue_;
  if ((num1 == nil) || (num2 == nil)) {
    return (num1 == num2) ? 0 : ((num1 != nil) ? 1 : -1);
  }
  return [num1 intValue] - [num2 intValue];
}

- (double)doubleValue {
  return (double) [self getValue];
}

- (BOOL)equalsWithASPOTElement:(aSPOTElement *)e {
  if (!([e isKindOfClass:[SPOTEnumerated class]])) {
    return NO;
  }
  SPOTEnumerated *o = (SPOTEnumerated *) check_class_cast(e, [SPOTEnumerated class]);
  if (o == self) {
    return YES;
  }
  RAREUTMutableInteger *num1 = _bValSet_ ? _iValue_ : _iDefValue_;
  RAREUTMutableInteger *num2 = ((SPOTEnumerated *) nil_chk(o))->_bValSet_ ? o->_iValue_ : o->_iDefValue_;
  if ((num1 == nil) || (num2 == nil)) {
    if (num1 != num2) {
      return NO;
    }
  }
  else if (![num2 isEqual:num2]) {
    return NO;
  }
  return [aSPOTElement spot_attributesEqualWithISPOTElement:self withISPOTElement:o];
}

- (void)fromStreamWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _bValSet_ = [RAREUTaStreamer fromStreamWithBoolean:_bValSet_ withJavaIoInputStream:inArg];
  if (_bValSet_) {
    [_iValue_ setValueWithInt:[RAREUTaStreamer fromStreamWithInt:[((RAREUTMutableInteger *) nil_chk(_iValue_)) intValue] withJavaIoInputStream:inArg]];
  }
}

- (NSUInteger)hash {
  return _bValSet_ ? [((RAREUTMutableInteger *) nil_chk(_iValue_)) intValue] : [super hash];
}

- (long long int)longValue {
  return [self getValue];
}

- (RAREUTSNumber *)numberValue {
  if (!_bValSet_) {
    return (_iDefValue_ != nil) ? [((RAREUTSNumber *) nil_chk([self numValueNumber])) setValueWithInt:[_iDefValue_ intValue]] : nil;
  }
  return [((RAREUTSNumber *) nil_chk([self numValueNumber])) setValueWithInt:[self getValue]];
}

- (NSString *)spot_checkRangeValidityStr {
  int ret = [self spot_checkRangeValidity];
  NSString *s = nil;
  switch (ret) {
    case iSPOTConstants_VALUE_TO_BIG:
    case iSPOTConstants_VALUE_TO_SMALL:
    s = [RAREUTHelper expandStringWithNSString:[iSPOTConstants STR_INVALID] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [self spot_getName], [self spot_stringValue], [self spot_getValidityRange], [iSPOTConstants STR_NOTONEOF] } count:4 type:[IOSClass classWithClass:[NSString class]]]];
    break;
    case iSPOTConstants_VALUE_NULL:
    s = [RAREUTHelper expandStringWithNSString:[iSPOTConstants STR_NULL] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [self spot_getName] } count:1 type:[IOSClass classWithClass:[NSString class]]]];
    break;
    default:
    break;
  }
  return s;
}

- (void)spot_clear {
  [super spot_clear];
  _bValSet_ = NO;
  _sValue_ = nil;
}

- (void)spot_generatePropertiesWithJavaUtilMap:(id<JavaUtilMap>)map
                                  withNSString:(NSString *)prefix
                                       withInt:(int)propcase {
  IOSObjectArray *a = _sChoices_;
  IOSIntArray *n = _nChoices_;
  int len = (int) [((IOSObjectArray *) nil_chk(a)) count];
  if ((prefix != nil) && ([prefix sequenceLength] == 0)) {
    prefix = nil;
  }
  NSString *s;
  for (int i = 0; i < len; i++) {
    s = IOSObjectArray_Get(a, i);
    if (prefix != nil) {
      s = [NSString stringWithFormat:@"%@%@", prefix, s];
    }
    if (propcase < 0) {
      s = [((NSString *) nil_chk(s)) lowercaseStringWithJRELocale:[JavaUtilLocale ENGLISH]];
    }
    else if (propcase > 0) {
      s = [((NSString *) nil_chk(s)) uppercaseStringWithJRELocale:[JavaUtilLocale ENGLISH]];
    }
    (void) [((id<JavaUtilMap>) nil_chk(map)) putWithId:s withId:[JavaLangInteger valueOfWithInt:IOSIntArray_Get(nil_chk(n), i)]];
  }
}

- (void)spot_generatePropertiesStrWithJavaUtilMap:(id<JavaUtilMap>)map
                                     withNSString:(NSString *)prefix
                                          withInt:(int)propcase {
  IOSObjectArray *a = _sChoices_;
  int len = (int) [((IOSObjectArray *) nil_chk(a)) count];
  if ((prefix != nil) && ([prefix sequenceLength] == 0)) {
    prefix = nil;
  }
  NSString *s;
  for (int i = 0; i < len; i++) {
    s = IOSObjectArray_Get(a, i);
    if (prefix != nil) {
      s = [NSString stringWithFormat:@"%@%@", prefix, s];
    }
    if (propcase < 0) {
      s = [((NSString *) nil_chk(s)) lowercaseStringWithJRELocale:[JavaUtilLocale ENGLISH]];
    }
    else if (propcase > 0) {
      s = [((NSString *) nil_chk(s)) uppercaseStringWithJRELocale:[JavaUtilLocale ENGLISH]];
    }
    (void) [((id<JavaUtilMap>) nil_chk(map)) putWithId:s withId:IOSObjectArray_Get(a, i)];
  }
}

- (IOSIntArray *)spot_getCopyOfIntChoices {
  if (_nChoices_ == nil) {
    return nil;
  }
  IOSIntArray *s = [IOSIntArray arrayWithLength:(int) [((IOSIntArray *) nil_chk(_nChoices_)) count]];
  [JavaLangSystem arraycopyWithId:_nChoices_ withInt:0 withId:s withInt:0 withInt:(int) [_nChoices_ count]];
  return s;
}

- (IOSObjectArray *)spot_getCopyOfStrChoices {
  if (_sChoices_ == nil) {
    return nil;
  }
  IOSObjectArray *s = [IOSObjectArray arrayWithLength:(int) [((IOSObjectArray *) nil_chk(_sChoices_)) count] type:[IOSClass classWithClass:[NSString class]]];
  [JavaLangSystem arraycopyWithId:_sChoices_ withInt:0 withId:s withInt:0 withInt:(int) [_sChoices_ count]];
  return s;
}

- (NSString *)spot_getDefaultValue {
  return _sDefaultValue_;
}

- (IOSObjectArray *)spot_getRange {
  return [self spot_getCopyOfStrChoices];
}

- (int)spot_getType {
  return iSPOTConstants_SPOT_TYPE_ENUMERATED;
}

- (NSString *)spot_getValidityRange {
  if (_sValidRange_ != nil) {
    return _sValidRange_;
  }
  if (_sChoices_ == nil) {
    return @"{ }";
  }
  JavaLangStringBuilder *s = [[JavaLangStringBuilder alloc] initWithNSString:@"{ "];
  int i = 0;
  for (i = 0; i < ((int) [((IOSObjectArray *) nil_chk(_sChoices_)) count] - 1); i++) {
    (void) [s appendWithNSString:IOSObjectArray_Get(_sChoices_, i)];
    (void) [s appendWithNSString:@" ("];
    (void) [s appendWithInt:IOSIntArray_Get(nil_chk(_nChoices_), i)];
    (void) [s appendWithNSString:@"), "];
  }
  (void) [s appendWithNSString:IOSObjectArray_Get(_sChoices_, i)];
  (void) [s appendWithNSString:@" }"];
  _sValidRange_ = [s description];
  return _sValidRange_;
}

- (id)spot_getValue {
  return [JavaLangInteger valueOfWithInt:[self getValue]];
}

- (void)spot_setChoicesWithNSStringArray:(IOSObjectArray *)val
                            withIntArray:(IOSIntArray *)lval {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _sChoices_ = val;
  _nChoices_ = lval;
}

- (void)spot_setChoicesWithNSStringArray:(IOSObjectArray *)val
                           withLongArray:(IOSLongArray *)lval {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _sChoices_ = val;
  _nChoices_ = nil;
  if (lval != nil) {
    _nChoices_ = [IOSIntArray arrayWithLength:(int) [lval count]];
    for (int i = 0; i < (int) [lval count]; i++) {
      (*IOSIntArray_GetRef(_nChoices_, i)) = (int) IOSLongArray_Get(lval, i);
    }
  }
}

- (void)spot_setDefaultValueWithInt:(int)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _sDefaultValue_ = nil;
  _iDefValue_ = nil;
  if (_nChoices_ == nil) {
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_ILLEGAL_VALUE withNSString:[iSPOTConstants STR_ILLEGAL_VALUE] withNSString:[RAREUTSNumber toStringWithInt:val]];
  }
  for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(_nChoices_)) count]; i++) {
    if (IOSIntArray_Get(_nChoices_, i) == val) {
      _iDefValue_ = [[RAREUTMutableInteger alloc] initWithInt:val];
      _sDefaultValue_ = IOSObjectArray_Get(nil_chk(_sChoices_), i);
      return;
    }
  }
  @throw [[SPOTException alloc] initWithInt:iSPOTConstants_ILLEGAL_VALUE withNSString:[iSPOTConstants STR_ILLEGAL_VALUE] withNSString:[RAREUTSNumber toStringWithInt:val]];
}

- (void)spot_setDefaultValueWithLong:(long long int)val {
  [self spot_setDefaultValueWithInt:(int) val];
}

- (void)spot_setDefaultValueWithNSString:(NSString *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _iDefValue_ = nil;
  if (val == nil) {
    return;
  }
  if (_nChoices_ == nil) {
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_ILLEGAL_VALUE withNSString:[iSPOTConstants STR_ILLEGAL_VALUE] withNSString:val];
  }
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(_sChoices_)) count]; i++) {
    if ([((NSString *) IOSObjectArray_Get(_sChoices_, i)) equalsIgnoreCase:val]) {
      _iDefValue_ = [[RAREUTMutableInteger alloc] initWithInt:IOSIntArray_Get(nil_chk(_nChoices_), i)];
      _sDefaultValue_ = IOSObjectArray_Get(_sChoices_, i);
      return;
    }
  }
  @try {
    int l = [JavaLangInteger parseIntWithNSString:val];
    for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(_nChoices_)) count]; i++) {
      if (IOSIntArray_Get(_nChoices_, i) == l) {
        _iDefValue_ = [[RAREUTMutableInteger alloc] initWithInt:IOSIntArray_Get(_nChoices_, i)];
        _sDefaultValue_ = IOSObjectArray_Get(_sChoices_, i);
        return;
      }
    }
  }
  @catch (JavaLangNumberFormatException *e) {
  }
  @throw [[SPOTException alloc] initWithInt:iSPOTConstants_ILLEGAL_VALUE withNSString:[iSPOTConstants STR_ILLEGAL_VALUE] withNSString:val];
}

- (void)spot_setDefaultValueWithInt:(int)ival
                       withNSString:(NSString *)sval {
  if (_iDefValue_ == nil) {
    _iDefValue_ = [[RAREUTMutableInteger alloc] initWithInt:ival];
  }
  else {
    [_iDefValue_ setValueWithInt:ival];
  }
  _sDefaultValue_ = sval;
}

- (int)spot_stringToIntWithNSString:(NSString *)val {
  if (val != nil) {
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(_sChoices_)) count]; i++) {
      if ([((NSString *) IOSObjectArray_Get(_sChoices_, i)) equalsIgnoreCase:val]) {
        return IOSIntArray_Get(nil_chk(_nChoices_), i);
      }
    }
  }
  NSString *s = [RAREUTHelper expandStringWithNSString:[iSPOTConstants STR_NOT_ONEOF] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ val, [self spot_getValidityRange] } count:2 type:[IOSClass classWithClass:[NSString class]]]];
  @throw [[SPOTException alloc] initWithNSString:s];
}

- (NSString *)spot_stringValue {
  return (_sValue_ == nil) ? _sDefaultValue_ : _sValue_;
}

- (NSString *)spot_stringValueEx {
  if ((_sValue_ == nil) && [self spot_attributesWereSet]) {
    return _sDefaultValue_;
  }
  return _sValue_;
}

- (void)toStreamWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  [RAREUTaStreamer toStreamWithBoolean:_bValSet_ withJavaIoOutputStream:outArg];
  if (_bValSet_) {
    [RAREUTaStreamer toStreamWithInt:[((RAREUTMutableInteger *) nil_chk(_iValue_)) intValue] withJavaIoOutputStream:outArg];
  }
}

- (void)setValueWithBoolean:(BOOL)val {
  [self setValueWithInt:val ? 1 : 0];
}

- (void)setValueWithDouble:(double)val {
  [self setValueWithLong:(long long int) val];
}

- (void)setValueWithInt:(int)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(_nChoices_)) count]; i++) {
    if (IOSIntArray_Get(_nChoices_, i) == val) {
      [((RAREUTMutableInteger *) nil_chk(_iValue_)) setValueWithInt:val];
      _sValue_ = IOSObjectArray_Get(nil_chk(_sChoices_), i);
      _bValSet_ = YES;
      return;
    }
  }
  _bValSet_ = NO;
  NSString *s = [RAREUTHelper expandStringWithNSString:[iSPOTConstants STR_NOT_ONEOF] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [RAREUTSNumber toStringWithInt:val], [self spot_getValidityRange] } count:2 type:[IOSClass classWithClass:[NSString class]]]];
  @throw [[SPOTException alloc] initWithNSString:s];
}

- (void)setValueWithLong:(long long int)val {
  [self setValueWithInt:(int) val];
}

- (void)setValueWithRAREUTSNumber:(RAREUTSNumber *)val {
  [self setValueWithInt:[((RAREUTSNumber *) nil_chk(val)) intValue]];
}

- (void)setValueWithSPOTEnumerated:(SPOTEnumerated *)val {
  RAREUTMutableInteger *num = ((SPOTEnumerated *) nil_chk(val))->_bValSet_ ? val->_iValue_ : val->_iDefValue_;
  if (num != nil) {
    [self setValueWithInt:[num intValue]];
  }
  else {
    _bValSet_ = NO;
  }
}

- (void)setValueWithNSString:(NSString *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _bValSet_ = NO;
  if (val == nil) {
    return;
  }
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(_sChoices_)) count]; i++) {
    if ([((NSString *) IOSObjectArray_Get(_sChoices_, i)) equalsIgnoreCase:val]) {
      _sValue_ = IOSObjectArray_Get(_sChoices_, i);
      [((RAREUTMutableInteger *) nil_chk(_iValue_)) setValueWithInt:IOSIntArray_Get(nil_chk(_nChoices_), i)];
      _bValSet_ = YES;
      return;
    }
  }
  @try {
    long long int l = [RAREUTSNumber longValueWithNSString:val withBoolean:YES];
    for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(_nChoices_)) count]; i++) {
      if (IOSIntArray_Get(_nChoices_, i) == l) {
        _sValue_ = IOSObjectArray_Get(_sChoices_, i);
        [((RAREUTMutableInteger *) nil_chk(_iValue_)) setValueWithInt:IOSIntArray_Get(_nChoices_, i)];
        _bValSet_ = YES;
        return;
      }
    }
  }
  @catch (JavaLangNumberFormatException *e) {
    NSString *s = [RAREUTHelper expandStringWithNSString:[iSPOTConstants STR_NOT_ONEOF] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ val, [self spot_getValidityRange] } count:2 type:[IOSClass classWithClass:[NSString class]]]];
    @throw [[SPOTException alloc] initWithNSString:s];
  }
}

- (int)getChoiceByIndexWithInt:(int)index {
  return IOSIntArray_Get(nil_chk(_nChoices_), index);
}

- (int)getChoiceIndexByNameWithNSString:(NSString *)name {
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(_sChoices_)) count]; i++) {
    if ([((NSString *) IOSObjectArray_Get(_sChoices_, i)) equalsIgnoreCase:name]) {
      return i;
    }
  }
  return -1;
}

- (int)getValue {
  if (!_bValSet_) {
    if (_iDefValue_ == nil) {
      @throw [[SPOTException alloc] initWithNSString:[iSPOTConstants STR_NULL_VALUE] withNSString:(_theName_ == nil) ? [[self getClass] getName] : _theName_];
    }
    return [((RAREUTMutableInteger *) nil_chk(_iDefValue_)) intValue];
  }
  return [((RAREUTMutableInteger *) nil_chk(_iValue_)) intValue];
}

- (int)spot_checkRangeValidityEx {
  if (!_bValSet_ && (_iDefValue_ != nil)) {
    return iSPOTConstants_VALUE_NULL_WITH_DEFAULT;
  }
  if (!_bValSet_ && _isOptional_) {
    return iSPOTConstants_VALUE_NULL_AND_OPTIONAL;
  }
  if (!_bValSet_) {
    return iSPOTConstants_VALUE_NULL;
  }
  if (_nChoices_ == nil) {
    return iSPOTConstants_VALUE_TO_SMALL;
  }
  return iSPOTConstants_VALUE_OK;
}

- (void)copyAllFieldsTo:(SPOTEnumerated *)other {
  [super copyAllFieldsTo:other];
  other->_bValSet_ = _bValSet_;
  other->_iDefValue_ = _iDefValue_;
  other->_iValue_ = _iValue_;
  other->_nChoices_ = _nChoices_;
  other->_sChoices_ = _sChoices_;
  other->_sDefaultValue_ = _sDefaultValue_;
  other->_sValidRange_ = _sValidRange_;
  other->_sValue_ = _sValue_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "booleanValue", NULL, "Z", 0x1, NULL },
    { "clone", NULL, "LNSObject", 0x1, NULL },
    { "equalsWithASPOTElement:", NULL, "Z", 0x1, NULL },
    { "fromStreamWithJavaIoInputStream:", NULL, "V", 0x1, "JavaIoIOException" },
    { "numberValue", NULL, "LRAREUTSNumber", 0x1, NULL },
    { "spot_checkRangeValidityStr", NULL, "LNSString", 0x1, NULL },
    { "spot_getCopyOfIntChoices", NULL, "LIOSIntArray", 0x1, NULL },
    { "spot_getCopyOfStrChoices", NULL, "LIOSObjectArray", 0x1, NULL },
    { "spot_getDefaultValue", NULL, "LNSString", 0x1, NULL },
    { "spot_getRange", NULL, "LIOSObjectArray", 0x1, NULL },
    { "spot_getType", NULL, "I", 0x11, NULL },
    { "spot_getValidityRange", NULL, "LNSString", 0x1, NULL },
    { "spot_getValue", NULL, "LNSObject", 0x1, NULL },
    { "spot_stringValue", NULL, "LNSString", 0x1, NULL },
    { "spot_stringValueEx", NULL, "LNSString", 0x1, NULL },
    { "toStreamWithJavaIoOutputStream:", NULL, "V", 0x1, "JavaIoIOException" },
    { "spot_checkRangeValidityEx", NULL, "I", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "_nChoices_", NULL, 0x4, "LIOSIntArray" },
    { "_sChoices_", NULL, 0x4, "LIOSObjectArray" },
    { "_iValue_", NULL, 0x4, "LRAREUTMutableInteger" },
    { "_bValSet_", NULL, 0x4, "Z" },
    { "_iDefValue_", NULL, 0x4, "LRAREUTMutableInteger" },
    { "_sDefaultValue_", NULL, 0x4, "LNSString" },
    { "_sValidRange_", NULL, 0x4, "LNSString" },
    { "_sValue_", NULL, 0x4, "LNSString" },
  };
  static J2ObjcClassInfo _SPOTEnumerated = { "SPOTEnumerated", "com.appnativa.spot", NULL, 0x1, 17, methods, 8, fields, 0, NULL};
  return &_SPOTEnumerated;
}

@end
