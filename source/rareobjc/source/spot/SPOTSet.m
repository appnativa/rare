//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../spot/src/com/appnativa/spot/SPOTSet.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSBooleanArray.h"
#include "IOSClass.h"
#include "IOSDoubleArray.h"
#include "IOSFloatArray.h"
#include "IOSLongArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/spot/NoNullLinkedHashMap.h"
#include "com/appnativa/spot/SDFNode.h"
#include "com/appnativa/spot/SPOTAny.h"
#include "com/appnativa/spot/SPOTException.h"
#include "com/appnativa/spot/SPOTHelper.h"
#include "com/appnativa/spot/SPOTInteger.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTReal.h"
#include "com/appnativa/spot/SPOTSequence.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/aSPOTElement.h"
#include "com/appnativa/spot/iSPOTConstants.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/aStreamer.h"
#include "com/appnativa/util/iStructuredNode.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/io/PrintWriter.h"
#include "java/io/StringWriter.h"
#include "java/io/Writer.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/ListIterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@implementation SPOTSet

- (id)init {
  return [self initSPOTSetWithBoolean:YES];
}

- (id)initSPOTSetWithBoolean:(BOOL)optional {
  if (self = [super init]) {
    _nRangeMax_ = -1;
    _nRangeMin_ = -1;
    _theElements_ = [[RAREUTIdentityArrayList alloc] init];
    _isAnySet_ = NO;
    _isOptional_ = optional;
  }
  return self;
}

- (id)initWithBoolean:(BOOL)optional {
  return [self initSPOTSetWithBoolean:optional];
}

- (id)initWithNSString:(NSString *)name
          withIOSClass:(IOSClass *)cls {
  if (self = [super init]) {
    _nRangeMax_ = -1;
    _nRangeMin_ = -1;
    _theElements_ = [[RAREUTIdentityArrayList alloc] init];
    _isAnySet_ = NO;
    [self setTypeWithNSString:name withIOSClass:cls];
    _isOptional_ = NO;
  }
  return self;
}

- (id)initWithNSString:(NSString *)name
          withNSString:(NSString *)sclass {
  if (self = [super init]) {
    _nRangeMax_ = -1;
    _nRangeMin_ = -1;
    _theElements_ = [[RAREUTIdentityArrayList alloc] init];
    _isAnySet_ = NO;
    [self setTypeWithNSString:name withNSString:sclass];
    _isOptional_ = NO;
  }
  return self;
}

- (id)initWithNSString:(NSString *)name
          withNSString:(NSString *)sclass
           withBoolean:(BOOL)optional {
  if (self = [super init]) {
    _nRangeMax_ = -1;
    _nRangeMin_ = -1;
    _theElements_ = [[RAREUTIdentityArrayList alloc] init];
    _isAnySet_ = NO;
    [self setTypeWithNSString:name withNSString:sclass];
    _isOptional_ = optional;
  }
  return self;
}

- (id)initWithNSString:(NSString *)name
          withNSString:(NSString *)sclass
              withLong:(long long int)max {
  if (self = [super init]) {
    _nRangeMax_ = -1;
    _nRangeMin_ = -1;
    _theElements_ = [[RAREUTIdentityArrayList alloc] init];
    _isAnySet_ = NO;
    _nRangeMax_ = max;
    [self setTypeWithNSString:name withNSString:sclass];
    _isOptional_ = NO;
  }
  return self;
}

- (id)initWithNSString:(NSString *)name
          withNSString:(NSString *)sclass
              withLong:(long long int)max
           withBoolean:(BOOL)optional {
  if (self = [super init]) {
    _nRangeMax_ = -1;
    _nRangeMin_ = -1;
    _theElements_ = [[RAREUTIdentityArrayList alloc] init];
    _isAnySet_ = NO;
    _nRangeMax_ = max;
    [self setTypeWithNSString:name withNSString:sclass];
    _isOptional_ = optional;
  }
  return self;
}

- (id)initWithNSString:(NSString *)name
      withISPOTElement:(id<iSPOTElement>)sclass
               withInt:(int)min
               withInt:(int)max
           withBoolean:(BOOL)optional {
  if (self = [super init]) {
    _nRangeMax_ = -1;
    _nRangeMin_ = -1;
    _theElements_ = [[RAREUTIdentityArrayList alloc] init];
    _isAnySet_ = NO;
    if (min > -2) {
      _nRangeMin_ = min;
    }
    if (max > -2) {
      _nRangeMax_ = max;
    }
    [self setTypeWithNSString:name withISPOTElement:sclass];
    _isOptional_ = optional;
  }
  return self;
}

- (void)addWithDouble:(double)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  @try {
    id<iSPOTElement> itype = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
    if ([(id) itype isKindOfClass:[aSPOTElement class]]) {
      [((aSPOTElement *) check_class_cast(itype, [aSPOTElement class])) setValueWithDouble:val];
    }
    else {
      [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:[NSString valueOfDouble:val]];
    }
    [self addWithISPOTElement:itype];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (void)addWithInt:(int)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  @try {
    id<iSPOTElement> itype = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
    if ([(id) itype isKindOfClass:[aSPOTElement class]]) {
      [((aSPOTElement *) check_class_cast(itype, [aSPOTElement class])) setValueWithLong:val];
    }
    else {
      [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:[NSString valueOfInt:val]];
    }
    [self addWithISPOTElement:itype];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (BOOL)addWithISPOTElement:(id<iSPOTElement>)element {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if (self->_isAnySet_) {
    element = [self createAnyElementWithISPOTElement:element];
  }
  else if ((_clsDefinedBy_ != nil) && ![_clsDefinedBy_ isInstance:element]) {
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NOT_CLASS withNSString:[iSPOTConstants STR_NOT_CLASS] withNSString:[_clsDefinedBy_ getName] withNSString:[[((id<iSPOTElement>) nil_chk(element)) getClass] getName]];
  }
  [((id<iSPOTElement>) nil_chk(element)) spot_setParentWithISPOTElement:self];
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) addWithId:element];
  return YES;
}

- (void)addWithLong:(long long int)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  @try {
    id<iSPOTElement> itype = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
    if ([(id) itype isKindOfClass:[aSPOTElement class]]) {
      [((aSPOTElement *) check_class_cast(itype, [aSPOTElement class])) setValueWithLong:val];
    }
    else {
      [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:[NSString valueOfLong:val]];
    }
    [self addWithISPOTElement:itype];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (BOOL)addWithId:(id)element {
  return [self addWithISPOTElement:(id<iSPOTElement>) check_protocol_cast(element, @protocol(iSPOTElement))];
}

- (void)addWithRAREUTSNumber:(RAREUTSNumber *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  @try {
    id<iSPOTElement> itype = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
    if ([(id) itype isKindOfClass:[aSPOTElement class]]) {
      [((aSPOTElement *) check_class_cast(itype, [aSPOTElement class])) setValueWithRAREUTSNumber:val];
    }
    else {
      [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:[((RAREUTSNumber *) nil_chk(val)) description]];
    }
    [self addWithISPOTElement:itype];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (void)addWithNSString:(NSString *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  @try {
    id<iSPOTElement> itype = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
    [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:val];
    [self addWithISPOTElement:itype];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (void)addWithInt:(int)index
  withISPOTElement:(id<iSPOTElement>)element {
  if (self->_isAnySet_) {
    element = [self createAnyElementWithISPOTElement:element];
  }
  else if ((_clsDefinedBy_ != nil) && ![_clsDefinedBy_ isInstance:element]) {
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NOT_CLASS withNSString:[iSPOTConstants STR_NOT_CLASS] withNSString:[_clsDefinedBy_ getName] withNSString:[[((id<iSPOTElement>) nil_chk(element)) getClass] getName]];
  }
  [((id<iSPOTElement>) nil_chk(element)) spot_setParentWithISPOTElement:self];
  if ((index < 0) || (index >= [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size])) {
    [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) addWithId:element];
  }
  else {
    [_theElements_ addWithInt:index withId:element];
  }
}

- (void)addWithInt:(int)index
            withId:(id)element {
  [self addWithInt:index withISPOTElement:(id<iSPOTElement>) check_protocol_cast(element, @protocol(iSPOTElement))];
}

- (BOOL)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  if (c != nil) {
    id<JavaUtilIterator> it = [c iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      [self addWithId:[it next]];
    }
  }
  return YES;
}

- (BOOL)addAllWithInt:(int)index
withJavaUtilCollection:(id<JavaUtilCollection>)c {
  if (c != nil) {
    id<JavaUtilIterator> it = [c iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      [self addWithId:[it next]];
    }
  }
  return YES;
}

+ (SPOTSet *)anySetWithNSString:(NSString *)name {
  return [[SPOTSet alloc] initWithNSString:name withISPOTElement:[[SPOTAny alloc] init] withInt:-1 withInt:-1 withBoolean:YES];
}

+ (SPOTSet *)anySetWithNSString:(NSString *)name
                   withNSString:(NSString *)anyclass {
  return [[SPOTSet alloc] initWithNSString:name withISPOTElement:[[SPOTAny alloc] initWithNSString:anyclass] withInt:-1 withInt:-1 withBoolean:YES];
}

+ (SPOTSet *)anySetWithNSString:(NSString *)name
                   withNSString:(NSString *)anyclass
                        withInt:(int)min
                        withInt:(int)max {
  SPOTSet *set = [[SPOTSet alloc] initWithNSString:name withISPOTElement:[[SPOTAny alloc] initWithNSString:anyclass] withInt:-1 withInt:-1 withBoolean:YES];
  [set spot_setRangeWithLong:min withLong:max];
  return set;
}

- (BOOL)booleanValueAtWithInt:(int)position {
  id<iSPOTElement> ti = (id<iSPOTElement>) check_protocol_cast([((RAREUTIdentityArrayList *) nil_chk(_theElements_)) getWithInt:position], @protocol(iSPOTElement));
  return ([(id) ti isKindOfClass:[aSPOTElement class]]) ? [((aSPOTElement *) check_class_cast(ti, [aSPOTElement class])) booleanValue] : [RAREUTSNumber booleanValueWithNSString:[((id<iSPOTElement>) nil_chk(ti)) spot_stringValue]];
}

- (IOSBooleanArray *)booleanValues {
  int n = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  IOSBooleanArray *b = [IOSBooleanArray arrayWithLength:n];
  id<iSPOTElement> ti = nil;
  for (int i = 0; i < n; i++) {
    ti = (id<iSPOTElement>) check_protocol_cast([_theElements_ getWithInt:i], @protocol(iSPOTElement));
    (*IOSBooleanArray_GetRef(b, i)) = ([(id) ti isKindOfClass:[aSPOTElement class]]) ? [((aSPOTElement *) check_class_cast(ti, [aSPOTElement class])) booleanValue] : [RAREUTSNumber booleanValueWithNSString:[((id<iSPOTElement>) nil_chk(ti)) spot_stringValue]];
  }
  return b;
}

- (void)clear {
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
}

- (id)clone {
  SPOTSet *e = (SPOTSet *) check_class_cast([super clone], [SPOTSet class]);
  ((SPOTSet *) nil_chk(e))->_theElements_ = [[RAREUTIdentityArrayList alloc] init];
  [e deepCopyWithSPOTSet:self];
  return e;
}

- (BOOL)containsWithId:(id)o {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) containsWithId:o];
}

- (BOOL)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) containsAllWithJavaUtilCollection:c];
}

- (void)copy__WithSPOTSet:(SPOTSet *)set {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  [_theElements_ addAllWithJavaUtilCollection:((SPOTSet *) nil_chk(set))->_theElements_];
}

- (void)deepCopyWithSPOTSet:(SPOTSet *)set {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  int len = [((SPOTSet *) nil_chk(set)) size];
  id<iSPOTElement> e;
  for (int i = 0; i < len; i++) {
    e = [set getExWithInt:i];
    if (e != nil) {
      e = (id<iSPOTElement>) check_protocol_cast([e clone], @protocol(iSPOTElement));
    }
    [self addWithISPOTElement:e];
  }
}

- (double)doubleValueAtWithInt:(int)position {
  id<iSPOTElement> ti = (id<iSPOTElement>) check_protocol_cast([((RAREUTIdentityArrayList *) nil_chk(_theElements_)) getWithInt:position], @protocol(iSPOTElement));
  return ([(id) ti isKindOfClass:[aSPOTElement class]]) ? [((aSPOTElement *) check_class_cast(ti, [aSPOTElement class])) doubleValue] : [RAREUTSNumber doubleValueWithNSString:[((id<iSPOTElement>) nil_chk(ti)) spot_stringValue]];
}

- (IOSDoubleArray *)doubleValues {
  int n = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  IOSDoubleArray *d = [IOSDoubleArray arrayWithLength:n];
  id<iSPOTElement> ti = nil;
  for (int i = 0; i < n; i++) {
    ti = (id<iSPOTElement>) check_protocol_cast([_theElements_ getWithInt:i], @protocol(iSPOTElement));
    (*IOSDoubleArray_GetRef(d, i)) = ([(id) ti isKindOfClass:[aSPOTElement class]]) ? [((aSPOTElement *) check_class_cast(ti, [aSPOTElement class])) doubleValue] : [RAREUTSNumber doubleValueWithNSString:[((id<iSPOTElement>) nil_chk(ti)) spot_stringValue]];
  }
  return d;
}

+ (SPOTSet *)elementSetWithNSString:(NSString *)name
                   withISPOTElement:(id<iSPOTElement>)type {
  return [[SPOTSet alloc] initWithNSString:name withISPOTElement:type withInt:-1 withInt:-1 withBoolean:YES];
}

- (BOOL)equalsWithASPOTElement:(aSPOTElement *)element {
  if (element == self) {
    return YES;
  }
  if (!([element isKindOfClass:[SPOTSet class]])) {
    return NO;
  }
  RAREUTIdentityArrayList *elements = ((SPOTSet *) nil_chk(element))->_theElements_;
  int len = [((RAREUTIdentityArrayList *) nil_chk(elements)) size];
  if (len != [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size]) {
    return NO;
  }
  if (![aSPOTElement spot_attributesEqualWithISPOTElement:self withISPOTElement:element]) {
    return NO;
  }
  for (int i = 0; i < len; i++) {
    if (![nil_chk([elements getWithInt:i]) isEqual:[_theElements_ getWithInt:i]]) {
      return NO;
    }
  }
  return YES;
}

- (IOSFloatArray *)floatValues {
  int n = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  IOSFloatArray *d = [IOSFloatArray arrayWithLength:n];
  id<iSPOTElement> ti = nil;
  for (int i = 0; i < n; i++) {
    ti = (id<iSPOTElement>) check_protocol_cast([_theElements_ getWithInt:i], @protocol(iSPOTElement));
    (*IOSFloatArray_GetRef(d, i)) = ([(id) ti isKindOfClass:[aSPOTElement class]]) ? [((aSPOTElement *) check_class_cast(ti, [aSPOTElement class])) floatValue] : [RAREUTSNumber floatValueWithNSString:[((id<iSPOTElement>) nil_chk(ti)) spot_stringValue]];
  }
  return d;
}

- (BOOL)fromSDFWithSDFNode:(SDFNode *)node {
  if (node == nil) {
    return NO;
  }
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  [self spot_clear];
  if ([((SDFNode *) nil_chk(node)) hasChildren] || ([node getNodeValue] != nil)) {
    NSString *name;
    if (_strElementType_ == nil) {
      name = [node getNodeAttributeWithNSString:@"type"];
      if ((name == nil) && (_attributes_ != nil)) {
        name = (NSString *) check_class_cast([_attributes_ getWithId:@"type"], [NSString class]);
      }
      _strElementType_ = [aSPOTElement spot_resolveClassNameWithISPOTElement:self withNSString:(name == nil) ? @"SPOTPrintableString" : name];
    }
  }
  if ([node hasAttributes]) {
    _attributes_ = [[NoNullLinkedHashMap alloc] init];
    [_attributes_ putAllWithJavaUtilMap:[node getNodeAttributes]];
  }
  id<JavaUtilMap> defatt = ((_elementsDefinedAtributes_ == nil) || [_elementsDefinedAtributes_ isEmpty]) ? nil : _elementsDefinedAtributes_;
  if ([node hasChildren]) {
    id<iSPOTElement> ti = nil;
    id<JavaUtilList> nodes = [node getChildNodes];
    int len = [((id<JavaUtilList>) nil_chk(nodes)) size];
    id<JavaUtilList> list = nil;
    for (int i = 0; i < len; i++) {
      node = (SDFNode *) check_class_cast([nodes getWithInt:i], [SDFNode class]);
      if ([((SDFNode *) nil_chk(node)) getNodeType] == SDFNode_NODETYPE_COMMENT) {
        if (list == nil) {
          list = [[JavaUtilArrayList alloc] init];
        }
        [((id<JavaUtilList>) nil_chk(list)) addWithId:[node getNodeName]];
        continue;
      }
      @try {
        ti = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
      }
      @catch (JavaLangException *e) {
        if ([e isKindOfClass:[SPOTException class]]) {
          @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
        }
        @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
      }
      [((id<iSPOTElement>) nil_chk(ti)) spot_setParentWithISPOTElement:self];
      if (defatt != nil) {
        [ti spot_defineAttributesWithJavaUtilMap:defatt];
      }
      if (![ti fromSDFWithSDFNode:node]) {
        return NO;
      }
      if ((list != nil) && ([list size] > 0)) {
        [ti spot_setHeaderCommentsWithNSStringArray:(IOSObjectArray *) check_class_cast([list toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[list size] type:[IOSClass classWithClass:[NSString class]]]], [IOSObjectArray class])];
        [list clear];
      }
      [self addWithISPOTElement:ti];
    }
  }
  else if ([node getNodeValue] != nil) {
    id<iSPOTElement> ti;
    @try {
      ti = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
    }
    @catch (JavaLangException *e) {
      if ([e isKindOfClass:[SPOTException class]]) {
        @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
      }
      @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
    }
    if (![((id<iSPOTElement>) nil_chk(ti)) fromSDFWithSDFNode:node]) {
      return NO;
    }
    if (defatt != nil) {
      [ti spot_defineAttributesWithJavaUtilMap:defatt];
    }
    [self addWithISPOTElement:ti];
  }
  return YES;
}

- (void)fromStreamWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  int len = [RAREUTaStreamer readIntWithJavaIoInputStream:inArg];
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  id<iSPOTElement> ti = nil;
  @try {
    for (int i = 0; i < len; i++) {
      ti = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
      [((id<iSPOTElement>) nil_chk(ti)) fromStreamWithJavaIoInputStream:inArg];
      [_theElements_ addWithId:ti];
    }
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (BOOL)fromStructuredNodeWithRAREUTiStructuredNode:(id<RAREUTiStructuredNode>)node {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  [self spot_clear];
  if ([((id<RAREUTiStructuredNode>) nil_chk(node)) hasAttributes]) {
    _attributes_ = [[NoNullLinkedHashMap alloc] init];
    [node copyAttributesWithJavaUtilMap:_attributes_];
  }
  NSString *name;
  if (_strElementType_ == nil) {
    name = nil;
    if (_attributes_ != nil) {
      name = (NSString *) check_class_cast([_attributes_ getWithId:@"type"], [NSString class]);
    }
    _strElementType_ = [aSPOTElement spot_resolveClassNameWithISPOTElement:self withNSString:(name == nil) ? @"SPOTPrintableString" : name];
  }
  id<iSPOTElement> ti = nil;
  node = [node getFirstSignificantChild];
  do {
    name = [((id<RAREUTiStructuredNode>) nil_chk(node)) getName];
    if (![((NSString *) nil_chk(name)) equalsIgnoreCase:_elementName_]) {
      @throw [[SPOTException alloc] initWithInt:iSPOTConstants_INVALID_ELEMENT withNSString:[iSPOTConstants STR_INVALID_ELEMENT] withNSString:_elementName_ withNSString:name];
    }
    @try {
      ti = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
    }
    @catch (JavaLangException *e) {
      if ([e isKindOfClass:[SPOTException class]]) {
        @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
      }
      @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
    }
    [((id<iSPOTElement>) nil_chk(ti)) spot_setParentWithISPOTElement:self];
    if (![ti fromStructuredNodeWithRAREUTiStructuredNode:node]) {
      return NO;
    }
    [self addWithISPOTElement:ti];
  }
  while ((node = [node getNextSibling]) != nil);
  return YES;
}

- (NSUInteger)hash {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) hash];
}

- (int)indexOfWithId:(id)o {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) indexOfWithId:o];
}

- (int)indexOfExWithISPOTElement:(id<iSPOTElement>)e {
  int n = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  for (int i = 0; i < n; i++) {
    if (e == [((id<iSPOTElement>) check_protocol_cast([_theElements_ getWithInt:i], @protocol(iSPOTElement))) spot_elementValue]) {
      return i;
    }
  }
  return -1;
}

- (int)indexOfStringValueExWithNSString:(NSString *)value {
  int n = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  for (int i = 0; i < n; i++) {
    id<iSPOTElement> e = [((id<iSPOTElement>) check_protocol_cast([_theElements_ getWithInt:i], @protocol(iSPOTElement))) spot_elementValue];
    if ((e != nil) && [((NSString *) nil_chk(value)) isEqual:[e spot_stringValue]]) {
      return i;
    }
  }
  return -1;
}

+ (SPOTSet *)integerSetWithNSString:(NSString *)name {
  return [[SPOTSet alloc] initWithNSString:name withISPOTElement:[[SPOTInteger alloc] init] withInt:-1 withInt:-1 withBoolean:YES];
}

+ (SPOTSet *)integerSetWithNSString:(NSString *)name
                            withInt:(int)min
                            withInt:(int)max {
  SPOTSet *set = [[SPOTSet alloc] initWithNSString:name withISPOTElement:[[SPOTInteger alloc] init] withInt:-1 withInt:-1 withBoolean:YES];
  [set spot_setRangeWithLong:min withLong:max];
  return set;
}

- (id<JavaUtilIterator>)iterator {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) iterator];
}

- (int)lastIndexOfWithId:(id)o {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) lastIndexOfWithId:o];
}

- (id<JavaUtilListIterator>)listIterator {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) listIterator];
}

- (id<JavaUtilListIterator>)listIteratorWithInt:(int)index {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) listIteratorWithInt:index];
}

- (long long int)longValueAtWithInt:(int)position {
  id<iSPOTElement> ti = (id<iSPOTElement>) check_protocol_cast([((RAREUTIdentityArrayList *) nil_chk(_theElements_)) getWithInt:position], @protocol(iSPOTElement));
  return ([(id) ti isKindOfClass:[aSPOTElement class]]) ? [((aSPOTElement *) check_class_cast(ti, [aSPOTElement class])) longValue] : [RAREUTSNumber longValueWithNSString:[((id<iSPOTElement>) nil_chk(ti)) spot_stringValue]];
}

- (IOSLongArray *)longValues {
  int n = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  IOSLongArray *l = [IOSLongArray arrayWithLength:n];
  id<iSPOTElement> ti = nil;
  for (int i = 0; i < n; i++) {
    ti = (id<iSPOTElement>) check_protocol_cast([_theElements_ getWithInt:i], @protocol(iSPOTElement));
    (*IOSLongArray_GetRef(l, i)) = ([(id) ti isKindOfClass:[aSPOTElement class]]) ? [((aSPOTElement *) check_class_cast(ti, [aSPOTElement class])) longValue] : [RAREUTSNumber longValueWithNSString:[((id<iSPOTElement>) nil_chk(ti)) spot_stringValue]];
  }
  return l;
}

- (IOSObjectArray *)objectValues {
  int n = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  IOSObjectArray *a = [IOSObjectArray arrayWithLength:n type:[IOSClass classWithClass:[NSObject class]]];
  id<iSPOTElement> ti = nil;
  for (int i = 0; i < n; i++) {
    ti = [self getExWithInt:i];
    (void) IOSObjectArray_Set(a, i, [((id<iSPOTElement>) nil_chk(ti)) spot_getValue]);
  }
  return a;
}

+ (SPOTSet *)realSetWithNSString:(NSString *)name {
  return [[SPOTSet alloc] initWithNSString:name withISPOTElement:[[SPOTReal alloc] init] withInt:-1 withInt:-1 withBoolean:YES];
}

+ (SPOTSet *)realSetWithNSString:(NSString *)name
                         withInt:(int)min
                         withInt:(int)max {
  SPOTSet *set = [[SPOTSet alloc] initWithNSString:name withISPOTElement:[[SPOTReal alloc] init] withInt:-1 withInt:-1 withBoolean:YES];
  [set spot_setRangeWithLong:min withLong:max];
  return set;
}

- (id)removeWithInt:(int)index {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) removeWithInt:index];
}

- (BOOL)removeWithId:(id)o {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) removeWithId:o];
}

- (BOOL)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) removeAllWithJavaUtilCollection:c];
}

- (int)removeExWithISPOTElement:(id<iSPOTElement>)e {
  int n = [self indexOfExWithISPOTElement:e];
  if (n != -1) {
    (void) [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) removeWithInt:n];
  }
  return n;
}

- (BOOL)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) retainAllWithJavaUtilCollection:c];
}

- (int)size {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
}

- (void)spot_addAllWithJavaUtilList:(id<JavaUtilList>)list {
  int len = (list == nil) ? 0 : [list size];
  for (int i = 0; i < len; i++) {
    [self addWithNSString:(NSString *) check_class_cast([((id<JavaUtilList>) nil_chk(list)) getWithInt:i], [NSString class])];
  }
}

- (void)spot_addAllWithNSStringArray:(IOSObjectArray *)list {
  int len = (list == nil) ? 0 : (int) [list count];
  for (int i = 0; i < len; i++) {
    [self addWithNSString:IOSObjectArray_Get(nil_chk(list), i)];
  }
}

- (NSString *)spot_checkRangeValidityStr {
  int n = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  if (n == 0) {
    return _isOptional_ ? nil : [RAREUTHelper expandStringWithNSString:[iSPOTConstants STR_NULL] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [self spot_getName] } count:1 type:[IOSClass classWithClass:[NSString class]]]];
  }
  if ((n < _nRangeMin_) && (_nRangeMin_ != -1)) {
    return [RAREUTHelper expandStringWithNSString:[iSPOTConstants STR_TOFEW_ELEMENTS] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [self spot_getName], [RAREUTSNumber toStringWithInt:n], [RAREUTSNumber toStringWithLong:_nRangeMin_] } count:3 type:[IOSClass classWithClass:[NSString class]]]];
  }
  if ((n > _nRangeMax_) && (_nRangeMax_ != -1)) {
    return [RAREUTHelper expandStringWithNSString:[iSPOTConstants STR_TOMANY_ELEMENTS] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [self spot_getName], [RAREUTSNumber toStringWithInt:n], [RAREUTSNumber toStringWithLong:_nRangeMax_] } count:3 type:[IOSClass classWithClass:[NSString class]]]];
  }
  id<iSPOTElement> ti;
  for (int i = 0; i < n; i++) {
    ti = (id<iSPOTElement>) check_protocol_cast([_theElements_ getWithInt:i], @protocol(iSPOTElement));
    if ((_clsDefinedBy_ != nil) && ![_clsDefinedBy_ isInstance:ti]) {
      return [RAREUTHelper expandStringWithNSString:[iSPOTConstants STR_BAD_ELEMENT] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [RAREUTSNumber toStringWithInt:i], [self spot_getName], [((id<iSPOTElement>) nil_chk(ti)) spot_checkRangeValidityStr] } count:3 type:[IOSClass classWithClass:[NSString class]]]];
    }
    if ([((id<iSPOTElement>) nil_chk(ti)) spot_checkRangeValidity] != 0) {
      return [RAREUTHelper expandStringWithNSString:[iSPOTConstants STR_BAD_ELEMENT] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [RAREUTSNumber toStringWithInt:i], [self spot_getName], [ti spot_checkRangeValidityStr] } count:3 type:[IOSClass classWithClass:[NSString class]]]];
    }
  }
  return nil;
}

- (void)spot_clear {
  [super spot_clear];
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
}

- (void)spot_copyWithISPOTElement:(id<iSPOTElement>)element
                      withBoolean:(BOOL)newinstance {
  if (!newinstance) {
    if (![aSPOTElement OPTIMIZE_RUNTIME]) {
      [self checkReadOnly];
    }
    [self spot_clear];
  }
  [self spot_copyExWithISPOTElement:element];
  if ([(id) element isKindOfClass:[SPOTSet class]]) {
    [self deepCopyWithSPOTSet:(SPOTSet *) check_class_cast(element, [SPOTSet class])];
  }
  else if ([(id) element isKindOfClass:[aSPOTElement class]]) {
    [self setValueWithNSString:[((id<iSPOTElement>) nil_chk(element)) spot_stringValue]];
  }
}

- (void)spot_defineElementAttributeWithNSString:(NSString *)name
                                   withNSString:(NSString *)defaultValue {
  if (_elementsDefinedAtributes_ == nil) {
    _elementsDefinedAtributes_ = [[JavaUtilLinkedHashMap alloc] init];
  }
  (void) [((id<JavaUtilMap>) nil_chk(_elementsDefinedAtributes_)) putWithId:name withId:defaultValue];
}

- (void)spot_ensureCapacityWithInt:(int)capacity {
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) ensureCapacityWithInt:capacity];
}

- (id<iSPOTElement>)spot_getArrayClassInstance {
  @try {
    return [self spot_getArrayClassInstanceEx];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (NSString *)spot_getArrayClassShortName {
  NSString *s = _strElementType_;
  if (self->_anyPrototype_ != nil) {
    s = [_anyPrototype_ spot_getDefinedByType];
    if (s == nil) {
      return @"Any";
    }
  }
  if (s == nil) {
    return @"";
  }
  int n = [((NSString *) nil_chk(s)) lastIndexOf:'.'];
  s = (n == -1) ? s : [s substring:n + 1];
  if ([s hasPrefix:@"SPOT"]) {
    s = [s substring:4];
  }
  return s;
}

- (NSString *)spot_getElementName {
  return _elementName_;
}

- (NSString *)spot_getName {
  if (_theName_ == nil) {
    _theName_ = [[self getClass] getName];
    int i = [((NSString *) nil_chk(_theName_)) lastIndexOf:'.'];
    if (i != -1) {
      JavaLangStringBuilder *buf = [[JavaLangStringBuilder alloc] initWithNSString:_theName_];
      [buf setCharAtWithInt:i withChar:':'];
      _theName_ = [buf description];
    }
  }
  return _theName_;
}

- (IOSObjectArray *)spot_getRange {
  if ((_nRangeMin_ < 0) && (_nRangeMax_ < 0)) {
    return nil;
  }
  return [IOSObjectArray arrayWithObjects:(id[]){ [JavaLangLong valueOfWithLong:_nRangeMin_], [JavaLangLong valueOfWithLong:_nRangeMax_] } count:2 type:[IOSClass classWithClass:[NSObject class]]];
}

- (SPOTSequence *)spot_getSequenceElementWithInt:(int)position {
  return (SPOTSequence *) check_class_cast([((RAREUTIdentityArrayList *) nil_chk(_theElements_)) getWithInt:position], [SPOTSequence class]);
}

- (SPOTSet *)spot_getSetElementWithInt:(int)position {
  return (SPOTSet *) check_class_cast([((RAREUTIdentityArrayList *) nil_chk(_theElements_)) getWithInt:position], [SPOTSet class]);
}

- (id<JavaUtilMap>)spot_getSupportedElementAttributes {
  return (_elementsDefinedAtributes_ == nil) ? nil : [JavaUtilCollections unmodifiableMapWithJavaUtilMap:_elementsDefinedAtributes_];
}

- (int)spot_getType {
  return iSPOTConstants_SPOT_TYPE_SET;
}

- (NSString *)spot_getValidityRange {
  if ((_nRangeMin_ != -1) || (_nRangeMax_ != -1)) {
    NSString *s = @"";
    s = (_nRangeMin_ != -1) ? ([NSString stringWithFormat:@"%@..", [RAREUTSNumber toStringWithLong:_nRangeMin_]]) : @"..";
    if (_nRangeMax_ != -1) {
      s = [NSString stringWithFormat:@"%@%@", s, [RAREUTSNumber toStringWithLong:_nRangeMax_]];
    }
    return s;
  }
  else {
    return @"";
  }
}

- (id)spot_getValue {
  return [self objectValues];
}

- (BOOL)spot_isAnySet {
  return [((NSString *) nil_chk(_strElementType_)) hasSuffix:@"SPOTAny"];
}

- (BOOL)spot_isContainer {
  return YES;
}

- (BOOL)spot_isSequenceSet {
  if ([self spot_isAnySet]) {
    return NO;
  }
  if (_clsDefinedBy_ != nil) {
    return [[IOSClass classWithClass:[SPOTSequence class]] isAssignableFrom:_clsDefinedBy_];
  }
  return ![((NSString *) nil_chk(_strElementType_)) contains:@"SPOT"];
}

- (void)spot_makeReadOnly {
  if (_canMakeReadOnly_ && !_isReadOnly_) {
    _isReadOnly_ = YES;
    id<iSPOTElement> ti = nil;
    int len = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
    for (int i = 0; i < len; i++) {
      ti = (id<iSPOTElement>) check_protocol_cast([_theElements_ getWithInt:i], @protocol(iSPOTElement));
      [((id<iSPOTElement>) nil_chk(ti)) spot_makeReadOnly];
    }
  }
}

- (void)spot_setDefaultValueWithNSString:(NSString *)val {
  @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NOT_SUPPORTED withNSString:[iSPOTConstants STR_NOT_SUPPORTED] withNSString:[[self getClass] getName]];
}

- (void)spot_setNameWithNSString:(NSString *)name {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _theName_ = name;
}

- (void)spot_setRangeWithLong:(long long int)min
                     withLong:(long long int)max {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _nRangeMin_ = min;
  _nRangeMax_ = max;
  if (_nRangeMin_ < -1) {
    _nRangeMin_ = -1;
  }
  if (_nRangeMax_ < -1) {
    _nRangeMax_ = -1;
  }
}

- (void)spot_setRangeWithNSString:(NSString *)min
                     withNSString:(NSString *)max {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if (min != nil) {
    _nRangeMin_ = [RAREUTSNumber longValueWithNSString:min];
  }
  if (max != nil) {
    _nRangeMax_ = [RAREUTSNumber longValueWithNSString:max];
  }
  if (_nRangeMin_ < -1) {
    _nRangeMin_ = -1;
  }
  if (_nRangeMax_ < -1) {
    _nRangeMax_ = -1;
  }
}

- (NSString *)spot_stringValue {
  @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NOT_SUPPORTED withNSString:[iSPOTConstants STR_NOT_SUPPORTED] withNSString:@"Set"];
}

- (NSString *)spot_stringValueEx {
  @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NOT_SUPPORTED withNSString:[iSPOTConstants STR_NOT_SUPPORTED] withNSString:@"Set"];
}

+ (SPOTSet *)spot_toSetWithNSString:(NSString *)name
                   withISPOTElement:(id<iSPOTElement>)e {
  SPOTSet *set = [[SPOTSet alloc] initWithNSString:name withISPOTElement:e withInt:-1 withInt:-1 withBoolean:YES];
  [set addWithISPOTElement:e];
  return set;
}

+ (SPOTSet *)stringSetWithNSString:(NSString *)name {
  return [[SPOTSet alloc] initWithNSString:name withISPOTElement:[[SPOTPrintableString alloc] init] withInt:-1 withInt:-1 withBoolean:YES];
}

+ (SPOTSet *)stringSetWithNSString:(NSString *)name
                           withInt:(int)min
                           withInt:(int)max {
  SPOTSet *set = [[SPOTSet alloc] initWithNSString:name withISPOTElement:[[SPOTPrintableString alloc] init] withInt:-1 withInt:-1 withBoolean:YES];
  [set spot_setRangeWithLong:min withLong:max];
  return set;
}

- (NSString *)stringValueAtWithInt:(int)position {
  id<iSPOTElement> e = [self getExWithInt:position];
  return [((id<iSPOTElement>) nil_chk(e)) spot_stringValue];
}

- (IOSObjectArray *)stringValues {
  int n = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  IOSObjectArray *s = [IOSObjectArray arrayWithLength:n type:[IOSClass classWithClass:[NSString class]]];
  id<iSPOTElement> ti = nil;
  for (int i = 0; i < n; i++) {
    ti = [self getExWithInt:i];
    (void) IOSObjectArray_Set(s, i, [((id<iSPOTElement>) nil_chk(ti)) spot_stringValue]);
  }
  return s;
}

- (id<JavaUtilList>)subListWithInt:(int)fromIndex
                           withInt:(int)toIndex {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) subListWithInt:fromIndex withInt:toIndex];
}

- (IOSObjectArray *)toArray {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) toArray];
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) toArrayWithNSObjectArray:a];
}

- (NSString *)toSDF {
  JavaIoStringWriter *sw = [[JavaIoStringWriter alloc] init];
  @try {
    [self toSDFWithJavaIoWriter:sw withNSString:nil withInt:0 withBoolean:NO withBoolean:YES];
  }
  @catch (JavaIoIOException *ignore) {
  }
  return [sw description];
}

- (BOOL)toSDFWithJavaIoWriter:(JavaIoWriter *)outArg {
  return [self toSDFWithJavaIoWriter:outArg withNSString:[self spot_getName] withInt:0 withBoolean:NO withBoolean:YES];
}

- (BOOL)toSDFWithJavaIoWriter:(JavaIoWriter *)outArg
                 withNSString:(NSString *)tag
                      withInt:(int)depth
                  withBoolean:(BOOL)outputempty
                  withBoolean:(BOOL)outputComments {
  if ((_headerComment_ != nil) && outputComments) {
    int len = (int) [_headerComment_ count];
    for (int i = 0; i < len; i++) {
      [aSPOTElement writeSDFNameWithJavaIoWriter:outArg withNSString:IOSObjectArray_Get(_headerComment_, i) withInt:depth];
      [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"\n"];
    }
  }
  int n = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  if (n > 0) {
    id<iSPOTElement> ti = nil;
    id<iSPOTElement> prot = nil;
    if (tag == nil) {
      tag = @"{\n";
    }
    else {
      tag = [NSString stringWithFormat:@"%@ {\n", tag];
    }
    [aSPOTElement writeSDFNameWithJavaIoWriter:outArg withNSString:tag withInt:depth];
    if (n > 0) {
      for (int i = 0; i < n; i++) {
        ti = (id<iSPOTElement>) check_protocol_cast([_theElements_ getWithInt:i], @protocol(iSPOTElement));
        if (ti == nil) {
          continue;
        }
        prot = ti;
        if (![((id<iSPOTElement>) nil_chk(ti)) toSDFWithJavaIoWriter:outArg withNSString:nil withInt:depth + 1 withBoolean:outputempty withBoolean:outputComments]) {
          [RAREUTHelper writePaddingWithJavaIoWriter:outArg withInt:depth + 1];
          [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"{}\n"];
        }
      }
      [RAREUTHelper writePaddingWithJavaIoWriter:outArg withInt:depth];
      [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"}"];
      NSString *type = nil;
      if (([(id) [self spot_getParent] isKindOfClass:[SPOTAny class]]) && (prot != nil)) {
        type = [aSPOTElement spot_getRelativeClassNameWithISPOTElement:prot];
      }
      if (_attributes_ != nil) {
        if (type != nil) {
          (void) [_attributes_ putWithId:@"type" withId:type];
        }
        [aSPOTElement writeAttributesWithJavaIoWriter:outArg withJavaUtilMap:_attributes_ withJavaUtilMap:_defAttributes_ withInt:depth];
        if (type != nil) {
          (void) [_attributes_ removeWithId:@"type"];
        }
      }
      else if (type != nil) {
        (void) [outArg appendWithJavaLangCharSequence:@" [ type=\""];
        (void) [outArg appendWithJavaLangCharSequence:type];
        (void) [outArg appendWithJavaLangCharSequence:@"\" ]"];
      }
      if ((_footerComment_ != nil) && outputComments) {
        [outArg writeWithNSString:@" "];
        [outArg writeWithNSString:_footerComment_];
      }
      [outArg writeWithNSString:@"\n"];
    }
    return YES;
  }
  else if (outputempty || _attributeSet_) {
    if (_clsDefinedBy_ != nil) {
      @try {
        id<iSPOTElement> ti = [self spot_getArrayClassInstanceEx];
        if (tag == nil) {
          tag = @"{\n";
        }
        else {
          tag = [NSString stringWithFormat:@"%@ {\n", tag];
        }
        [aSPOTElement writeSDFNameWithJavaIoWriter:outArg withNSString:tag withInt:depth];
        [((id<iSPOTElement>) nil_chk(ti)) toSDFWithJavaIoWriter:outArg withNSString:nil withInt:depth + 1 withBoolean:outputempty withBoolean:outputComments];
        [RAREUTHelper writePaddingWithJavaIoWriter:outArg withInt:depth];
        [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"}"];
        if (_attributes_ != nil) {
          [aSPOTElement writeAttributesWithJavaIoWriter:outArg withJavaUtilMap:_attributes_ withJavaUtilMap:_defAttributes_ withInt:depth];
        }
        [outArg writeWithNSString:@"\n"];
        return YES;
      }
      @catch (JavaLangException *ex) {
        [((JavaLangException *) nil_chk(ex)) printStackTraceWithJavaIoPrintWriter:[[JavaIoPrintWriter alloc] initWithJavaIoWriter:outArg]];
      }
    }
    if (tag == nil) {
      tag = @"{}";
    }
    else {
      tag = [NSString stringWithFormat:@"%@ {}", tag];
    }
    if (_attributes_ != nil) {
      [aSPOTElement writeAttributesWithJavaIoWriter:outArg withJavaUtilMap:_attributes_ withJavaUtilMap:_defAttributes_ withInt:depth];
    }
    [aSPOTElement writeSDFNameWithJavaIoWriter:outArg withNSString:tag withInt:depth];
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"\n"];
    return YES;
  }
  return NO;
}

- (void)toStreamWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  id<iSPOTElement> ti = nil;
  int len = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  [RAREUTaStreamer toStreamWithInt:len withJavaIoOutputStream:outArg];
  for (int i = 0; i < len; i++) {
    ti = (id<iSPOTElement>) check_protocol_cast([_theElements_ getWithInt:i], @protocol(iSPOTElement));
    [((id<iSPOTElement>) nil_chk(ti)) toStreamWithJavaIoOutputStream:outArg];
  }
}

- (NSString *)description {
  JavaIoStringWriter *sw = [[JavaIoStringWriter alloc] init];
  @try {
    [self toSDFWithJavaIoWriter:sw];
  }
  @catch (JavaIoIOException *ex) {
  }
  [sw flush];
  return [sw description];
}

- (id<JavaUtilList>)unsafeGetObjectList {
  if (_isReadOnly_) {
    return [JavaUtilCollections unmodifiableListWithJavaUtilList:_theElements_];
  }
  return _theElements_;
}

- (id<iSPOTElement>)setWithInt:(int)index
              withISPOTElement:(id<iSPOTElement>)element {
  if (self->_isAnySet_) {
    element = [self createAnyElementWithISPOTElement:element];
  }
  else if ((_clsDefinedBy_ != nil) && ![_clsDefinedBy_ isInstance:element]) {
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NOT_CLASS withNSString:[iSPOTConstants STR_NOT_CLASS] withNSString:[_clsDefinedBy_ getName] withNSString:[[((id<iSPOTElement>) nil_chk(element)) getClass] getName]];
  }
  [((id<iSPOTElement>) nil_chk(element)) spot_setParentWithISPOTElement:self];
  return (id<iSPOTElement>) check_protocol_cast([((RAREUTIdentityArrayList *) nil_chk(_theElements_)) setWithInt:index withId:element], @protocol(iSPOTElement));
}

- (id)setWithInt:(int)index
          withId:(id)element {
  return [self setWithInt:index withISPOTElement:(id<iSPOTElement>) check_protocol_cast(element, @protocol(iSPOTElement))];
}

- (void)setTypeWithNSString:(NSString *)name
               withIOSClass:(IOSClass *)type {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _elementName_ = name;
  _strElementType_ = [((IOSClass *) nil_chk(type)) getName];
  _clsDefinedBy_ = type;
  _elementsDefinedAtributes_ = nil;
  _isAnySet_ = [_clsDefinedBy_ isEqual:[IOSClass classWithClass:[SPOTAny class]]];
}

- (void)setTypeWithNSString:(NSString *)name
           withISPOTElement:(id<iSPOTElement>)itype {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _elementName_ = name;
  if (itype != nil) {
    _strElementType_ = [[itype getClass] getName];
    _clsDefinedBy_ = [itype getClass];
    _elementsDefinedAtributes_ = [itype spot_getSupportedAttributes];
    if (_elementsDefinedAtributes_ != nil) {
      _elementsDefinedAtributes_ = [[JavaUtilLinkedHashMap alloc] initWithJavaUtilMap:_elementsDefinedAtributes_];
    }
    self->_isAnySet_ = [_clsDefinedBy_ isEqual:[IOSClass classWithClass:[SPOTAny class]]];
    if (self->_isAnySet_) {
      _anyPrototype_ = [[SPOTAny alloc] initWithSPOTAny:(SPOTAny *) check_class_cast(itype, [SPOTAny class])];
    }
  }
}

- (void)setTypeWithNSString:(NSString *)name
               withNSString:(NSString *)itype {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _elementName_ = name;
  _strElementType_ = [aSPOTElement spot_resolveClassNameWithISPOTElement:self withNSString:itype];
  _elementsDefinedAtributes_ = nil;
  if (_strElementType_ != nil) {
    @try {
      _clsDefinedBy_ = [SPOTHelper loadClassWithNSString:_strElementType_];
      self->_isAnySet_ = [((IOSClass *) nil_chk(_clsDefinedBy_)) isEqual:[IOSClass classWithClass:[SPOTAny class]]];
    }
    @catch (JavaLangClassNotFoundException *ex) {
    }
  }
}

- (void)setValueWithBoolean:(BOOL)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  @try {
    id<iSPOTElement> itype = [self spot_getArrayClassInstanceEx];
    if ([(id) itype isKindOfClass:[aSPOTElement class]]) {
      [((aSPOTElement *) check_class_cast(itype, [aSPOTElement class])) setValueWithBoolean:val];
    }
    else {
      [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:[NSString valueOfBool:val]];
    }
    [self addWithISPOTElement:itype];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (void)setValueWithDouble:(double)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  @try {
    id<iSPOTElement> itype = [self spot_getArrayClassInstanceEx];
    if ([(id) itype isKindOfClass:[aSPOTElement class]]) {
      [((aSPOTElement *) check_class_cast(itype, [aSPOTElement class])) setValueWithDouble:val];
    }
    else {
      [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:[NSString valueOfDouble:val]];
    }
    [self addWithISPOTElement:itype];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (void)setValueWithDoubleArray:(IOSDoubleArray *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if (val == nil) {
    return;
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  [_theElements_ ensureCapacityWithInt:(int) [((IOSDoubleArray *) nil_chk(val)) count]];
  @try {
    for (int i = 0; i < (int) [val count]; i++) {
      id<iSPOTElement> itype = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
      if ([(id) itype isKindOfClass:[aSPOTElement class]]) {
        [((aSPOTElement *) check_class_cast(itype, [aSPOTElement class])) setValueWithDouble:IOSDoubleArray_Get(val, i)];
      }
      else {
        [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:[NSString valueOfDouble:IOSDoubleArray_Get(val, i)]];
      }
      [_theElements_ addWithId:itype];
    }
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (void)setValueWithISPOTElement:(id<iSPOTElement>)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if ((_clsDefinedBy_ != nil) && ![_clsDefinedBy_ isInstance:val]) {
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NOT_CLASS withNSString:[iSPOTConstants STR_NOT_CLASS] withNSString:[_clsDefinedBy_ getName] withNSString:[[((id<iSPOTElement>) nil_chk(val)) getClass] getName]];
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) addWithId:val];
}

- (void)setValueWithISPOTElementArray:(IOSObjectArray *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if (val == nil) {
    return;
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  int len = (int) [((IOSObjectArray *) nil_chk(val)) count];
  [_theElements_ ensureCapacityWithInt:len];
  if (_clsDefinedBy_ == nil) {
    for (int i = 0; i < len; i++) {
      [_theElements_ addWithId:IOSObjectArray_Get(val, i)];
    }
  }
  else {
    id<iSPOTElement> e;
    for (int i = 0; i < len; i++) {
      e = IOSObjectArray_Get(val, i);
      if (![_clsDefinedBy_ isInstance:e]) {
        @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NOT_CLASS withNSString:[iSPOTConstants STR_NOT_CLASS] withNSString:[_clsDefinedBy_ getName] withNSString:[[((id<iSPOTElement>) nil_chk(e)) getClass] getName]];
      }
      [_theElements_ addWithId:e];
    }
  }
}

- (void)setValueWithJavaUtilList:(id<JavaUtilList>)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if (val == nil) {
    return;
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  int len = [((id<JavaUtilList>) nil_chk(val)) size];
  [_theElements_ ensureCapacityWithInt:len];
  if (_clsDefinedBy_ == nil) {
    for (int i = 0; i < len; i++) {
      [_theElements_ addWithId:[val getWithInt:i]];
    }
  }
  else {
    id<iSPOTElement> e;
    for (int i = 0; i < len; i++) {
      e = (id<iSPOTElement>) check_protocol_cast([val getWithInt:i], @protocol(iSPOTElement));
      if (![_clsDefinedBy_ isInstance:e]) {
        @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NOT_CLASS withNSString:[iSPOTConstants STR_NOT_CLASS] withNSString:[_clsDefinedBy_ getName] withNSString:[[((id<iSPOTElement>) nil_chk(e)) getClass] getName]];
      }
      [_theElements_ addWithId:e];
    }
  }
}

- (void)setValueWithLong:(long long int)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  @try {
    id<iSPOTElement> itype = [self spot_getArrayClassInstanceEx];
    if ([(id) itype isKindOfClass:[aSPOTElement class]]) {
      [((aSPOTElement *) check_class_cast(itype, [aSPOTElement class])) setValueWithLong:val];
    }
    else {
      [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:[RAREUTSNumber toStringWithLong:val]];
    }
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (void)setValueWithLongArray:(IOSLongArray *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if (val == nil) {
    return;
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  [_theElements_ ensureCapacityWithInt:(int) [((IOSLongArray *) nil_chk(val)) count]];
  @try {
    for (int i = 0; i < (int) [val count]; i++) {
      id<iSPOTElement> itype = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
      if ([(id) itype isKindOfClass:[aSPOTElement class]]) {
        [((aSPOTElement *) check_class_cast(itype, [aSPOTElement class])) setValueWithLong:IOSLongArray_Get(val, i)];
      }
      else {
        [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:[RAREUTSNumber toStringWithLong:IOSLongArray_Get(val, i)]];
      }
      [_theElements_ addWithId:itype];
    }
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (void)setValueWithRAREUTSNumber:(RAREUTSNumber *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  @try {
    id<iSPOTElement> itype = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
    if ([(id) itype isKindOfClass:[aSPOTElement class]]) {
      [((aSPOTElement *) check_class_cast(itype, [aSPOTElement class])) setValueWithRAREUTSNumber:val];
    }
    else {
      [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:[((RAREUTSNumber *) nil_chk(val)) description]];
    }
    [self addWithISPOTElement:itype];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (void)setValueWithNSString:(NSString *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  @try {
    id<iSPOTElement> itype = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
    [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:val];
    [self addWithISPOTElement:itype];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (void)setValueWithNSStringArray:(IOSObjectArray *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if (val == nil) {
    return;
  }
  [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) clear];
  [_theElements_ ensureCapacityWithInt:(int) [((IOSObjectArray *) nil_chk(val)) count]];
  @try {
    for (int i = 0; i < (int) [val count]; i++) {
      id<iSPOTElement> itype = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
      [((id<iSPOTElement>) nil_chk(itype)) spot_setValueWithNSString:IOSObjectArray_Get(val, i)];
      [_theElements_ addWithId:itype];
    }
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[SPOTException class]]) {
      @throw (SPOTException *) check_class_cast(e, [SPOTException class]);
    }
    @throw [[SPOTException alloc] initWithInt:iSPOTConstants_NO_CREATE withNSString:[NSString formatWithNSString:[iSPOTConstants STR_NO_CREATE] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _strElementType_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withJavaLangException:e];
  }
}

- (id)getWithInt:(int)position {
  if ((position < 0) || (position > [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size])) {
    return nil;
  }
  return (id<iSPOTElement>) check_protocol_cast([((RAREUTIdentityArrayList *) nil_chk(_theElements_)) getWithInt:position], @protocol(iSPOTElement));
}

- (int)getCount {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
}

- (id<iSPOTElement>)getExWithInt:(int)position {
  if ((position < 0) || (position > [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size])) {
    return nil;
  }
  return [((id<iSPOTElement>) check_protocol_cast([((RAREUTIdentityArrayList *) nil_chk(_theElements_)) getWithInt:position], @protocol(iSPOTElement))) spot_elementValue];
}

- (IOSObjectArray *)getValues {
  return (IOSObjectArray *) check_class_cast([_theElements_ toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size] type:[IOSClass classWithProtocol:@protocol(iSPOTElement)]]], [IOSObjectArray class]);
}

- (IOSObjectArray *)getValuesEx {
  int n = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  IOSObjectArray *a = [IOSObjectArray arrayWithLength:n type:[IOSClass classWithProtocol:@protocol(iSPOTElement)]];
  for (int i = 0; i < n; i++) {
    (void) IOSObjectArray_Set(a, i, [((id<iSPOTElement>) check_protocol_cast([_theElements_ getWithInt:i], @protocol(iSPOTElement))) spot_elementValue]);
  }
  return a;
}

- (BOOL)isEmpty {
  return [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) isEmpty];
}

- (id<iSPOTElement>)createAnyElementWithISPOTElement:(id<iSPOTElement>)e {
  if ([(id) e isKindOfClass:[SPOTAny class]]) {
    return e;
  }
  SPOTAny *a = [[SPOTAny alloc] initWithSPOTAny:_anyPrototype_];
  [a setValueWithISPOTElement:e];
  return a;
}

- (int)spot_checkRangeValidityEx {
  int n = [((RAREUTIdentityArrayList *) nil_chk(_theElements_)) size];
  if (n == 0) {
    return _isOptional_ ? iSPOTConstants_VALUE_NULL_AND_OPTIONAL : iSPOTConstants_VALUE_NULL;
  }
  if ((n < _nRangeMin_) && (_nRangeMin_ != -1)) {
    return iSPOTConstants_VALUE_TO_SMALL;
  }
  if ((n > _nRangeMax_) && (_nRangeMax_ != -1)) {
    return iSPOTConstants_VALUE_TO_BIG;
  }
  int ret = 0;
  id<iSPOTElement> ti;
  for (int i = 0; i < n; i++) {
    ti = (id<iSPOTElement>) check_protocol_cast([_theElements_ getWithInt:i], @protocol(iSPOTElement));
    ret = [((id<iSPOTElement>) nil_chk(ti)) spot_checkRangeValidity];
    if (ret > 0) {
      return iSPOTConstants_VALUE_INVALID_CHILD;
    }
    else if ((ret < 0) && (ret > -3)) {
      return iSPOTConstants_VALUE_INVALID_CHILD;
    }
  }
  return iSPOTConstants_VALUE_OK;
}

- (id<iSPOTElement>)spot_getArrayClassInstanceEx {
  id<iSPOTElement> e;
  if (_clsDefinedBy_ != nil) {
    e = (id<iSPOTElement>) check_protocol_cast([_clsDefinedBy_ newInstance], @protocol(iSPOTElement));
  }
  else {
    e = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk([SPOTHelper loadClassWithNSString:_strElementType_])) newInstance], @protocol(iSPOTElement));
  }
  if (_elementsDefinedAtributes_ != nil) {
    id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([_elementsDefinedAtributes_ entrySet])) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      id<JavaUtilMap_Entry> en = [it next];
      [((id<iSPOTElement>) nil_chk(e)) spot_defineAttributeWithNSString:(NSString *) check_class_cast([((id<JavaUtilMap_Entry>) nil_chk(en)) getKey], [NSString class]) withNSString:(NSString *) check_class_cast([en getValue], [NSString class])];
    }
  }
  return e;
}

- (void)copyAllFieldsTo:(SPOTSet *)other {
  [super copyAllFieldsTo:other];
  other->_anyPrototype_ = _anyPrototype_;
  other->_clsDefinedBy_ = _clsDefinedBy_;
  other->_elementName_ = _elementName_;
  other->_elementsDefinedAtributes_ = _elementsDefinedAtributes_;
  other->_isAnySet_ = _isAnySet_;
  other->_nRangeMax_ = _nRangeMax_;
  other->_nRangeMin_ = _nRangeMin_;
  other->_strElementType_ = _strElementType_;
  other->_theElements_ = _theElements_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addWithISPOTElement:", NULL, "Z", 0x1, NULL },
    { "addWithId:", NULL, "Z", 0x1, NULL },
    { "addAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "addAllWithInt:withJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "anySetWithNSString:", NULL, "LSPOTSet", 0x9, NULL },
    { "anySetWithNSString:withNSString:", NULL, "LSPOTSet", 0x9, NULL },
    { "anySetWithNSString:withNSString:withInt:withInt:", NULL, "LSPOTSet", 0x9, NULL },
    { "booleanValueAtWithInt:", NULL, "Z", 0x1, NULL },
    { "booleanValues", NULL, "LIOSBooleanArray", 0x1, NULL },
    { "clone", NULL, "LNSObject", 0x1, NULL },
    { "containsWithId:", NULL, "Z", 0x1, NULL },
    { "containsAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "doubleValues", NULL, "LIOSDoubleArray", 0x1, NULL },
    { "elementSetWithNSString:withISPOTElement:", NULL, "LSPOTSet", 0x9, NULL },
    { "equalsWithASPOTElement:", NULL, "Z", 0x1, NULL },
    { "floatValues", NULL, "LIOSFloatArray", 0x1, NULL },
    { "fromSDFWithSDFNode:", NULL, "Z", 0x1, "SPOTException" },
    { "fromStreamWithJavaIoInputStream:", NULL, "V", 0x1, "JavaIoIOException" },
    { "fromStructuredNodeWithRAREUTiStructuredNode:", NULL, "Z", 0x1, "SPOTException" },
    { "integerSetWithNSString:", NULL, "LSPOTSet", 0x9, NULL },
    { "integerSetWithNSString:withInt:withInt:", NULL, "LSPOTSet", 0x9, NULL },
    { "iterator", NULL, "LJavaUtilIterator", 0x1, NULL },
    { "listIterator", NULL, "LJavaUtilListIterator", 0x1, NULL },
    { "listIteratorWithInt:", NULL, "LJavaUtilListIterator", 0x1, NULL },
    { "longValues", NULL, "LIOSLongArray", 0x1, NULL },
    { "objectValues", NULL, "LIOSObjectArray", 0x1, NULL },
    { "realSetWithNSString:", NULL, "LSPOTSet", 0x9, NULL },
    { "realSetWithNSString:withInt:withInt:", NULL, "LSPOTSet", 0x9, NULL },
    { "removeWithInt:", NULL, "LNSObject", 0x1, NULL },
    { "removeWithId:", NULL, "Z", 0x1, NULL },
    { "removeAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "retainAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "spot_checkRangeValidityStr", NULL, "LNSString", 0x1, NULL },
    { "spot_getArrayClassInstance", NULL, "LiSPOTElement", 0x1, NULL },
    { "spot_getArrayClassShortName", NULL, "LNSString", 0x1, NULL },
    { "spot_getElementName", NULL, "LNSString", 0x1, NULL },
    { "spot_getName", NULL, "LNSString", 0x1, NULL },
    { "spot_getRange", NULL, "LIOSObjectArray", 0x1, NULL },
    { "spot_getSequenceElementWithInt:", NULL, "LSPOTSequence", 0x1, NULL },
    { "spot_getSetElementWithInt:", NULL, "LSPOTSet", 0x1, NULL },
    { "spot_getSupportedElementAttributes", NULL, "LJavaUtilMap", 0x1, NULL },
    { "spot_getType", NULL, "I", 0x11, NULL },
    { "spot_getValidityRange", NULL, "LNSString", 0x1, NULL },
    { "spot_getValue", NULL, "LNSObject", 0x1, NULL },
    { "spot_isAnySet", NULL, "Z", 0x1, NULL },
    { "spot_isContainer", NULL, "Z", 0x1, NULL },
    { "spot_isSequenceSet", NULL, "Z", 0x1, NULL },
    { "spot_stringValue", NULL, "LNSString", 0x1, NULL },
    { "spot_stringValueEx", NULL, "LNSString", 0x1, NULL },
    { "spot_toSetWithNSString:withISPOTElement:", NULL, "LSPOTSet", 0x9, NULL },
    { "stringSetWithNSString:", NULL, "LSPOTSet", 0x9, NULL },
    { "stringSetWithNSString:withInt:withInt:", NULL, "LSPOTSet", 0x9, NULL },
    { "stringValueAtWithInt:", NULL, "LNSString", 0x1, NULL },
    { "stringValues", NULL, "LIOSObjectArray", 0x1, NULL },
    { "subListWithInt:withInt:", NULL, "LJavaUtilList", 0x1, NULL },
    { "toArray", NULL, "LIOSObjectArray", 0x1, NULL },
    { "toArrayWithNSObjectArray:", NULL, "LIOSObjectArray", 0x1, NULL },
    { "toSDF", NULL, "LNSString", 0x1, NULL },
    { "toSDFWithJavaIoWriter:", NULL, "Z", 0x1, "JavaIoIOException" },
    { "toSDFWithJavaIoWriter:withNSString:withInt:withBoolean:withBoolean:", NULL, "Z", 0x1, "JavaIoIOException" },
    { "toStreamWithJavaIoOutputStream:", NULL, "V", 0x1, "JavaIoIOException" },
    { "unsafeGetObjectList", NULL, "LJavaUtilList", 0x1, NULL },
    { "setWithInt:withISPOTElement:", NULL, "LiSPOTElement", 0x1, NULL },
    { "setWithInt:withId:", NULL, "LNSObject", 0x1, NULL },
    { "setValueWithDoubleArray:", NULL, "V", 0x1, "SPOTException" },
    { "setValueWithLongArray:", NULL, "V", 0x1, "SPOTException" },
    { "setValueWithNSStringArray:", NULL, "V", 0x1, "SPOTException" },
    { "getWithInt:", NULL, "LNSObject", 0x1, NULL },
    { "getExWithInt:", NULL, "LiSPOTElement", 0x1, NULL },
    { "getValues", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getValuesEx", NULL, "LIOSObjectArray", 0x1, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL },
    { "createAnyElementWithISPOTElement:", NULL, "LiSPOTElement", 0x0, NULL },
    { "spot_checkRangeValidityEx", NULL, "I", 0x4, NULL },
    { "spot_getArrayClassInstanceEx", NULL, "LiSPOTElement", 0x2, "JavaLangException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "_nRangeMax_", NULL, 0x4, "J" },
    { "_nRangeMin_", NULL, 0x4, "J" },
    { "_theElements_", NULL, 0x4, "LRAREUTIdentityArrayList" },
    { "_clsDefinedBy_", NULL, 0x4, "LIOSClass" },
    { "_elementName_", NULL, 0x4, "LNSString" },
    { "_elementsDefinedAtributes_", NULL, 0x4, "LJavaUtilMap" },
    { "_strElementType_", NULL, 0x4, "LNSString" },
  };
  static J2ObjcClassInfo _SPOTSet = { "SPOTSet", "com.appnativa.spot", NULL, 0x1, 75, methods, 7, fields, 0, NULL};
  return &_SPOTSet;
}

@end
