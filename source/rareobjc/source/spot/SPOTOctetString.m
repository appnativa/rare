//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../spot/src/com/appnativa/spot/SPOTOctetString.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSByteArray.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/spot/SDFNode.h"
#include "com/appnativa/spot/SPOTException.h"
#include "com/appnativa/spot/SPOTOctetString.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/aSPOTElement.h"
#include "com/appnativa/spot/iSPOTConstants.h"
#include "com/appnativa/util/Base64.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/UTF8Helper.h"
#include "java/io/IOException.h"
#include "java/io/Writer.h"
#include "java/lang/Long.h"

@implementation SPOTOctetString

- (id)init {
  return [self initSPOTOctetStringWithNSString:nil withInt:-1 withInt:-1 withBoolean:YES];
}

- (id)initWithBoolean:(BOOL)optional {
  return [self initSPOTOctetStringWithNSString:nil withInt:-1 withInt:-1 withBoolean:optional];
}

- (id)initWithNSString:(NSString *)val {
  return [self initSPOTOctetStringWithNSString:val withInt:0 withInt:-1 withBoolean:NO];
}

- (id)initWithNSString:(NSString *)val
               withInt:(int)max {
  return [self initSPOTOctetStringWithNSString:val withInt:-1 withInt:max withNSString:nil withBoolean:NO];
}

- (id)initWithNSString:(NSString *)val
               withInt:(int)min
               withInt:(int)max {
  return [self initSPOTOctetStringWithNSString:val withInt:min withInt:max withNSString:nil withBoolean:NO];
}

- (id)initWithNSString:(NSString *)val
          withNSString:(NSString *)defaultval
           withBoolean:(BOOL)optional {
  return [self initSPOTOctetStringWithNSString:val withInt:-1 withInt:-1 withNSString:nil withBoolean:optional];
}

- (id)initSPOTOctetStringWithNSString:(NSString *)val
                              withInt:(int)min
                              withInt:(int)max
                          withBoolean:(BOOL)optional {
  return [self initSPOTOctetStringWithNSString:val withInt:min withInt:max withNSString:nil withBoolean:optional];
}

- (id)initWithNSString:(NSString *)val
               withInt:(int)min
               withInt:(int)max
           withBoolean:(BOOL)optional {
  return [self initSPOTOctetStringWithNSString:val withInt:min withInt:max withBoolean:optional];
}

- (id)initSPOTOctetStringWithNSString:(NSString *)val
                              withInt:(int)min
                              withInt:(int)max
                         withNSString:(NSString *)defaultval
                          withBoolean:(BOOL)optional {
  if (self = [super init]) {
    _sValue_ = val;
    _nRangeMin_ = min;
    _nRangeMax_ = max;
    _isOptional_ = optional;
    _sDefaultValue_ = defaultval;
    _isOptional_ = optional;
  }
  return self;
}

- (id)initWithNSString:(NSString *)val
               withInt:(int)min
               withInt:(int)max
          withNSString:(NSString *)defaultval
           withBoolean:(BOOL)optional {
  return [self initSPOTOctetStringWithNSString:val withInt:min withInt:max withNSString:defaultval withBoolean:optional];
}

- (int)compareToWithId:(id)o {
  return [self compareToWithSPOTOctetString:(SPOTOctetString *) check_class_cast(o, [SPOTOctetString class])];
}

- (int)compareToWithSPOTOctetString:(SPOTOctetString *)o {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  NSString *t2 = (((SPOTOctetString *) nil_chk(o))->_sValue_ != nil) ? o->_sValue_ : o->_sDefaultValue_;
  if ((t1 == nil) || (t2 == nil)) {
    return (t1 == t2) ? 0 : ((t1 == nil) ? -1 : 1);
  }
  return [t1 compareToWithId:t2];
}

- (int)compareToWithSPOTPrintableString:(SPOTPrintableString *)o {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  NSString *t2 = (((SPOTPrintableString *) nil_chk(o))->_sValue_ != nil) ? o->_sValue_ : o->_sDefaultValue_;
  if ((t1 == nil) || (t2 == nil)) {
    return (t1 == t2) ? 0 : ((t1 == nil) ? -1 : 1);
  }
  return [t1 compareToWithId:t2];
}

- (int)compareToWithNSString:(NSString *)o {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  NSString *t2 = o;
  if ((t1 == nil) || (t2 == nil)) {
    return (t1 == t2) ? 0 : ((t1 == nil) ? -1 : 1);
  }
  return [t1 compareToWithId:t2];
}

- (BOOL)containsWithNSString:(NSString *)s {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  if ((t1 == nil) || (s == nil)) {
    return NO;
  }
  return [t1 indexOfString:s] != -1;
}

- (BOOL)endsWithWithNSString:(NSString *)s {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  if ((t1 == nil) || (s == nil)) {
    return NO;
  }
  return [t1 hasSuffix:s];
}

- (BOOL)equalsWithASPOTElement:(aSPOTElement *)e {
  if (e == self) {
    return YES;
  }
  if (!([e isKindOfClass:[SPOTPrintableString class]])) {
    return NO;
  }
  SPOTPrintableString *o = (SPOTPrintableString *) check_class_cast(e, [SPOTPrintableString class]);
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  NSString *t2 = (((SPOTPrintableString *) nil_chk(o))->_sValue_ != nil) ? o->_sValue_ : o->_sDefaultValue_;
  if ((t1 == nil) || (t2 == nil)) {
    if (t1 != t2) {
      return NO;
    }
    ;
  }
  else if (![t1 isEqual:t2]) {
    return NO;
  }
  return [aSPOTElement spot_attributesEqualWithISPOTElement:self withISPOTElement:o];
}

- (BOOL)equalsWithSPOTOctetString:(SPOTOctetString *)o {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  NSString *t2 = (((SPOTOctetString *) nil_chk(o))->_sValue_ != nil) ? o->_sValue_ : o->_sDefaultValue_;
  if ((t1 == nil) || (t2 == nil)) {
    return t1 == t2;
  }
  return [t1 isEqual:t2];
}

- (BOOL)equalsWithSPOTPrintableString:(SPOTPrintableString *)o {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  NSString *t2 = (((SPOTPrintableString *) nil_chk(o))->_sValue_ != nil) ? o->_sValue_ : o->_sDefaultValue_;
  if ((t1 == nil) || (t2 == nil)) {
    return t1 == t2;
  }
  return [t1 isEqual:t2];
}

- (BOOL)equalsWithNSString:(NSString *)o {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  NSString *t2 = o;
  if ((t1 == nil) || (t2 == nil)) {
    return t1 == t2;
  }
  return [t1 isEqual:t2];
}

+ (NSString *)fromOctetStringWithNSString:(NSString *)oval {
  IOSByteArray *b = [RAREUTBase64 decodeWithNSString:oval];
  return [((RAREUTUTF8Helper *) nil_chk([RAREUTUTF8Helper getInstance])) getStringWithByteArray:b];
}

- (NSUInteger)hash {
  NSString *s = (_sValue_ != nil) ? _sValue_ : _osValue_;
  if (s == nil) {
    s = _sDefaultValue_;
  }
  return (s != nil) ? [s hash] : [super hash];
}

- (void)spot_clear {
  [super spot_clear];
  _sValue_ = nil;
}

- (IOSObjectArray *)spot_getRange {
  if ((_nRangeMin_ < 0) && (_nRangeMax_ < 0)) {
    return nil;
  }
  return [IOSObjectArray arrayWithObjects:(id[]){ [JavaLangLong valueOfWithLong:_nRangeMin_], [JavaLangLong valueOfWithLong:_nRangeMax_] } count:2 type:[IOSClass classWithClass:[NSObject class]]];
}

- (int)spot_getType {
  return iSPOTConstants_SPOT_TYPE_OCTETSTRING;
}

- (NSString *)spot_getValidityRange {
  if ((_nRangeMin_ != -1) || (_nRangeMax_ != -1)) {
    NSString *s = @"";
    s = (_nRangeMin_ != -1) ? ([NSString stringWithFormat:@"%@..", [RAREUTSNumber toStringWithLong:_nRangeMin_]]) : @"..";
    if (_nRangeMax_ != -1) {
      s = [NSString stringWithFormat:@"%@%@", s, [RAREUTSNumber toStringWithLong:_nRangeMax_]];
    }
    return s;
  }
  else {
    return @"";
  }
}

- (id)spot_getValue {
  return [self getValue];
}

- (void)spot_setDefaultValueWithNSString:(NSString *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if (val == nil) {
    _sDefaultValue_ = nil;
    return;
  }
  int len = [((NSString *) nil_chk(val)) sequenceLength];
  do {
    if ((_nRangeMin_ != -1) && (len < _nRangeMin_)) {
      break;
    }
    if ((_nRangeMax_ != -1) && (len > _nRangeMax_)) {
      break;
    }
    _sDefaultValue_ = val;
    return;
  }
  while (NO);
  @throw [[SPOTException alloc] initWithInt:iSPOTConstants_ILLEGAL_VALUE withNSString:[iSPOTConstants STR_ILLEGAL_VALUE] withNSString:val];
}

- (void)spot_setRangeWithLong:(long long int)min
                     withLong:(long long int)max {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _nRangeMin_ = min;
  _nRangeMax_ = max;
}

- (void)spot_setRangeWithNSString:(NSString *)min
                     withNSString:(NSString *)max {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  if (min != nil) {
    _nRangeMin_ = [RAREUTSNumber longValueWithNSString:min];
  }
  if (max != nil) {
    _nRangeMax_ = [RAREUTSNumber longValueWithNSString:max];
  }
}

- (NSString *)spot_stringValue {
  return [self getValue];
}

- (NSString *)spot_stringValueEx {
  return ((_sValue_ == nil) && (_osValue_ == nil) && ![self spot_attributesWereSet]) ? nil : [self getValue];
}

- (BOOL)startsWithWithNSString:(NSString *)s {
  NSString *t1 = (_sValue_ != nil) ? _sValue_ : _sDefaultValue_;
  if ((t1 == nil) || (s == nil)) {
    return NO;
  }
  return [t1 hasPrefix:s];
}

+ (NSString *)toOctetStringWithNSString:(NSString *)s {
  NSString *os = [RAREUTBase64 encodeBytesWithByteArray:[((RAREUTUTF8Helper *) nil_chk([RAREUTUTF8Helper getInstance])) getBytesWithNSString:s]];
  return [((NSString *) nil_chk(os)) trim];
}

- (BOOL)toSDFWithJavaIoWriter:(JavaIoWriter *)outArg
                 withNSString:(NSString *)tag
                      withInt:(int)depth
                  withBoolean:(BOOL)outputempty
                  withBoolean:(BOOL)outputComments {
  return [self toSDFWithJavaIoWriter:outArg withNSString:tag withInt:depth withBoolean:outputempty withNSString:[self getOctetValue] withBoolean:outputComments];
}

- (NSString *)description {
  if (_sValue_ == nil) {
    return nil;
  }
  if (_osValue_ == nil) {
    _osValue_ = [SPOTOctetString toOctetStringWithNSString:_sValue_];
  }
  return _osValue_;
}

- (void)setValueWithSPOTOctetString:(SPOTOctetString *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _sValue_ = [((SPOTOctetString *) nil_chk(val)) spot_stringValue];
  _osValue_ = nil;
}

- (void)setValueWithNSString:(NSString *)val {
  if (![aSPOTElement OPTIMIZE_RUNTIME]) {
    [self checkReadOnly];
  }
  _sValue_ = val;
  _osValue_ = nil;
}

- (NSString *)getOctetValue {
  if ((_osValue_ == nil) && (_sValue_ != nil)) {
    _osValue_ = [SPOTOctetString toOctetStringWithNSString:_sValue_];
  }
  return _osValue_;
}

- (void)setOctetValueWithNSString:(NSString *)value {
  _osValue_ = value;
  _sValue_ = nil;
}

- (NSString *)getValue {
  if ((_sValue_ == nil) && (_osValue_ != nil)) {
    _sValue_ = [SPOTOctetString fromOctetStringWithNSString:_osValue_];
  }
  if ((_sValue_ == nil) && (_sDefaultValue_ != nil)) {
    return _sDefaultValue_;
  }
  return _sValue_;
}

- (BOOL)fromSDFWithSDFNode:(SDFNode *)node {
  BOOL ok = [super fromSDFWithSDFNode:node];
  if (ok) {
    _osValue_ = _sValue_;
    _sValue_ = nil;
  }
  return ok;
}

- (int)spot_checkRangeValidityEx {
  if ((_sValue_ == nil) && (_sDefaultValue_ != nil)) {
    return iSPOTConstants_VALUE_NULL_WITH_DEFAULT;
  }
  if ((_sValue_ == nil) && _isOptional_) {
    return iSPOTConstants_VALUE_NULL_AND_OPTIONAL;
  }
  if (_sValue_ == nil) {
    return iSPOTConstants_VALUE_NULL;
  }
  if ((_nRangeMin_ != -1) && ([((NSString *) nil_chk(_sValue_)) sequenceLength] < _nRangeMin_)) {
    return -1;
  }
  if ((_nRangeMax_ != -1) && ([((NSString *) nil_chk(_sValue_)) sequenceLength] > _nRangeMax_)) {
    return iSPOTConstants_VALUE_TO_BIG;
  }
  return iSPOTConstants_VALUE_OK;
}

- (void)setValuesWithNSString:(NSString *)val
                      withInt:(int)min
                      withInt:(int)max
                  withBoolean:(BOOL)optional {
  _sValue_ = val;
  _nRangeMin_ = min;
  _nRangeMax_ = max;
  _isOptional_ = optional;
}

- (void)copyAllFieldsTo:(SPOTOctetString *)other {
  [super copyAllFieldsTo:other];
  other->_nRangeMax_ = _nRangeMax_;
  other->_nRangeMin_ = _nRangeMin_;
  other->_osValue_ = _osValue_;
  other->_sDefaultValue_ = _sDefaultValue_;
  other->_sValue_ = _sValue_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "containsWithNSString:", NULL, "Z", 0x1, NULL },
    { "endsWithWithNSString:", NULL, "Z", 0x1, NULL },
    { "equalsWithASPOTElement:", NULL, "Z", 0x1, NULL },
    { "equalsWithSPOTOctetString:", NULL, "Z", 0x1, NULL },
    { "equalsWithSPOTPrintableString:", NULL, "Z", 0x1, NULL },
    { "equalsWithNSString:", NULL, "Z", 0x1, NULL },
    { "fromOctetStringWithNSString:", NULL, "LNSString", 0x9, NULL },
    { "spot_getRange", NULL, "LIOSObjectArray", 0x1, NULL },
    { "spot_getType", NULL, "I", 0x11, NULL },
    { "spot_getValidityRange", NULL, "LNSString", 0x1, NULL },
    { "spot_getValue", NULL, "LNSObject", 0x1, NULL },
    { "spot_stringValue", NULL, "LNSString", 0x1, NULL },
    { "spot_stringValueEx", NULL, "LNSString", 0x1, NULL },
    { "startsWithWithNSString:", NULL, "Z", 0x1, NULL },
    { "toOctetStringWithNSString:", NULL, "LNSString", 0x9, NULL },
    { "toSDFWithJavaIoWriter:withNSString:withInt:withBoolean:withBoolean:", NULL, "Z", 0x1, "JavaIoIOException" },
    { "getOctetValue", NULL, "LNSString", 0x1, NULL },
    { "getValue", NULL, "LNSString", 0x1, NULL },
    { "fromSDFWithSDFNode:", NULL, "Z", 0x1, "SPOTException" },
    { "spot_checkRangeValidityEx", NULL, "I", 0x4, NULL },
    { "setValuesWithNSString:withInt:withInt:withBoolean:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "_nRangeMax_", NULL, 0x0, "J" },
    { "_nRangeMin_", NULL, 0x0, "J" },
    { "_osValue_", NULL, 0x0, "LNSString" },
    { "_sDefaultValue_", NULL, 0x0, "LNSString" },
    { "_sValue_", NULL, 0x0, "LNSString" },
  };
  static J2ObjcClassInfo _SPOTOctetString = { "SPOTOctetString", "com.appnativa.spot", NULL, 0x1, 21, methods, 5, fields, 0, NULL};
  return &_SPOTOctetString;
}

@end
