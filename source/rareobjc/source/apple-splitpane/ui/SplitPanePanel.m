//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple-splitpane/com/appnativa/rare/ui/SplitPanePanel.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/platform/apple/ui/util/AppleGraphics.h"
#include "com/appnativa/rare/platform/apple/ui/view/ParentView.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/platform/apple/ui/view/aView.h"
#include "com/appnativa/rare/ui/Component.h"
#include "com/appnativa/rare/ui/Container.h"
#include "com/appnativa/rare/ui/SplitPanePanel.h"
#include "com/appnativa/rare/ui/UICursor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/aComponent.h"
#include "com/appnativa/rare/ui/aSplitPanePanel.h"
#include "com/appnativa/rare/ui/border/UIMatteBorder.h"
#include "com/appnativa/rare/ui/event/ChangeEvent.h"
#include "com/appnativa/rare/ui/event/EventListenerList.h"
#include "com/appnativa/rare/ui/event/MouseEvent.h"
#include "com/appnativa/rare/ui/event/iChangeListener.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "java/lang/Math.h"

@implementation RARESplitPanePanel

- (id)initRARESplitPanePanel {
  if (self = [super init]) {
    [self setNeedsHiearachyInvalidatedWithBoolean:NO];
    [self setViewWithRAREView:[[RARESplitPanePanel_SplitPaneView alloc] initWithRARESplitPanePanel:self]];
    splitPaneView_ = (RARESplitPanePanel_SplitPaneView *) check_class_cast(view_, [RARESplitPanePanel_SplitPaneView class]);
    if ([RAREPlatform isTouchDevice]) {
      dividerSize_ = [RAREUIScreen platformPixelsWithInt:16];
    }
    continuousLayout_ = ![RAREPlatform isIOS];
  }
  return self;
}

- (id)init {
  return [self initRARESplitPanePanel];
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context {
  return [self initRARESplitPanePanel];
}

- (void)addChangeListenerWithRAREiChangeListener:(id<RAREiChangeListener>)l {
  [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiChangeListener)] withId:l];
}

- (RAREaSplitPanePanel_Divider *)createDivider {
  return [[RAREaSplitPanePanel_Divider alloc] initWithRAREaSplitPanePanel:self withId:[[RARESplitPanePanel_DividerPane alloc] initWithRARESplitPanePanel:self]];
}

- (void)dispose {
  [super dispose];
  splitPaneView_ = nil;
}

- (void)removeChangeListenerWithRAREiChangeListener:(id<RAREiChangeListener>)l {
  if (listenerList_ != nil) {
    [listenerList_ removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiChangeListener)] withId:l];
  }
}

- (void)copyAllFieldsTo:(RARESplitPanePanel *)other {
  [super copyAllFieldsTo:other];
  other->splitPaneView_ = splitPaneView_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "createDivider", NULL, "LRAREaSplitPanePanel_Divider", 0x1, NULL },
  };
  static J2ObjcClassInfo _RARESplitPanePanel = { "SplitPanePanel", "com.appnativa.rare.ui", NULL, 0x1, 1, methods, 0, NULL, 0, NULL};
  return &_RARESplitPanePanel;
}

@end
@implementation RARESplitPanePanel_SplitPaneView

- (id)initWithRARESplitPanePanel:(RARESplitPanePanel *)outer$ {
  this$0_ = outer$;
  if (self = [super initWithId:[RAREaView createAPView]]) {
    size_ = [[RAREUIDimension alloc] init];
    [self setLayoutManagerWithRAREiAppleLayoutManager:self];
  }
  return self;
}

- (void)layoutWithRAREParentView:(RAREParentView *)view
                       withFloat:(float)width
                       withFloat:(float)height {
  RAREUIInsets *in = [this$0_ getInsetsWithRAREUIInsets:this$0_->computeInsets_];
  [((RAREUIDimension *) nil_chk(size_)) setSizeWithDouble:width withDouble:height];
  [this$0_ layoutContainerWithRAREUIDimension:size_ withRAREUIInsets:in];
}

- (void)disposeEx {
  [super disposeEx];
  if (overlayDragPane_ != nil) {
    [overlayDragPane_ dispose];
    overlayDragPane_ = nil;
  }
}

- (void)dividerDragWithRAREMouseEvent:(RAREMouseEvent *)me {
  if (!this$0_->draggingInited_) {
    if (!this$0_->continuousLayout_) {
      if (overlayDragPane_ == nil) {
        overlayDragPane_ = [[RARESplitPanePanel_OverlayDividerPane alloc] initWithRARESplitPanePanel:this$0_];
        [self addWithInt:-1 withRAREView:overlayDragPane_];
      }
      else {
        [overlayDragPane_ setVisibleWithBoolean:YES];
        [overlayDragPane_ bringToFront];
      }
      RAREUIRectangle *r = [((RAREaSplitPanePanel_Divider *) nil_chk(this$0_->dragDivider_)) getBounds];
      [((RARESplitPanePanel_OverlayDividerPane *) nil_chk(overlayDragPane_)) setBoundsWithFloat:((RAREUIRectangle *) nil_chk(r))->x_ withFloat:r->y_ withFloat:r->width_ withFloat:r->height_];
    }
    this$0_->draggingInited_ = YES;
  }
  int d = this$0_->leftToRight_ ? ((int) [((RAREMouseEvent *) nil_chk(me)) getWindowX] - this$0_->dragMarkX_) : ((int) [((RAREMouseEvent *) nil_chk(me)) getWindowY] - this$0_->dragMarkY_);
  if (([JavaLangMath absWithInt:d] > (this$0_->dividerSize_ / 2.0f))) {
    if (this$0_->continuousLayout_) {
      [self resizeViaDividerWithRAREaSplitPanePanel_Divider:this$0_->dragDivider_ withInt:d];
    }
    else {
      RAREUIRectangle *b = [((RAREaSplitPanePanel_Divider *) nil_chk(this$0_->dragDivider_)) getBounds];
      if (this$0_->leftToRight_) {
        [((RARESplitPanePanel_OverlayDividerPane *) nil_chk(overlayDragPane_)) setLocationWithFloat:((RAREUIRectangle *) nil_chk(b))->x_ + d withFloat:b->y_];
      }
      else {
        [((RARESplitPanePanel_OverlayDividerPane *) nil_chk(overlayDragPane_)) setLocationWithFloat:((RAREUIRectangle *) nil_chk(b))->x_ withFloat:b->y_ + d];
      }
      [((RARESplitPanePanel_OverlayDividerPane *) nil_chk(overlayDragPane_)) repaint];
    }
  }
}

- (void)dividerDragFinishedWithRAREMouseEvent:(RAREMouseEvent *)me {
  this$0_->dragging_ = NO;
  this$0_->draggingInited_ = NO;
  if (overlayDragPane_ != nil) {
    [overlayDragPane_ setVisibleWithBoolean:NO];
  }
  if (this$0_->dragDivider_ == nil) {
    return;
  }
  [((RAREaSplitPanePanel_Divider *) nil_chk(this$0_->dragDivider_)) draggingStopped];
  int d = this$0_->leftToRight_ ? ((int) [((RAREMouseEvent *) nil_chk(me)) getWindowX] - this$0_->dragMarkX_) : ((int) [((RAREMouseEvent *) nil_chk(me)) getWindowY] - this$0_->dragMarkY_);
  if (!this$0_->continuousLayout_ && ([JavaLangMath absWithInt:d] > (this$0_->dividerSize_ / 2.0f))) {
    [self resizeViaDividerWithRAREaSplitPanePanel_Divider:this$0_->dragDivider_ withInt:d];
  }
  this$0_->dragDivider_ = nil;
  [self revalidate];
}

- (void)dividerDragStartedWithRAREaSplitPanePanel_Divider:(RAREaSplitPanePanel_Divider *)v
                                       withRAREMouseEvent:(RAREMouseEvent *)me {
  this$0_->dragging_ = YES;
  this$0_->dragDivider_ = v;
  this$0_->dragMarkX_ = (int) [((RAREMouseEvent *) nil_chk(me)) getWindowX];
  this$0_->dragMarkY_ = (int) [me getWindowY];
  [this$0_ setupDragWithRAREaSplitPanePanel_Divider:v];
  [self dividerDragWithRAREMouseEvent:me];
}

- (BOOL)resizeViaDividerWithRAREaSplitPanePanel_Divider:(RAREaSplitPanePanel_Divider *)d
                                                withInt:(int)delta {
  BOOL ret = [this$0_ resizeViaDividerWithRAREaSplitPanePanel_Divider:d withFloat:delta];
  if (ret) {
    [self revalidate];
    if (this$0_->listenerList_ != nil) {
      if (changeEvent_ == nil) {
        changeEvent_ = [[RAREChangeEvent alloc] initWithId:self];
      }
      [RAREUtils fireChangeEventWithRAREEventListenerList:this$0_->listenerList_ withRAREChangeEvent:changeEvent_];
    }
  }
  return ret;
}

- (id<RAREiPlatformComponent>)getLayoutComponentAtWithInt:(int)index {
  return [this$0_ getComponentAtWithInt:index];
}

- (int)getLayoutComponentCount {
  int n = [this$0_ getComponentCount];
  if (overlayDragPane_ != nil) {
    n--;
  }
  return n;
}

- (void)copyAllFieldsTo:(RARESplitPanePanel_SplitPaneView *)other {
  [super copyAllFieldsTo:other];
  other->overlayDragPane_ = overlayDragPane_;
  other->size_ = size_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "disposeEx", NULL, "V", 0x4, NULL },
    { "dividerDragWithRAREMouseEvent:", NULL, "V", 0x4, NULL },
    { "dividerDragFinishedWithRAREMouseEvent:", NULL, "V", 0x4, NULL },
    { "dividerDragStartedWithRAREaSplitPanePanel_Divider:withRAREMouseEvent:", NULL, "V", 0x4, NULL },
    { "resizeViaDividerWithRAREaSplitPanePanel_Divider:withInt:", NULL, "Z", 0x4, NULL },
    { "getLayoutComponentAtWithInt:", NULL, "LRAREiPlatformComponent", 0x4, NULL },
    { "getLayoutComponentCount", NULL, "I", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRARESplitPanePanel" },
    { "size_", NULL, 0x0, "LRAREUIDimension" },
    { "overlayDragPane_", NULL, 0x0, "LRARESplitPanePanel_OverlayDividerPane" },
  };
  static J2ObjcClassInfo _RARESplitPanePanel_SplitPaneView = { "SplitPaneView", "com.appnativa.rare.ui", "SplitPanePanel", 0x0, 7, methods, 3, fields, 0, NULL};
  return &_RARESplitPanePanel_SplitPaneView;
}

@end
@implementation RARESplitPanePanel_DividerPane

- (id)initWithRARESplitPanePanel:(RARESplitPanePanel *)outer$ {
  this$0_ = outer$;
  if (self = [super initWithId:[RAREaView createAPView]]) {
    [self setTypeWithBoolean:outer$->leftToRight_];
    [self setMouseListenerWithRAREiMouseListener:self];
    [self setMouseMotionListenerWithRAREiMouseMotionListener:self];
    [self setComponentPainterWithRAREiPlatformComponentPainter:outer$->dividerPainter_];
    [self setPaintHandlerEnabledWithBoolean:YES];
    if (outer$->gripperIcon_ == nil) {
      outer$->gripperIcon_ = [[RAREaSplitPanePanel_SplitPaneGripperIcon alloc] initWithRAREaSplitPanePanel:outer$];
    }
  }
  return self;
}

- (void)mouseDraggedWithRAREMouseEvent:(RAREMouseEvent *)e {
  [((RARESplitPanePanel_SplitPaneView *) nil_chk(this$0_->splitPaneView_)) dividerDragWithRAREMouseEvent:e];
  [((RAREMouseEvent *) nil_chk(e)) consume];
}

- (void)mouseEnteredWithRAREMouseEvent:(RAREMouseEvent *)e {
}

- (void)mouseExitedWithRAREMouseEvent:(RAREMouseEvent *)e {
}

- (void)mouseMovedWithRAREMouseEvent:(RAREMouseEvent *)e {
}

- (void)mousePressedWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (this$0_->userResizeable_) {
    [((RARESplitPanePanel_SplitPaneView *) nil_chk(this$0_->splitPaneView_)) dividerDragStartedWithRAREaSplitPanePanel_Divider:(RAREaSplitPanePanel_Divider *) check_class_cast([RAREComponent fromViewWithRAREView:self], [RAREaSplitPanePanel_Divider class]) withRAREMouseEvent:e];
    [((RAREMouseEvent *) nil_chk(e)) consume];
  }
}

- (void)mouseReleasedWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (!this$0_->dragging_) {
    return;
  }
  this$0_->dragging_ = NO;
  [((RARESplitPanePanel_SplitPaneView *) nil_chk(this$0_->splitPaneView_)) dividerDragFinishedWithRAREMouseEvent:e];
}

- (void)paintBackgroundWithRAREAppleGraphics:(RAREAppleGraphics *)g
                                withRAREView:(RAREView *)v
                         withRAREUIRectangle:(RAREUIRectangle *)rect {
  [super paintBackgroundWithRAREAppleGraphics:g withRAREView:v withRAREUIRectangle:rect];
  [((id<RAREiPlatformIcon>) nil_chk(this$0_->gripperIcon_)) paintWithRAREiPlatformGraphics:g withFloat:0 withFloat:0 withFloat:((RAREUIRectangle *) nil_chk(rect))->width_ withFloat:rect->height_];
}

- (void)pressCanceledWithRAREMouseEvent:(RAREMouseEvent *)e {
  [self mouseReleasedWithRAREMouseEvent:e];
}

- (BOOL)wantsLongPress {
  return NO;
}

- (BOOL)wantsMouseMovedEvents {
  return NO;
}

- (void)setTypeWithBoolean:(BOOL)leftToRight {
  if (leftToRight) {
    [self setCursorWithRAREUICursor:[RAREUICursor getCursorWithNSString:@"COL-RESIZE"]];
  }
  else {
    [self setCursorWithRAREUICursor:[RAREUICursor getCursorWithNSString:@"ROW-RESIZE"]];
  }
}

- (void)getPreferredSizeWithRAREUIDimension:(RAREUIDimension *)size {
  ((RAREUIDimension *) nil_chk(size))->width_ = this$0_->dividerSize_;
  size->height_ = this$0_->dividerSize_;
  if (this$0_->gripperIcon_ != nil) {
    if (this$0_->dividerBorder_ != nil) {
      this$0_->computeInsets_ = [this$0_->dividerBorder_ getBorderInsetsWithRAREUIInsets:this$0_->computeInsets_];
    }
    else {
      (void) [((RAREUIInsets *) nil_chk(this$0_->computeInsets_)) setWithInt:0 withInt:0 withInt:0 withInt:0];
    }
    size->width_ = [JavaLangMath maxWithFloat:[this$0_->gripperIcon_ getIconWidth] + ((RAREUIInsets *) nil_chk(this$0_->computeInsets_))->left_ + this$0_->computeInsets_->right_ withFloat:this$0_->dividerSize_];
    size->height_ = [JavaLangMath maxWithFloat:[this$0_->gripperIcon_ getIconHeight] + this$0_->computeInsets_->top_ + this$0_->computeInsets_->bottom_ withFloat:this$0_->dividerSize_];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "wantsLongPress", NULL, "Z", 0x1, NULL },
    { "wantsMouseMovedEvents", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRARESplitPanePanel" },
  };
  static J2ObjcClassInfo _RARESplitPanePanel_DividerPane = { "DividerPane", "com.appnativa.rare.ui", "SplitPanePanel", 0x4, 2, methods, 1, fields, 0, NULL};
  return &_RARESplitPanePanel_DividerPane;
}

@end
@implementation RARESplitPanePanel_OverlayDividerPane

- (id)initWithRARESplitPanePanel:(RARESplitPanePanel *)outer$ {
  this$0_ = outer$;
  if (self = [super initWithId:[RAREaView createAPView]]) {
    [self setComponentPainterWithRAREiPlatformComponentPainter:outer$->dividerDragPainter_];
    [self setPaintHandlerEnabledWithBoolean:YES];
    if (outer$->gripperIcon_ == nil) {
      outer$->gripperIcon_ = [[RAREaSplitPanePanel_SplitPaneGripperIcon alloc] initWithRAREaSplitPanePanel:outer$];
    }
  }
  return self;
}

- (void)paintBackgroundWithRAREAppleGraphics:(RAREAppleGraphics *)g
                                withRAREView:(RAREView *)v
                         withRAREUIRectangle:(RAREUIRectangle *)rect {
  [super paintBackgroundWithRAREAppleGraphics:g withRAREView:v withRAREUIRectangle:rect];
  [((id<RAREiPlatformIcon>) nil_chk(this$0_->gripperIcon_)) paintWithRAREiPlatformGraphics:g withFloat:0 withFloat:0 withFloat:((RAREUIRectangle *) nil_chk(rect))->width_ withFloat:rect->height_];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRARESplitPanePanel" },
  };
  static J2ObjcClassInfo _RARESplitPanePanel_OverlayDividerPane = { "OverlayDividerPane", "com.appnativa.rare.ui", "SplitPanePanel", 0x4, 0, NULL, 1, fields, 0, NULL};
  return &_RARESplitPanePanel_OverlayDividerPane;
}

@end
