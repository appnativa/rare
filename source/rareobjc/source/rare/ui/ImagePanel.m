//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/ui/ImagePanel.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/platform/apple/ui/util/AppleGraphics.h"
#include "com/appnativa/rare/platform/apple/ui/view/ImageView.h"
#include "com/appnativa/rare/platform/apple/ui/view/ParentView.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/platform/apple/ui/view/aView.h"
#include "com/appnativa/rare/ui/Component.h"
#include "com/appnativa/rare/ui/Container.h"
#include "com/appnativa/rare/ui/ImagePanel.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/UIStroke.h"
#include "com/appnativa/rare/ui/XPContainer.h"
#include "com/appnativa/rare/ui/aImagePanel.h"
#include "com/appnativa/rare/ui/effects/SizeAnimation.h"
#include "com/appnativa/rare/ui/effects/aAnimator.h"
#include "com/appnativa/rare/ui/effects/iPlatformAnimator.h"
#include "com/appnativa/rare/ui/event/MouseEvent.h"
#include "com/appnativa/rare/ui/event/ScaleGestureObject.h"
#include "com/appnativa/rare/ui/iGestureListener.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformShape.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "java/lang/Math.h"
#import "RAREImageWrapper.h"
 #include "com/appnativa/rare/ui/effects/iAnimatorListener.h"

@implementation RAREImagePanel

- (id)initWithRAREiWidget:(id<RAREiWidget>)context {
  return [self initRAREImagePanelWithBoolean:NO];
}

- (id)initRAREImagePanelWithBoolean:(BOOL)useTransforms {
  if (self = [super initWithId:[[RAREImagePanel_ImageViewEx alloc] initWithBoolean:useTransforms]]) {
    ((RAREImagePanel_ImageViewEx *) nil_chk(view_))->panel_ = self;
    self->usingTransforms_ = useTransforms;
    isContextFlipped_ = YES;
  }
  return self;
}

- (id)initWithBoolean:(BOOL)useTransforms {
  return [self initRAREImagePanelWithBoolean:useTransforms];
}

- (RAREUIImage *)getRenderedImage {
  RAREImageView *v = [self getImageView];
  if (v == nil) {
    return [super getRenderedImage];
  }
  return [self isImageFitted] ? [((RAREImageView *) nil_chk(v)) capture] : [((RAREImageView *) nil_chk(v)) captureInRectWithRAREUIRectangle:destBounds_ withFloat:[self getWidth] withFloat:[self getHeight]];
}

- (void)handleSizeChangeAnimationWithRAREaAnimator_BoundsChanger:(RAREaAnimator_BoundsChanger *)bc {
  [self updateTransformsExWithRAREaAnimator_BoundsChanger:bc];
}

- (void)animateToWithFloat:(float)x
                 withFloat:(float)y
                 withFloat:(float)width
                 withFloat:(float)height
                    withId:(id)uiview
 withRAREiPlatformAnimator:(id<RAREiPlatformAnimator>)animator {
  #if TARGET_OS_IPHONE
  UIView* view=(UIView*)uiview;
  CGRect frame=CGRectMake(x, y, width, height);
  if(animator) {
    [animateSizeChangeListener_ animationStartedWithRAREiPlatformAnimator: animator];
  }
  [view layoutIfNeeded];
  [UIView animateWithDuration:0.2f delay:0 options:UIViewAnimationOptionCurveEaseInOut animations:^{
    view.frame=frame;
  } completion:^(BOOL finished) {
    if(animator) {
      [animateSizeChangeListener_ animationEndedWithRAREiPlatformAnimator: animator];
    }
  }];
  #else
  #endif
}

- (void)animateAndRotateToWithFloat:(float)x
                          withFloat:(float)y
                          withFloat:(float)width
                          withFloat:(float)height
                          withFloat:(float)rotation
                             withId:(id)uiview
          withRAREiPlatformAnimator:(id<RAREiPlatformAnimator>)animator {
  #if TARGET_OS_IPHONE
  UIView* view=(UIView*)uiview;
  CGRect frame=CGRectMake(x, y, width, height);
  
  if(animator) {
    [animateSizeChangeListener_ animationStartedWithRAREiPlatformAnimator: animator];
  }
  [view layoutIfNeeded];
  [UIView animateWithDuration:0.2f delay:0 options:UIViewAnimationOptionCurveEaseInOut animations:^{
    view.frame=frame;
    if(rotation==0) {
      view.layer.transform=CATransform3DIdentity;
    }
    else{
      view.layer.transform = CATransform3DMakeRotation(rotation / 180.0 * M_PI, 0.0, 0.0, 1.0);
    }
  } completion:^(BOOL finished) {
    if(animator) {
      [animateSizeChangeListener_ animationEndedWithRAREiPlatformAnimator: animator];
    }
  }];
  #else
  #endif
}

- (void)imageLoaded {
  RAREImageView *v = [self getImageView];
  if (v != nil) {
    [v setImageWithRAREUIImage:theImage_];
    [self updateTransforms];
  }
  [super imageLoaded];
}

- (void)imageNoYetLoaded {
  RAREImageView *v = [self getImageView];
  if ((v != nil) && ([v getImage] != nil)) {
    [v setImageWithRAREUIImage:nil];
  }
  [super imageNoYetLoaded];
}

- (void)setAutoScaleWithBoolean:(BOOL)auto_ {
  [super setAutoScaleWithBoolean:auto_];
  if (auto_ && (mouseHandler_ == nil)) {
    [self addMouseMotionListenerWithRAREiMouseMotionListener:mouseHandler_ = [[RAREImagePanel_MouseHandler alloc] initWithRAREImagePanel:self]];
    [self addMouseListenerWithRAREiMouseListener:mouseHandler_];
  }
}

- (void)setMovingAllowedWithBoolean:(BOOL)allowed {
  [super setMovingAllowedWithBoolean:allowed];
  if (allowed && (mouseHandler_ == nil)) {
    [self addMouseMotionListenerWithRAREiMouseMotionListener:mouseHandler_ = [[RAREImagePanel_MouseHandler alloc] initWithRAREImagePanel:self]];
    [self addMouseListenerWithRAREiMouseListener:mouseHandler_];
  }
}

- (void)setMovingOnlyAllowedWhenToLargeWithBoolean:(BOOL)allowed {
  [super setMovingOnlyAllowedWhenToLargeWithBoolean:allowed];
  if (allowed && (mouseHandler_ == nil)) {
    [self addMouseMotionListenerWithRAREiMouseMotionListener:mouseHandler_ = [[RAREImagePanel_MouseHandler alloc] initWithRAREImagePanel:self]];
    [self addMouseListenerWithRAREiMouseListener:mouseHandler_];
  }
}

- (void)setImageBorderWithRAREiPlatformBorder:(id<RAREiPlatformBorder>)imageBorder {
  [super setImageBorderWithRAREiPlatformBorder:imageBorder];
  RAREImageView *v = [self getImageView];
  if (v != nil) {
    [v setBorderWithRAREiPlatformBorder:imageBorder];
    [v setImageWithRAREUIImage:theImage_];
  }
}

- (void)setPreserveAspectRatioWithBoolean:(BOOL)preserveAspectRatio {
  [super setPreserveAspectRatioWithBoolean:preserveAspectRatio];
  RAREImageView *v = [self getImageView];
  if (v != nil) {
    [v setPreserveAspectRatioWithBoolean:preserveAspectRatio withBoolean:fillViewport_];
  }
}

- (void)setFillViewportWithBoolean:(BOOL)fillViewport {
  [super setFillViewportWithBoolean:fillViewport];
  RAREImageView *v = [self getImageView];
  if (v != nil) {
    [v setPreserveAspectRatioWithBoolean:preserveAspectRatio_ withBoolean:fillViewport];
  }
}

- (void)setSelectionColorWithRAREUIColor:(RAREUIColor *)color {
  [super setSelectionColorWithRAREUIColor:color];
  RAREImageView *v = [self getImageView];
  if (v != nil) {
    [v setSelectionColorWithRAREUIColor:color];
  }
}

- (void)setSelectionShapeWithRAREiPlatformShape:(id<RAREiPlatformShape>)selection {
  [super setSelectionShapeWithRAREiPlatformShape:selection];
  RAREImageView *v = [self getImageView];
  if (v != nil) {
    [v setSelectionWithRAREiPlatformShape:selection];
  }
}

- (void)setSelectionStrokeWithRAREUIStroke:(RAREUIStroke *)selectionStroke {
  [super setSelectionStrokeWithRAREUIStroke:selectionStroke];
  RAREImageView *v = [self getImageView];
  if (v != nil) {
    [v setSelectionStrokeWithRAREUIStroke:selectionStroke];
  }
}

- (void)setZoomingAllowedWithBoolean:(BOOL)allowed {
  [super setZoomingAllowedWithBoolean:allowed];
  if (allowed && (scaleHandler_ == nil)) {
    [self addScaleListenerWithRAREiGestureListener:scaleHandler_ = [[RAREImagePanel_ScaleHandler alloc] initWithRAREImagePanel:self]];
  }
}

- (void)addSpinnerComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  RAREImageView *v = [self getImageView];
  if (v != nil) {
    [v addWithInt:-1 withRAREView:[((id<RAREiPlatformComponent>) nil_chk(c)) getView]];
  }
  else {
    [self addWithRAREiPlatformComponent:c];
  }
}

- (void)removeSpinnerComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  RAREImageView *v = [self getImageView];
  if (v != nil) {
    [v removeChildWithRAREView:[((id<RAREiPlatformComponent>) nil_chk(c)) getView]];
  }
  else {
    [self removeWithRAREiPlatformComponent:c];
  }
}

- (void)adjustDestForAspectRatioWithFloat:(float)width
                                withFloat:(float)height
                              withBoolean:(BOOL)fit
                              withBoolean:(BOOL)move {
  [super adjustDestForAspectRatioWithFloat:width withFloat:height withBoolean:fit withBoolean:move];
  if (autoScale_ && !zoomingAllowed_) {
    ((RAREUIRectangle *) nil_chk(destBounds_))->x_ = 0;
    destBounds_->y_ = 0;
    destBounds_->width_ = width;
    destBounds_->height_ = height;
  }
  else {
    if ((rotation_ == 90) || (rotation_ == 270)) {
      if (move) {
        ((RAREUIRectangle *) nil_chk(destBounds_))->x_ = (width - destBounds_->height_) / 2;
        destBounds_->y_ = (height - destBounds_->width_) / 2;
      }
    }
  }
}

- (void)updateTransforms {
  [self updateTransformsExWithRAREaAnimator_BoundsChanger:nil];
}

- (void)updateTransformsExWithRAREaAnimator_BoundsChanger:(RAREaAnimator_BoundsChanger *)bc {
  RAREImageView *v = [self getImageView];
  if (v == nil) {
    return;
  }
  float x = 0;
  float y = 0;
  RAREUIInsets *in = [self getInsetsEx];
  if (in != nil) {
    x += in->left_;
    y += in->top_;
  }
  if (bc != nil) {
    float dw = ((RAREUIRectangle *) nil_chk(bc->from_))->width_;
    float dh = bc->from_->height_;
    if ((rotation_ == 90) || (rotation_ == 270)) {
      float n = dh;
      dh = dw;
      dw = n;
    }
    [((RAREImageView *) nil_chk(v)) setBoundsWithFloat:x + bc->from_->x_ withFloat:y + bc->from_->y_ withFloat:dw withFloat:dh];
  }
  float dw = ((RAREUIRectangle *) nil_chk(destBounds_))->width_;
  float dh = destBounds_->height_;
  if ((rotation_ == 90) || (rotation_ == 270)) {
    float n = dh;
    dh = dw;
    dw = n;
  }
  if (rotation_ != [((RAREImageView *) nil_chk(v)) getRotation]) {
    if (animatingRotationChange_) {
      id<RAREiPlatformAnimator> a = (animateSizeChangeListener_ == nil) ? nil : [[RARESizeAnimation alloc] init];
      [self animateAndRotateToWithFloat:x + destBounds_->x_ withFloat:y + destBounds_->y_ withFloat:dw withFloat:dh withFloat:rotation_ withId:[v getProxy] withRAREiPlatformAnimator:a];
      return;
    }
  }
  if (animateBoundsChange_) {
    id<RAREiPlatformAnimator> a = (animateSizeChangeListener_ == nil) ? nil : [[RARESizeAnimation alloc] init];
    [self animateToWithFloat:x + destBounds_->x_ withFloat:y + destBounds_->y_ withFloat:dw withFloat:dh withId:[v getProxy] withRAREiPlatformAnimator:a];
  }
  else {
    [v setRotationWithInt:rotation_];
    [v setBoundsWithFloat:x + destBounds_->x_ withFloat:y + destBounds_->y_ withFloat:dw withFloat:dh];
  }
}

- (RAREImageView *)getImageView {
  return ((RAREImagePanel_ImageViewEx *) nil_chk(view_))->imageView_;
}

- (void)copyAllFieldsTo:(RAREImagePanel *)other {
  [super copyAllFieldsTo:other];
  other->mouseHandler_ = mouseHandler_;
  other->scaleHandler_ = scaleHandler_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getRenderedImage", NULL, "LRAREUIImage", 0x1, NULL },
    { "handleSizeChangeAnimationWithRAREaAnimator_BoundsChanger:", NULL, "V", 0x4, NULL },
    { "animateToWithFloat:withFloat:withFloat:withFloat:withId:withRAREiPlatformAnimator:", NULL, "V", 0x104, NULL },
    { "animateAndRotateToWithFloat:withFloat:withFloat:withFloat:withFloat:withId:withRAREiPlatformAnimator:", NULL, "V", 0x104, NULL },
    { "imageLoaded", NULL, "V", 0x4, NULL },
    { "imageNoYetLoaded", NULL, "V", 0x4, NULL },
    { "addSpinnerComponentWithRAREiPlatformComponent:", NULL, "V", 0x4, NULL },
    { "removeSpinnerComponentWithRAREiPlatformComponent:", NULL, "V", 0x4, NULL },
    { "adjustDestForAspectRatioWithFloat:withFloat:withBoolean:withBoolean:", NULL, "V", 0x4, NULL },
    { "updateTransforms", NULL, "V", 0x4, NULL },
    { "updateTransformsExWithRAREaAnimator_BoundsChanger:", NULL, "V", 0x4, NULL },
    { "getImageView", NULL, "LRAREImageView", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "mouseHandler_", NULL, 0x0, "LRAREImagePanel_MouseHandler" },
    { "scaleHandler_", NULL, 0x0, "LRAREImagePanel_ScaleHandler" },
  };
  static J2ObjcClassInfo _RAREImagePanel = { "ImagePanel", "com.appnativa.rare.ui", NULL, 0x1, 12, methods, 2, fields, 0, NULL};
  return &_RAREImagePanel;
}

@end
@implementation RAREImagePanel_ImageViewEx

- (id)initWithBoolean:(BOOL)useTransforms {
  if (self = [super initWithId:[RAREaView createAPView]]) {
    self->useTransforms_ = useTransforms;
    [self setPaintHandlerEnabledWithBoolean:YES];
    if (useTransforms) {
      imageView_ = [[RAREImageView alloc] init];
      [imageView_ setVisibleWithBoolean:NO];
      [imageView_ setManageVisibilityWithBoolean:YES];
      [self addWithInt:-1 withRAREView:imageView_];
    }
  }
  return self;
}

- (void)disposeEx {
  if (imageView_ != nil) {
    [self removeChildWithRAREView:imageView_];
    [imageView_ dispose];
  }
  [super disposeEx];
  imageView_ = nil;
}

- (void)paintBackgroundWithRAREAppleGraphics:(RAREAppleGraphics *)g
                                withRAREView:(RAREView *)v
                         withRAREUIRectangle:(RAREUIRectangle *)rect {
  [super paintBackgroundWithRAREAppleGraphics:g withRAREView:v withRAREUIRectangle:rect];
  if (imageView_ == nil) {
    [((RAREImagePanel *) nil_chk(panel_)) paintWithRAREiPlatformGraphics:g withFloat:((RAREUIRectangle *) nil_chk(rect))->x_ withFloat:rect->y_ withFloat:rect->width_ withFloat:rect->height_];
  }
}

- (void)copyAllFieldsTo:(RAREImagePanel_ImageViewEx *)other {
  [super copyAllFieldsTo:other];
  other->imageView_ = imageView_;
  other->panel_ = panel_;
  other->useTransforms_ = useTransforms_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "disposeEx", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "imageView_", NULL, 0x0, "LRAREImageView" },
    { "panel_", NULL, 0x0, "LRAREImagePanel" },
    { "useTransforms_", NULL, 0x0, "Z" },
  };
  static J2ObjcClassInfo _RAREImagePanel_ImageViewEx = { "ImageViewEx", "com.appnativa.rare.ui", "ImagePanel", 0x8, 1, methods, 3, fields, 0, NULL};
  return &_RAREImagePanel_ImageViewEx;
}

@end
@implementation RAREImagePanel_MouseHandler

- (void)mouseDraggedWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (this$0_->movingAllowed_ || this$0_->movingAllowedWhenToLarge_) {
    if (!this$0_->movingAllowed_ && this$0_->movingAllowedWhenToLarge_ && [this$0_ isImageFitted]) {
      return;
    }
    float lx = lastX_;
    float ly = lastY_;
    lastX_ = [((RAREMouseEvent *) nil_chk(e)) getX];
    lastY_ = [e getY];
    if (([JavaLangMath absWithFloat:startX_ - lastX_] < slop_) && ([JavaLangMath absWithFloat:startY_ - lastY_] < slop_)) {
      lastX_ = lx;
      lastY_ = ly;
      return;
    }
    lx = lastX_ - lx;
    ly = lastY_ - ly;
    if ((lx != 0) || (ly != 0)) {
      [this$0_ moveImageWithFloat:lx withFloat:ly];
    }
  }
}

- (void)mouseEnteredWithRAREMouseEvent:(RAREMouseEvent *)e {
}

- (void)mouseExitedWithRAREMouseEvent:(RAREMouseEvent *)e {
}

- (void)mouseMovedWithRAREMouseEvent:(RAREMouseEvent *)e {
}

- (void)mousePressedWithRAREMouseEvent:(RAREMouseEvent *)e {
  lastX_ = [((RAREMouseEvent *) nil_chk(e)) getX];
  lastY_ = [e getY];
}

- (void)mouseReleasedWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (([((RAREMouseEvent *) nil_chk(e)) getClickCount] > 1) && this$0_->zoomingAllowed_) {
    [this$0_ zoomOnPointWithFloat:[e getX] withFloat:[e getY]];
  }
}

- (void)pressCanceledWithRAREMouseEvent:(RAREMouseEvent *)e {
}

- (BOOL)wantsLongPress {
  return NO;
}

- (BOOL)wantsMouseMovedEvents {
  return NO;
}

- (id)initWithRAREImagePanel:(RAREImagePanel *)outer$ {
  this$0_ = outer$;
  if (self = [super init]) {
    slop_ = [RAREPlatform isTouchDevice] ? 10 : 4;
  }
  return self;
}

- (void)copyAllFieldsTo:(RAREImagePanel_MouseHandler *)other {
  [super copyAllFieldsTo:other];
  other->lastX_ = lastX_;
  other->lastY_ = lastY_;
  other->slop_ = slop_;
  other->startX_ = startX_;
  other->startY_ = startY_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "wantsLongPress", NULL, "Z", 0x1, NULL },
    { "wantsMouseMovedEvents", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREImagePanel" },
    { "lastX_", NULL, 0x0, "F" },
    { "lastY_", NULL, 0x0, "F" },
    { "startX_", NULL, 0x0, "F" },
    { "startY_", NULL, 0x0, "F" },
    { "slop_", NULL, 0x4, "F" },
  };
  static J2ObjcClassInfo _RAREImagePanel_MouseHandler = { "MouseHandler", "com.appnativa.rare.ui", "ImagePanel", 0x0, 2, methods, 6, fields, 0, NULL};
  return &_RAREImagePanel_MouseHandler;
}

@end
@implementation RAREImagePanel_ScaleHandler

- (void)onFlingWithId:(id)view
   withRAREMouseEvent:(RAREMouseEvent *)e1
   withRAREMouseEvent:(RAREMouseEvent *)e2
            withFloat:(float)velocityX
            withFloat:(float)velocityY {
}

- (void)onLongPressWithId:(id)view
       withRAREMouseEvent:(RAREMouseEvent *)e {
}

- (void)onRotateWithId:(id)view
               withInt:(int)type
             withFloat:(float)rotation
             withFloat:(float)velocity
             withFloat:(float)focusX
             withFloat:(float)focusY {
}

- (void)onScaleEventWithId:(id)view
                   withInt:(int)type
                    withId:(id)sgd
                 withFloat:(float)factor {
  RAREScaleGestureObject *so = (RAREScaleGestureObject *) check_class_cast(sgd, [RAREScaleGestureObject class]);
  switch (type) {
    case RAREiGestureListener_SCALE_BEGIN:
    [this$0_ pinchZoomHandlerStartWithFloat:[((RAREScaleGestureObject *) nil_chk(so)) getFocusX] withFloat:[so getFocusY]];
    break;
    case RAREiGestureListener_SCALE_END:
    [this$0_ pinchZoomHandlerEndWithFloat:[((RAREScaleGestureObject *) nil_chk(so)) getFocusX] withFloat:[so getFocusY]];
    break;
    default:
    [this$0_ pinchZoomHandlerScaleWithFloat:[((RAREScaleGestureObject *) nil_chk(so)) getFocusX] withFloat:[so getFocusY] withFloat:[so getScaleFactor]];
    return;
  }
}

- (id)initWithRAREImagePanel:(RAREImagePanel *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREImagePanel" },
  };
  static J2ObjcClassInfo _RAREImagePanel_ScaleHandler = { "ScaleHandler", "com.appnativa.rare.ui", "ImagePanel", 0x0, 0, NULL, 1, fields, 0, NULL};
  return &_RAREImagePanel_ScaleHandler;
}

@end
