//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/UISoundHelper.java
//
//  Created by decoteaud on 3/15/16.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UISound.h"
#include "com/appnativa/rare/ui/UISoundHelper.h"
#include "java/lang/Exception.h"

@implementation RAREUISoundHelper

static RAREUISound * RAREUISoundHelper_success_;
static RAREUISound * RAREUISoundHelper_error_;
static BOOL RAREUISoundHelper_errorLoadedTried_;
static BOOL RAREUISoundHelper_successLoadedTried_;
static int RAREUISoundHelper_defaultVolume_ = 25;

+ (RAREUISound *)success {
  return RAREUISoundHelper_success_;
}

+ (void)setSuccess:(RAREUISound *)success {
  RAREUISoundHelper_success_ = success;
}

+ (RAREUISound *)error {
  return RAREUISoundHelper_error_;
}

+ (void)setError:(RAREUISound *)error {
  RAREUISoundHelper_error_ = error;
}

+ (BOOL)errorLoadedTried {
  return RAREUISoundHelper_errorLoadedTried_;
}

+ (BOOL *)errorLoadedTriedRef {
  return &RAREUISoundHelper_errorLoadedTried_;
}

+ (BOOL)successLoadedTried {
  return RAREUISoundHelper_successLoadedTried_;
}

+ (BOOL *)successLoadedTriedRef {
  return &RAREUISoundHelper_successLoadedTried_;
}

+ (int)defaultVolume {
  return RAREUISoundHelper_defaultVolume_;
}

+ (int *)defaultVolumeRef {
  return &RAREUISoundHelper_defaultVolume_;
}

- (id)init {
  return [super init];
}

+ (void)beep {
  [RAREPlatformHelper beep];
}

+ (BOOL)errorSound {
  if (RAREUISoundHelper_error_ == nil && !RAREUISoundHelper_errorLoadedTried_) {
    NSString *s = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getStringWithNSString:@"Rare.sound.error"];
    if (s == nil) {
      s = @"rare_raw_error_beep";
    }
    RAREUISoundHelper_errorLoadedTried_ = YES;
    @try {
      RAREUISoundHelper_error_ = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getSoundWithNSString:s];
      [((RAREUISound *) nil_chk(RAREUISoundHelper_error_)) setVolumeWithInt:RAREUISoundHelper_defaultVolume_];
    }
    @catch (JavaLangException *e) {
      [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
    }
  }
  if (RAREUISoundHelper_error_ != nil) {
    [RAREUISoundHelper_error_ play];
    return YES;
  }
  return NO;
}

+ (void)successSound {
  if (RAREUISoundHelper_success_ == nil && !RAREUISoundHelper_successLoadedTried_) {
    NSString *s = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getStringWithNSString:@"Rare.sound.success"];
    if (s == nil) {
      s = @"rare_raw_success_sound";
    }
    @try {
      RAREUISoundHelper_successLoadedTried_ = YES;
      RAREUISoundHelper_success_ = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getSoundWithNSString:s];
      [((RAREUISound *) nil_chk(RAREUISoundHelper_success_)) setVolumeWithInt:RAREUISoundHelper_defaultVolume_];
    }
    @catch (JavaLangException *e) {
      [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
    }
  }
  if (RAREUISoundHelper_success_ != nil) {
    [RAREUISoundHelper_success_ play];
  }
}

+ (int)getDefaultVolume {
  return RAREUISoundHelper_defaultVolume_;
}

+ (void)setDefaultVolumeWithInt:(int)defaultVolume {
  RAREUISoundHelper_defaultVolume_ = defaultVolume;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "errorSound", NULL, "Z", 0x9, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "success_", NULL, 0x8, "LRAREUISound" },
    { "error_", NULL, 0x8, "LRAREUISound" },
    { "errorLoadedTried_", NULL, 0x8, "Z" },
    { "successLoadedTried_", NULL, 0x8, "Z" },
    { "defaultVolume_", NULL, 0xa, "I" },
  };
  static J2ObjcClassInfo _RAREUISoundHelper = { "UISoundHelper", "com.appnativa.rare.ui", NULL, 0x1, 1, methods, 5, fields, 0, NULL};
  return &_RAREUISoundHelper;
}

@end
