//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/ui/ScrollContainer.java
//
//  Created by decoteaud on 3/11/16.
//

#include "com/appnativa/rare/platform/apple/ui/view/ParentView.h"
#include "com/appnativa/rare/ui/Component.h"
#include "com/appnativa/rare/ui/Container.h"
#include "com/appnativa/rare/ui/ScrollContainer.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "java/lang/Math.h"
#include "java/util/List.h"

@implementation RAREScrollContainer

- (id)initWithRAREParentView:(RAREParentView *)view {
  if (self = [super initWithRAREParentView:view]) {
    preferedSizeDirty_ = YES;
    rowHeaderSize_ = [[RAREUIDimension alloc] init];
    rowFooterSize_ = [[RAREUIDimension alloc] init];
    mainComponentSize_ = [[RAREUIDimension alloc] init];
  }
  return self;
}

- (void)contentsChangedWithId:(id)source {
  preferedSizeDirty_ = YES;
}

- (void)contentsChangedWithId:(id)source
                      withInt:(int)index0
                      withInt:(int)index1 {
  preferedSizeDirty_ = YES;
}

- (void)getMinimumSizeExWithRAREUIDimension:(RAREUIDimension *)size
                                  withFloat:(float)maxWidth {
  float width = 0;
  float height = 0;
  int len = [self getComponentCount];
  for (int i = 0; i < len; i++) {
    id<RAREiPlatformComponent> c = [self getComponentAtWithInt:i];
    (void) [((id<RAREiPlatformComponent>) nil_chk(c)) getMinimumSizeWithRAREUIDimension:size withFloat:maxWidth];
    height = [JavaLangMath maxWithFloat:height withFloat:((RAREUIDimension *) nil_chk(size))->height_];
    width += size->width_;
  }
  height = [JavaLangMath maxWithFloat:height withFloat:((RAREUIDimension *) nil_chk(size))->height_];
  width += size->width_;
  size->width_ = width;
  size->height_ = height;
}

- (void)setForegroundWithRAREUIColor:(RAREUIColor *)fg {
  [super setForegroundWithRAREUIColor:fg];
  int len = [self getComponentCount];
  for (int i = 0; i < len; i++) {
    id<RAREiPlatformComponent> c = [self getComponentAtWithInt:i];
    [((id<RAREiPlatformComponent>) nil_chk(c)) setForegroundWithRAREUIColor:fg];
  }
}

- (void)setBackgroundWithRAREUIColor:(RAREUIColor *)bg {
  backgroundColor_ = bg;
  int len = [self getComponentCount];
  for (int i = 0; i < len; i++) {
    id<RAREiPlatformComponent> c = [self getComponentAtWithInt:i];
    [((id<RAREiPlatformComponent>) nil_chk(c)) setBackgroundWithRAREUIColor:bg];
  }
}

- (void)setFontWithRAREUIFont:(RAREUIFont *)f {
  [super setFontWithRAREUIFont:f];
  int len = [self getComponentCount];
  for (int i = 0; i < len; i++) {
    id<RAREiPlatformComponent> c = [self getComponentAtWithInt:i];
    [((id<RAREiPlatformComponent>) nil_chk(c)) setFontWithRAREUIFont:f];
  }
}

- (void)getPreferredSizeExWithRAREUIDimension:(RAREUIDimension *)size
                                    withFloat:(float)maxWidth {
  float width = 0;
  float height = 0;
  if (preferedSizeDirty_) {
    int len = [self getComponentCount];
    id<RAREiPlatformComponent> main = nil;
    for (int i = 0; i < len; i++) {
      id<RAREiPlatformComponent> c = [self getComponentAtWithInt:i];
      if (c == mainComponent_) {
        main = c;
      }
      else {
        (void) [((id<RAREiPlatformComponent>) nil_chk(c)) getPreferredSizeWithRAREUIDimension:size];
        if (main == nil) {
          [((RAREUIDimension *) nil_chk(rowHeaderSize_)) setSizeWithRAREUIDimension:size];
        }
        else {
          [((RAREUIDimension *) nil_chk(rowFooterSize_)) setSizeWithRAREUIDimension:size];
        }
        height = [JavaLangMath maxWithFloat:height withFloat:((RAREUIDimension *) nil_chk(size))->height_];
        width += size->width_;
      }
    }
    maxWidth = maxWidth - width;
    (void) [((id<RAREiPlatformComponent>) nil_chk(main)) getPreferredSizeWithRAREUIDimension:size withFloat:[JavaLangMath maxWithFloat:maxWidth withFloat:0]];
    [((RAREUIDimension *) nil_chk(mainComponentSize_)) setSizeWithRAREUIDimension:size];
    height = [JavaLangMath maxWithFloat:height withFloat:((RAREUIDimension *) nil_chk(size))->height_];
    width += size->width_;
    preferedSizeDirty_ = NO;
  }
  else {
    height = [JavaLangMath maxWithFloat:height withFloat:((RAREUIDimension *) nil_chk(rowHeaderSize_))->height_];
    height = [JavaLangMath maxWithFloat:height withFloat:((RAREUIDimension *) nil_chk(mainComponentSize_))->height_];
    height = [JavaLangMath maxWithFloat:height withFloat:((RAREUIDimension *) nil_chk(rowFooterSize_))->height_];
    width = rowHeaderSize_->width_ + mainComponentSize_->width_ + rowFooterSize_->width_;
  }
  ((RAREUIDimension *) nil_chk(size))->width_ = width;
  size->height_ = height;
}

- (void)intervalAddedWithId:(id)source
                    withInt:(int)index0
                    withInt:(int)index1 {
  preferedSizeDirty_ = YES;
}

- (void)intervalRemovedWithId:(id)source
                      withInt:(int)index0
                      withInt:(int)index1
             withJavaUtilList:(id<JavaUtilList>)removed {
  preferedSizeDirty_ = YES;
}

- (void)addWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                               withId:(id)constraints
                              withInt:(int)position {
  [super addWithRAREiPlatformComponent:c withId:constraints withInt:position];
  if (mainComponent_ == nil) {
    mainComponent_ = c;
  }
}

- (void)layoutWithFloat:(float)width
              withFloat:(float)height {
  id<RAREiPlatformComponent> main = nil;
  id<RAREiPlatformComponent> header = nil;
  id<RAREiPlatformComponent> footer = nil;
  int len = [self getComponentCount];
  for (int i = 0; i < len; i++) {
    id<RAREiPlatformComponent> c = [self getComponentAtWithInt:i];
    if (c == mainComponent_) {
      main = c;
    }
    else {
      if (main == nil) {
        header = c;
        if (preferedSizeDirty_) {
          (void) [((id<RAREiPlatformComponent>) nil_chk(c)) getPreferredSizeWithRAREUIDimension:rowHeaderSize_];
        }
      }
      else {
        footer = c;
        if (preferedSizeDirty_) {
          (void) [((id<RAREiPlatformComponent>) nil_chk(c)) getPreferredSizeWithRAREUIDimension:rowFooterSize_];
        }
      }
    }
  }
  float x = 0;
  float y = 0;
  id<RAREiPlatformBorder> b = [self getBorder];
  RAREUIInsets *in = (b == nil) ? nil : [b getBorderInsetsExWithRAREUIInsets:[[RAREUIInsets alloc] init]];
  if (in != nil) {
    x = in->left_;
    width -= (in->left_ + in->right_);
    y = in->top_;
    height -= (in->top_ + in->bottom_);
  }
  float w = width;
  if (header != nil) {
    [header setBoundsWithFloat:x withFloat:y withFloat:((RAREUIDimension *) nil_chk(rowHeaderSize_))->width_ withFloat:height];
    x += rowHeaderSize_->width_;
    w -= (x - ((in == nil) ? 0 : in->left_));
  }
  if (footer != nil) {
    [footer setBoundsWithFloat:width - ((RAREUIDimension *) nil_chk(rowFooterSize_))->width_ + ((in == nil) ? 0 : in->left_) withFloat:y withFloat:rowFooterSize_->width_ withFloat:height];
    w -= rowFooterSize_->width_;
  }
  [((id<RAREiPlatformComponent>) nil_chk(main)) setBoundsWithFloat:x withFloat:y withFloat:w withFloat:height];
}

- (void)revalidate {
  [super revalidate];
  preferedSizeDirty_ = YES;
}

- (void)structureChangedWithId:(id)source {
  preferedSizeDirty_ = YES;
}

- (id<RAREiPlatformComponent>)getMainComponent {
  return mainComponent_;
}

- (void)setMainComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)mainComponent {
  self->mainComponent_ = mainComponent;
}

- (void)layoutWithRAREParentView:(RAREParentView *)view
                       withFloat:(float)width
                       withFloat:(float)height {
  [self layoutWithFloat:width withFloat:height];
}

- (void)invalidateLayout {
  preferedSizeDirty_ = YES;
}

- (void)copyAllFieldsTo:(RAREScrollContainer *)other {
  [super copyAllFieldsTo:other];
  other->mainComponent_ = mainComponent_;
  other->mainComponentSize_ = mainComponentSize_;
  other->preferedSizeDirty_ = preferedSizeDirty_;
  other->rowFooterSize_ = rowFooterSize_;
  other->rowHeaderSize_ = rowHeaderSize_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getMinimumSizeExWithRAREUIDimension:withFloat:", NULL, "V", 0x4, NULL },
    { "getPreferredSizeExWithRAREUIDimension:withFloat:", NULL, "V", 0x4, NULL },
    { "getMainComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "preferedSizeDirty_", NULL, 0x4, "Z" },
    { "rowHeaderSize_", NULL, 0x4, "LRAREUIDimension" },
    { "rowFooterSize_", NULL, 0x4, "LRAREUIDimension" },
    { "mainComponentSize_", NULL, 0x4, "LRAREUIDimension" },
    { "mainComponent_", NULL, 0x4, "LRAREiPlatformComponent" },
  };
  static J2ObjcClassInfo _RAREScrollContainer = { "ScrollContainer", "com.appnativa.rare.ui", NULL, 0x1, 3, methods, 5, fields, 0, NULL};
  return &_RAREScrollContainer;
}

@end
