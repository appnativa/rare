//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/TitlePane.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/TemplateHandler.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/spot/Font.h"
#include "com/appnativa/rare/spot/Label.h"
#include "com/appnativa/rare/ui/BorderUtils.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/Component.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/TitlePane.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIFontHelper.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/aBorderPanel.h"
#include "com/appnativa/rare/ui/border/UICompoundBorder.h"
#include "com/appnativa/rare/ui/border/UIEmptyBorder.h"
#include "com/appnativa/rare/ui/border/UILineBorder.h"
#include "com/appnativa/rare/ui/border/UIMatteBorder.h"
#include "com/appnativa/rare/ui/event/iActionListener.h"
#include "com/appnativa/rare/ui/iActionComponent.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/widget/LabelWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "java/lang/Boolean.h"

@implementation RARETitlePane

static JavaLangBoolean * RARETitlePane_hasTemplate_;

+ (JavaLangBoolean *)hasTemplate {
  return RARETitlePane_hasTemplate_;
}

+ (void)setHasTemplate:(JavaLangBoolean *)hasTemplate {
  RARETitlePane_hasTemplate_ = hasTemplate;
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context {
  if (self = [super initWithRAREiWidget:context]) {
    iconOnLeft_ = YES;
    if (RARETitlePane_hasTemplate_ == nil) {
      RARETitlePane_hasTemplate_ = [JavaLangBoolean valueOfWithBoolean:[RARETemplateHandler hasWidgetTemplateWithNSString:@"Rare.TitlePane.title"]];
    }
    NSString *template_ = [((JavaLangBoolean *) nil_chk(RARETitlePane_hasTemplate_)) booleanValue] ? @"Rare.TitlePane.title" : @"Rare.Alert.title";
    RARESPOTLabel *l = (RARESPOTLabel *) check_class_cast([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) createConfigurationObjectWithNSString:@"Label" withNSString:template_], [RARESPOTLabel class]);
    SPOTSet *borders = [((RARESPOTLabel *) nil_chk(l)) getBorders];
    [l setBordersWithISPOTElement:nil];
    SPOTPrintableString *ps = (SPOTPrintableString *) check_class_cast([((SPOTPrintableString *) nil_chk(l->bgColor_)) clone], [SPOTPrintableString class]);
    [l->bgColor_ spot_clear];
    titleWidget_ = [RAREaLabelWidget createWithRAREiContainer:[((id<RAREiWidget>) nil_chk(context)) getContainerViewer] withRARESPOTLabel:l];
    [self setCenterViewWithRAREiPlatformComponent:[((RARELabelWidget *) nil_chk(titleWidget_)) getContainerComponent]];
    id bg = nil;
    if ([((SPOTPrintableString *) nil_chk(ps)) getValue] != nil) {
      bg = [RAREColorUtils getBackgroundColorWithSPOTPrintableString:ps];
    }
    if (bg == nil) {
      bg = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getWithNSString:@"Rare.TitlePane.background"];
    }
    if (bg == nil) {
      bg = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.Alert.title.backgroundColor"];
    }
    if (bg == nil) {
      bg = [RAREColorUtils getBackground];
    }
    if (bg != nil) {
      [RAREUtils setBackgroundWithRAREiPlatformComponent:self withId:bg];
    }
    if ([((SPOTPrintableString *) nil_chk(l->fgColor_)) getValue] == nil) {
      RAREUIColor *fg = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.TitlePane.foreground"];
      if (fg == nil) {
        fg = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.Alert.foregroundColor"];
      }
      if (fg != nil) {
        [titleWidget_ setForegroundWithRAREUIColor:fg];
      }
    }
    RAREUIFont *f = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getFontWithNSString:@"Rare.TitlePane.font"];
    if ((f == nil) && ![((RARESPOTFont *) nil_chk(l->font_)) spot_hasValue]) {
      f = [RAREUIFontHelper getDefaultFont];
      f = [f deriveFontSizeWithFloat:[((RAREUIFont *) nil_chk(f)) getSize2D] + 2];
    }
    if (f != nil) {
      [titleWidget_ setFontWithRAREUIFont:f];
    }
    id<RAREiPlatformBorder> b = nil;
    if (borders != nil) {
      b = [RAREBorderUtils createBorderWithRAREiWidget:titleWidget_ withSPOTSet:borders withRAREiPlatformBorder:nil];
    }
    if (b != nil) {
      [self setBorderWithRAREiPlatformBorder:b];
    }
    else {
      [self setBorderWithRAREiPlatformBorder:[RARETitlePane getTitlePaneBorder]];
    }
  }
  return self;
}

- (void)dispose {
  [super dispose];
  if (titleWidget_ != nil) {
    [titleWidget_ dispose];
  }
  if (iconWidget_ != nil) {
    [iconWidget_ dispose];
  }
  iconWidget_ = nil;
  titleWidget_ = nil;
  otherComponent_ = nil;
}

- (void)setIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  if (iconWidget_ == nil) {
    RARESPOTLabel *l = (RARESPOTLabel *) check_class_cast([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) createConfigurationObjectWithNSString:@"Label" withNSString:@"Rare.Dialog.iconWidget"], [RARESPOTLabel class]);
    iconWidget_ = [RAREaLabelWidget createWithRAREiContainer:[((RARELabelWidget *) nil_chk(titleWidget_)) getContainerViewer] withRARESPOTLabel:l];
    if ([((RARESPOTLabel *) nil_chk(l)) getBorders] == nil) {
      [((RARELabelWidget *) nil_chk(iconWidget_)) setBorderWithRAREiPlatformBorder:[[RAREUIEmptyBorder alloc] initWithFloat:0 withFloat:[RAREUIScreen PLATFORM_PIXELS_8] withFloat:0 withFloat:0]];
    }
    if (iconOnLeft_) {
      [self setLeftViewWithRAREiPlatformComponent:[((RARELabelWidget *) nil_chk(iconWidget_)) getContainerComponent]];
    }
    else {
      [self setRightViewWithRAREiPlatformComponent:[((RARELabelWidget *) nil_chk(iconWidget_)) getContainerComponent]];
    }
  }
  [((RARELabelWidget *) nil_chk(iconWidget_)) setIconWithRAREiPlatformIcon:icon];
}

- (void)setIconOnLeftWithBoolean:(BOOL)iconOnLeft {
  if (self->iconOnLeft_ != iconOnLeft) {
    self->iconOnLeft_ = iconOnLeft;
    [self setEdgeComponents];
  }
}

- (void)setOtherComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  otherComponent_ = c;
  [self setEdgeComponents];
}

- (void)setTitleWithNSString:(NSString *)title {
  [((RARELabelWidget *) nil_chk(titleWidget_)) setValueWithId:title];
}

+ (id<RAREiPlatformBorder>)getTitlePaneBorder {
  id<RAREiPlatformBorder> b = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getBorderWithNSString:@"Rare.TitlePane.border"];
  if (b == nil) {
    RAREUIColor *c = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.TitlePane.borderColor"];
    if (c == nil) {
      c = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.Alert.title.lineColor"];
    }
    if (c == nil) {
      c = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.Alert.lineColor"];
    }
    if (c == nil) {
      c = [RAREaUILineBorder getDefaultLineColor];
    }
    b = [[RAREUIMatteBorder alloc] initWithFloat:0 withFloat:0 withFloat:[RAREScreenUtils PLATFORM_PIXELS_2] withFloat:0 withRAREUIColor:c];
    b = [[RAREUICompoundBorder alloc] initWithRAREiPlatformBorder:b withRAREiPlatformBorder:[[RAREUIEmptyBorder alloc] initWithFloat:[RAREScreenUtils PLATFORM_PIXELS_2] withFloat:[RAREScreenUtils PLATFORM_PIXELS_2] withFloat:[RAREScreenUtils PLATFORM_PIXELS_2] withFloat:[RAREScreenUtils PLATFORM_PIXELS_4]]];
    [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) putWithNSString:@"Rare.TitlePane.border" withId:b];
  }
  return b;
}

+ (RARETitlePane *)createDialogTitleWithRAREiWidget:(id<RAREiWidget>)context
                            withRAREiActionListener:(id<RAREiActionListener>)closeAction {
  RAREWindowViewer *w = [((RAREWindowViewer *) nil_chk([((id<RAREiWidget>) nil_chk(context)) getWindow])) getWindow];
  RARETitlePane *tp = [[RARETitlePane alloc] initWithRAREiWidget:context];
  [tp setTitleWithNSString:[((RAREWindowViewer *) nil_chk(w)) getTitle]];
  if ([((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getBooleanWithNSString:@"Rare.Dialog.showIcon" withBoolean:YES]) {
    [tp setIconWithRAREiPlatformIcon:[w getIcon]];
  }
  if (closeAction != nil) {
    id<RAREiActionComponent> close = [RAREPlatformHelper createNakedButtonWithRAREiPlatformComponent:[context getContainerComponent] withBoolean:NO withInt:0];
    [((id<RAREiActionComponent>) nil_chk(close)) addActionListenerWithRAREiActionListener:closeAction];
    [close setIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.close"]];
    [tp setOtherComponentWithRAREiPlatformComponent:close];
  }
  return tp;
}

- (void)setEdgeComponents {
  [self setRightViewWithRAREiPlatformComponent:nil];
  [self setLeftViewWithRAREiPlatformComponent:nil];
  if (iconOnLeft_) {
    if (iconWidget_ != nil) {
      [self setLeftViewWithRAREiPlatformComponent:[iconWidget_ getContainerComponent]];
    }
    if (otherComponent_ != nil) {
      [self setRightViewWithRAREiPlatformComponent:otherComponent_];
    }
  }
  else {
    if (iconWidget_ != nil) {
      [self setRightViewWithRAREiPlatformComponent:[iconWidget_ getContainerComponent]];
    }
    if (otherComponent_ != nil) {
      [self setLeftViewWithRAREiPlatformComponent:otherComponent_];
    }
  }
}

- (BOOL)isIconOnLeft {
  return iconOnLeft_;
}

- (void)copyAllFieldsTo:(RARETitlePane *)other {
  [super copyAllFieldsTo:other];
  other->iconOnLeft_ = iconOnLeft_;
  other->iconWidget_ = iconWidget_;
  other->otherComponent_ = otherComponent_;
  other->titleWidget_ = titleWidget_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getTitlePaneBorder", NULL, "LRAREiPlatformBorder", 0x9, NULL },
    { "createDialogTitleWithRAREiWidget:withRAREiActionListener:", NULL, "LRARETitlePane", 0x9, NULL },
    { "setEdgeComponents", NULL, "V", 0x4, NULL },
    { "isIconOnLeft", NULL, "Z", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "iconWidget_", NULL, 0x4, "LRARELabelWidget" },
    { "titleWidget_", NULL, 0x4, "LRARELabelWidget" },
    { "iconOnLeft_", NULL, 0x4, "Z" },
    { "otherComponent_", NULL, 0x4, "LRAREiPlatformComponent" },
    { "hasTemplate_", NULL, 0xa, "LJavaLangBoolean" },
  };
  static J2ObjcClassInfo _RARETitlePane = { "TitlePane", "com.appnativa.rare.ui", NULL, 0x1, 4, methods, 5, fields, 0, NULL};
  return &_RARETitlePane;
}

@end
