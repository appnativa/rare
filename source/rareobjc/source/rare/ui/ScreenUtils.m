//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/ScreenUtils.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/ui/FontUtils.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformWindowManager.h"
#include "com/appnativa/rare/ui/iWindow.h"
#include "com/appnativa/util/SNumber.h"
#include "com/jgoodies/forms/layout/ConstantSize.h"
#include "com/jgoodies/forms/layout/Sizes.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"

@implementation RAREScreenUtils

static int RAREScreenUtils_PLATFORM_PIXELS_1_ = 1;
static int RAREScreenUtils_PLATFORM_PIXELS_10_ = 10;
static int RAREScreenUtils_PLATFORM_PIXELS_16_ = 16;
static int RAREScreenUtils_PLATFORM_PIXELS_2_ = 2;
static int RAREScreenUtils_PLATFORM_PIXELS_3_ = 3;
static int RAREScreenUtils_PLATFORM_PIXELS_4_ = 4;
static int RAREScreenUtils_PLATFORM_PIXELS_5_ = 5;
static int RAREScreenUtils_PLATFORM_PIXELS_6_ = 6;
static int RAREScreenUtils_PLATFORM_PIXELS_7_ = 7;
static int RAREScreenUtils_PLATFORM_PIXELS_8_ = 8;
static int RAREScreenUtils_PLATFORM_PIXELS_9_ = 9;
static float RAREScreenUtils_screenDpi96Factor_ = 1.333f;
static float RAREScreenUtils_xScreenDpi_ = 72;
static float RAREScreenUtils_yScreenDpi_ = 72;
static float RAREScreenUtils_density_ = 1;
static float RAREScreenUtils_fontFactor_ = 1.0f;
static int RAREScreenUtils_lineHeight__ = -1;
static float RAREScreenUtils_pixelMultiplier_ = 1;
static RAREUIScreen_ScreenSizeEnum * RAREScreenUtils_screenSize_;
static float RAREScreenUtils_iconDensity_;
static RAREUIFont * RAREScreenUtils_lineHeightFont_;
static NSString * RAREScreenUtils_screenSizeName_;
static BOOL RAREScreenUtils_screenSizeSet_;
static BOOL RAREScreenUtils_sizeValuesSet_;
static int RAREScreenUtils_xsmallSize_;
static int RAREScreenUtils_mediumSize_;
static int RAREScreenUtils_smallSize_;

+ (int)PLATFORM_PIXELS_1 {
  return RAREScreenUtils_PLATFORM_PIXELS_1_;
}

+ (int *)PLATFORM_PIXELS_1Ref {
  return &RAREScreenUtils_PLATFORM_PIXELS_1_;
}

+ (int)PLATFORM_PIXELS_10 {
  return RAREScreenUtils_PLATFORM_PIXELS_10_;
}

+ (int *)PLATFORM_PIXELS_10Ref {
  return &RAREScreenUtils_PLATFORM_PIXELS_10_;
}

+ (int)PLATFORM_PIXELS_16 {
  return RAREScreenUtils_PLATFORM_PIXELS_16_;
}

+ (int *)PLATFORM_PIXELS_16Ref {
  return &RAREScreenUtils_PLATFORM_PIXELS_16_;
}

+ (int)PLATFORM_PIXELS_2 {
  return RAREScreenUtils_PLATFORM_PIXELS_2_;
}

+ (int *)PLATFORM_PIXELS_2Ref {
  return &RAREScreenUtils_PLATFORM_PIXELS_2_;
}

+ (int)PLATFORM_PIXELS_3 {
  return RAREScreenUtils_PLATFORM_PIXELS_3_;
}

+ (int *)PLATFORM_PIXELS_3Ref {
  return &RAREScreenUtils_PLATFORM_PIXELS_3_;
}

+ (int)PLATFORM_PIXELS_4 {
  return RAREScreenUtils_PLATFORM_PIXELS_4_;
}

+ (int *)PLATFORM_PIXELS_4Ref {
  return &RAREScreenUtils_PLATFORM_PIXELS_4_;
}

+ (int)PLATFORM_PIXELS_5 {
  return RAREScreenUtils_PLATFORM_PIXELS_5_;
}

+ (int *)PLATFORM_PIXELS_5Ref {
  return &RAREScreenUtils_PLATFORM_PIXELS_5_;
}

+ (int)PLATFORM_PIXELS_6 {
  return RAREScreenUtils_PLATFORM_PIXELS_6_;
}

+ (int *)PLATFORM_PIXELS_6Ref {
  return &RAREScreenUtils_PLATFORM_PIXELS_6_;
}

+ (int)PLATFORM_PIXELS_7 {
  return RAREScreenUtils_PLATFORM_PIXELS_7_;
}

+ (int *)PLATFORM_PIXELS_7Ref {
  return &RAREScreenUtils_PLATFORM_PIXELS_7_;
}

+ (int)PLATFORM_PIXELS_8 {
  return RAREScreenUtils_PLATFORM_PIXELS_8_;
}

+ (int *)PLATFORM_PIXELS_8Ref {
  return &RAREScreenUtils_PLATFORM_PIXELS_8_;
}

+ (int)PLATFORM_PIXELS_9 {
  return RAREScreenUtils_PLATFORM_PIXELS_9_;
}

+ (int *)PLATFORM_PIXELS_9Ref {
  return &RAREScreenUtils_PLATFORM_PIXELS_9_;
}

+ (float)screenDpi96Factor {
  return RAREScreenUtils_screenDpi96Factor_;
}

+ (float *)screenDpi96FactorRef {
  return &RAREScreenUtils_screenDpi96Factor_;
}

+ (float)xScreenDpi {
  return RAREScreenUtils_xScreenDpi_;
}

+ (float *)xScreenDpiRef {
  return &RAREScreenUtils_xScreenDpi_;
}

+ (float)yScreenDpi {
  return RAREScreenUtils_yScreenDpi_;
}

+ (float *)yScreenDpiRef {
  return &RAREScreenUtils_yScreenDpi_;
}

+ (float)density {
  return RAREScreenUtils_density_;
}

+ (float *)densityRef {
  return &RAREScreenUtils_density_;
}

+ (float)fontFactor {
  return RAREScreenUtils_fontFactor_;
}

+ (float *)fontFactorRef {
  return &RAREScreenUtils_fontFactor_;
}

+ (int)lineHeight {
  return RAREScreenUtils_lineHeight__;
}

+ (int *)lineHeightRef {
  return &RAREScreenUtils_lineHeight__;
}

+ (float)pixelMultiplier {
  return RAREScreenUtils_pixelMultiplier_;
}

+ (float *)pixelMultiplierRef {
  return &RAREScreenUtils_pixelMultiplier_;
}

+ (RAREUIScreen_ScreenSizeEnum *)screenSize {
  return RAREScreenUtils_screenSize_;
}

+ (void)setScreenSize:(RAREUIScreen_ScreenSizeEnum *)screenSize {
  RAREScreenUtils_screenSize_ = screenSize;
}

+ (float)iconDensity {
  return RAREScreenUtils_iconDensity_;
}

+ (float *)iconDensityRef {
  return &RAREScreenUtils_iconDensity_;
}

+ (RAREUIFont *)lineHeightFont {
  return RAREScreenUtils_lineHeightFont_;
}

+ (void)setLineHeightFont:(RAREUIFont *)lineHeightFont {
  RAREScreenUtils_lineHeightFont_ = lineHeightFont;
}

+ (NSString *)screenSizeName {
  return RAREScreenUtils_screenSizeName_;
}

+ (void)setScreenSizeName:(NSString *)screenSizeName {
  RAREScreenUtils_screenSizeName_ = screenSizeName;
}

+ (BOOL)screenSizeSet {
  return RAREScreenUtils_screenSizeSet_;
}

+ (BOOL *)screenSizeSetRef {
  return &RAREScreenUtils_screenSizeSet_;
}

+ (BOOL)sizeValuesSet {
  return RAREScreenUtils_sizeValuesSet_;
}

+ (BOOL *)sizeValuesSetRef {
  return &RAREScreenUtils_sizeValuesSet_;
}

+ (int)xsmallSize {
  return RAREScreenUtils_xsmallSize_;
}

+ (int *)xsmallSizeRef {
  return &RAREScreenUtils_xsmallSize_;
}

+ (int)mediumSize {
  return RAREScreenUtils_mediumSize_;
}

+ (int *)mediumSizeRef {
  return &RAREScreenUtils_mediumSize_;
}

+ (int)smallSize {
  return RAREScreenUtils_smallSize_;
}

+ (int *)smallSizeRef {
  return &RAREScreenUtils_smallSize_;
}

- (id)init {
  return [super init];
}

+ (RAREUIDimension *)adjustForLineHeightWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                               withRAREUIDimension:(RAREUIDimension *)d {
  int h = [RAREScreenUtils lineHeightWithRAREiPlatformComponent:c];
  if (h > ((RAREUIDimension *) nil_chk(d))->height_) {
    d->height_ = h;
  }
  return d;
}

+ (RAREUIDimension *)adjustForLineHeightExWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                                 withRAREUIDimension:(RAREUIDimension *)d {
  int h = [RAREScreenUtils lineHeightExWithRAREiPlatformComponent:c];
  if (h > ((RAREUIDimension *) nil_chk(d))->height_) {
    d->height_ = h;
  }
  return d;
}

+ (int)calculateLineHeight {
  RAREScreenUtils_lineHeightFont_ = nil;
  RAREScreenUtils_lineHeight__ = [RAREScreenUtils lineHeightWithRAREiPlatformComponent:nil];
  RAREScreenUtils_lineHeightFont_ = [RAREFontUtils getDefaultFont];
  return RAREScreenUtils_lineHeight__;
}

+ (RAREUIScreen_ScreenSizeEnum *)calculateScreenSizeWithInt:(int)xsmall
                                                    withInt:(int)small
                                                    withInt:(int)medium {
  RAREUIDimension *d = [RAREScreenUtils getSize];
  float m = [JavaLangMath maxWithFloat:((RAREUIDimension *) nil_chk(d))->width_ withFloat:d->height_] * RAREScreenUtils_fontFactor_;
  RAREUIScreen_ScreenSizeEnum *size = nil;
  NSString *s = [JavaLangSystem getPropertyWithNSString:@"Rare.screenSize"];
  if ((s != nil) && [RAREPlatform isDebugEnabled]) {
    @try {
      size = [RAREUIScreen_ScreenSizeEnum valueOfWithNSString:s];
    }
    @catch (JavaLangException *ignore) {
    }
  }
  RAREScreenUtils_smallSize_ = small;
  RAREScreenUtils_mediumSize_ = medium;
  RAREScreenUtils_xsmallSize_ = xsmall;
  RAREScreenUtils_sizeValuesSet_ = YES;
  if (size == nil) {
    if (m <= xsmall) {
      size = [RAREUIScreen_ScreenSizeEnum xsmall];
    }
    else if (m <= small) {
      size = [RAREUIScreen_ScreenSizeEnum small];
    }
    else {
      if ((medium < small) || (m > medium)) {
        size = [RAREUIScreen_ScreenSizeEnum large];
      }
      else {
        size = [RAREUIScreen_ScreenSizeEnum medium];
      }
    }
  }
  return size;
}

+ (void)centerOnScreenAndSizeWithRAREiWindow:(id<RAREiWindow>)win
                                   withFloat:(float)x
                                   withFloat:(float)y
                                   withFloat:(float)w
                                   withFloat:(float)h {
  int screen = [RAREScreenUtils getScreenWithRAREiPlatformComponent:[((id<RAREiWindow>) nil_chk(win)) getComponent]];
  if (screen < 0) {
    screen = 0;
  }
  RAREUIRectangle *screenSize = [RAREScreenUtils getUsableScreenBoundsWithInt:screen];
  if ((h == -1) || (w == -1)) {
    [win pack];
    RAREUIDimension *d = [((id<RAREiPlatformComponent>) nil_chk([win getComponent])) getPreferredSize];
    if (h == -1) {
      h = ((RAREUIDimension *) nil_chk(d))->height_;
    }
    if (w == -1) {
      w = ((RAREUIDimension *) nil_chk(d))->width_;
    }
  }
  if (w < 50) {
    w = (w < -1) ? ((RAREUIRectangle *) nil_chk(screenSize))->width_ + w : 50;
  }
  else if (w + 10 > (((RAREUIRectangle *) nil_chk(screenSize))->width_)) {
    w = screenSize->width_ - 10;
  }
  if (h < 50) {
    h = (h < -1) ? ((RAREUIRectangle *) nil_chk(screenSize))->height_ + h : 50;
  }
  else if (h + 10 > (((RAREUIRectangle *) nil_chk(screenSize))->height_)) {
    h = screenSize->height_ - 20;
  }
  if (x < 0) {
    x = (((RAREUIRectangle *) nil_chk(screenSize))->width_ - w) / 2 + screenSize->x_;
  }
  if (y < 0) {
    y = (((RAREUIRectangle *) nil_chk(screenSize))->height_ - h) / 2 + screenSize->y_;
  }
  if (y < ((RAREUIRectangle *) nil_chk(screenSize))->y_) {
    y = screenSize->y_;
  }
  if (x < screenSize->x_) {
    x = screenSize->x_;
  }
  [win setBoundsWithFloat:x withFloat:y withFloat:w withFloat:h];
}

+ (void)centerOnScreenWithRAREiWindow:(id<RAREiWindow>)win {
  int screen = [RAREScreenUtils getScreenWithRAREiPlatformComponent:[((id<RAREiWindow>) nil_chk(win)) getComponent]];
  if (screen < 0) {
    screen = 0;
  }
  RAREUIRectangle *screenSize = [RAREScreenUtils getUsableScreenBoundsWithInt:screen];
  float w = [win getWidth];
  float h = [win getHeight];
  if (w < 50) {
    w = (w < -1) ? ((RAREUIRectangle *) nil_chk(screenSize))->width_ + w : 50;
  }
  else if (w + 10 > (((RAREUIRectangle *) nil_chk(screenSize))->width_)) {
    w = screenSize->width_ - 10;
  }
  if (h < 50) {
    h = (h < -1) ? ((RAREUIRectangle *) nil_chk(screenSize))->height_ + h : 50;
  }
  else if (h + 10 > (((RAREUIRectangle *) nil_chk(screenSize))->height_)) {
    h = screenSize->height_ - 20;
  }
  float x = (((RAREUIRectangle *) nil_chk(screenSize))->width_ - w) / 2 + screenSize->x_;
  float y = (screenSize->height_ - h) / 2 + screenSize->y_;
  if (y < screenSize->y_) {
    y = screenSize->y_;
  }
  if (x < screenSize->x_) {
    x = screenSize->x_;
  }
  [win setBoundsWithFloat:x withFloat:y withFloat:w withFloat:h];
}

+ (void)centerOnWindowWithRAREiWindow:(id<RAREiWindow>)win
                      withRAREiWindow:(id<RAREiWindow>)parent {
  RAREUIRectangle *bounds = [((id<RAREiWindow>) nil_chk(parent)) getBounds];
  float w = [((id<RAREiWindow>) nil_chk(win)) getWidth];
  float h = [win getHeight];
  int screen = [RAREScreenUtils getScreenWithRAREiPlatformComponent:[win getComponent]];
  if (screen < 0) {
    screen = 0;
  }
  RAREUIRectangle *screenSize = [RAREScreenUtils getUsableScreenBoundsWithInt:screen];
  if (w < 50) {
    w = (w < -1) ? ((RAREUIRectangle *) nil_chk(screenSize))->width_ + w : 50;
  }
  else if (w + 10 > (((RAREUIRectangle *) nil_chk(screenSize))->width_)) {
    w = screenSize->width_ - 10;
  }
  if (h < 50) {
    h = (h < -1) ? ((RAREUIRectangle *) nil_chk(screenSize))->height_ + h : 50;
  }
  else if (h + 10 > (((RAREUIRectangle *) nil_chk(screenSize))->height_)) {
    h = screenSize->height_ - 20;
  }
  float x = ([RAREUIScreen snapToSizeWithFloat:((RAREUIRectangle *) nil_chk(bounds))->width_] - w) / 2 + [RAREUIScreen snapToPositionWithFloat:bounds->x_];
  float y = ([RAREUIScreen snapToSizeWithFloat:bounds->height_] - h) / 2 + [RAREUIScreen snapToPositionWithFloat:bounds->y_];
  if (y < ((RAREUIRectangle *) nil_chk(screenSize))->y_) {
    y = screenSize->y_;
  }
  if (x < screenSize->x_) {
    x = screenSize->x_;
  }
  [win setBoundsWithFloat:x withFloat:y withFloat:w withFloat:h];
}

+ (int)platformPixelsWithFloat:(float)pixels {
  return (int) [JavaLangMath ceilWithDouble:RAREScreenUtils_pixelMultiplier_ * pixels];
}

+ (float)platformPixelsfWithFloat:(float)pixels {
  return RAREScreenUtils_pixelMultiplier_ * pixels;
}

+ (float)fromPlatformPixelsWithFloat:(float)size
        withRAREScreenUtils_UnitEnum:(RAREScreenUtils_UnitEnum *)unit {
  return [RAREScreenUtils fromPlatformPixelsWithFloat:size withRAREScreenUtils_UnitEnum:unit withBoolean:YES];
}

+ (float)fromPlatformPixelsWithFloat:(float)size
        withRAREScreenUtils_UnitEnum:(RAREScreenUtils_UnitEnum *)unit
                         withBoolean:(BOOL)width {
  if ((unit == nil) || (unit == [RAREScreenUtils_UnitEnum RARE_PIXELS])) {
    return size / RAREScreenUtils_pixelMultiplier_;
  }
  if (unit == [RAREScreenUtils_UnitEnum PIXELS]) {
    return size;
  }
  size /= 72;
  size *= RAREScreenUtils_pixelMultiplier_;
  switch ([unit ordinal]) {
    case RAREScreenUtils_Unit_CENTIMETER:
    size /= 2.54;
    break;
    case RAREScreenUtils_Unit_MILLIMETER:
    size /= 2.54;
    size /= 10;
    break;
    case RAREScreenUtils_Unit_INCH:
    break;
    case RAREScreenUtils_Unit_POINT:
    size *= 72;
    break;
    case RAREScreenUtils_Unit_PICA:
    size *= 6;
    break;
    case RAREScreenUtils_Unit_DIALOG:
    size *= RAREScreenUtils_pixelMultiplier_;
    break;
    default:
    break;
  }
  return size;
}

+ (void)initilizeWithFloat:(float)sdensity
                 withFloat:(float)pmultiplier
                 withFloat:(float)dpi
                 withFloat:(float)xdpi
                 withFloat:(float)ydpi
                 withFloat:(float)fontfactor {
  RAREScreenUtils_xScreenDpi_ = xdpi;
  RAREScreenUtils_yScreenDpi_ = ydpi;
  RAREScreenUtils_pixelMultiplier_ = pmultiplier;
  RAREScreenUtils_density_ = sdensity;
  RAREScreenUtils_lineHeightFont_ = nil;
  RAREScreenUtils_lineHeight__ = -1;
  RAREScreenUtils_fontFactor_ = fontfactor;
  RAREScreenUtils_screenDpi96Factor_ = 96.0f / dpi;
  [RAREScreenUtils calculateScreenSize];
  RAREScreenUtils_PLATFORM_PIXELS_1_ = (int) [JavaLangMath ceilWithDouble:RAREScreenUtils_pixelMultiplier_ * 1];
  RAREScreenUtils_PLATFORM_PIXELS_2_ = (int) [JavaLangMath ceilWithDouble:RAREScreenUtils_pixelMultiplier_ * 2];
  RAREScreenUtils_PLATFORM_PIXELS_3_ = (int) [JavaLangMath ceilWithDouble:RAREScreenUtils_pixelMultiplier_ * 3];
  RAREScreenUtils_PLATFORM_PIXELS_4_ = (int) [JavaLangMath ceilWithDouble:RAREScreenUtils_pixelMultiplier_ * 4];
  RAREScreenUtils_PLATFORM_PIXELS_5_ = (int) [JavaLangMath ceilWithDouble:RAREScreenUtils_pixelMultiplier_ * 5];
  RAREScreenUtils_PLATFORM_PIXELS_6_ = (int) [JavaLangMath ceilWithDouble:RAREScreenUtils_pixelMultiplier_ * 6];
  RAREScreenUtils_PLATFORM_PIXELS_7_ = (int) [JavaLangMath ceilWithDouble:RAREScreenUtils_pixelMultiplier_ * 7];
  RAREScreenUtils_PLATFORM_PIXELS_8_ = (int) [JavaLangMath ceilWithDouble:RAREScreenUtils_pixelMultiplier_ * 8];
  RAREScreenUtils_PLATFORM_PIXELS_9_ = (int) [JavaLangMath ceilWithDouble:RAREScreenUtils_pixelMultiplier_ * 9];
  RAREScreenUtils_PLATFORM_PIXELS_10_ = (int) [JavaLangMath ceilWithDouble:RAREScreenUtils_pixelMultiplier_ * 10];
  RAREScreenUtils_PLATFORM_PIXELS_16_ = (int) [JavaLangMath ceilWithDouble:RAREScreenUtils_pixelMultiplier_ * 16];
  (*[RAREUIScreen PLATFORM_PIXELS_1Ref]) = RAREScreenUtils_PLATFORM_PIXELS_1_;
  (*[RAREUIScreen PLATFORM_PIXELS_2Ref]) = RAREScreenUtils_PLATFORM_PIXELS_2_;
  (*[RAREUIScreen PLATFORM_PIXELS_3Ref]) = RAREScreenUtils_PLATFORM_PIXELS_3_;
  (*[RAREUIScreen PLATFORM_PIXELS_4Ref]) = RAREScreenUtils_PLATFORM_PIXELS_4_;
  (*[RAREUIScreen PLATFORM_PIXELS_5Ref]) = RAREScreenUtils_PLATFORM_PIXELS_5_;
  (*[RAREUIScreen PLATFORM_PIXELS_6Ref]) = RAREScreenUtils_PLATFORM_PIXELS_6_;
  (*[RAREUIScreen PLATFORM_PIXELS_7Ref]) = RAREScreenUtils_PLATFORM_PIXELS_7_;
  (*[RAREUIScreen PLATFORM_PIXELS_8Ref]) = RAREScreenUtils_PLATFORM_PIXELS_8_;
  (*[RAREUIScreen PLATFORM_PIXELS_9Ref]) = RAREScreenUtils_PLATFORM_PIXELS_9_;
  (*[RAREUIScreen PLATFORM_PIXELS_10Ref]) = RAREScreenUtils_PLATFORM_PIXELS_10_;
  (*[RAREUIScreen PLATFORM_PIXELS_16Ref]) = RAREScreenUtils_PLATFORM_PIXELS_16_;
  [RAREJGConstantSize setPixelMultiplierWithFloat:pmultiplier];
}

+ (int)lineHeightWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  RAREUIFont *f = (c == nil) ? nil : [c getFont];
  if (f == nil) {
    f = [RAREFontUtils getDefaultFont];
  }
  if ((f == RAREScreenUtils_lineHeightFont_) && (RAREScreenUtils_lineHeight__ > 0)) {
    return RAREScreenUtils_lineHeight__;
  }
  float h = [RAREPlatformHelper getFontHeightWithRAREUIFont:f withBoolean:YES];
  return (int) [JavaLangMath ceilWithDouble:h + (.25 * RAREScreenUtils_pixelMultiplier_)];
}

+ (int)lineHeightExWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  RAREUIFont *f = (c == nil) ? nil : [c getFont];
  if (f == nil) {
    f = [RAREFontUtils getDefaultFont];
  }
  return (int) [RAREPlatformHelper getFontHeightWithRAREUIFont:f withBoolean:YES];
}

+ (float)lineHeightExWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                 withRAREUIFont:(RAREUIFont *)f {
  return (int) [RAREPlatformHelper getFontHeightWithRAREUIFont:f withBoolean:NO];
}

+ (int)toPlatformPixelHeightWithNSString:(NSString *)value
              withRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                               withFloat:(float)heightForPercent {
  if ((value == nil) || ([value isEqual:@"-1"])) {
    return -1;
  }
  float h = [RAREUTSNumber floatValueWithNSString:value];
  RAREScreenUtils_UnitEnum *unit = [RAREScreenUtils getUnitWithNSString:value];
  return [RAREScreenUtils toPlatformPixelHeightWithFloat:h withRAREScreenUtils_UnitEnum:unit withRAREiPlatformComponent:c withFloat:heightForPercent withBoolean:NO];
}

+ (int)toPlatformPixelHeightWithNSString:(NSString *)value
              withRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                               withFloat:(float)heightForPercent
                             withBoolean:(BOOL)charAdjust {
  if ((value == nil) || ([value isEqual:@"-1"])) {
    return -1;
  }
  float h = [RAREUTSNumber floatValueWithNSString:value];
  RAREScreenUtils_UnitEnum *unit = [RAREScreenUtils getUnitWithNSString:value];
  return [RAREScreenUtils toPlatformPixelHeightWithFloat:h withRAREScreenUtils_UnitEnum:unit withRAREiPlatformComponent:c withFloat:heightForPercent withBoolean:charAdjust];
}

+ (int)toPlatformPixelHeightWithFloat:(float)h
         withRAREScreenUtils_UnitEnum:(RAREScreenUtils_UnitEnum *)unit
           withRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                            withFloat:(float)heightForPercent
                          withBoolean:(BOOL)charAdjust {
  if ((unit == nil) || (unit == [RAREScreenUtils_UnitEnum RARE_PIXELS])) {
    return (int) [JavaLangMath ceilWithDouble:h * RAREScreenUtils_pixelMultiplier_];
  }
  if (unit == [RAREScreenUtils_UnitEnum PIXELS]) {
    return (int) [JavaLangMath ceilWithDouble:h];
  }
  BOOL neg = h < 0;
  if (neg) {
    h *= -1;
  }
  switch ([unit ordinal]) {
    case RAREScreenUtils_Unit_PERCENT:
    if (heightForPercent == -1) {
      heightForPercent = [((id<RAREiWindow>) nil_chk([((id<RAREiPlatformWindowManager>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getWindowManager])) getMainWindow])) getHeight];
    }
    if (heightForPercent > 0) {
      h = heightForPercent * (h / 100);
    }
    break;
    case RAREScreenUtils_Unit_LINES:
    h *= [RAREScreenUtils lineHeightWithRAREiPlatformComponent:c];
    if (charAdjust) {
      h += [RAREScreenUtils getCharWidthPadding];
    }
    break;
    case RAREScreenUtils_Unit_CHARACTERS:
    {
      RAREUIFont *f = (c == nil) ? nil : [c getFont];
      if (f == nil) {
        f = [RAREFontUtils getDefaultFont];
      }
      h *= [RAREFontUtils getCharacterWidthWithRAREUIFont:f];
      if (charAdjust) {
        h += [RAREScreenUtils getCharWidthPadding];
      }
      break;
    }
    case RAREScreenUtils_Unit_DIALOG:
    h = [RAREJGSizes dialogUnitYAsPixelWithInt:(int) h withRAREiPlatformComponent:c];
    break;
    default:
    h = [RAREScreenUtils toPlatformPixelsWithFloat:h withRAREScreenUtils_UnitEnum:unit withBoolean:NO];
    break;
  }
  if (neg) {
    h *= -1;
  }
  else {
    h += (.25 * RAREScreenUtils_pixelMultiplier_);
  }
  return [RAREUIScreen snapToSizeWithFloat:h];
}

+ (int)toPlatformPixelWidthWithNSString:(NSString *)value
             withRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                              withFloat:(float)widthForPercent {
  if (value == nil) {
    return -1;
  }
  if ((value == nil) || ([value isEqual:@"-1"])) {
    return -1;
  }
  float w = [RAREUTSNumber floatValueWithNSString:value];
  RAREScreenUtils_UnitEnum *unit = [RAREScreenUtils getUnitWithNSString:value];
  return [RAREScreenUtils toPlatformPixelWidthWithFloat:w withRAREScreenUtils_UnitEnum:unit withRAREiPlatformComponent:c withFloat:widthForPercent withBoolean:NO];
}

+ (int)toPlatformPixelWidthWithNSString:(NSString *)value
             withRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                              withFloat:(float)widthForPercent
                            withBoolean:(BOOL)charAdjust {
  if ((value == nil) || ([value isEqual:@"-1"])) {
    return -1;
  }
  float w = [RAREUTSNumber floatValueWithNSString:value];
  RAREScreenUtils_UnitEnum *unit = [RAREScreenUtils getUnitWithNSString:value];
  return [RAREScreenUtils toPlatformPixelWidthWithFloat:w withRAREScreenUtils_UnitEnum:unit withRAREiPlatformComponent:c withFloat:widthForPercent withBoolean:charAdjust];
}

+ (int)toPlatformPixelWidthWithFloat:(float)w
        withRAREScreenUtils_UnitEnum:(RAREScreenUtils_UnitEnum *)unit
          withRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                           withFloat:(float)widthForPercent
                         withBoolean:(BOOL)charAdjust {
  if ((unit == nil) || (unit == [RAREScreenUtils_UnitEnum RARE_PIXELS])) {
    return (int) [JavaLangMath ceilWithDouble:w * RAREScreenUtils_pixelMultiplier_];
  }
  if (unit == [RAREScreenUtils_UnitEnum PIXELS]) {
    return (int) [JavaLangMath ceilWithDouble:w];
  }
  BOOL neg = w < 0;
  if (neg) {
    w *= -1;
  }
  switch ([unit ordinal]) {
    case RAREScreenUtils_Unit_PERCENT:
    if (widthForPercent == -1) {
      widthForPercent = [((id<RAREiWindow>) nil_chk([((id<RAREiPlatformWindowManager>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getWindowManager])) getMainWindow])) getHeight];
    }
    if (widthForPercent > 0) {
      w = widthForPercent * (w / 100);
    }
    break;
    case RAREScreenUtils_Unit_LINES:
    w *= [RAREScreenUtils lineHeightWithRAREiPlatformComponent:c];
    if (charAdjust) {
      w += [RAREScreenUtils getCharWidthPadding];
    }
    break;
    case RAREScreenUtils_Unit_CHARACTERS:
    {
      RAREUIFont *f = (c == nil) ? nil : [c getFont];
      if (f == nil) {
        f = [RAREFontUtils getDefaultFont];
      }
      w *= [RAREFontUtils getCharacterWidthWithRAREUIFont:f];
      if (charAdjust) {
        w += [RAREScreenUtils getCharWidthPadding];
      }
      break;
    }
    case RAREScreenUtils_Unit_DIALOG:
    w = [RAREJGSizes dialogUnitXAsPixelWithInt:(int) w withRAREiPlatformComponent:c];
    break;
    default:
    w = [RAREScreenUtils toPlatformPixelsWithFloat:w withRAREScreenUtils_UnitEnum:unit withBoolean:YES];
    break;
  }
  if (neg) {
    w *= -1;
  }
  else {
    w += .25;
  }
  return [RAREUIScreen snapToSizeWithFloat:w];
}

+ (int)toPlatformPixelsWithFloat:(float)characters
      withRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                     withBoolean:(BOOL)charAdjust {
  return [RAREScreenUtils toPlatformPixelWidthWithFloat:characters withRAREScreenUtils_UnitEnum:[RAREScreenUtils_UnitEnum CHARACTERS] withRAREiPlatformComponent:c withFloat:(c == nil) ? 100 : [c getWidth] withBoolean:charAdjust];
}

+ (int)toPlatformPixelsWithFloat:(float)size
    withRAREScreenUtils_UnitEnum:(RAREScreenUtils_UnitEnum *)unit
                     withBoolean:(BOOL)width {
  if ((unit == nil) || (unit == [RAREScreenUtils_UnitEnum RARE_PIXELS])) {
    return (int) [JavaLangMath ceilWithDouble:size * RAREScreenUtils_pixelMultiplier_];
  }
  if (unit == [RAREScreenUtils_UnitEnum PIXELS]) {
    return (int) [JavaLangMath ceilWithDouble:size];
  }
  size *= RAREScreenUtils_pixelMultiplier_;
  size *= 72;
  switch ([unit ordinal]) {
    case RAREScreenUtils_Unit_CENTIMETER:
    size /= 2.54;
    break;
    case RAREScreenUtils_Unit_MILLIMETER:
    size /= 20.54;
    break;
    case RAREScreenUtils_Unit_INCH:
    break;
    case RAREScreenUtils_Unit_POINT:
    size /= 72;
    break;
    case RAREScreenUtils_Unit_PICA:
    size /= 6;
    break;
    case RAREScreenUtils_Unit_CHARACTERS:
    size /= 72;
    size *= 9;
    break;
    default:
    size /= 72;
    break;
  }
  return (int) [JavaLangMath ceilWithDouble:size];
}

+ (void)updateFontFactorWithFloat:(float)value {
  RAREScreenUtils_fontFactor_ = value;
  if (!RAREScreenUtils_screenSizeSet_) {
    [RAREScreenUtils calculateScreenSize];
  }
}

+ (void)setOrientationWithId:(id)orientation {
  [RAREPlatformHelper setScreenOrientationWithId:orientation];
}

+ (void)setScreenSizeWithRAREUIScreen_ScreenSizeEnum:(RAREUIScreen_ScreenSizeEnum *)size {
  RAREScreenUtils_screenSize_ = size;
  RAREScreenUtils_screenSizeName_ = [((RAREUIScreen_ScreenSizeEnum *) nil_chk(RAREScreenUtils_screenSize_)) name];
  RAREScreenUtils_screenSizeSet_ = YES;
}

+ (RAREUIRectangle *)getBounds {
  return [RAREPlatformHelper getScreenBounds];
}

+ (RAREUIRectangle *)getBoundsWithInt:(int)screen {
  return [RAREPlatformHelper getScreenBoundsWithInt:screen];
}

+ (float)getCharWidthPadding {
  return RAREScreenUtils_PLATFORM_PIXELS_6_;
}

+ (float)getCssPixelSizeWithFloat:(float)pxsize {
  return pxsize * ([RAREFontUtils getDefaultFontSize] / [((RAREUIFont *) nil_chk([RAREFontUtils getSystemFont])) getSize]);
}

+ (float)getDefaultIconDensity {
  if (RAREScreenUtils_iconDensity_ == 0) {
    NSString *s = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getStringWithNSString:@"Rare.net.defaultIconDensity"];
    do {
      if (s == nil) {
        break;
      }
      RAREScreenUtils_iconDensity_ = [RAREUTSNumber floatValueWithNSString:s];
      if (RAREScreenUtils_iconDensity_ > 0) {
        break;
      }
      if ([@"xhdpi" isEqual:s]) {
        RAREScreenUtils_iconDensity_ = 2;
        break;
      }
      if ([@"hdpi" isEqual:s]) {
        RAREScreenUtils_iconDensity_ = 1.5f;
        break;
      }
    }
    while (NO);
    if (RAREScreenUtils_iconDensity_ < 1) {
      RAREScreenUtils_iconDensity_ = RAREScreenUtils_density_;
    }
  }
  return RAREScreenUtils_iconDensity_;
}

+ (float)getDensity {
  return RAREScreenUtils_density_;
}

+ (NSString *)getDensityName {
  return [RAREPlatformHelper getScreenDensityName];
}

+ (int)getHeight {
  return [RAREPlatformHelper getScreenHeight];
}

+ (id)getOrientation {
  return [RAREPlatformHelper getScreenOrientation];
}

+ (float)getPixelMultiplier {
  return RAREScreenUtils_pixelMultiplier_;
}

+ (RAREUIFont *)getPrinterFontWithRAREUIFont:(RAREUIFont *)f {
  return [f deriveFontSizeWithFloat:[RAREScreenUtils getPrinterScaleFactor] * [((RAREUIFont *) nil_chk(f)) getSize]];
}

+ (float)getPrinterScaleFactor {
  return 72 / RAREScreenUtils_xScreenDpi_;
}

+ (RAREUIScreen_ScreenSizeEnum *)getRelativeScreenSize {
  return RAREScreenUtils_screenSize_;
}

+ (NSString *)getRelativeScreenSizeName {
  return RAREScreenUtils_screenSizeName_;
}

+ (int)getRotation {
  return [RAREPlatformHelper getScreenRotation];
}

+ (int)getRotationWithId:(id)orientation {
  return [RAREPlatformHelper getScreenRotationWithId:orientation];
}

+ (int)getRotationForConfigurationWithId:(id)configuration {
  if (configuration == nil) {
    return [RAREPlatformHelper getScreenRotation];
  }
  return [RAREPlatformHelper getScreenRotationWithId:configuration];
}

+ (int)getScreenWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  return [RAREPlatformHelper getScreenWithRAREiPlatformComponent:c];
}

+ (int)getScreenCount {
  return [RAREPlatformHelper getScreenCount];
}

+ (float)getScreenDPI {
  return RAREScreenUtils_xScreenDpi_;
}

+ (float)getScreenFontSizeWithFloat:(float)javasize {
  return ((javasize) * (RAREScreenUtils_xScreenDpi_ / 72));
}

+ (int)getScreenHeightWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  return [RAREPlatformHelper getScreenHeightWithInt:[RAREScreenUtils getScreenWithRAREiPlatformComponent:c]];
}

+ (RAREUIDimension *)getScreenSize {
  return [RAREPlatformHelper getScreenSize];
}

+ (RAREUIDimension *)getScreenSizeWithInt:(int)screen {
  return [RAREPlatformHelper getScreenSizeWithInt:screen];
}

+ (RAREUIDimension *)getScreenSizeWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  return [RAREPlatformHelper getScreenSizeWithInt:[RAREScreenUtils getScreenWithRAREiPlatformComponent:c]];
}

+ (int)getScreenWidthWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  return [RAREPlatformHelper getScreenWidthWithInt:[RAREScreenUtils getScreenWithRAREiPlatformComponent:c]];
}

+ (RAREUIDimension *)getSize {
  return [RAREScreenUtils getScreenSize];
}

+ (RAREUIDimension *)getSizeWithNSString:(NSString *)width
                            withNSString:(NSString *)height
              withRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp {
  return [[RAREUIDimension alloc] initWithFloat:[RAREScreenUtils toPlatformPixelWidthWithNSString:width withRAREiPlatformComponent:comp withFloat:-1] withFloat:[RAREScreenUtils toPlatformPixelHeightWithNSString:width withRAREiPlatformComponent:comp withFloat:-1]];
}

+ (RAREUIDimension *)getSizeForConfigurationWithId:(id)configuration {
  if (configuration == nil) {
    return [RAREPlatformHelper getScreenSize];
  }
  return [RAREPlatformHelper getScreenSizeForConfigurationWithId:configuration];
}

+ (RAREScreenUtils_UnitEnum *)getUnitWithNSString:(NSString *)s {
  int len = (s == nil) ? 0 : [s sequenceLength];
  return [RAREScreenUtils getUnitWithNSString:s withInt:len];
}

+ (RAREScreenUtils_UnitEnum *)getUnitWithNSString:(NSString *)s
                                          withInt:(int)len {
  RAREScreenUtils_UnitEnum *unit = [RAREScreenUtils_UnitEnum RARE_PIXELS];
  do {
    if (len == 0) {
      break;
    }
    unichar lc = [((NSString *) nil_chk(s)) charAtWithInt:len - 1];
    if (lc == '%') {
      unit = [RAREScreenUtils_UnitEnum PERCENT];
      break;
    }
    if (len == 1) {
      break;
    }
    switch ([s charAtWithInt:len - 2]) {
      case 'c':
      if (lc == 'h') {
        unit = [RAREScreenUtils_UnitEnum CHARACTERS];
      }
      else if (lc == 'm') {
        unit = [RAREScreenUtils_UnitEnum CENTIMETER];
      }
      break;
      case 'i':
      if (lc == 'n') {
        unit = [RAREScreenUtils_UnitEnum INCH];
      }
      break;
      case 'p':
      if (lc == 'x') {
        if ((len > 2) && ([s charAtWithInt:len - 3] == 'd')) {
          unit = [RAREScreenUtils_UnitEnum RARE_PIXELS];
        }
        else {
          unit = [RAREScreenUtils_UnitEnum PIXELS];
        }
      }
      else if (lc == 't') {
        unit = [RAREScreenUtils_UnitEnum POINT];
      }
      else if (lc == 'c') {
        unit = [RAREScreenUtils_UnitEnum PICA];
      }
      break;
      case 'l':
      if (lc == 'n') {
        unit = [RAREScreenUtils_UnitEnum LINES];
      }
      else if ((lc == 'u') && (len > 2) && ([s charAtWithInt:len - 3] == 'd')) {
        unit = [RAREScreenUtils_UnitEnum DIALOG];
      }
      break;
      default:
      break;
    }
  }
  while (NO);
  return unit;
}

+ (RAREScreenUtils_UnitEnum *)getUnitWithNSString:(NSString *)s
                     withRAREScreenUtils_UnitEnum:(RAREScreenUtils_UnitEnum *)def {
  int len = (s == nil) ? 0 : [s sequenceLength];
  RAREScreenUtils_UnitEnum *u = [RAREScreenUtils getUnitWithNSString:s withInt:len];
  return (u == nil) ? def : u;
}

+ (RAREUIDimension *)getUsableScreenSize {
  return [((RAREUIRectangle *) nil_chk([RAREPlatformHelper getUsableScreenBounds])) getSize];
}

+ (RAREUIDimension *)getUsableScreenSizeWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  return [((RAREUIRectangle *) nil_chk([RAREPlatformHelper getUsableScreenBoundsWithRAREiPlatformComponent:c])) getSize];
}

+ (RAREUIRectangle *)getUsableScreenBoundsWithInt:(int)screen {
  return [RAREPlatformHelper getUsableScreenBoundsWithInt:screen];
}

+ (RAREUIRectangle *)getUsableScreenBoundsWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  return [RAREPlatformHelper getUsableScreenBoundsWithRAREiPlatformComponent:c];
}

+ (int)getWidth {
  return [RAREPlatformHelper getScreenWidth];
}

+ (BOOL)isExtraSmallScreen {
  return RAREScreenUtils_screenSize_ == [RAREUIScreen_ScreenSizeEnum xsmall];
}

+ (BOOL)isHighDensity {
  return [RAREPlatformHelper isHighDensity];
}

+ (BOOL)isLandscapeOrientationWithId:(id)orientation {
  return [RAREPlatformHelper isLandscapeOrientationWithId:orientation];
}

+ (BOOL)isLargeScreen {
  return RAREScreenUtils_screenSize_ == [RAREUIScreen_ScreenSizeEnum large];
}

+ (BOOL)isLowDensity {
  return [RAREPlatformHelper isLowDensity];
}

+ (BOOL)isMediumDensity {
  return [RAREPlatformHelper isMediumDensity];
}

+ (BOOL)isMediumScreen {
  return RAREScreenUtils_screenSize_ == [RAREUIScreen_ScreenSizeEnum medium];
}

+ (BOOL)isSmallScreen {
  return RAREScreenUtils_screenSize_ == [RAREUIScreen_ScreenSizeEnum small];
}

+ (BOOL)isWider {
  return [RAREPlatformHelper getScreenWidth] > [RAREPlatformHelper getScreenHeight];
}

+ (BOOL)isWiderForConfigurationWithId:(id)configuration {
  if (configuration == nil) {
    return [RAREScreenUtils isWider];
  }
  return [RAREPlatformHelper isLandscapeOrientationWithId:configuration];
}

+ (void)calculateScreenSize {
  if (RAREScreenUtils_sizeValuesSet_) {
    (void) [RAREScreenUtils calculateScreenSizeWithInt:RAREScreenUtils_xsmallSize_ withInt:RAREScreenUtils_smallSize_ withInt:RAREScreenUtils_mediumSize_];
  }
  else {
    NSString *s = [JavaLangSystem getPropertyWithNSString:@"Rare.screenSize"];
    RAREScreenUtils_screenSize_ = nil;
    if (s != nil) {
      @try {
        RAREScreenUtils_screenSize_ = [RAREUIScreen_ScreenSizeEnum valueOfWithNSString:s];
      }
      @catch (JavaLangException *ignore) {
      }
    }
    if (RAREScreenUtils_screenSize_ == nil) {
      RAREUIDimension *d = [RAREScreenUtils getSize];
      float m = [JavaLangMath maxWithFloat:((RAREUIDimension *) nil_chk(d))->width_ withFloat:d->height_] * RAREScreenUtils_fontFactor_;
      if (m < 968) {
        RAREScreenUtils_screenSize_ = [RAREUIScreen_ScreenSizeEnum small];
      }
      else {
        RAREScreenUtils_screenSize_ = [RAREUIScreen_ScreenSizeEnum large];
      }
    }
    RAREScreenUtils_screenSizeName_ = [((RAREUIScreen_ScreenSizeEnum *) nil_chk(RAREScreenUtils_screenSize_)) name];
  }
}

+ (void)initialize {
  if (self == [RAREScreenUtils class]) {
    RAREScreenUtils_screenSize_ = [RAREUIScreen_ScreenSizeEnum small];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x2, NULL },
    { "adjustForLineHeightWithRAREiPlatformComponent:withRAREUIDimension:", NULL, "LRAREUIDimension", 0x9, NULL },
    { "adjustForLineHeightExWithRAREiPlatformComponent:withRAREUIDimension:", NULL, "LRAREUIDimension", 0x9, NULL },
    { "calculateScreenSizeWithInt:withInt:withInt:", NULL, "LRAREUIScreen_ScreenSizeEnum", 0x9, NULL },
    { "getBounds", NULL, "LRAREUIRectangle", 0x9, NULL },
    { "getBoundsWithInt:", NULL, "LRAREUIRectangle", 0x9, NULL },
    { "getDensityName", NULL, "LNSString", 0x9, NULL },
    { "getOrientation", NULL, "LNSObject", 0x9, NULL },
    { "getPrinterFontWithRAREUIFont:", NULL, "LRAREUIFont", 0x9, NULL },
    { "getRelativeScreenSize", NULL, "LRAREUIScreen_ScreenSizeEnum", 0x9, NULL },
    { "getRelativeScreenSizeName", NULL, "LNSString", 0x9, NULL },
    { "getScreenSize", NULL, "LRAREUIDimension", 0x9, NULL },
    { "getScreenSizeWithInt:", NULL, "LRAREUIDimension", 0x9, NULL },
    { "getScreenSizeWithRAREiPlatformComponent:", NULL, "LRAREUIDimension", 0x9, NULL },
    { "getSize", NULL, "LRAREUIDimension", 0x9, NULL },
    { "getSizeWithNSString:withNSString:withRAREiPlatformComponent:", NULL, "LRAREUIDimension", 0x9, NULL },
    { "getSizeForConfigurationWithId:", NULL, "LRAREUIDimension", 0x9, NULL },
    { "getUnitWithNSString:", NULL, "LRAREScreenUtils_UnitEnum", 0x9, NULL },
    { "getUnitWithNSString:withInt:", NULL, "LRAREScreenUtils_UnitEnum", 0x9, NULL },
    { "getUnitWithNSString:withRAREScreenUtils_UnitEnum:", NULL, "LRAREScreenUtils_UnitEnum", 0x9, NULL },
    { "getUsableScreenSize", NULL, "LRAREUIDimension", 0x9, NULL },
    { "getUsableScreenSizeWithRAREiPlatformComponent:", NULL, "LRAREUIDimension", 0x9, NULL },
    { "getUsableScreenBoundsWithInt:", NULL, "LRAREUIRectangle", 0x9, NULL },
    { "getUsableScreenBoundsWithRAREiPlatformComponent:", NULL, "LRAREUIRectangle", 0x9, NULL },
    { "isExtraSmallScreen", NULL, "Z", 0x9, NULL },
    { "isHighDensity", NULL, "Z", 0x9, NULL },
    { "isLandscapeOrientationWithId:", NULL, "Z", 0x9, NULL },
    { "isLargeScreen", NULL, "Z", 0x9, NULL },
    { "isLowDensity", NULL, "Z", 0x9, NULL },
    { "isMediumDensity", NULL, "Z", 0x9, NULL },
    { "isMediumScreen", NULL, "Z", 0x9, NULL },
    { "isSmallScreen", NULL, "Z", 0x9, NULL },
    { "isWider", NULL, "Z", 0x9, NULL },
    { "isWiderForConfigurationWithId:", NULL, "Z", 0x9, NULL },
    { "calculateScreenSize", NULL, "V", 0xa, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "PLATFORM_PIXELS_1_", NULL, 0x9, "I" },
    { "PLATFORM_PIXELS_10_", NULL, 0x9, "I" },
    { "PLATFORM_PIXELS_16_", NULL, 0x9, "I" },
    { "PLATFORM_PIXELS_2_", NULL, 0x9, "I" },
    { "PLATFORM_PIXELS_3_", NULL, 0x9, "I" },
    { "PLATFORM_PIXELS_4_", NULL, 0x9, "I" },
    { "PLATFORM_PIXELS_5_", NULL, 0x9, "I" },
    { "PLATFORM_PIXELS_6_", NULL, 0x9, "I" },
    { "PLATFORM_PIXELS_7_", NULL, 0x9, "I" },
    { "PLATFORM_PIXELS_8_", NULL, 0x9, "I" },
    { "PLATFORM_PIXELS_9_", NULL, 0x9, "I" },
    { "screenDpi96Factor_", NULL, 0x9, "F" },
    { "xScreenDpi_", NULL, 0x9, "F" },
    { "yScreenDpi_", NULL, 0x9, "F" },
    { "density_", NULL, 0xa, "F" },
    { "fontFactor_", NULL, 0xa, "F" },
    { "lineHeight__", "lineHeight", 0xa, "I" },
    { "pixelMultiplier_", NULL, 0xa, "F" },
    { "screenSize_", NULL, 0x8, "LRAREUIScreen_ScreenSizeEnum" },
    { "iconDensity_", NULL, 0xa, "F" },
    { "lineHeightFont_", NULL, 0xa, "LRAREUIFont" },
    { "screenSizeName_", NULL, 0xa, "LNSString" },
    { "screenSizeSet_", NULL, 0xa, "Z" },
    { "sizeValuesSet_", NULL, 0xa, "Z" },
    { "xsmallSize_", NULL, 0xa, "I" },
    { "mediumSize_", NULL, 0xa, "I" },
    { "smallSize_", NULL, 0xa, "I" },
  };
  static J2ObjcClassInfo _RAREScreenUtils = { "ScreenUtils", "com.appnativa.rare.ui", NULL, 0x1, 35, methods, 27, fields, 0, NULL};
  return &_RAREScreenUtils;
}

@end

static RAREScreenUtils_UnitEnum *RAREScreenUtils_UnitEnum_PIXELS;
static RAREScreenUtils_UnitEnum *RAREScreenUtils_UnitEnum_CENTIMETER;
static RAREScreenUtils_UnitEnum *RAREScreenUtils_UnitEnum_MILLIMETER;
static RAREScreenUtils_UnitEnum *RAREScreenUtils_UnitEnum_INCH;
static RAREScreenUtils_UnitEnum *RAREScreenUtils_UnitEnum_PERCENT;
static RAREScreenUtils_UnitEnum *RAREScreenUtils_UnitEnum_CHARACTERS;
static RAREScreenUtils_UnitEnum *RAREScreenUtils_UnitEnum_POINT;
static RAREScreenUtils_UnitEnum *RAREScreenUtils_UnitEnum_PICA;
static RAREScreenUtils_UnitEnum *RAREScreenUtils_UnitEnum_LINES;
static RAREScreenUtils_UnitEnum *RAREScreenUtils_UnitEnum_DIALOG;
static RAREScreenUtils_UnitEnum *RAREScreenUtils_UnitEnum_RARE_PIXELS;
IOSObjectArray *RAREScreenUtils_UnitEnum_values;

@implementation RAREScreenUtils_UnitEnum

+ (RAREScreenUtils_UnitEnum *)PIXELS {
  return RAREScreenUtils_UnitEnum_PIXELS;
}
+ (RAREScreenUtils_UnitEnum *)CENTIMETER {
  return RAREScreenUtils_UnitEnum_CENTIMETER;
}
+ (RAREScreenUtils_UnitEnum *)MILLIMETER {
  return RAREScreenUtils_UnitEnum_MILLIMETER;
}
+ (RAREScreenUtils_UnitEnum *)INCH {
  return RAREScreenUtils_UnitEnum_INCH;
}
+ (RAREScreenUtils_UnitEnum *)PERCENT {
  return RAREScreenUtils_UnitEnum_PERCENT;
}
+ (RAREScreenUtils_UnitEnum *)CHARACTERS {
  return RAREScreenUtils_UnitEnum_CHARACTERS;
}
+ (RAREScreenUtils_UnitEnum *)POINT {
  return RAREScreenUtils_UnitEnum_POINT;
}
+ (RAREScreenUtils_UnitEnum *)PICA {
  return RAREScreenUtils_UnitEnum_PICA;
}
+ (RAREScreenUtils_UnitEnum *)LINES {
  return RAREScreenUtils_UnitEnum_LINES;
}
+ (RAREScreenUtils_UnitEnum *)DIALOG {
  return RAREScreenUtils_UnitEnum_DIALOG;
}
+ (RAREScreenUtils_UnitEnum *)RARE_PIXELS {
  return RAREScreenUtils_UnitEnum_RARE_PIXELS;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [RAREScreenUtils_UnitEnum class]) {
    RAREScreenUtils_UnitEnum_PIXELS = [[RAREScreenUtils_UnitEnum alloc] initWithNSString:@"PIXELS" withInt:0];
    RAREScreenUtils_UnitEnum_CENTIMETER = [[RAREScreenUtils_UnitEnum alloc] initWithNSString:@"CENTIMETER" withInt:1];
    RAREScreenUtils_UnitEnum_MILLIMETER = [[RAREScreenUtils_UnitEnum alloc] initWithNSString:@"MILLIMETER" withInt:2];
    RAREScreenUtils_UnitEnum_INCH = [[RAREScreenUtils_UnitEnum alloc] initWithNSString:@"INCH" withInt:3];
    RAREScreenUtils_UnitEnum_PERCENT = [[RAREScreenUtils_UnitEnum alloc] initWithNSString:@"PERCENT" withInt:4];
    RAREScreenUtils_UnitEnum_CHARACTERS = [[RAREScreenUtils_UnitEnum alloc] initWithNSString:@"CHARACTERS" withInt:5];
    RAREScreenUtils_UnitEnum_POINT = [[RAREScreenUtils_UnitEnum alloc] initWithNSString:@"POINT" withInt:6];
    RAREScreenUtils_UnitEnum_PICA = [[RAREScreenUtils_UnitEnum alloc] initWithNSString:@"PICA" withInt:7];
    RAREScreenUtils_UnitEnum_LINES = [[RAREScreenUtils_UnitEnum alloc] initWithNSString:@"LINES" withInt:8];
    RAREScreenUtils_UnitEnum_DIALOG = [[RAREScreenUtils_UnitEnum alloc] initWithNSString:@"DIALOG" withInt:9];
    RAREScreenUtils_UnitEnum_RARE_PIXELS = [[RAREScreenUtils_UnitEnum alloc] initWithNSString:@"RARE_PIXELS" withInt:10];
    RAREScreenUtils_UnitEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ RAREScreenUtils_UnitEnum_PIXELS, RAREScreenUtils_UnitEnum_CENTIMETER, RAREScreenUtils_UnitEnum_MILLIMETER, RAREScreenUtils_UnitEnum_INCH, RAREScreenUtils_UnitEnum_PERCENT, RAREScreenUtils_UnitEnum_CHARACTERS, RAREScreenUtils_UnitEnum_POINT, RAREScreenUtils_UnitEnum_PICA, RAREScreenUtils_UnitEnum_LINES, RAREScreenUtils_UnitEnum_DIALOG, RAREScreenUtils_UnitEnum_RARE_PIXELS, nil } count:11 type:[IOSClass classWithClass:[RAREScreenUtils_UnitEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:RAREScreenUtils_UnitEnum_values];
}

+ (RAREScreenUtils_UnitEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [RAREScreenUtils_UnitEnum_values count]; i++) {
    RAREScreenUtils_UnitEnum *e = RAREScreenUtils_UnitEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LRAREScreenUtils_UnitEnum"};
  static J2ObjcClassInfo _RAREScreenUtils_UnitEnum = { "Unit", "com.appnativa.rare.ui", "ScreenUtils", 0x4019, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_RAREScreenUtils_UnitEnum;
}

@end
