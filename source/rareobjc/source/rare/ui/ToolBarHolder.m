//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/ToolBarHolder.java
//
//  Created by decoteaud on 9/15/15.
//

#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/spot/ToolBar.h"
#include "com/appnativa/rare/ui/Component.h"
#include "com/appnativa/rare/ui/ToolBarHolder.h"
#include "com/appnativa/rare/ui/aFormsPanel.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iToolBar.h"
#include "com/appnativa/rare/viewer/ToolBarViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTInteger.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/jgoodies/forms/layout/FormLayout.h"
#include "java/util/HashMap.h"

@implementation RAREToolBarHolder

- (id)initRAREToolBarHolderWithRAREiWidget:(id<RAREiWidget>)context {
  if (self = [super initWithRAREiWidget:context withRAREJGFormLayout:[[RAREJGFormLayout alloc] initWithNSString:@"FILL:DEFAULT:GROW(1.0)"]]) {
    toolbarMap_ = [[JavaUtilHashMap alloc] init];
  }
  return self;
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context {
  return [self initRAREToolBarHolderWithRAREiWidget:context];
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
                  withInt:(int)cols
                  withInt:(int)rows {
  if (self = [self initRAREToolBarHolderWithRAREiWidget:context]) {
    [self ensureGridWithInt:cols withInt:rows withBoolean:NO withBoolean:YES withInt:0 withInt:0];
  }
  return self;
}

- (void)addToolBarWithInt:(int)col
                  withInt:(int)row
         withRAREiToolBar:(id<RAREiToolBar>)tb {
  [self addComponentWithRAREiPlatformComponent:[((id<RAREiToolBar>) nil_chk(tb)) getComponent] withInt:col withInt:row];
  NSString *name = [tb getToolbarName];
  if (name != nil) {
    (void) [((JavaUtilHashMap *) nil_chk(toolbarMap_)) putWithId:name withId:tb];
  }
  name = [self makeNameWithInt:col withInt:row];
  (void) [((JavaUtilHashMap *) nil_chk(toolbarMap_)) putWithId:name withId:tb];
  if (mainToolbar_ == nil) {
    mainToolbar_ = tb;
  }
}

+ (RAREToolBarHolder *)createWithRAREiContainer:(id<RAREiContainer>)context
                                    withSPOTSet:(SPOTSet *)set {
  RARESPOTToolBar *tc;
  int len = [((SPOTSet *) nil_chk(set)) getCount];
  int i = 0;
  int rows = 1;
  int cols = 1;
  int n;
  for (i = 0; i < len; i++) {
    tc = (RARESPOTToolBar *) check_class_cast([set getExWithInt:i], [RARESPOTToolBar class]);
    n = [((SPOTInteger *) nil_chk(((RARESPOTToolBar *) nil_chk(tc))->row_)) intValue];
    if (n > rows) {
      rows = n;
    }
    n = [((SPOTInteger *) nil_chk(tc->column_)) intValue];
    if (n > cols) {
      cols = n;
    }
  }
  RAREToolBarHolder *p = [[RAREToolBarHolder alloc] initWithRAREiWidget:context withInt:cols withInt:rows];
  RAREToolBarViewer *tb;
  int col, row;
  for (i = 0; i < len; i++) {
    tc = (RARESPOTToolBar *) check_class_cast([set getExWithInt:i], [RARESPOTToolBar class]);
    if (![((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) okForOSWithISPOTElement:tc]) {
      continue;
    }
    row = [((SPOTInteger *) nil_chk(((RARESPOTToolBar *) nil_chk(tc))->row_)) intValue];
    col = [((SPOTInteger *) nil_chk(tc->column_)) intValue];
    tb = (RAREToolBarViewer *) check_class_cast([((id<RAREiContainer>) nil_chk(context)) createWidgetWithRARESPOTWidget:tc], [RAREToolBarViewer class]);
    [((RAREToolBarViewer *) nil_chk(tb)) setParentWithRAREiContainer:context];
    [p addToolBarWithInt:col withInt:row withRAREiToolBar:tb];
  }
  return p;
}

- (void)dispose {
  if (toolbarMap_ != nil) {
    [toolbarMap_ clear];
    toolbarMap_ = nil;
  }
  [super dispose];
}

- (id<RAREiToolBar>)removeToolBarWithInt:(int)col
                                 withInt:(int)row {
  NSString *name = [self makeNameWithInt:col withInt:row];
  id<RAREiToolBar> tb = [((JavaUtilHashMap *) nil_chk(toolbarMap_)) removeWithId:name];
  if (tb != nil) {
    [self removeWithRAREiPlatformComponent:[tb getComponent]];
  }
  return tb;
}

- (void)removeToolbars {
  [((JavaUtilHashMap *) nil_chk(toolbarMap_)) clear];
  [self removeAll];
}

- (void)toggleVisibility {
  [self setVisibleWithBoolean:![self isVisible]];
  [self revalidate];
}

- (void)toggleVisibilityWithInt:(int)row
                        withInt:(int)col {
  NSString *name = [self makeNameWithInt:col withInt:row];
  id<RAREiToolBar> tb = [((JavaUtilHashMap *) nil_chk(toolbarMap_)) getWithId:name];
  if (tb != nil) {
    [((id<RAREiPlatformComponent>) nil_chk([tb getComponent])) setVisibleWithBoolean:![((id<RAREiPlatformComponent>) nil_chk([tb getComponent])) isVisible]];
    [self revalidate];
  }
}

- (void)update {
  [self revalidate];
  [self repaint];
}

- (void)setToolBarWithRAREiToolBar:(id<RAREiToolBar>)tb {
  self->mainToolbar_ = tb;
  [self addToolBarWithInt:0 withInt:0 withRAREiToolBar:tb];
  [self revalidate];
}

- (id<RAREiToolBar>)setToolBarWithInt:(int)col
                              withInt:(int)row
                     withRAREiToolBar:(id<RAREiToolBar>)tb {
  id<RAREiToolBar> rtb = [self removeToolBarWithInt:col withInt:row];
  [self addToolBarWithInt:col withInt:row withRAREiToolBar:tb];
  [self update];
  return rtb;
}

- (void)setVisibleWithBoolean:(BOOL)visible
                      withInt:(int)row
                      withInt:(int)col {
  NSString *name = [self makeNameWithInt:col withInt:row];
  id<RAREiToolBar> tb = [((JavaUtilHashMap *) nil_chk(toolbarMap_)) getWithId:name];
  if (tb != nil) {
    [((id<RAREiPlatformComponent>) nil_chk([tb getComponent])) setVisibleWithBoolean:visible];
    [self revalidate];
  }
}

- (id<RAREiPlatformComponent>)getComponent {
  return self;
}

- (id<RAREiToolBar>)getToolBar {
  return mainToolbar_;
}

- (id<RAREiToolBar>)getToolBarWithInt:(int)col
                              withInt:(int)row {
  NSString *name = [self makeNameWithInt:col withInt:row];
  return [((JavaUtilHashMap *) nil_chk(toolbarMap_)) getWithId:name];
}

- (NSString *)makeNameWithInt:(int)col
                      withInt:(int)row {
  return [NSString stringWithFormat:@"(%d,%d)", col, row];
}

- (void)copyAllFieldsTo:(RAREToolBarHolder *)other {
  [super copyAllFieldsTo:other];
  other->mainToolbar_ = mainToolbar_;
  other->toolbarMap_ = toolbarMap_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "createWithRAREiContainer:withSPOTSet:", NULL, "LRAREToolBarHolder", 0x9, NULL },
    { "removeToolBarWithInt:withInt:", NULL, "LRAREiToolBar", 0x1, NULL },
    { "setToolBarWithInt:withInt:withRAREiToolBar:", NULL, "LRAREiToolBar", 0x1, NULL },
    { "getComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getToolBar", NULL, "LRAREiToolBar", 0x1, NULL },
    { "getToolBarWithInt:withInt:", NULL, "LRAREiToolBar", 0x1, NULL },
    { "makeNameWithInt:withInt:", NULL, "LNSString", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "toolbarMap_", NULL, 0x0, "LJavaUtilHashMap" },
  };
  static J2ObjcClassInfo _RAREToolBarHolder = { "ToolBarHolder", "com.appnativa.rare.ui", NULL, 0x1, 7, methods, 1, fields, 0, NULL};
  return &_RAREToolBarHolder;
}

@end
