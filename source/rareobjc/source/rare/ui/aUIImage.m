//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/aUIImage.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSIntArray.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/aUIImage.h"
#include "com/appnativa/rare/ui/iImageObserver.h"
#include "com/appnativa/rare/ui/painter/NinePatch.h"
#include "com/appnativa/rare/ui/painter/iImagePainter.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Exception.h"
#include "java/lang/InternalError.h"
#include "java/lang/Math.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/ByteOrder.h"

@implementation RAREaUIImage

- (id)init {
  if (self = [super init]) {
    scalingType_ = [RAREiImagePainter_ScalingTypeEnum BILINEAR];
  }
  return self;
}

- (void)addReflectionImageWithInt:(int)y
                          withInt:(int)height
                        withFloat:(float)opacity
                          withInt:(int)gap {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)blurImage {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)clone {
  @try {
    RAREaUIImage *img = (RAREaUIImage *) check_class_cast([super clone], [RAREaUIImage class]);
    ((RAREaUIImage *) nil_chk(img))->observersList_ = nil;
    img->imageObserver_ = nil;
    img->ninePatch_ = nil;
    return img;
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw [[JavaLangInternalError alloc] init];
  }
}

- (BOOL)changeColorWithRAREUIColor:(RAREUIColor *)newColor
                   withRAREUIColor:(RAREUIColor *)oldColor {
  if ((newColor == nil) || (oldColor == nil)) {
    return NO;
  }
  if (![self isLoaded]) {
    return NO;
  }
  int w = [self getWidth];
  int h = [self getHeight];
  int nc = [((RAREUIColor *) nil_chk(newColor)) getRGB];
  int nr = (nc >> 16) & (int) 0xff;
  int ng = (nc >> 8) & (int) 0xff;
  int nb = nc & (int) 0xff;
  int oc = [((RAREUIColor *) nil_chk(oldColor)) getRGB];
  int or_ = (oc >> 16) & (int) 0xff;
  int og = (oc >> 8) & (int) 0xff;
  int ob = oc & (int) 0xff;
  for (int y = 1; y < h; ++y) {
    for (int x = 1; x < w; ++x) {
      int c = [self getPixelWithInt:x withInt:y];
      int a = (c >> 24) & (int) 0xff;
      int r = (c >> 16) & (int) 0xff;
      int g = (c >> 8) & (int) 0xff;
      int b = c & (int) 0xff;
      if ((a == 0) || ([JavaLangMath absWithInt:r - or_] > 5) || ([JavaLangMath absWithInt:g - og] > 5) || ([JavaLangMath absWithInt:b - ob] > 5)) {
        continue;
      }
      [self setPixelWithInt:x withInt:y withInt:(a << 24) | (nr << 16) | (ng << 8) | nb];
    }
  }
  return YES;
}

- (void)contstrainWithInt:(int)width
                  withInt:(int)height
                  withInt:(int)constraints
          withRAREUIColor:(RAREUIColor *)bg
withRAREiImagePainter_ScalingTypeEnum:(RAREiImagePainter_ScalingTypeEnum *)st {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (RAREaUIImage *)createDisabledImage {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (RAREaUIImage *)createReflectionImageWithInt:(int)y
                                       withInt:(int)height
                                     withFloat:(float)opacity
                                       withInt:(int)gap {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dispose {
  if (observersList_ != nil) {
    [observersList_ clear];
  }
  imageObserver_ = nil;
  observersList_ = nil;
  ninePatch_ = nil;
  background_ = nil;
}

- (JavaNioByteBuffer *)getImageBytesWithInt:(int)x
                                    withInt:(int)y
                                    withInt:(int)width
                                    withInt:(int)height {
  RAREaUIImage *img = self;
  JavaNioByteBuffer *b = [JavaNioByteBuffer allocateWithInt:width * height * 4];
  b = [((JavaNioByteBuffer *) nil_chk(b)) orderWithJavaNioByteOrder:[JavaNioByteOrder getBIG_ENDIAN]];
  int xx = x;
  int yy = y;
  for (y = 0; y < height; y++) {
    for (x = 0; x < width; x++) {
      int p = [img getPixelWithInt:xx + x withInt:yy + y];
      (void) [((JavaNioByteBuffer *) nil_chk(b)) putWithByte:(char) ((int) (((unsigned int) p) >> 24))];
      (void) [b putWithByte:(char) ((int) (((unsigned int) p) >> 16))];
      (void) [b putWithByte:(char) ((int) (((unsigned int) p) >> 8))];
      (void) [b putWithByte:(char) p];
    }
  }
  return b;
}

- (void)setImageBytesWithInt:(int)x
                     withInt:(int)y
                     withInt:(int)width
                     withInt:(int)height
       withJavaNioByteBuffer:(JavaNioByteBuffer *)bb {
  int xx = x;
  int yy = y;
  RAREaUIImage *img = self;
  for (y = 0; y < height; y++) {
    for (x = 0; x < width; x++) {
      [img setPixelWithInt:xx + x withInt:yy + y withInt:[((JavaNioByteBuffer *) nil_chk(bb)) getInt]];
    }
  }
}

- (NSString *)description {
  if (resourceName_ != nil) {
    return resourceName_;
  }
  if (location_ != nil) {
    return location_;
  }
  return [super description];
}

- (void)scale__WithInt:(int)size {
  int iw = [self getWidth];
  int ih = [self getHeight];
  int width = size;
  int height = size;
  if ((iw > 0) && (ih > 0)) {
    if ((iw > width) || (ih > height)) {
      if (iw > width) {
        ih = (int) (((float) width / (float) iw) * ih);
        iw = width;
      }
      if (ih > height) {
        iw = (int) (((float) height / (float) ih) * iw);
        ih = height;
      }
      if ((iw > 0) && (ih > 0)) {
        [self scale__WithInt:iw withInt:ih];
      }
    }
  }
}

- (void)scale__WithInt:(int)width
               withInt:(int)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setNinePatchWithRARENinePatch:(RARENinePatch *)ninePatch {
  self->ninePatch_ = ninePatch;
}

- (void)setPixelWithInt:(int)x
                withInt:(int)y
                withInt:(int)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setPixelsWithIntArray:(IOSIntArray *)pixels
                      withInt:(int)x
                      withInt:(int)y
                      withInt:(int)width
                      withInt:(int)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setResourceNameWithNSString:(NSString *)resourceName {
  self->resourceName_ = resourceName;
}

- (void)setScalingTypeWithRAREiImagePainter_ScalingTypeEnum:(RAREiImagePainter_ScalingTypeEnum *)scalingType {
  self->scalingType_ = scalingType;
}

- (void)setSliceWithRAREUIRectangle:(RAREUIRectangle *)rect {
  [self setSliceWithInt:(int) ((RAREUIRectangle *) nil_chk(rect))->x_ withInt:(int) rect->y_ withInt:(int) rect->width_ withInt:(int) rect->height_];
}

- (void)setSliceWithInt:(int)pos
                withInt:(int)size {
  int width = [self getWidth];
  int height = [self getHeight];
  int h = size;
  int w = size;
  int x = 0;
  int y = 0;
  if (height > width) {
    w = width;
    y = pos * size;
  }
  else {
    h = height;
    x = pos * size;
  }
  [self setSliceWithInt:x withInt:y withInt:w withInt:h];
}

- (void)setSliceWithInt:(int)x
                withInt:(int)y
                withInt:(int)width
                withInt:(int)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (int)getHeight {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getLocation {
  return location_;
}

- (RARENinePatch *)getNinePatchWithBoolean:(BOOL)force {
  if ((ninePatch_ == nil) && (force || [self isNinePatch])) {
    ninePatch_ = [[RARENinePatch alloc] initWithRAREaUIImage:self];
  }
  return ninePatch_;
}

- (int)getPixelWithInt:(int)x
               withInt:(int)y {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSIntArray *)getPixelsWithIntArray:(IOSIntArray *)pixels
                               withInt:(int)x
                               withInt:(int)y
                               withInt:(int)width
                               withInt:(int)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getResourceName {
  return resourceName_;
}

- (RAREiImagePainter_ScalingTypeEnum *)getScalingType {
  return scalingType_;
}

- (RAREaUIImage *)getSliceWithRAREUIRectangle:(RAREUIRectangle *)rect {
  return [self getSliceWithInt:(int) ((RAREUIRectangle *) nil_chk(rect))->x_ withInt:(int) rect->y_ withInt:(int) rect->width_ withInt:(int) rect->height_];
}

- (RAREaUIImage *)getSliceWithInt:(int)pos
                          withInt:(int)size {
  int width = [self getWidth];
  int height = [self getHeight];
  int h = size;
  int w = size;
  int x = 0;
  int y = 0;
  if (height > width) {
    w = width;
    y = pos * size;
  }
  else {
    h = height;
    x = pos * size;
  }
  return [self getSliceWithInt:x withInt:y withInt:w withInt:h];
}

- (RAREaUIImage *)getSliceWithInt:(int)x
                          withInt:(int)y
                          withInt:(int)width
                          withInt:(int)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (RAREaUIImage *)getSubimageWithInt:(int)x
                             withInt:(int)y
                             withInt:(int)width
                             withInt:(int)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getWidth {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isCanceled {
  return canceled_;
}

- (BOOL)isLoaded {
  return [self isLoadedExWithBoolean:NO];
}

- (BOOL)isLoadedWithRAREiImageObserver:(id<RAREiImageObserver>)is {
  if ([self isLoadedExWithBoolean:is != nil]) {
    return YES;
  }
  if ((is != nil) && (is != self->imageObserver_)) {
    if (self->imageObserver_ == nil) {
      self->imageObserver_ = is;
    }
    else {
      if (observersList_ == nil) {
        observersList_ = [[RAREUTIdentityArrayList alloc] initWithInt:3];
      }
      [((RAREUTIdentityArrayList *) nil_chk(observersList_)) addIfNotPresentWithId:is];
    }
  }
  return NO;
}

- (BOOL)isNinePatch {
  if (!ninePatchChecked_) {
    ninePatchChecked_ = YES;
    isninePatch_ = [self isNinePatchEx];
  }
  return isninePatch_;
}

- (void)notifyObserverWithRAREUIImage:(RAREUIImage *)img
               withRAREiImageObserver:(id<RAREiImageObserver>)is {
  if (is != nil) {
    @try {
      [is imageLoadedWithRAREUIImage:img];
    }
    @catch (JavaLangException *ignore) {
    }
  }
}

- (void)notifyObserversWithRAREUIImage:(RAREUIImage *)img {
  @synchronized(self) {
    {
      if (imageObserver_ != nil) {
        [self notifyObserverWithRAREUIImage:img withRAREiImageObserver:imageObserver_];
      }
      if (observersList_ != nil) {
        for (id<RAREiImageObserver> __strong is in observersList_) {
          [self notifyObserverWithRAREUIImage:img withRAREiImageObserver:is];
        }
      }
      imageObserver_ = nil;
      observersList_ = nil;
    }
  }
}

- (BOOL)isLoadedExWithBoolean:(BOOL)hasObserver {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isNinePatchEx {
  if (location_ != nil) {
    if ([location_ hasSuffix:@".9.png"]) {
      return YES;
    }
    if ([location_ contains:@".9.png?"]) {
      return YES;
    }
    if ([location_ contains:@".9.png#"]) {
      return YES;
    }
  }
  return NO;
}

- (void)copyAllFieldsTo:(RAREaUIImage *)other {
  [super copyAllFieldsTo:other];
  other->background_ = background_;
  other->canceled_ = canceled_;
  other->constraintHeight_ = constraintHeight_;
  other->constraintType_ = constraintType_;
  other->constraintWidth_ = constraintWidth_;
  other->imageObserver_ = imageObserver_;
  other->isninePatch_ = isninePatch_;
  other->location_ = location_;
  other->ninePatch_ = ninePatch_;
  other->ninePatchChecked_ = ninePatchChecked_;
  other->observersList_ = observersList_;
  other->resourceName_ = resourceName_;
  other->scalingType_ = scalingType_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x4, NULL },
    { "addReflectionImageWithInt:withInt:withFloat:withInt:", NULL, "V", 0x401, NULL },
    { "blurImage", NULL, "V", 0x401, NULL },
    { "clone", NULL, "LNSObject", 0x1, NULL },
    { "changeColorWithRAREUIColor:withRAREUIColor:", NULL, "Z", 0x1, NULL },
    { "contstrainWithInt:withInt:withInt:withRAREUIColor:withRAREiImagePainter_ScalingTypeEnum:", NULL, "V", 0x401, NULL },
    { "createDisabledImage", NULL, "LRAREaUIImage", 0x401, NULL },
    { "createReflectionImageWithInt:withInt:withFloat:withInt:", NULL, "LRAREaUIImage", 0x401, NULL },
    { "getImageBytesWithInt:withInt:withInt:withInt:", NULL, "LJavaNioByteBuffer", 0x1, NULL },
    { "scale__WithInt:withInt:", NULL, "V", 0x401, NULL },
    { "setPixelWithInt:withInt:withInt:", NULL, "V", 0x401, NULL },
    { "setPixelsWithIntArray:withInt:withInt:withInt:withInt:", NULL, "V", 0x401, NULL },
    { "setSliceWithInt:withInt:withInt:withInt:", NULL, "V", 0x401, NULL },
    { "getHeight", NULL, "I", 0x401, NULL },
    { "getLocation", NULL, "LNSString", 0x1, NULL },
    { "getNinePatchWithBoolean:", NULL, "LRARENinePatch", 0x1, NULL },
    { "getPixelWithInt:withInt:", NULL, "I", 0x401, NULL },
    { "getPixelsWithIntArray:withInt:withInt:withInt:withInt:", NULL, "LIOSIntArray", 0x401, NULL },
    { "getResourceName", NULL, "LNSString", 0x1, NULL },
    { "getScalingType", NULL, "LRAREiImagePainter_ScalingTypeEnum", 0x1, NULL },
    { "getSliceWithRAREUIRectangle:", NULL, "LRAREaUIImage", 0x1, NULL },
    { "getSliceWithInt:withInt:", NULL, "LRAREaUIImage", 0x1, NULL },
    { "getSliceWithInt:withInt:withInt:withInt:", NULL, "LRAREaUIImage", 0x401, NULL },
    { "getSubimageWithInt:withInt:withInt:withInt:", NULL, "LRAREaUIImage", 0x401, NULL },
    { "getWidth", NULL, "I", 0x401, NULL },
    { "isCanceled", NULL, "Z", 0x1, NULL },
    { "isLoaded", NULL, "Z", 0x1, NULL },
    { "isLoadedWithRAREiImageObserver:", NULL, "Z", 0x1, NULL },
    { "isNinePatch", NULL, "Z", 0x1, NULL },
    { "notifyObserverWithRAREUIImage:withRAREiImageObserver:", NULL, "V", 0x4, NULL },
    { "notifyObserversWithRAREUIImage:", NULL, "V", 0x24, NULL },
    { "isLoadedExWithBoolean:", NULL, "Z", 0x404, NULL },
    { "isNinePatchEx", NULL, "Z", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "scalingType_", NULL, 0x4, "LRAREiImagePainter_ScalingTypeEnum" },
    { "background_", NULL, 0x4, "LRAREUIColor" },
    { "canceled_", NULL, 0x4, "Z" },
    { "constraintHeight_", NULL, 0x4, "I" },
    { "constraintType_", NULL, 0x4, "I" },
    { "constraintWidth_", NULL, 0x4, "I" },
    { "imageObserver_", NULL, 0x4, "LRAREiImageObserver" },
    { "isninePatch_", NULL, 0x4, "Z" },
    { "location_", NULL, 0x4, "LNSString" },
    { "ninePatch_", NULL, 0x4, "LRARENinePatch" },
    { "observersList_", NULL, 0x4, "LRAREUTIdentityArrayList" },
  };
  static J2ObjcClassInfo _RAREaUIImage = { "aUIImage", "com.appnativa.rare.ui", NULL, 0x401, 33, methods, 11, fields, 0, NULL};
  return &_RAREaUIImage;
}

@end
