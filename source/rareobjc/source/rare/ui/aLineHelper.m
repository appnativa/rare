//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/aLineHelper.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "IOSFloatArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIConstants.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/UIStroke.h"
#include "com/appnativa/rare/ui/aLineHelper.h"
#include "com/appnativa/rare/ui/iPlatformGraphics.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@implementation RAREaLineHelper

static RAREaLineHelper_Line * RAREaLineHelper_STANDARD_LINE_;

+ (RAREaLineHelper_Line *)STANDARD_LINE {
  return RAREaLineHelper_STANDARD_LINE_;
}

+ (void)setSTANDARD_LINE:(RAREaLineHelper_Line *)STANDARD_LINE {
  RAREaLineHelper_STANDARD_LINE_ = STANDARD_LINE;
}

- (id)initWithBoolean:(BOOL)horizontal {
  if (self = [super init]) {
    horizontal_ = YES;
    thickness_ = [RAREScreenUtils platformPixelsfWithFloat:1];
    position_ = RAREUIConstants_CENTER;
    self->horizontal_ = horizontal;
  }
  return self;
}

- (void)addLineWithRAREaLineHelper_Line:(RAREaLineHelper_Line *)line {
  if (line == nil) {
    return;
  }
  if (lines_ == nil) {
    lines_ = [[JavaUtilArrayList alloc] init];
  }
  [((id<JavaUtilList>) nil_chk(lines_)) addWithId:line];
  thickness_ = -1;
}

- (BOOL)isStandardLine {
  return (lines_ == nil) || (([lines_ size] == 1) && ((RAREaLineHelper_Line *) nil_chk([self getLineWithInt:0]))->standard_);
}

- (void)dispose {
  if (lines_ != nil) {
    [lines_ clear];
    lines_ = nil;
  }
}

- (RAREaLineHelper_Line *)createLine {
  return [[RAREaLineHelper_Line alloc] init];
}

- (RAREaLineHelper_Line *)createLineWithNSString:(NSString *)style
                                       withFloat:(float)thickness
                                 withRAREUIColor:(RAREUIColor *)color
                                         withInt:(int)loff
                                         withInt:(int)roff {
  RAREaLineHelper_StrokeStyleEnum *s = nil;
  if ([@"solid" isEqual:style]) {
    s = [RAREaLineHelper_StrokeStyleEnum SOLID];
  }
  else if ([@"dotted" isEqual:style]) {
    s = [RAREaLineHelper_StrokeStyleEnum DOTTED];
  }
  else if ([@"dashed" isEqual:style]) {
    s = [RAREaLineHelper_StrokeStyleEnum DASHED];
  }
  return [[RAREaLineHelper_Line alloc] initWithRAREaLineHelper_StrokeStyleEnum:s withFloat:thickness withRAREUIColor:color withInt:loff withInt:roff];
}

- (RAREaLineHelper_Line *)createLineWithRAREaLineHelper_StrokeStyleEnum:(RAREaLineHelper_StrokeStyleEnum *)style
                                                              withFloat:(float)thickness
                                                        withRAREUIColor:(RAREUIColor *)color
                                                                withInt:(int)loff
                                                                withInt:(int)roff {
  return [[RAREaLineHelper_Line alloc] initWithRAREaLineHelper_StrokeStyleEnum:style withFloat:thickness withRAREUIColor:color withInt:loff withInt:roff];
}

- (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)w
                             withFloat:(float)h {
  if (thickness_ == -1) {
    [self calculateThickness];
  }
  switch (position_) {
    case RAREUIConstants_CENTER:
    y = horizontal_ ? ((h - thickness_) / 2) : 0;
    x = horizontal_ ? 0 : ((w - thickness_) / 2);
    break;
    case RAREUIConstants_BOTTOM:
    y = horizontal_ ? h - thickness_ : 0;
    x = horizontal_ ? 0 : w - thickness_;
    break;
    default:
    break;
  }
  if (padding_ != 0) {
    if (horizontal_) {
      w -= padding_ * 2;
      x += padding_;
    }
    else {
      h -= padding_ * 2;
      y += padding_;
    }
  }
  if (y < 0) {
    y = 0;
  }
  if (x < 0) {
    x = 0;
  }
  if (lines_ == nil) {
    [((RAREaLineHelper_Line *) nil_chk(RAREaLineHelper_STANDARD_LINE_)) paintStandardWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:w withFloat:h withBoolean:horizontal_];
    return;
  }
  int len = [((id<JavaUtilList>) nil_chk(lines_)) size];
  RAREaLineHelper_Line *line;
  for (int i = 0; i < len; i++) {
    line = [lines_ getWithInt:i];
    if (horizontal_) {
      [((RAREaLineHelper_Line *) nil_chk(line)) paintHorizontalWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:w];
      y += [line getThickness];
    }
    else {
      [((RAREaLineHelper_Line *) nil_chk(line)) paintVerticalWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:h];
      x += [line getThickness];
    }
  }
}

- (RAREaLineHelper_Line *)removeLineWithInt:(int)pos {
  return (lines_ == nil) ? nil : [lines_ removeWithInt:pos];
}

- (void)removeLines {
  lines_ = nil;
}

- (void)setHorizontalWithBoolean:(BOOL)horizontal {
  self->horizontal_ = horizontal;
}

- (void)setPositionWithInt:(int)position {
  self->position_ = position;
}

- (RAREaLineHelper_Line *)getLineWithInt:(int)pos {
  return (lines_ == nil) ? nil : [lines_ getWithInt:pos];
}

- (int)getPosition {
  return position_;
}

+ (RAREUIStroke *)getStrokeWithNSString:(NSString *)style
                              withFloat:(float)thickness {
  RAREaLineHelper_StrokeStyleEnum *s;
  if ([@"dotted" isEqual:style]) {
    s = [RAREaLineHelper_StrokeStyleEnum DOTTED];
  }
  else if ([@"dashed" isEqual:style]) {
    s = [RAREaLineHelper_StrokeStyleEnum DASHED];
  }
  else {
    s = [RAREaLineHelper_StrokeStyleEnum SOLID];
  }
  return [RAREaLineHelper getStrokeWithRAREaLineHelper_StrokeStyleEnum:s withFloat:thickness];
}

+ (RAREUIStroke *)getStrokeWithRAREaLineHelper_StrokeStyleEnum:(RAREaLineHelper_StrokeStyleEnum *)style
                                                     withFloat:(float)thickness {
  float th = thickness;
  if (style == nil) {
    return [[RAREUIStroke alloc] initWithFloat:th];
  }
  else {
    switch ([style ordinal]) {
      case RAREaLineHelper_StrokeStyle_DASHED:
      return [[RAREUIStroke alloc] initWithFloat:th withFloatArray:[IOSFloatArray arrayWithFloats:(float[]){ 1.0f, 1.0f } count:2] withFloat:0.0f];
      case RAREaLineHelper_StrokeStyle_DOTTED:
      return [[RAREUIStroke alloc] initWithFloat:th withFloatArray:[IOSFloatArray arrayWithFloats:(float[]){ 2.0f, 1.0f } count:2] withFloat:0.0f];
      default:
      return [[RAREUIStroke alloc] initWithFloat:th];
    }
  }
}

- (float)getThickness {
  if (thickness_ == -1) {
    [self calculateThickness];
  }
  return thickness_;
}

- (BOOL)hasValue {
  return YES;
}

- (BOOL)isHorizontal {
  return self->horizontal_;
}

- (void)calculateThickness {
  if (lines_ == nil) {
    thickness_ = 2;
  }
  else {
    int len = [lines_ size];
    thickness_ = 0;
    for (int i = 0; i < len; i++) {
      thickness_ += [JavaLangMath ceilWithDouble:[((RAREaLineHelper_Line *) nil_chk([lines_ getWithInt:i])) getThickness]];
    }
  }
  [self thicknessRecalculated];
}

- (void)thicknessRecalculated {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (int)getPadding {
  return padding_;
}

- (void)setPaddingWithInt:(int)padding {
  self->padding_ = padding;
}

+ (void)initialize {
  if (self == [RAREaLineHelper class]) {
    RAREaLineHelper_STANDARD_LINE_ = [[RAREaLineHelper_Line alloc] initWithRAREaLineHelper_StrokeStyleEnum:[RAREaLineHelper_StrokeStyleEnum SOLID] withFloat:[RAREUIScreen platformPixelsWithInt:1] withRAREUIColor:nil withInt:0 withInt:0];
  }
}

- (void)copyAllFieldsTo:(RAREaLineHelper *)other {
  [super copyAllFieldsTo:other];
  other->horizontal_ = horizontal_;
  other->lines_ = lines_;
  other->padding_ = padding_;
  other->position_ = position_;
  other->thickness_ = thickness_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "isStandardLine", NULL, "Z", 0x1, NULL },
    { "createLine", NULL, "LRAREaLineHelper_Line", 0x1, NULL },
    { "createLineWithNSString:withFloat:withRAREUIColor:withInt:withInt:", NULL, "LRAREaLineHelper_Line", 0x1, NULL },
    { "createLineWithRAREaLineHelper_StrokeStyleEnum:withFloat:withRAREUIColor:withInt:withInt:", NULL, "LRAREaLineHelper_Line", 0x1, NULL },
    { "removeLineWithInt:", NULL, "LRAREaLineHelper_Line", 0x1, NULL },
    { "getLineWithInt:", NULL, "LRAREaLineHelper_Line", 0x1, NULL },
    { "getStrokeWithNSString:withFloat:", NULL, "LRAREUIStroke", 0x9, NULL },
    { "getStrokeWithRAREaLineHelper_StrokeStyleEnum:withFloat:", NULL, "LRAREUIStroke", 0x9, NULL },
    { "hasValue", NULL, "Z", 0x1, NULL },
    { "isHorizontal", NULL, "Z", 0x1, NULL },
    { "calculateThickness", NULL, "V", 0x4, NULL },
    { "thicknessRecalculated", NULL, "V", 0x404, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "STANDARD_LINE_", NULL, 0xc, "LRAREaLineHelper_Line" },
    { "horizontal_", NULL, 0x4, "Z" },
    { "thickness_", NULL, 0x4, "F" },
    { "position_", NULL, 0x4, "I" },
    { "lines_", NULL, 0x4, "LJavaUtilList" },
  };
  static J2ObjcClassInfo _RAREaLineHelper = { "aLineHelper", "com.appnativa.rare.ui", NULL, 0x401, 12, methods, 5, fields, 0, NULL};
  return &_RAREaLineHelper;
}

@end

static RAREaLineHelper_StrokeStyleEnum *RAREaLineHelper_StrokeStyleEnum_SOLID;
static RAREaLineHelper_StrokeStyleEnum *RAREaLineHelper_StrokeStyleEnum_DOTTED;
static RAREaLineHelper_StrokeStyleEnum *RAREaLineHelper_StrokeStyleEnum_DASHED;
IOSObjectArray *RAREaLineHelper_StrokeStyleEnum_values;

@implementation RAREaLineHelper_StrokeStyleEnum

+ (RAREaLineHelper_StrokeStyleEnum *)SOLID {
  return RAREaLineHelper_StrokeStyleEnum_SOLID;
}
+ (RAREaLineHelper_StrokeStyleEnum *)DOTTED {
  return RAREaLineHelper_StrokeStyleEnum_DOTTED;
}
+ (RAREaLineHelper_StrokeStyleEnum *)DASHED {
  return RAREaLineHelper_StrokeStyleEnum_DASHED;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [RAREaLineHelper_StrokeStyleEnum class]) {
    RAREaLineHelper_StrokeStyleEnum_SOLID = [[RAREaLineHelper_StrokeStyleEnum alloc] initWithNSString:@"SOLID" withInt:0];
    RAREaLineHelper_StrokeStyleEnum_DOTTED = [[RAREaLineHelper_StrokeStyleEnum alloc] initWithNSString:@"DOTTED" withInt:1];
    RAREaLineHelper_StrokeStyleEnum_DASHED = [[RAREaLineHelper_StrokeStyleEnum alloc] initWithNSString:@"DASHED" withInt:2];
    RAREaLineHelper_StrokeStyleEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ RAREaLineHelper_StrokeStyleEnum_SOLID, RAREaLineHelper_StrokeStyleEnum_DOTTED, RAREaLineHelper_StrokeStyleEnum_DASHED, nil } count:3 type:[IOSClass classWithClass:[RAREaLineHelper_StrokeStyleEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:RAREaLineHelper_StrokeStyleEnum_values];
}

+ (RAREaLineHelper_StrokeStyleEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [RAREaLineHelper_StrokeStyleEnum_values count]; i++) {
    RAREaLineHelper_StrokeStyleEnum *e = RAREaLineHelper_StrokeStyleEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LRAREaLineHelper_StrokeStyleEnum"};
  static J2ObjcClassInfo _RAREaLineHelper_StrokeStyleEnum = { "StrokeStyle", "com.appnativa.rare.ui", "aLineHelper", 0x4019, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_RAREaLineHelper_StrokeStyleEnum;
}

@end
@implementation RAREaLineHelper_Line

- (id)init {
  if (self = [super init]) {
    leftOffset_ = 0;
    rightOffset_ = 0;
    thickness_ = [RAREUIScreen platformPixelsWithInt:1];
    standard_ = YES;
  }
  return self;
}

- (id)initWithRAREaLineHelper_StrokeStyleEnum:(RAREaLineHelper_StrokeStyleEnum *)style
                                    withFloat:(float)thickness
                              withRAREUIColor:(RAREUIColor *)color
                                      withInt:(int)loff
                                      withInt:(int)roff {
  if (self = [super init]) {
    leftOffset_ = 0;
    rightOffset_ = 0;
    thickness_ = [RAREUIScreen platformPixelsWithInt:1];
    if (thickness < 0) {
      thickness = 0;
    }
    self->thickness_ = thickness;
    self->color_ = color;
    leftOffset_ = loff;
    rightOffset_ = roff;
    [self setStyleWithRAREaLineHelper_StrokeStyleEnum:style];
  }
  return self;
}

- (void)paintHorizontalWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                                       withFloat:(float)x
                                       withFloat:(float)y
                                       withFloat:(float)w {
  if (standard_) {
    [self paintStandardWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:w withFloat:0 withBoolean:YES];
    return;
  }
  RAREUIColor *c = (color_ == nil) ? [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.LineBorder.color"] : color_;
  if (c == nil) {
    c = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.backgroundShadow"];
  }
  w -= (leftOffset_ + rightOffset_);
  x += leftOffset_;
  [((id<RAREiPlatformGraphics>) nil_chk(g)) setColorWithRAREUIColor:c];
  for (int i = 0; i < thickness_; i++) {
    [g drawLineWithFloat:x withFloat:y + i withFloat:x + w - 1 withFloat:y + i];
  }
}

- (void)paintStandardWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                                     withFloat:(float)x
                                     withFloat:(float)y
                                     withFloat:(float)w
                                     withFloat:(float)h
                                   withBoolean:(BOOL)horizontal {
  RAREUIColor *top, *bottom;
  if (color_ != nil) {
    top = color_;
    bottom = [top brighter];
  }
  else {
    top = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.backgroundShadow"];
    bottom = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.backgroundLtHighlight"];
  }
  if (horizontal) {
    w -= (leftOffset_ + rightOffset_);
    x += leftOffset_;
    float dy = self->thickness_;
    [((id<RAREiPlatformGraphics>) nil_chk(g)) setColorWithRAREUIColor:top];
    [g fillRectWithFloat:x withFloat:y withFloat:w withFloat:dy];
    [g setColorWithRAREUIColor:bottom];
    [g fillRectWithFloat:x withFloat:y + dy withFloat:w withFloat:dy];
  }
  else {
    h -= (leftOffset_ + rightOffset_);
    y += leftOffset_;
    float dx = self->thickness_;
    [((id<RAREiPlatformGraphics>) nil_chk(g)) setColorWithRAREUIColor:top];
    [g fillRectWithFloat:x withFloat:y withFloat:dx withFloat:h];
    [g setColorWithRAREUIColor:bottom];
    [g fillRectWithFloat:x + dx withFloat:y withFloat:dx withFloat:h];
  }
}

- (void)paintVerticalWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                                     withFloat:(float)x
                                     withFloat:(float)y
                                     withFloat:(float)h {
  if (standard_) {
    [self paintStandardWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:0 withFloat:h withBoolean:NO];
    return;
  }
  h -= (leftOffset_ + rightOffset_);
  y += leftOffset_;
  RAREUIColor *c = (color_ == nil) ? [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.backgroundShadow"] : color_;
  [((id<RAREiPlatformGraphics>) nil_chk(g)) setColorWithRAREUIColor:c];
  for (int i = 0; i < thickness_; i++) {
    [g drawLineWithFloat:x + i withFloat:y withFloat:x + i withFloat:y + h - 1];
  }
}

- (void)setColorWithRAREUIColor:(RAREUIColor *)color {
  self->color_ = color;
}

- (void)setLeftOffsetWithInt:(int)leftOffset {
  self->leftOffset_ = leftOffset;
}

- (void)setRightOffsetWithInt:(int)rightOffset {
  self->rightOffset_ = rightOffset;
}

- (void)setStyleWithRAREaLineHelper_StrokeStyleEnum:(RAREaLineHelper_StrokeStyleEnum *)style {
  float th = (thickness_ < 2) ? 0 : 1.25f;
  if (style == nil) {
    stroke_ = [[RAREUIStroke alloc] initWithFloat:th];
    standard_ = YES;
  }
  else {
    switch ([style ordinal]) {
      case RAREaLineHelper_StrokeStyle_DASHED:
      stroke_ = [[RAREUIStroke alloc] initWithFloat:th withFloatArray:[IOSFloatArray arrayWithFloats:(float[]){ 1.0f, 1.0f } count:2] withFloat:0.0f];
      break;
      case RAREaLineHelper_StrokeStyle_DOTTED:
      stroke_ = [[RAREUIStroke alloc] initWithFloat:th withFloatArray:[IOSFloatArray arrayWithFloats:(float[]){ 2.0f, 1.0f } count:2] withFloat:0.0f];
      break;
      default:
      stroke_ = [[RAREUIStroke alloc] initWithFloat:th];
      break;
    }
  }
}

- (void)setThicknessWithFloat:(float)thickness {
  self->thickness_ = thickness;
}

- (RAREUIColor *)getColor {
  return color_;
}

- (int)getLeftOffset {
  return leftOffset_;
}

- (int)getRightOffset {
  return rightOffset_;
}

- (float)getThickness {
  return standard_ ? thickness_ * 2 : thickness_;
}

- (void)copyAllFieldsTo:(RAREaLineHelper_Line *)other {
  [super copyAllFieldsTo:other];
  other->color_ = color_;
  other->leftOffset_ = leftOffset_;
  other->rightOffset_ = rightOffset_;
  other->standard_ = standard_;
  other->stroke_ = stroke_;
  other->thickness_ = thickness_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getColor", NULL, "LRAREUIColor", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "leftOffset_", NULL, 0x4, "I" },
    { "rightOffset_", NULL, 0x4, "I" },
    { "thickness_", NULL, 0x4, "F" },
    { "color_", NULL, 0x4, "LRAREUIColor" },
    { "standard_", NULL, 0x4, "Z" },
    { "stroke_", NULL, 0x4, "LRAREUIStroke" },
  };
  static J2ObjcClassInfo _RAREaLineHelper_Line = { "Line", "com.appnativa.rare.ui", "aLineHelper", 0x9, 1, methods, 6, fields, 0, NULL};
  return &_RAREaLineHelper_Line;
}

@end
