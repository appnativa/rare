//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/border/aUIIconBorder.java
//
//  Created by decoteaud on 9/15/15.
//

#include "com/appnativa/rare/ui/RenderType.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIImageIcon.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/border/aUIBorder.h"
#include "com/appnativa/rare/ui/border/aUIIconBorder.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformGraphics.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/painter/NinePatch.h"
#include "com/appnativa/rare/ui/painter/UIImagePainter.h"
#include "com/appnativa/rare/ui/painter/iPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformPainter.h"

@implementation RAREaUIIconBorder

- (id)initWithRAREUIInsets:(RAREUIInsets *)insets {
  if (self = [super init]) {
    leftRight_ = YES;
    [self setInsetsWithRAREUIInsets:insets];
  }
  return self;
}

- (id)initWithInt:(int)top
          withInt:(int)left
          withInt:(int)bottom
          withInt:(int)right {
  if (self = [super init]) {
    leftRight_ = YES;
    self->top_ = top;
    self->right_ = right;
    self->bottom_ = bottom;
    self->left_ = left;
  }
  return self;
}

- (id)clone {
  RAREaUIIconBorder *b = (RAREaUIIconBorder *) check_class_cast([super clone], [RAREaUIIconBorder class]);
  ((RAREaUIIconBorder *) nil_chk(b))->insets_ = nil;
  return b;
}

- (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)width
                             withFloat:(float)height
                           withBoolean:(BOOL)end {
  if (end != [self isPaintLast]) {
    return;
  }
  if (ninePatch_ != nil) {
    [ninePatch_ drawWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height];
    return;
  }
  if (pattern_ != nil) {
    [self paintPatternWithRAREUIImage:pattern_ withRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height];
    return;
  }
  float ox = x, oy = y, owidth = width, oheight = height;
  float xx;
  float yy;
  float tbx = x;
  float lry = y;
  float lrh = height;
  float tbw = width;
  if (leftRight_) {
    tbx += left_;
    tbw -= (left_ + right_);
  }
  else {
    lry += top_;
    lrh -= (top_ + bottom_);
  }
  if (overLayBorder_ != nil) {
    [overLayBorder_ paintWithRAREiPlatformGraphics:g withFloat:ox withFloat:oy withFloat:owidth withFloat:oheight withBoolean:NO];
  }
  if (topIcon_ != nil) {
    if (topPainter_ != nil) {
      [self paintPainterWithRAREiPlatformPainter:topPainter_ withRAREiPlatformGraphics:g withFloat:tbx withFloat:y withFloat:tbw withFloat:[topIcon_ getIconHeight]];
    }
    else {
      xx = x + ((width - [topIcon_ getIconWidth]) / 2);
      yy = y;
      [self paintIconWithRAREiPlatformIcon:topIcon_ withRAREiPlatformGraphics:g withFloat:xx withFloat:yy];
    }
  }
  if (bottomIcon_ != nil) {
    if (bottomPainter_ != nil) {
      yy = y + height - [bottomIcon_ getIconHeight];
      [self paintPainterWithRAREiPlatformPainter:bottomPainter_ withRAREiPlatformGraphics:g withFloat:tbx withFloat:yy withFloat:tbw withFloat:[bottomIcon_ getIconHeight]];
      height -= [bottomIcon_ getIconHeight];
    }
    else {
      xx = x + ((width - [bottomIcon_ getIconWidth]) / 2) + left_;
      yy = y + height - [bottomIcon_ getIconHeight];
      [self paintIconWithRAREiPlatformIcon:bottomIcon_ withRAREiPlatformGraphics:g withFloat:xx withFloat:yy];
    }
  }
  if (leftIcon_ != nil) {
    xx = x + left_;
    if (leftPainter_ != nil) {
      [self paintPainterWithRAREiPlatformPainter:leftPainter_ withRAREiPlatformGraphics:g withFloat:x withFloat:lry withFloat:[leftIcon_ getIconWidth] withFloat:lrh];
    }
    else {
      yy = y + ((height - [leftIcon_ getIconHeight]) / 2);
      [self paintIconWithRAREiPlatformIcon:leftIcon_ withRAREiPlatformGraphics:g withFloat:xx withFloat:yy];
    }
  }
  if (rightIcon_ != nil) {
    xx = x + width - [rightIcon_ getIconWidth] - right_;
    if (rightPainter_ != nil) {
      [self paintPainterWithRAREiPlatformPainter:rightPainter_ withRAREiPlatformGraphics:g withFloat:xx withFloat:lry withFloat:[rightIcon_ getIconWidth] withFloat:lrh];
    }
    else {
      yy = y + ((height - [rightIcon_ getIconHeight]) / 2);
      [self paintIconWithRAREiPlatformIcon:rightIcon_ withRAREiPlatformGraphics:g withFloat:xx withFloat:yy];
    }
  }
  if (overLayBorder_ != nil) {
    [overLayBorder_ paintWithRAREiPlatformGraphics:g withFloat:ox withFloat:oy withFloat:owidth withFloat:oheight withBoolean:YES];
  }
}

- (void)setBottomIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  self->bottomIcon_ = icon;
  bottomPainter_ = [self createImagePainterWithRAREiPlatformIcon:bottomIcon_ withRARERenderTypeEnum:bottomRt_ withInt:0 withRAREUIImagePainter:bottomPainter_];
}

- (void)setIconsWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)top
                withRAREiPlatformIcon:(id<RAREiPlatformIcon>)left
                withRAREiPlatformIcon:(id<RAREiPlatformIcon>)bottom
                withRAREiPlatformIcon:(id<RAREiPlatformIcon>)right {
  topIcon_ = top;
  leftIcon_ = left;
  bottomIcon_ = bottom;
  rightIcon_ = right;
  topPainter_ = [self createImagePainterWithRAREiPlatformIcon:topIcon_ withRARERenderTypeEnum:topRt_ withInt:100 withRAREUIImagePainter:topPainter_];
  leftPainter_ = [self createImagePainterWithRAREiPlatformIcon:leftIcon_ withRARERenderTypeEnum:leftRt_ withInt:100 withRAREUIImagePainter:leftPainter_];
  bottomPainter_ = [self createImagePainterWithRAREiPlatformIcon:bottomIcon_ withRARERenderTypeEnum:bottomRt_ withInt:100 withRAREUIImagePainter:bottomPainter_];
  rightPainter_ = [self createImagePainterWithRAREiPlatformIcon:rightIcon_ withRARERenderTypeEnum:rightRt_ withInt:100 withRAREUIImagePainter:rightPainter_];
}

- (void)setInsetsWithRAREUIInsets:(RAREUIInsets *)insets {
  self->top_ = ((RAREUIInsets *) nil_chk(insets))->top_;
  self->right_ = insets->right_;
  self->bottom_ = insets->bottom_;
  self->left_ = insets->left_;
}

- (void)setInsetsWithInt:(int)top
                 withInt:(int)left
                 withInt:(int)bottom
                 withInt:(int)right {
  self->top_ = top;
  self->right_ = right;
  self->bottom_ = bottom;
  self->left_ = left;
}

- (void)setLeftIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  self->leftIcon_ = icon;
  leftPainter_ = [self createImagePainterWithRAREiPlatformIcon:leftIcon_ withRARERenderTypeEnum:leftRt_ withInt:100 withRAREUIImagePainter:leftPainter_];
}

- (void)setLeftPadWithInt:(int)leftPad {
  self->leftPad_ = leftPad;
}

- (void)setNinePatchWithRARENinePatch:(RARENinePatch *)ninePatch {
  self->ninePatch_ = ninePatch;
}

- (void)setOverLayBorderWithRAREiPlatformBorder:(id<RAREiPlatformBorder>)overLayBorder {
  self->overLayBorder_ = overLayBorder;
}

- (void)setPatternWithRAREUIImage:(RAREUIImage *)image {
  pattern_ = image;
}

- (void)setPrecedenceWithBoolean:(BOOL)leftRight {
  self->leftRight_ = leftRight;
}

- (void)setRenderInfoWithRARERenderTypeEnum:(RARERenderTypeEnum *)top
                                    withInt:(int)topop
                     withRARERenderTypeEnum:(RARERenderTypeEnum *)left
                                    withInt:(int)leftop
                     withRARERenderTypeEnum:(RARERenderTypeEnum *)bottom
                                    withInt:(int)bottomop
                     withRARERenderTypeEnum:(RARERenderTypeEnum *)right
                                    withInt:(int)rightop {
  topRt_ = top;
  bottomRt_ = bottom;
  leftRt_ = left;
  rightRt_ = right;
  topPainter_ = [self createImagePainterWithRAREiPlatformIcon:topIcon_ withRARERenderTypeEnum:topRt_ withInt:topop withRAREUIImagePainter:topPainter_];
  leftPainter_ = [self createImagePainterWithRAREiPlatformIcon:leftIcon_ withRARERenderTypeEnum:leftRt_ withInt:leftop withRAREUIImagePainter:leftPainter_];
  bottomPainter_ = [self createImagePainterWithRAREiPlatformIcon:bottomIcon_ withRARERenderTypeEnum:bottomRt_ withInt:bottomop withRAREUIImagePainter:bottomPainter_];
  rightPainter_ = [self createImagePainterWithRAREiPlatformIcon:rightIcon_ withRARERenderTypeEnum:rightRt_ withInt:rightop withRAREUIImagePainter:rightPainter_];
}

- (void)setRightIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  self->rightIcon_ = icon;
  rightPainter_ = [self createImagePainterWithRAREiPlatformIcon:rightIcon_ withRARERenderTypeEnum:rightRt_ withInt:100 withRAREUIImagePainter:rightPainter_];
}

- (void)setTopIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  self->topIcon_ = icon;
  topPainter_ = [self createImagePainterWithRAREiPlatformIcon:topIcon_ withRARERenderTypeEnum:topRt_ withInt:100 withRAREUIImagePainter:topPainter_];
}

- (void)setTopPadWithInt:(int)topPad {
  self->topPad_ = topPad;
}

- (RAREUIInsets *)getBorderInsetsWithRAREUIInsets:(RAREUIInsets *)insets {
  if (insets == nil) {
    insets = [[RAREUIInsets alloc] initWithInt:0 withInt:0 withInt:0 withInt:0];
  }
  ((RAREUIInsets *) nil_chk(insets))->left_ = left_;
  insets->top_ = top_;
  insets->right_ = right_;
  insets->bottom_ = bottom_;
  return [self addjustInsetsWithRAREUIInsets:insets];
}

- (id<RAREiPlatformIcon>)getBottomIcon {
  return bottomIcon_;
}

- (id<RAREiPlatformIcon>)getLeftIcon {
  return leftIcon_;
}

- (float)getLeftPad {
  return leftPad_;
}

- (id<RAREiPlatformBorder>)getOverLayBorder {
  return overLayBorder_;
}

- (id<RAREiPlatformIcon>)getRightIcon {
  return rightIcon_;
}

- (id<RAREiPlatformIcon>)getTopIcon {
  return topIcon_;
}

- (float)getTopPad {
  return topPad_;
}

- (BOOL)isLeftRightPrecedence {
  return self->leftRight_;
}

- (RAREUIInsets *)addjustInsetsWithRAREUIInsets:(RAREUIInsets *)insets {
  int n;
  if (leftIcon_ != nil) {
    n = [leftIcon_ getIconWidth];
    if (n > -1) {
      ((RAREUIInsets *) nil_chk(insets))->left_ += n;
    }
  }
  if (topIcon_ != nil) {
    n = [topIcon_ getIconHeight];
    if (n > -1) {
      ((RAREUIInsets *) nil_chk(insets))->top_ += n;
    }
  }
  if (rightIcon_ != nil) {
    n = [rightIcon_ getIconWidth];
    if (n > -1) {
      ((RAREUIInsets *) nil_chk(insets))->right_ += n;
    }
  }
  if (bottomIcon_ != nil) {
    n = [bottomIcon_ getIconHeight];
    if (n > -1) {
      ((RAREUIInsets *) nil_chk(insets))->bottom_ += n;
    }
  }
  ((RAREUIInsets *) nil_chk(insets))->left_ += leftPad_;
  insets->top_ += topPad_;
  return insets;
}

- (RAREUIImagePainter *)createImagePainterWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon
                                         withRARERenderTypeEnum:(RARERenderTypeEnum *)rt
                                                        withInt:(int)alpha
                                         withRAREUIImagePainter:(RAREUIImagePainter *)ip {
  if ((icon != nil) && (rt != nil) && ([(id) icon isKindOfClass:[RAREUIImageIcon class]])) {
    if (ip == nil) {
      ip = [[RAREUIImagePainter alloc] init];
    }
    else {
      [ip clear];
    }
    [((RAREUIImagePainter *) nil_chk(ip)) setImageWithRAREUIImage:[((RAREUIImageIcon *) check_class_cast(icon, [RAREUIImageIcon class])) getImage]];
    [ip setRenderTypeWithRARERenderTypeEnum:rt];
    if (alpha != 0) {
      [ip setImageAlphaWithFloat:alpha];
    }
  }
  else if (ip != nil) {
    [ip clear];
    ip = nil;
  }
  return ip;
}

- (void)paintIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon
             withRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y {
  [icon paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:[((id<RAREiPlatformIcon>) nil_chk(icon)) getIconWidth] withFloat:[icon getIconHeight]];
}

- (void)paintPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)p
                   withRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                                   withFloat:(float)x
                                   withFloat:(float)y
                                   withFloat:(float)width
                                   withFloat:(float)height {
  [((id<RAREiPlatformPainter>) nil_chk(p)) paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withInt:RAREiPainter_UNKNOWN];
}

- (void)paintPatternWithRAREUIImage:(RAREUIImage *)image
          withRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                          withFloat:(float)x
                          withFloat:(float)y
                          withFloat:(float)width
                          withFloat:(float)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)copyAllFieldsTo:(RAREaUIIconBorder *)other {
  [super copyAllFieldsTo:other];
  other->bottom_ = bottom_;
  other->bottomIcon_ = bottomIcon_;
  other->bottomPainter_ = bottomPainter_;
  other->bottomRt_ = bottomRt_;
  other->insets_ = insets_;
  other->left_ = left_;
  other->leftIcon_ = leftIcon_;
  other->leftPad_ = leftPad_;
  other->leftPainter_ = leftPainter_;
  other->leftRight_ = leftRight_;
  other->leftRt_ = leftRt_;
  other->ninePatch_ = ninePatch_;
  other->overLayBorder_ = overLayBorder_;
  other->pattern_ = pattern_;
  other->right_ = right_;
  other->rightIcon_ = rightIcon_;
  other->rightPainter_ = rightPainter_;
  other->rightRt_ = rightRt_;
  other->top_ = top_;
  other->topIcon_ = topIcon_;
  other->topPad_ = topPad_;
  other->topPainter_ = topPainter_;
  other->topRt_ = topRt_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "clone", NULL, "LNSObject", 0x1, NULL },
    { "getBorderInsetsWithRAREUIInsets:", NULL, "LRAREUIInsets", 0x1, NULL },
    { "getBottomIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getLeftIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getOverLayBorder", NULL, "LRAREiPlatformBorder", 0x1, NULL },
    { "getRightIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getTopIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "isLeftRightPrecedence", NULL, "Z", 0x1, NULL },
    { "addjustInsetsWithRAREUIInsets:", NULL, "LRAREUIInsets", 0x4, NULL },
    { "createImagePainterWithRAREiPlatformIcon:withRARERenderTypeEnum:withInt:withRAREUIImagePainter:", NULL, "LRAREUIImagePainter", 0x4, NULL },
    { "paintIconWithRAREiPlatformIcon:withRAREiPlatformGraphics:withFloat:withFloat:", NULL, "V", 0x4, NULL },
    { "paintPainterWithRAREiPlatformPainter:withRAREiPlatformGraphics:withFloat:withFloat:withFloat:withFloat:", NULL, "V", 0x4, NULL },
    { "paintPatternWithRAREUIImage:withRAREiPlatformGraphics:withFloat:withFloat:withFloat:withFloat:", NULL, "V", 0x404, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "leftRight_", NULL, 0x4, "Z" },
    { "bottomIcon_", NULL, 0x4, "LRAREiPlatformIcon" },
    { "bottomPainter_", NULL, 0x4, "LRAREUIImagePainter" },
    { "bottomRt_", NULL, 0x4, "LRARERenderTypeEnum" },
    { "insets_", NULL, 0x4, "LRAREUIInsets" },
    { "left_", NULL, 0x4, "F" },
    { "right_", NULL, 0x4, "F" },
    { "top_", NULL, 0x4, "F" },
    { "bottom_", NULL, 0x4, "F" },
    { "leftIcon_", NULL, 0x4, "LRAREiPlatformIcon" },
    { "leftPad_", NULL, 0x4, "F" },
    { "leftPainter_", NULL, 0x4, "LRAREUIImagePainter" },
    { "leftRt_", NULL, 0x4, "LRARERenderTypeEnum" },
    { "ninePatch_", NULL, 0x4, "LRARENinePatch" },
    { "overLayBorder_", NULL, 0x4, "LRAREiPlatformBorder" },
    { "pattern_", NULL, 0x4, "LRAREUIImage" },
    { "rightIcon_", NULL, 0x4, "LRAREiPlatformIcon" },
    { "rightPainter_", NULL, 0x4, "LRAREUIImagePainter" },
    { "rightRt_", NULL, 0x4, "LRARERenderTypeEnum" },
    { "topIcon_", NULL, 0x4, "LRAREiPlatformIcon" },
    { "topPad_", NULL, 0x4, "F" },
    { "topPainter_", NULL, 0x4, "LRAREUIImagePainter" },
    { "topRt_", NULL, 0x4, "LRARERenderTypeEnum" },
  };
  static J2ObjcClassInfo _RAREaUIIconBorder = { "aUIIconBorder", "com.appnativa.rare.ui.border", NULL, 0x401, 13, methods, 23, fields, 0, NULL};
  return &_RAREaUIIconBorder;
}

@end
