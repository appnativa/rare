//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/aBorderPanel.java
//
//  Created by decoteaud on 3/11/16.
//

#include "com/appnativa/jgoodies/forms/layout/CellConstraints.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/spot/ScrollPane.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/ui/Container.h"
#include "com/appnativa/rare/ui/Location.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/aBorderPanel.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/layout/BorderLayout.h"
#include "com/appnativa/rare/viewer/FormViewer.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTAny.h"
#include "com/appnativa/spot/iSPOTElement.h"

@implementation RAREaBorderPanel

static RARECellConstraints * RAREaBorderPanel_urCorner_;
static RARECellConstraints * RAREaBorderPanel_lrCorner_;
static RARECellConstraints * RAREaBorderPanel_ulCorner_;
static RARECellConstraints * RAREaBorderPanel_llCorner_;
static RARECellConstraints * RAREaBorderPanel_tbTopCell_;
static RARECellConstraints * RAREaBorderPanel_tbRightCell_;
static RARECellConstraints * RAREaBorderPanel_tbLeftCell_;
static RARECellConstraints * RAREaBorderPanel_tbBottomCell_;
static RARECellConstraints * RAREaBorderPanel_lrTopCell_;
static RARECellConstraints * RAREaBorderPanel_lrRightCell_;
static RARECellConstraints * RAREaBorderPanel_lrLeftCell_;
static RARECellConstraints * RAREaBorderPanel_lrBottomCell_;
static RARECellConstraints * RAREaBorderPanel_centerCell_;

+ (RARECellConstraints *)urCorner {
  return RAREaBorderPanel_urCorner_;
}

+ (void)setUrCorner:(RARECellConstraints *)urCorner {
  RAREaBorderPanel_urCorner_ = urCorner;
}

+ (RARECellConstraints *)lrCorner {
  return RAREaBorderPanel_lrCorner_;
}

+ (void)setLrCorner:(RARECellConstraints *)lrCorner {
  RAREaBorderPanel_lrCorner_ = lrCorner;
}

+ (RARECellConstraints *)ulCorner {
  return RAREaBorderPanel_ulCorner_;
}

+ (void)setUlCorner:(RARECellConstraints *)ulCorner {
  RAREaBorderPanel_ulCorner_ = ulCorner;
}

+ (RARECellConstraints *)llCorner {
  return RAREaBorderPanel_llCorner_;
}

+ (void)setLlCorner:(RARECellConstraints *)llCorner {
  RAREaBorderPanel_llCorner_ = llCorner;
}

+ (RARECellConstraints *)tbTopCell {
  return RAREaBorderPanel_tbTopCell_;
}

+ (void)setTbTopCell:(RARECellConstraints *)tbTopCell {
  RAREaBorderPanel_tbTopCell_ = tbTopCell;
}

+ (RARECellConstraints *)tbRightCell {
  return RAREaBorderPanel_tbRightCell_;
}

+ (void)setTbRightCell:(RARECellConstraints *)tbRightCell {
  RAREaBorderPanel_tbRightCell_ = tbRightCell;
}

+ (RARECellConstraints *)tbLeftCell {
  return RAREaBorderPanel_tbLeftCell_;
}

+ (void)setTbLeftCell:(RARECellConstraints *)tbLeftCell {
  RAREaBorderPanel_tbLeftCell_ = tbLeftCell;
}

+ (RARECellConstraints *)tbBottomCell {
  return RAREaBorderPanel_tbBottomCell_;
}

+ (void)setTbBottomCell:(RARECellConstraints *)tbBottomCell {
  RAREaBorderPanel_tbBottomCell_ = tbBottomCell;
}

+ (RARECellConstraints *)lrTopCell {
  return RAREaBorderPanel_lrTopCell_;
}

+ (void)setLrTopCell:(RARECellConstraints *)lrTopCell {
  RAREaBorderPanel_lrTopCell_ = lrTopCell;
}

+ (RARECellConstraints *)lrRightCell {
  return RAREaBorderPanel_lrRightCell_;
}

+ (void)setLrRightCell:(RARECellConstraints *)lrRightCell {
  RAREaBorderPanel_lrRightCell_ = lrRightCell;
}

+ (RARECellConstraints *)lrLeftCell {
  return RAREaBorderPanel_lrLeftCell_;
}

+ (void)setLrLeftCell:(RARECellConstraints *)lrLeftCell {
  RAREaBorderPanel_lrLeftCell_ = lrLeftCell;
}

+ (RARECellConstraints *)lrBottomCell {
  return RAREaBorderPanel_lrBottomCell_;
}

+ (void)setLrBottomCell:(RARECellConstraints *)lrBottomCell {
  RAREaBorderPanel_lrBottomCell_ = lrBottomCell;
}

+ (RARECellConstraints *)centerCell {
  return RAREaBorderPanel_centerCell_;
}

+ (void)setCenterCell:(RARECellConstraints *)centerCell {
  RAREaBorderPanel_centerCell_ = centerCell;
}

- (id)init {
  return [super init];
}

- (id)initWithId:(id)view {
  return [super initWithId:view];
}

- (id<RAREiPlatformComponent>)getBottomView {
  return [self getComponentAtWithRARELocationEnum:[RARELocationEnum BOTTOM]];
}

- (RARECellConstraints *)getCellConstraintsWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiPlatformComponent>)getCenterView {
  return [self getComponentAtWithRARELocationEnum:[RARELocationEnum CENTER]];
}

- (RARECellConstraints *)getConstraintsWithRARELocationEnum:(RARELocationEnum *)location {
  return [RAREaBorderPanel getConstraintsWithRARELocationEnum:location withBoolean:useCrossPattern_ withBoolean:topBottomPriority_];
}

- (id<RAREiPlatformComponent>)getLeftView {
  return [self getComponentAtWithRARELocationEnum:[RARELocationEnum LEFT]];
}

- (id<RAREiPlatformComponent>)getRightView {
  return [self getComponentAtWithRARELocationEnum:[RARELocationEnum RIGHT]];
}

- (id<RAREiPlatformComponent>)getTopView {
  return [self getComponentAtWithRARELocationEnum:[RARELocationEnum TOP]];
}

- (void)setBottomViewWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  if (c != nil) {
    if ([self getBottomView] == c) {
      return;
    }
    [self removeWithRAREiPlatformComponent:c];
  }
  [self addWithRAREiPlatformComponent:c withId:[RARELocationEnum BOTTOM]];
}

- (void)setCenterViewWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  if (c != nil) {
    if ([self getCenterView] == c) {
      return;
    }
    [self removeWithRAREiPlatformComponent:c];
  }
  [self addWithRAREiPlatformComponent:c withId:[RARELocationEnum CENTER]];
}

- (void)setCrossCornerViewWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                withRARELocationEnum:(RARELocationEnum *)x
                                withRARELocationEnum:(RARELocationEnum *)y {
  switch ([x ordinal]) {
    case RARELocation_LEFT:
    if (y == [RARELocationEnum TOP]) {
      [self addWithRAREiPlatformComponent:c withId:RAREaBorderPanel_ulCorner_];
    }
    else if (y == [RARELocationEnum BOTTOM]) {
      [self addWithRAREiPlatformComponent:c withId:RAREaBorderPanel_llCorner_];
    }
    break;
    case RARELocation_RIGHT:
    if (y == [RARELocationEnum TOP]) {
      [self addWithRAREiPlatformComponent:c withId:RAREaBorderPanel_urCorner_];
    }
    else if (y == [RARELocationEnum BOTTOM]) {
      [self addWithRAREiPlatformComponent:c withId:RAREaBorderPanel_lrCorner_];
    }
    break;
    default:
    @throw [[RAREApplicationException alloc] initWithNSString:@"x must be LEFT or RIGHT and y must be TOP or BOTTOM"];
  }
}

- (void)setLeftViewWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  if (c != nil) {
    if ([self getLeftView] == c) {
      return;
    }
    [self removeWithRAREiPlatformComponent:c];
  }
  [self addWithRAREiPlatformComponent:c withId:[RARELocationEnum LEFT]];
}

- (void)setPaddingWithRAREUIInsets:(RAREUIInsets *)inArg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setRightViewWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  if (c != nil) {
    if ([self getRightView] == c) {
      return;
    }
    [self removeWithRAREiPlatformComponent:c];
  }
  [self addWithRAREiPlatformComponent:c withId:[RARELocationEnum RIGHT]];
}

- (void)setTopBottomPriorityWithBoolean:(BOOL)topBottomPriority {
  self->topBottomPriority_ = topBottomPriority;
}

- (void)setTopViewWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  if (c != nil) {
    if ([self getTopView] == c) {
      return;
    }
    [self removeWithRAREiPlatformComponent:c];
  }
  [self addWithRAREiPlatformComponent:c withId:[RARELocationEnum TOP]];
}

- (void)setUseCrossPatternWithBoolean:(BOOL)useCrossPattern {
  self->useCrossPattern_ = useCrossPattern;
}

- (RARELOBorderLayout *)getBorderLayout {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiPlatformComponent>)getComponentAtWithRARELocationEnum:(RARELocationEnum *)location {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)getMinimumSizeExWithRAREUIDimension:(RAREUIDimension *)size
                                  withFloat:(float)maxWidth {
  (void) [((RARELOBorderLayout *) nil_chk([self getBorderLayout])) getMinimumSizeWithRAREiParentComponent:self withRAREUIDimension:size withFloat:maxWidth];
  RAREUIInsets *in = margin_;
  if (margin_ != nil) {
    ((RAREUIDimension *) nil_chk(size))->width_ += ((RAREUIInsets *) nil_chk(in))->left_ + in->right_;
    size->height_ += in->top_ + in->bottom_;
  }
}

- (void)getPreferredSizeExWithRAREUIDimension:(RAREUIDimension *)size
                                    withFloat:(float)maxWidth {
  (void) [((RARELOBorderLayout *) nil_chk([self getBorderLayout])) getPreferredSizeWithRAREiParentComponent:self withRAREUIDimension:size withFloat:maxWidth];
  RAREUIInsets *in = margin_;
  if (margin_ != nil) {
    ((RAREUIDimension *) nil_chk(size))->width_ += ((RAREUIInsets *) nil_chk(in))->left_ + in->right_;
    size->height_ += in->top_ + in->bottom_;
  }
}

+ (RARECellConstraints *)getConstraintsWithRARELocationEnum:(RARELocationEnum *)location
                                                withBoolean:(BOOL)useCrossPattern
                                                withBoolean:(BOOL)topBottomPriority {
  if (useCrossPattern) {
    return [RAREaBorderPanel getCrossConstraintsWithRARELocationEnum:location];
  }
  RARECellConstraints *cc;
  switch ([location ordinal]) {
    case RARELocation_TOP:
    cc = topBottomPriority ? RAREaBorderPanel_tbTopCell_ : RAREaBorderPanel_lrTopCell_;
    break;
    case RARELocation_BOTTOM:
    cc = topBottomPriority ? RAREaBorderPanel_tbBottomCell_ : RAREaBorderPanel_lrBottomCell_;
    break;
    case RARELocation_LEFT:
    cc = topBottomPriority ? RAREaBorderPanel_tbLeftCell_ : RAREaBorderPanel_lrLeftCell_;
    break;
    case RARELocation_RIGHT:
    cc = topBottomPriority ? RAREaBorderPanel_tbRightCell_ : RAREaBorderPanel_lrRightCell_;
    break;
    default:
    cc = RAREaBorderPanel_centerCell_;
  }
  return cc;
}

+ (RARECellConstraints *)getCrossConstraintsWithRARELocationEnum:(RARELocationEnum *)location {
  RARECellConstraints *cc;
  switch ([location ordinal]) {
    case RARELocation_TOP:
    cc = RAREaBorderPanel_lrTopCell_;
    break;
    case RARELocation_BOTTOM:
    cc = RAREaBorderPanel_lrBottomCell_;
    break;
    case RARELocation_LEFT:
    cc = RAREaBorderPanel_tbLeftCell_;
    break;
    case RARELocation_RIGHT:
    cc = RAREaBorderPanel_tbRightCell_;
    break;
    default:
    cc = RAREaBorderPanel_centerCell_;
  }
  return cc;
}

- (void)setScrollPaneCornersWithRAREaViewer:(RAREaViewer *)host
                     withRARESPOTScrollPane:(RARESPOTScrollPane *)cfg {
  BOOL ch = [self getTopView] != nil;
  BOOL cf = [self getBottomView] != nil;
  BOOL rh = [self getLeftView] != nil;
  BOOL rf = [self getRightView] != nil;
  RARESPOTWidget *wc;
  if (ch && rf) {
    wc = (cfg == nil) ? nil : (RARESPOTWidget *) check_class_cast([((SPOTAny *) nil_chk(cfg->urCorner_)) getValue], [RARESPOTWidget class]);
    [self setCrossCornerViewWithRAREaViewer:host withRARESPOTWidget:wc withRARELocationEnum:[RARELocationEnum RIGHT] withRARELocationEnum:[RARELocationEnum TOP] withBoolean:YES];
  }
  if (cf && rf) {
    wc = (cfg == nil) ? nil : (RARESPOTWidget *) check_class_cast([((SPOTAny *) nil_chk(cfg->lrCorner_)) getValue], [RARESPOTWidget class]);
    [self setCrossCornerViewWithRAREaViewer:host withRARESPOTWidget:wc withRARELocationEnum:[RARELocationEnum RIGHT] withRARELocationEnum:[RARELocationEnum BOTTOM] withBoolean:YES];
  }
  if (ch && rh) {
    wc = (cfg == nil) ? nil : (RARESPOTWidget *) check_class_cast([((SPOTAny *) nil_chk(cfg->ulCorner_)) getValue], [RARESPOTWidget class]);
    [self setCrossCornerViewWithRAREaViewer:host withRARESPOTWidget:wc withRARELocationEnum:[RARELocationEnum LEFT] withRARELocationEnum:[RARELocationEnum TOP] withBoolean:YES];
  }
  if (cf && rh) {
    wc = (cfg == nil) ? nil : (RARESPOTWidget *) check_class_cast([((SPOTAny *) nil_chk(cfg->llCorner_)) getValue], [RARESPOTWidget class]);
    [self setCrossCornerViewWithRAREaViewer:host withRARESPOTWidget:wc withRARELocationEnum:[RARELocationEnum LEFT] withRARELocationEnum:[RARELocationEnum BOTTOM] withBoolean:YES];
  }
}

- (void)setCrossCornerViewWithRAREaViewer:(RAREaViewer *)host
                       withRARESPOTWidget:(RARESPOTWidget *)wc
                     withRARELocationEnum:(RARELocationEnum *)x
                     withRARELocationEnum:(RARELocationEnum *)y
                              withBoolean:(BOOL)useScrollPaneDefault {
  id<RAREiWidget> w = nil;
  if (wc != nil) {
    w = [RAREaContainer createWidgetWithRAREiContainer:[((RAREaViewer *) nil_chk(host)) getContainerViewer] withRARESPOTWidget:wc];
  }
  else if (useScrollPaneDefault) {
    w = [RAREUtils createScrollPaneCornerFromUIPropertyWithRAREaViewer:host withRARELocationEnum:x withRARELocationEnum:y];
  }
  if (w != nil) {
    [w setFocusableWithBoolean:NO];
    [((RAREaViewer *) nil_chk(host)) registerOrphanWidgetWithRAREiWidget:w];
    [self setCrossCornerViewWithRAREiPlatformComponent:[w getContainerComponent] withRARELocationEnum:x withRARELocationEnum:y];
  }
}

+ (void)initialize {
  if (self == [RAREaBorderPanel class]) {
    RAREaBorderPanel_urCorner_ = [[RARECellConstraints alloc] initWithInt:3 withInt:1 withInt:1 withInt:1];
    RAREaBorderPanel_lrCorner_ = [[RARECellConstraints alloc] initWithInt:3 withInt:3 withInt:1 withInt:1];
    RAREaBorderPanel_ulCorner_ = [[RARECellConstraints alloc] initWithInt:1 withInt:1 withInt:1 withInt:1];
    RAREaBorderPanel_llCorner_ = [[RARECellConstraints alloc] initWithInt:1 withInt:3 withInt:1 withInt:1];
    RAREaBorderPanel_tbTopCell_ = [[RARECellConstraints alloc] initWithInt:1 withInt:1 withInt:3 withInt:1];
    RAREaBorderPanel_tbRightCell_ = [[RARECellConstraints alloc] initWithInt:3 withInt:2 withInt:1 withInt:1];
    RAREaBorderPanel_tbLeftCell_ = [[RARECellConstraints alloc] initWithInt:1 withInt:2 withInt:1 withInt:1];
    RAREaBorderPanel_tbBottomCell_ = [[RARECellConstraints alloc] initWithInt:1 withInt:3 withInt:3 withInt:1];
    RAREaBorderPanel_lrTopCell_ = [[RARECellConstraints alloc] initWithInt:2 withInt:1 withInt:1 withInt:1];
    RAREaBorderPanel_lrRightCell_ = [[RARECellConstraints alloc] initWithInt:3 withInt:1 withInt:1 withInt:3];
    RAREaBorderPanel_lrLeftCell_ = [[RARECellConstraints alloc] initWithInt:1 withInt:1 withInt:1 withInt:3];
    RAREaBorderPanel_lrBottomCell_ = [[RARECellConstraints alloc] initWithInt:2 withInt:3 withInt:1 withInt:1];
    RAREaBorderPanel_centerCell_ = [[RARECellConstraints alloc] initWithInt:2 withInt:2 withInt:1 withInt:1];
  }
}

- (void)copyAllFieldsTo:(RAREaBorderPanel *)other {
  [super copyAllFieldsTo:other];
  other->topBottomPriority_ = topBottomPriority_;
  other->useCrossPattern_ = useCrossPattern_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getBottomView", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getCellConstraintsWithRAREiPlatformComponent:", NULL, "LRARECellConstraints", 0x401, NULL },
    { "getCenterView", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getConstraintsWithRARELocationEnum:", NULL, "LRARECellConstraints", 0x1, NULL },
    { "getLeftView", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getRightView", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getTopView", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "setPaddingWithRAREUIInsets:", NULL, "V", 0x401, NULL },
    { "getBorderLayout", NULL, "LRARELOBorderLayout", 0x404, NULL },
    { "getComponentAtWithRARELocationEnum:", NULL, "LRAREiPlatformComponent", 0x404, NULL },
    { "getMinimumSizeExWithRAREUIDimension:withFloat:", NULL, "V", 0x4, NULL },
    { "getPreferredSizeExWithRAREUIDimension:withFloat:", NULL, "V", 0x4, NULL },
    { "getConstraintsWithRARELocationEnum:withBoolean:withBoolean:", NULL, "LRARECellConstraints", 0x9, NULL },
    { "getCrossConstraintsWithRARELocationEnum:", NULL, "LRARECellConstraints", 0x9, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "urCorner_", NULL, 0x8, "LRARECellConstraints" },
    { "lrCorner_", NULL, 0x8, "LRARECellConstraints" },
    { "ulCorner_", NULL, 0x8, "LRARECellConstraints" },
    { "llCorner_", NULL, 0x8, "LRARECellConstraints" },
    { "tbTopCell_", NULL, 0x8, "LRARECellConstraints" },
    { "tbRightCell_", NULL, 0x8, "LRARECellConstraints" },
    { "tbLeftCell_", NULL, 0x8, "LRARECellConstraints" },
    { "tbBottomCell_", NULL, 0x8, "LRARECellConstraints" },
    { "lrTopCell_", NULL, 0x8, "LRARECellConstraints" },
    { "lrRightCell_", NULL, 0x8, "LRARECellConstraints" },
    { "lrLeftCell_", NULL, 0x8, "LRARECellConstraints" },
    { "lrBottomCell_", NULL, 0x8, "LRARECellConstraints" },
    { "centerCell_", NULL, 0x8, "LRARECellConstraints" },
  };
  static J2ObjcClassInfo _RAREaBorderPanel = { "aBorderPanel", "com.appnativa.rare.ui", NULL, 0x401, 14, methods, 13, fields, 0, NULL};
  return &_RAREaBorderPanel;
}

@end
