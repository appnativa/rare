//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/painter/aUICompoundPainter.java
//
//  Created by decoteaud on 7/29/15.
//

#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/iPlatformGraphics.h"
#include "com/appnativa/rare/ui/painter/aUICompoundPainter.h"
#include "com/appnativa/rare/ui/painter/aUIPainter.h"
#include "com/appnativa/rare/ui/painter/iBackgroundPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformPainter.h"

@implementation RAREaUICompoundPainter

- (id)initWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)firstPainter
          withRAREiPlatformPainter:(id<RAREiPlatformPainter>)secondPainter {
  if (self = [super init]) {
    [self setFirstPainterWithRAREiPlatformPainter:firstPainter];
    [self setSecondPainterWithRAREiPlatformPainter:secondPainter];
  }
  return self;
}

- (id)clone {
  RAREaUICompoundPainter *cp = (RAREaUICompoundPainter *) check_class_cast([super clone], [RAREaUICompoundPainter class]);
  if (((RAREaUICompoundPainter *) nil_chk(cp))->firstPainter_ != nil) {
    cp->firstPainter_ = (id<RAREiPlatformPainter>) check_protocol_cast([((RAREaUIPainter *) check_class_cast(cp->firstPainter_, [RAREaUIPainter class])) clone], @protocol(RAREiPlatformPainter));
    (void) [((id<RAREiPlatformPainter>) nil_chk(cp->firstPainter_)) reference];
  }
  if (cp->secondPainter_ != nil) {
    cp->secondPainter_ = (id<RAREiPlatformPainter>) check_protocol_cast([((RAREaUIPainter *) check_class_cast(cp->firstPainter_, [RAREaUIPainter class])) clone], @protocol(RAREiPlatformPainter));
    (void) [((id<RAREiPlatformPainter>) nil_chk(cp->secondPainter_)) reference];
  }
  return cp;
}

- (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)width
                             withFloat:(float)height
                               withInt:(int)orientation {
  if ((firstPainter_ != nil) && [firstPainter_ isEnabled]) {
    [firstPainter_ paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withInt:orientation];
  }
  if ((secondPainter_ != nil) && [secondPainter_ isEnabled]) {
    [secondPainter_ paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withInt:orientation];
  }
}

- (void)setFirstPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)p {
  if (p != firstPainter_) {
    id<RAREiPlatformPainter> op = firstPainter_;
    self->firstPainter_ = (p == nil) ? nil : [p reference];
    modCount_++;
    if (op != nil) {
      [op dispose];
    }
  }
}

- (void)setSecondPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)p {
  if (p != secondPainter_) {
    id<RAREiPlatformPainter> op = secondPainter_;
    self->secondPainter_ = (p == nil) ? nil : [p reference];
    modCount_++;
    if (op != nil) {
      [op dispose];
    }
  }
}

- (RAREUIColor *)getBackgroundColor {
  if ([(id) firstPainter_ conformsToProtocol: @protocol(RAREiBackgroundPainter)]) {
    if ([((id<RAREiBackgroundPainter>) check_protocol_cast(firstPainter_, @protocol(RAREiBackgroundPainter))) getBackgroundColor] != nil) {
      return [((id<RAREiBackgroundPainter>) check_protocol_cast(firstPainter_, @protocol(RAREiBackgroundPainter))) getBackgroundColor];
    }
  }
  if ([(id) secondPainter_ conformsToProtocol: @protocol(RAREiBackgroundPainter)]) {
    return [((id<RAREiBackgroundPainter>) check_protocol_cast(secondPainter_, @protocol(RAREiBackgroundPainter))) getBackgroundColor];
  }
  return nil;
}

- (id<RAREiPlatformPainter>)getFirstPainter {
  return firstPainter_;
}

- (id<RAREiPlatformPainter>)getSecondPainter {
  return secondPainter_;
}

- (BOOL)isEnabled {
  if (![super isEnabled]) {
    return NO;
  }
  if ((firstPainter_ != nil) && [firstPainter_ isEnabled]) {
    return YES;
  }
  if ((secondPainter_ != nil) && [secondPainter_ isEnabled]) {
    return YES;
  }
  return NO;
}

- (BOOL)isSingleColorPainter {
  if ([(id) firstPainter_ conformsToProtocol: @protocol(RAREiBackgroundPainter)]) {
    if ([((id<RAREiBackgroundPainter>) check_protocol_cast(firstPainter_, @protocol(RAREiBackgroundPainter))) isSingleColorPainter]) {
      return YES;
    }
  }
  if ([(id) secondPainter_ conformsToProtocol: @protocol(RAREiBackgroundPainter)]) {
    return [((id<RAREiBackgroundPainter>) check_protocol_cast(secondPainter_, @protocol(RAREiBackgroundPainter))) isSingleColorPainter];
  }
  return YES;
}

- (void)disposeEx {
  if (firstPainter_ != nil) {
    [firstPainter_ dispose];
  }
  firstPainter_ = nil;
  if (secondPainter_ != nil) {
    [secondPainter_ dispose];
  }
  secondPainter_ = nil;
  [super disposeEx];
}

- (void)copyAllFieldsTo:(RAREaUICompoundPainter *)other {
  [super copyAllFieldsTo:other];
  other->firstPainter_ = firstPainter_;
  other->secondPainter_ = secondPainter_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "clone", NULL, "LNSObject", 0x1, NULL },
    { "getBackgroundColor", NULL, "LRAREUIColor", 0x1, NULL },
    { "getFirstPainter", NULL, "LRAREiPlatformPainter", 0x1, NULL },
    { "getSecondPainter", NULL, "LRAREiPlatformPainter", 0x1, NULL },
    { "isEnabled", NULL, "Z", 0x1, NULL },
    { "isSingleColorPainter", NULL, "Z", 0x1, NULL },
    { "disposeEx", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "firstPainter_", NULL, 0x4, "LRAREiPlatformPainter" },
    { "secondPainter_", NULL, 0x4, "LRAREiPlatformPainter" },
  };
  static J2ObjcClassInfo _RAREaUICompoundPainter = { "aUICompoundPainter", "com.appnativa.rare.ui.painter", NULL, 0x401, 7, methods, 2, fields, 0, NULL};
  return &_RAREaUICompoundPainter;
}

@end
