//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/painter/UIScrollingEdgePainter.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "IOSFloatArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformGraphics.h"
#include "com/appnativa/rare/ui/iScrollerSupport.h"
#include "com/appnativa/rare/ui/painter/UIBackgroundPainter.h"
#include "com/appnativa/rare/ui/painter/UIScrollingEdgePainter.h"
#include "com/appnativa/rare/ui/painter/iGradientPainter.h"
#include "com/appnativa/rare/ui/painter/iPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformPainter.h"

@implementation RAREUIScrollingEdgePainter

static RAREUIScrollingEdgePainter * RAREUIScrollingEdgePainter_instance_;
static BOOL RAREUIScrollingEdgePainter_paintVerticalScrollEdge_;
static BOOL RAREUIScrollingEdgePainter_paintHorizontalScrollEdge_;

+ (RAREUIScrollingEdgePainter *)instance {
  return RAREUIScrollingEdgePainter_instance_;
}

+ (void)setInstance:(RAREUIScrollingEdgePainter *)instance {
  RAREUIScrollingEdgePainter_instance_ = instance;
}

+ (BOOL)paintVerticalScrollEdge {
  return RAREUIScrollingEdgePainter_paintVerticalScrollEdge_;
}

+ (BOOL *)paintVerticalScrollEdgeRef {
  return &RAREUIScrollingEdgePainter_paintVerticalScrollEdge_;
}

+ (BOOL)paintHorizontalScrollEdge {
  return RAREUIScrollingEdgePainter_paintHorizontalScrollEdge_;
}

+ (BOOL *)paintHorizontalScrollEdgeRef {
  return &RAREUIScrollingEdgePainter_paintHorizontalScrollEdge_;
}

- (id)init {
  return [self initRAREUIScrollingEdgePainterWithRAREUIColor:[((RAREUIColor *) nil_chk([RAREColorUtils getBackground])) isDarkColor] ? [((RAREUIColor *) nil_chk([RAREColorUtils getBackground])) brighter] : [((RAREUIColor *) nil_chk([RAREColorUtils getBackground])) darker]];
}

+ (RAREUIScrollingEdgePainter *)getInstance {
  if (RAREUIScrollingEdgePainter_instance_ == nil) {
    RAREUIColor *start = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.Table.scrollEdgeStartColor"];
    RAREUIColor *end = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.Table.scrollEdgeStartColor"];
    if (start == nil) {
      start = [RAREColorUtils getBackground];
      start = [((RAREUIColor *) nil_chk(start)) isDarkColor] ? [start brighter] : [start darker];
      start = [start alphaWithInt:92];
    }
    if (end == nil) {
      end = [((RAREUIColor *) nil_chk(start)) alphaWithInt:5];
    }
    RAREUIScrollingEdgePainter_instance_ = [[RAREUIScrollingEdgePainter alloc] initWithRAREUIColor:start withRAREUIColor:end];
  }
  return RAREUIScrollingEdgePainter_instance_;
}

- (id)initRAREUIScrollingEdgePainterWithRAREUIColor:(RAREUIColor *)color {
  if (self = [super initWithRAREUIColor:color]) {
    shadowSize_ = [RAREScreenUtils PLATFORM_PIXELS_16];
    RAREUIColor *start = [((RAREUIColor *) nil_chk(color)) alphaWithInt:92];
    RAREUIColor *end = [color alphaWithInt:5];
    [self createDefaultGradientPaintersWithRAREUIColor:start withRAREUIColor:end];
  }
  return self;
}

- (id)initWithRAREUIColor:(RAREUIColor *)color {
  return [self initRAREUIScrollingEdgePainterWithRAREUIColor:color];
}

- (id)initWithRAREUIColor:(RAREUIColor *)start
          withRAREUIColor:(RAREUIColor *)end {
  if (self = [super initWithRAREUIColor:start]) {
    shadowSize_ = [RAREScreenUtils PLATFORM_PIXELS_16];
    [self createDefaultGradientPaintersWithRAREUIColor:start withRAREUIColor:end];
  }
  return self;
}

- (void)createDefaultGradientPaintersWithRAREUIColor:(RAREUIColor *)start
                                     withRAREUIColor:(RAREUIColor *)end {
  verticalLeftPainter_ = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getPainterWithNSString:@"Rare.Table.verticalLeftEdgePainter"];
  verticalRightPainter_ = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getPainterWithNSString:@"Rare.Table.verticalRightEdgePainter"];
  horizontalTopPainter_ = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getPainterWithNSString:@"Rare.Table.horizontalTopEdgePainter"];
  horizontalBottomPainter_ = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getPainterWithNSString:@"Rare.Table.horizontalBottomEdgePainter"];
  IOSObjectArray *colors = [IOSObjectArray arrayWithObjects:(id[]){ start, end } count:2 type:[IOSClass classWithClass:[RAREUIColor class]]];
  IOSFloatArray *distribution = [IOSFloatArray arrayWithFloats:(float[]){ .4f, 1.0f } count:2];
  if (RAREUIScrollingEdgePainter_paintVerticalScrollEdge_) {
    if (horizontalBottomPainter_ == nil) {
      horizontalBottomPainter_ = [[RAREUIBackgroundPainter alloc] initWithRAREiGradientPainter_TypeEnum:[RAREiGradientPainter_TypeEnum LINEAR] withRAREiGradientPainter_DirectionEnum:[RAREiGradientPainter_DirectionEnum VERTICAL_BOTTOM] withRAREUIColorArray:colors withFloatArray:distribution withInt:100];
    }
    if (horizontalTopPainter_ == nil) {
      horizontalTopPainter_ = [[RAREUIBackgroundPainter alloc] initWithRAREiGradientPainter_TypeEnum:[RAREiGradientPainter_TypeEnum LINEAR] withRAREiGradientPainter_DirectionEnum:[RAREiGradientPainter_DirectionEnum VERTICAL_TOP] withRAREUIColorArray:colors withFloatArray:distribution withInt:100];
    }
  }
  if (RAREUIScrollingEdgePainter_paintHorizontalScrollEdge_) {
    if (verticalLeftPainter_ == nil) {
      verticalLeftPainter_ = [[RAREUIBackgroundPainter alloc] initWithRAREiGradientPainter_TypeEnum:[RAREiGradientPainter_TypeEnum LINEAR] withRAREiGradientPainter_DirectionEnum:[RAREiGradientPainter_DirectionEnum HORIZONTAL_LEFT] withRAREUIColorArray:colors withFloatArray:distribution withInt:100];
    }
    if (verticalRightPainter_ == nil) {
      verticalRightPainter_ = [[RAREUIBackgroundPainter alloc] initWithRAREiGradientPainter_TypeEnum:[RAREiGradientPainter_TypeEnum LINEAR] withRAREiGradientPainter_DirectionEnum:[RAREiGradientPainter_DirectionEnum HORIZONTAL_RIGHT] withRAREUIColorArray:colors withFloatArray:distribution withInt:100];
    }
  }
}

- (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)width
                             withFloat:(float)height
                               withInt:(int)orientation {
  [self paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withBoolean:YES];
  [self paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withBoolean:NO];
}

- (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)width
                             withFloat:(float)height
                           withBoolean:(BOOL)horizontal {
  id<RAREiScrollerSupport> s = scrollerSupport_;
  if (s == nil) {
    id<RAREiPlatformComponent> c = [((id<RAREiPlatformGraphics>) nil_chk(g)) getComponent];
    if (!([(id) c conformsToProtocol: @protocol(RAREiScrollerSupport)])) {
      return;
    }
    s = (id<RAREiScrollerSupport>) check_protocol_cast(c, @protocol(RAREiScrollerSupport));
  }
  if (horizontal) {
    if (![((id<RAREiScrollerSupport>) nil_chk(s)) isAtBottomEdge]) {
      if (horizontalBottomPainter_ != nil) {
        [horizontalBottomPainter_ paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y + height - shadowSize_ withFloat:width withFloat:shadowSize_ withInt:RAREiPainter_HORIZONTAL];
      }
    }
    if (![s isAtTopEdge]) {
      if (horizontalTopPainter_ != nil) {
        [horizontalTopPainter_ paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:shadowSize_ withInt:RAREiPainter_HORIZONTAL];
      }
    }
  }
  else {
    if (![((id<RAREiScrollerSupport>) nil_chk(s)) isAtLeftEdge]) {
      if (verticalLeftPainter_ != nil) {
        [verticalLeftPainter_ paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:shadowSize_ withFloat:height withInt:RAREiPainter_VERTICAL];
      }
    }
    if (![s isAtRightEdge]) {
      if (verticalRightPainter_ != nil) {
        [verticalRightPainter_ paintWithRAREiPlatformGraphics:g withFloat:x + width - shadowSize_ withFloat:y withFloat:shadowSize_ withFloat:height withInt:RAREiPainter_VERTICAL];
      }
    }
  }
}

- (float)getShadowSize {
  return shadowSize_;
}

- (void)setShadowSizeWithFloat:(float)shadowSize {
  self->shadowSize_ = shadowSize;
}

- (id<RAREiPlatformPainter>)getHorizontalTopPainter {
  return horizontalTopPainter_;
}

- (void)setHorizontalTopPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)horizontalTopPainter {
  self->horizontalTopPainter_ = horizontalTopPainter;
}

- (id<RAREiPlatformPainter>)getHorizontalBottomPainter {
  return horizontalBottomPainter_;
}

- (void)setHorizontalBottomPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)horizontalBottomPainter {
  self->horizontalBottomPainter_ = horizontalBottomPainter;
}

- (id<RAREiPlatformPainter>)getVerticalLeftPainter {
  return verticalLeftPainter_;
}

- (void)setVerticalLeftPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)verticalLeftPainter {
  self->verticalLeftPainter_ = verticalLeftPainter;
}

- (id<RAREiPlatformPainter>)getVerticalRightPainter {
  return verticalRightPainter_;
}

- (void)setVerticalRightPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)verticalRightPainter {
  self->verticalRightPainter_ = verticalRightPainter;
}

- (id<RAREiScrollerSupport>)getScrollerSupport {
  return scrollerSupport_;
}

- (void)setScrollerSupportWithRAREiScrollerSupport:(id<RAREiScrollerSupport>)scrollerSupport {
  self->scrollerSupport_ = scrollerSupport;
}

+ (BOOL)isPaintVerticalScrollEdge {
  return RAREUIScrollingEdgePainter_paintVerticalScrollEdge_;
}

+ (void)setPaintVerticalScrollEdgeWithBoolean:(BOOL)paintVerticalScrollEdge {
  RAREUIScrollingEdgePainter_paintVerticalScrollEdge_ = paintVerticalScrollEdge;
}

+ (BOOL)isPaintHorizontalScrollEdge {
  return RAREUIScrollingEdgePainter_paintHorizontalScrollEdge_;
}

+ (void)setPaintHorizontalScrollEdgeWithBoolean:(BOOL)paintHorizontalScrollEdge {
  RAREUIScrollingEdgePainter_paintHorizontalScrollEdge_ = paintHorizontalScrollEdge;
}

+ (void)initialize {
  if (self == [RAREUIScrollingEdgePainter class]) {
    {
      RAREUIScrollingEdgePainter_paintVerticalScrollEdge_ = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getBooleanWithNSString:@"Rare.Table.paintVerticalScrollEdge" withBoolean:NO];
      RAREUIScrollingEdgePainter_paintHorizontalScrollEdge_ = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getBooleanWithNSString:@"Rare.Table.paintHorizontalScrollEdge" withBoolean:YES];
    }
  }
}

- (void)copyAllFieldsTo:(RAREUIScrollingEdgePainter *)other {
  [super copyAllFieldsTo:other];
  other->horizontalBottomPainter_ = horizontalBottomPainter_;
  other->horizontalTopPainter_ = horizontalTopPainter_;
  other->scrollerSupport_ = scrollerSupport_;
  other->shadowSize_ = shadowSize_;
  other->verticalLeftPainter_ = verticalLeftPainter_;
  other->verticalRightPainter_ = verticalRightPainter_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getInstance", NULL, "LRAREUIScrollingEdgePainter", 0x9, NULL },
    { "getHorizontalTopPainter", NULL, "LRAREiPlatformPainter", 0x1, NULL },
    { "getHorizontalBottomPainter", NULL, "LRAREiPlatformPainter", 0x1, NULL },
    { "getVerticalLeftPainter", NULL, "LRAREiPlatformPainter", 0x1, NULL },
    { "getVerticalRightPainter", NULL, "LRAREiPlatformPainter", 0x1, NULL },
    { "getScrollerSupport", NULL, "LRAREiScrollerSupport", 0x1, NULL },
    { "isPaintVerticalScrollEdge", NULL, "Z", 0x9, NULL },
    { "isPaintHorizontalScrollEdge", NULL, "Z", 0x9, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "shadowSize_", NULL, 0x4, "F" },
    { "horizontalTopPainter_", NULL, 0x4, "LRAREiPlatformPainter" },
    { "horizontalBottomPainter_", NULL, 0x4, "LRAREiPlatformPainter" },
    { "verticalLeftPainter_", NULL, 0x4, "LRAREiPlatformPainter" },
    { "verticalRightPainter_", NULL, 0x4, "LRAREiPlatformPainter" },
    { "instance_", NULL, 0xa, "LRAREUIScrollingEdgePainter" },
    { "paintVerticalScrollEdge_", NULL, 0xa, "Z" },
    { "paintHorizontalScrollEdge_", NULL, 0xa, "Z" },
  };
  static J2ObjcClassInfo _RAREUIScrollingEdgePainter = { "UIScrollingEdgePainter", "com.appnativa.rare.ui.painter", NULL, 0x1, 8, methods, 8, fields, 0, NULL};
  return &_RAREUIScrollingEdgePainter;
}

@end
