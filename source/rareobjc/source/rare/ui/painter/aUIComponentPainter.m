//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/painter/aUIComponentPainter.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/platform/apple/ui/view/aView.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/Displayed.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIColorShade.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/border/SharedLineBorder.h"
#include "com/appnativa/rare/ui/iPaintedButton.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformGraphics.h"
#include "com/appnativa/rare/ui/iPlatformPaint.h"
#include "com/appnativa/rare/ui/iPlatformShape.h"
#include "com/appnativa/rare/ui/painter/PaintBucket.h"
#include "com/appnativa/rare/ui/painter/PainterHolder.h"
#include "com/appnativa/rare/ui/painter/RenderSpace.h"
#include "com/appnativa/rare/ui/painter/UIComponentPainter.h"
#include "com/appnativa/rare/ui/painter/UIImagePainter.h"
#include "com/appnativa/rare/ui/painter/UISimpleBackgroundPainter.h"
#include "com/appnativa/rare/ui/painter/aUIComponentPainter.h"
#include "com/appnativa/rare/ui/painter/aUIPainter.h"
#include "com/appnativa/rare/ui/painter/iBackgroundPainter.h"
#include "com/appnativa/rare/ui/painter/iComponentPainter.h"
#include "com/appnativa/rare/ui/painter/iImagePainter.h"
#include "com/appnativa/rare/ui/painter/iPainter.h"
#include "com/appnativa/rare/ui/painter/iPainterSupport.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformPainter.h"
#include "com/appnativa/rare/util/PropertyChangeSupportEx.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "java/beans/PropertyChangeEvent.h"
#include "java/beans/PropertyChangeListener.h"

@implementation RAREaUIComponentPainter

static BOOL RAREaUIComponentPainter_isApple_;
static BOOL RAREaUIComponentPainter_paintFocus__;
static RAREPaintBucket * RAREaUIComponentPainter_focusPaint_;

+ (BOOL)isApple {
  return RAREaUIComponentPainter_isApple_;
}

+ (BOOL *)isAppleRef {
  return &RAREaUIComponentPainter_isApple_;
}

+ (BOOL)paintFocus {
  return RAREaUIComponentPainter_paintFocus__;
}

+ (BOOL *)paintFocusRef {
  return &RAREaUIComponentPainter_paintFocus__;
}

+ (RAREPaintBucket *)focusPaint {
  return RAREaUIComponentPainter_focusPaint_;
}

+ (void)setFocusPaint:(RAREPaintBucket *)focusPaint {
  RAREaUIComponentPainter_focusPaint_ = focusPaint;
}

- (id)init {
  if (self = [super init]) {
    if (RAREaUIComponentPainter_focusPaint_ == nil) {
      RAREaUIComponentPainter_focusPaint_ = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getWidgetFocusPainter];
    }
  }
  return self;
}

- (void)addPropertyChangeListenerWithJavaBeansPropertyChangeListener:(id<JavaBeansPropertyChangeListener>)listener {
  if (listener != nil) {
    if (((changeListener_ == nil) || (changeListener_ == listener)) && (changeSupport_ == nil)) {
      changeListener_ = listener;
      return;
    }
    if (changeSupport_ == nil) {
      changeSupport_ = [[RAREPropertyChangeSupportEx alloc] initWithId:self];
      if (changeListener_ != nil) {
        [changeSupport_ addPropertyChangeListenerWithJavaBeansPropertyChangeListener:changeListener_];
        changeListener_ = nil;
      }
    }
    [((RAREPropertyChangeSupportEx *) nil_chk(changeSupport_)) removePropertyChangeListenerWithJavaBeansPropertyChangeListener:listener];
    [changeSupport_ addPropertyChangeListenerWithJavaBeansPropertyChangeListener:listener];
  }
}

- (void)adjustPainterHolderForegroundWithRAREUIColor:(RAREUIColor *)fg {
  RAREPainterHolder *ph = painterHolder_;
  if ((ph != nil) && ([ph getForegroundWithRAREiPaintedButton_ButtonStateEnum:[RAREiPaintedButton_ButtonStateEnum DEFAULT]] != nil)) {
    if ([ph isShared]) {
      ph = (RAREPainterHolder *) check_class_cast([ph clone], [RAREPainterHolder class]);
      painterHolder_ = ph;
    }
    if (((RAREPainterHolder *) nil_chk(ph))->normalPainter_ != nil) {
      ph->normalPainter_ = (RAREPaintBucket *) check_class_cast([ph->normalPainter_ clone], [RAREPaintBucket class]);
      [((RAREPaintBucket *) nil_chk(ph->normalPainter_)) setForegroundColorWithRAREUIColor:fg];
      ;
    }
    [ph setForegroundColorWithRAREUIColor:fg];
  }
}

- (void)checkForPainterHolderBackgroundWithRAREUIColor:(RAREUIColor *)bg {
  RAREPainterHolder *ph = painterHolder_;
  if ((ph != nil) && (([ph getBackgroundWithRAREiPaintedButton_ButtonStateEnum:[RAREiPaintedButton_ButtonStateEnum DEFAULT]] != nil) || ([ph getBackgroundPainterWithRAREiPaintedButton_ButtonStateEnum:[RAREiPaintedButton_ButtonStateEnum DEFAULT]] != nil))) {
    if ([ph isShared]) {
      ph = (RAREPainterHolder *) check_class_cast([ph clone], [RAREPainterHolder class]);
      painterHolder_ = ph;
    }
    if (((RAREPainterHolder *) nil_chk(ph))->normalPainter_ != nil) {
      ph->normalPainter_ = (RAREPaintBucket *) check_class_cast([ph->normalPainter_ clone], [RAREPaintBucket class]);
      [((RAREPaintBucket *) nil_chk(ph->normalPainter_)) setBackgroundColorWithRAREUIColor:bg];
      [ph->normalPainter_ setBackgroundPainterWithRAREiBackgroundPainter:nil];
    }
    backgroundPainter_ = nil;
  }
}

- (void)clear {
  [self setBackgroundColorWithRAREUIColor:nil];
  [self setBackgroundOverlayPainterWithRAREiPlatformPainter:nil];
  [self setBackgroundPainterWithRAREiBackgroundPainter:nil withBoolean:NO];
  [self setBorderWithRAREiPlatformBorder:nil];
  [self setForegroundColorWithRAREUIColor:nil];
  [self setSharedBorderWithRARESharedLineBorder:nil];
  [self setPainterHolderWithRAREPainterHolder:nil];
}

- (id)clone {
  RAREaUIComponentPainter *cp = (RAREaUIComponentPainter *) check_class_cast([super clone], [RAREaUIComponentPainter class]);
  ((RAREaUIComponentPainter *) nil_chk(cp))->changeListener_ = nil;
  cp->changeSupport_ = nil;
  if (cp->backgroundPainter_ != nil) {
    cp->backgroundPainter_ = (id<RAREiBackgroundPainter>) check_protocol_cast([((RAREaUIPainter *) check_class_cast(cp->backgroundPainter_, [RAREaUIPainter class])) clone], @protocol(RAREiBackgroundPainter));
    (void) [((id<RAREiBackgroundPainter>) nil_chk(cp->backgroundPainter_)) reference];
  }
  if (cp->bgOverlayPainter_ != nil) {
    cp->bgOverlayPainter_ = (id<RAREiPlatformPainter>) check_protocol_cast([((RAREaUIPainter *) check_class_cast(cp->bgOverlayPainter_, [RAREaUIPainter class])) clone], @protocol(RAREiPlatformPainter));
    (void) [((id<RAREiPlatformPainter>) nil_chk(cp->bgOverlayPainter_)) reference];
  }
  if (cp->overlayPainter_ != nil) {
    cp->overlayPainter_ = (id<RAREiPlatformPainter>) check_protocol_cast([((RAREaUIPainter *) check_class_cast(cp->overlayPainter_, [RAREaUIPainter class])) clone], @protocol(RAREiPlatformPainter));
    (void) [((id<RAREiPlatformPainter>) nil_chk(cp->overlayPainter_)) reference];
  }
  return cp;
}

- (void)copyFromWithRAREiPlatformComponentPainter:(id<RAREiPlatformComponentPainter>)cp {
  [self setBackgroundColorWithRAREUIColor:[((id<RAREiPlatformComponentPainter>) nil_chk(cp)) getBackgroundColor]];
  [self setBackgroundOverlayPainterWithRAREiPlatformPainter:[cp getBackgroundOverlayPainter]];
  [self setBackgroundPainterWithRAREiBackgroundPainter:[cp getBackgroundPainter] withBoolean:NO];
  [self setBorderWithRAREiPlatformBorder:[cp getBorder]];
  [self setForegroundColorWithRAREUIColor:[cp getForegroundColor]];
  [self setSharedBorderWithRARESharedLineBorder:[cp getSharedBorder]];
  [self setPainterHolderWithRAREPainterHolder:[cp getPainterHolder]];
}

- (void)imageLoadedWithRAREUIImage:(RAREUIImage *)image {
  if ([(id) overlayPainter_ isKindOfClass:[RAREUIImagePainter class]]) {
    [self firePropertyChangeWithNSString:[RAREiComponentPainter PROPERTY_OVERLAY_PAINTER] withId:nil withId:overlayPainter_];
  }
  if ([(id) backgroundPainter_ isKindOfClass:[RAREUIImagePainter class]]) {
    [self firePropertyChangeWithNSString:[RAREiComponentPainter PROPERTY_BACKGROUND_PAINTER] withId:nil withId:backgroundPainter_];
  }
  if ([(id) bgOverlayPainter_ isKindOfClass:[RAREUIImagePainter class]]) {
    [self firePropertyChangeWithNSString:[RAREiComponentPainter PROPERTY_BACKGROUND_OVERLAY_PAINTER] withId:nil withId:bgOverlayPainter_];
  }
}

- (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)width
                             withFloat:(float)height
                               withInt:(int)orientation {
  @try {
    paintAll_ = YES;
    [self paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withInt:orientation withBoolean:NO];
    [self paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withInt:orientation withBoolean:YES];
  }
  @finally {
    paintAll_ = NO;
  }
}

+ (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)width
                             withFloat:(float)height
                   withRAREPaintBucket:(RAREPaintBucket *)pb {
  id<RAREiPlatformBorder> b = ((RAREPaintBucket *) nil_chk(pb))->border_;
  RAREUIColor *oc = [((id<RAREiPlatformGraphics>) nil_chk(g)) getColor];
  id<RAREiPlatformPaint> op = [g getPaint];
  id<RAREiBackgroundPainter> bp = pb->backgroundPainter_;
  id<RAREiPlatformPainter> bgop = pb->imagePainter_;
  RAREUIColor *bg = pb->backgroundColor_;
  id<RAREiPlatformPaint> p = nil;
  id<RAREiPlatformShape> shape = nil;
  BOOL clips = NO;
  float ox = x;
  float oy = y;
  float owidth = width;
  float oheight = height;
  if (b != nil) {
    [b paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withBoolean:NO];
    if ([b clipsContents]) {
      if (bgop == nil) {
        p = (bp == nil) ? bg : ((id) [bp getPaintWithFloat:width withFloat:height]);
      }
      else if (bp == nil) {
        p = (bgop == nil) ? bg : ((id) [bgop getPaintWithFloat:width withFloat:height]);
      }
      if (p != nil) {
        shape = [b getShapeWithRAREiPlatformGraphics:g withFloat:0 withFloat:0 withFloat:width withFloat:height];
        if (shape == nil) {
          p = nil;
        }
      }
      if (p != nil) {
        bg = nil;
        bp = nil;
        bgop = nil;
      }
      clips = p == nil;
    }
    else {
      RAREUIInsets *in = [b getBorderInsetsExWithRAREUIInsets:nil];
      x += ((RAREUIInsets *) nil_chk(in))->left_;
      y += in->top_;
      width -= (in->left_ + in->right_);
      height -= (in->top_ + in->bottom_);
    }
  }
  if (shape != nil) {
    [g setPaintWithRAREiPlatformPaint:p];
    [g fillShapeWithRAREiPlatformShape:shape withFloat:x withFloat:y];
  }
  if (clips && (((bg != nil) && (bp != nil)) || (bgop != nil))) {
    [g saveState];
    [((id<RAREiPlatformBorder>) nil_chk(b)) clipWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height];
    [g setComponentPainterClippedWithBoolean:YES];
  }
  if ((bg != nil) && (bp == nil)) {
    [g setColorWithRAREUIColor:bg];
    [g fillRectWithFloat:x withFloat:y withFloat:width withFloat:height];
  }
  if (bp != nil) {
    [bp paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withInt:RAREiPainter_UNKNOWN];
  }
  if (bgop != nil) {
    [bgop paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withInt:RAREiPainter_UNKNOWN];
  }
  if (b != nil) {
    if ([g didComponentPainterClip]) {
      [g restoreState];
    }
    [b paintWithRAREiPlatformGraphics:g withFloat:ox withFloat:oy withFloat:owidth withFloat:oheight withBoolean:YES];
  }
  [g setColorWithRAREUIColor:oc];
  [g setPaintWithRAREiPlatformPaint:op];
}

- (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)width
                             withFloat:(float)height
                               withInt:(int)orientation
                           withBoolean:(BOOL)end {
  id<RAREiPlatformComponent> pc = [((id<RAREiPlatformGraphics>) nil_chk(g)) getComponent];
  id<RAREiPlatformBorder> b = border_;
  BOOL hasValue = YES;
  float ox = x;
  float oy = y;
  float owidth = width;
  float oheight = height;
  BOOL selected = (pc == nil) ? NO : [pc isSelected];
  BOOL pressed = (pc == nil) ? NO : [pc isPressed];
  BOOL enabled = (pc == nil) ? YES : [pc isEnabled];
  BOOL mouseOver = (pc == nil) ? NO : [pc isMouseOver];
  RAREiPaintedButton_ButtonStateEnum *state = nil;
  RAREPainterHolder *ph = painterHolder_;
  if (ph != nil) {
    state = [RAREUtils getStateWithBoolean:enabled withBoolean:pressed withBoolean:selected withBoolean:mouseOver];
    id<RAREiPlatformBorder> sb = [ph getBorderWithRAREiPaintedButton_ButtonStateEnum:state];
    if (sb != nil) {
      b = sb;
    }
  }
  if ((b != nil) && !paintAll_ && ![RAREUIComponentPainter isOkToPaintWithRAREiPlatformComponent:pc withRAREiPlatformBorder:b]) {
    b = nil;
  }
  if (sharedBorder_ != nil) {
    b = sharedBorder_;
  }
  RAREUIColor *oc = [g getColor];
  id<RAREiPlatformPaint> op = [g getPaint];
  if (!end) {
    id<RAREiBackgroundPainter> bp = backgroundPainter_;
    id<RAREiPlatformPainter> bgop = bgOverlayPainter_;
    RAREUIColor *bg = nil;
    id<RAREiPlatformPaint> p = nil;
    id<RAREiPlatformShape> shape = nil;
    BOOL clips = NO;
    if (ph != nil) {
      bp = [ph getBackgroundPainterWithRAREiPaintedButton_ButtonStateEnum:state];
      bg = [ph getBackgroundWithRAREiPaintedButton_ButtonStateEnum:state];
      bgop = [ph getBackgroundOverlayPainterWithRAREiPaintedButton_ButtonStateEnum:state];
      if (bp == nil) {
        bp = backgroundPainter_;
      }
      if (bgop == nil) {
        bgop = bgOverlayPainter_;
      }
    }
    if (b != nil) {
      if (insets_ == nil) {
        insets_ = [[RAREUIInsets alloc] init];
      }
      [b paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withBoolean:end];
      if ([(id) b isKindOfClass:[RARESharedLineBorder class]]) {
        RAREUIColor *c = [((RARESharedLineBorder *) check_class_cast(b, [RARESharedLineBorder class])) getBackgroundColor];
        if (c != nil) {
          bg = c;
          bp = nil;
          bgop = nil;
        }
      }
      if ([b clipsContents]) {
        if (bgop == nil) {
          p = (bp == nil) ? bg : ((id) [bp getPaintWithFloat:width withFloat:height]);
        }
        else if (bp == nil) {
          p = (bgop == nil) ? bg : ((id) [bgop getPaintWithFloat:width withFloat:height]);
        }
        if (p != nil) {
          shape = [b getShapeWithRAREiPlatformGraphics:g withFloat:0 withFloat:0 withFloat:width withFloat:height];
          if (shape == nil) {
            p = nil;
          }
        }
        if (p != nil) {
          bg = nil;
          bp = nil;
          bgop = nil;
        }
        clips = (p == nil) || ((pc == nil) ? NO : [pc hasChildren]);
      }
      else {
        RAREUIInsets *in;
        if (b == sharedBorder_) {
          in = [((RARESharedLineBorder *) nil_chk(sharedBorder_)) getBorderInsetsExWithRAREiPlatformComponent:pc withRAREUIInsets:insets_];
        }
        else {
          in = [b getBorderInsetsExWithRAREUIInsets:insets_];
        }
        x += ((RAREUIInsets *) nil_chk(in))->left_;
        y += in->top_;
        width -= (in->left_ + in->right_);
        height -= (in->top_ + in->bottom_);
      }
    }
    else if (parentShape_ != nil) {
      [g saveState];
      [g fillShapeWithRAREiPlatformShape:parentShape_ withFloat:x withFloat:y];
      [g restoreState];
    }
    if (shape != nil) {
      [g setPaintWithRAREiPlatformPaint:p];
      [g fillShapeWithRAREiPlatformShape:shape withFloat:x withFloat:y];
    }
    if (clips) {
      [g saveState];
      [((id<RAREiPlatformBorder>) nil_chk(b)) clipWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height];
      [g setComponentPainterClippedWithBoolean:YES];
    }
    if ((bg != nil) && (bp == nil)) {
      [g setColorWithRAREUIColor:bg];
      [g fillRectWithFloat:x withFloat:y withFloat:width withFloat:height];
    }
    if ((bp != nil) && (paintAll_ || [RAREUIComponentPainter isOkToPaintWithRAREiPlatformComponent:pc withRAREiPlatformPainter:bp withBoolean:hasValue withBoolean:NO])) {
      [bp paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withInt:orientation];
    }
    if ((bgop != nil) && (paintAll_ || [RAREUIComponentPainter isOkToPaintWithRAREiPlatformComponent:pc withRAREiPlatformPainter:bgop withBoolean:hasValue withBoolean:NO])) {
      [bgop paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withInt:orientation];
    }
  }
  else {
    if ((overlayPainter_ != nil) && (paintAll_ || [RAREUIComponentPainter isOkToPaintWithRAREiPlatformComponent:pc withRAREiPlatformPainter:overlayPainter_ withBoolean:hasValue withBoolean:YES])) {
      RAREUIInsets *in = nil;
      switch ([[overlayPainter_ getRenderSpace] ordinal]) {
        case RARERenderSpace_COMPONENT:
        if ([g didComponentPainterClip]) {
          [g restoreState];
          [g setComponentPainterClippedWithBoolean:NO];
        }
        break;
        case RARERenderSpace_WITHIN_MARGIN:
        in = [((id<RAREiPlatformBorder>) nil_chk(b)) getBorderInsetsWithRAREUIInsets:insets_];
        break;
        case RARERenderSpace_WITHIN_BORDER:
        if ((b != nil) && ![g didComponentPainterClip]) {
          in = [b getBorderInsetsExWithRAREUIInsets:insets_];
        }
        break;
      }
      float xx = x;
      float yy = y;
      float w = width;
      float h = height;
      if (in != nil) {
        xx += in->left_;
        yy += in->top_;
        w -= (in->left_ + in->right_);
        h -= (in->top_ + in->bottom_);
      }
      [overlayPainter_ paintWithRAREiPlatformGraphics:g withFloat:xx withFloat:yy withFloat:w withFloat:h withInt:orientation];
    }
    if ((pc != nil) && !enabled) {
      RAREUIColor *c = [pc getDisabledColor];
      if (c != nil) {
        RAREUIInsets *in = nil;
        id<RAREiPlatformShape> shape = (b == nil) ? nil : [b getShapeWithRAREiPlatformGraphics:g withFloat:0 withFloat:0 withFloat:width withFloat:height];
        id<RAREiPlatformPainter> p = [RAREColorUtils getPainterWithRAREUIColor:c];
        id<RAREiPlatformPaint> pp = (p == nil) ? c : ((id) [p getPaintWithFloat:width withFloat:height]);
        if ((shape != nil) && (pp != nil)) {
          if ([g didComponentPainterClip]) {
            [g restoreState];
            [g setComponentPainterClippedWithBoolean:NO];
            [g setPaintWithRAREiPlatformPaint:pp];
            [g fillShapeWithRAREiPlatformShape:shape withFloat:x withFloat:y];
          }
        }
        else {
          if ((b != nil) && ![g didComponentPainterClip]) {
            in = [b getBorderInsetsExWithRAREUIInsets:insets_];
          }
          float xx = x;
          float yy = y;
          float w = width;
          float h = height;
          if (in != nil) {
            xx += in->left_;
            yy += in->top_;
            w -= (in->left_ + in->right_);
            h -= (in->top_ + in->bottom_);
          }
          if (p == nil) {
            [g setPaintWithRAREiPlatformPaint:c];
            [g fillRectWithFloat:x withFloat:y withFloat:w withFloat:h];
          }
          else {
            [p paintWithRAREiPlatformGraphics:g withFloat:xx withFloat:yy withFloat:w withFloat:h withInt:RAREiPainter_UNKNOWN];
          }
        }
      }
    }
    if (b != nil) {
      if ([g didComponentPainterClip]) {
        [g restoreState];
      }
      [b paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withBoolean:end];
    }
    if (!paintAll_ && RAREaUIComponentPainter_paintFocus__ && (pc != nil) && ((b == nil) || (b != sharedBorder_)) && [pc isFocusPainted]) {
      RAREPaintBucket *pb = [pc getFocusPaintWithRAREiPlatformGraphics:g withRAREPaintBucket:RAREaUIComponentPainter_focusPaint_];
      if (pb != nil) {
        RAREUIInsets *in = [pc getFocusInsetsWithRAREUIInsets:insets_];
        if (in != nil) {
          ox += in->left_;
          oy += in->top_;
          owidth -= (in->left_ + in->right_);
          oheight -= (in->top_ + in->bottom_);
        }
        [RAREaUIComponentPainter paintWithRAREiPlatformGraphics:g withFloat:ox withFloat:oy withFloat:owidth withFloat:oheight withRAREPaintBucket:pb];
      }
    }
  }
  [g setColorWithRAREUIColor:oc];
  [g setPaintWithRAREiPlatformPaint:op];
}

+ (void)paintFocusWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                                  withFloat:(float)x
                                  withFloat:(float)y
                                  withFloat:(float)width
                                  withFloat:(float)height {
  id<RAREiPlatformComponent> pc = [((id<RAREiPlatformGraphics>) nil_chk(g)) getComponent];
  if ((RAREaUIComponentPainter_focusPaint_ != nil) && RAREaUIComponentPainter_paintFocus__ && (pc != nil) && [pc isFocusPainted]) {
    RAREPaintBucket *pb = [pc getFocusPaintWithRAREiPlatformGraphics:g withRAREPaintBucket:RAREaUIComponentPainter_focusPaint_];
    if (pb != nil) {
      RAREUIInsets *in = [pc getFocusInsetsWithRAREUIInsets:[[RAREUIInsets alloc] init]];
      if (in != nil) {
        x += in->left_;
        y += in->top_;
        width -= (in->left_ + in->right_);
        height -= (in->top_ + in->bottom_);
      }
      [RAREaUIComponentPainter paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withRAREPaintBucket:pb];
    }
  }
}

+ (void)paintPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)p
                   withRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                                   withFloat:(float)width
                                   withFloat:(float)height {
  id<RAREiPlatformComponent> c = [((id<RAREiPlatformGraphics>) nil_chk(g)) getComponent];
  if (![RAREUIComponentPainter isOkToPaintWithRAREiPlatformComponent:c withRAREiPlatformPainter:p]) {
    return;
  }
  id<RAREiPlatformBorder> border = (c == nil) ? nil : [c getBorder];
  float x = 0;
  float y = 0;
  RAREUIInsets *in = nil;
  ;
  switch ([[((id<RAREiPlatformPainter>) nil_chk(p)) getRenderSpace] ordinal]) {
    case RARERenderSpace_WITHIN_BORDER:
    if (border != nil) {
      in = [border getBorderInsetsExWithRAREUIInsets:nil];
    }
    break;
    case RARERenderSpace_WITHIN_MARGIN:
    if (border != nil) {
      in = [border getBorderInsetsWithRAREUIInsets:(RAREUIInsets *) check_class_cast(nil, [RAREUIInsets class])];
    }
    break;
    default:
    break;
  }
  if (in != nil) {
    x -= in->left_;
    y -= in->top_;
    width += (in->left_ + in->right_);
    height += (in->top_ + in->bottom_);
  }
  [p paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withInt:RAREiPainter_UNKNOWN];
}

- (void)removePropertyChangeListenerWithJavaBeansPropertyChangeListener:(id<JavaBeansPropertyChangeListener>)listener {
  if (listener == changeListener_) {
    changeListener_ = nil;
  }
  if ((listener != nil) && (changeSupport_ != nil)) {
    [changeSupport_ removePropertyChangeListenerWithJavaBeansPropertyChangeListener:listener];
  }
}

- (void)setBackgroundColorWithRAREUIColor:(RAREUIColor *)bg {
  [self setBackgroundColorWithRAREUIColor:bg withBoolean:NO];
}

+ (void)setBackgroundColorWithRAREiPainterSupport:(id<RAREiPainterSupport>)comp
                                  withRAREUIColor:(RAREUIColor *)bg {
  id<RAREiPlatformComponentPainter> cp = [((id<RAREiPainterSupport>) nil_chk(comp)) getComponentPainter];
  if (cp == nil) {
    cp = [[RAREUIComponentPainter alloc] init];
    [comp setComponentPainterWithRAREiPlatformComponentPainter:cp];
  }
  [((id<RAREiPlatformComponentPainter>) nil_chk(cp)) setBackgroundColorWithRAREUIColor:bg];
}

- (void)setBackgroundColorWithRAREUIColor:(RAREUIColor *)bg
                              withBoolean:(BOOL)checkOthers {
  if ((bg != nil) && (bg == [RAREUIColor TRANSPARENT])) {
    backgroundPainter_ = nil;
    painterHolder_ = nil;
  }
  else {
    if ([bg isKindOfClass:[RAREUIColorShade class]]) {
      RAREUIColorShade *cs = (RAREUIColorShade *) check_class_cast(bg, [RAREUIColorShade class]);
      if ([((RAREUIColorShade *) nil_chk(cs)) getBackgroundPainter] != nil) {
        [self setBackgroundPainterWithRAREiBackgroundPainter:[cs getBackgroundPainter] withBoolean:checkOthers];
        return;
      }
      if ([cs getPainterHolder] != nil) {
        [self setPainterHolderWithRAREPainterHolder:[cs getPainterHolder]];
        return;
      }
      if (![cs isSimpleColor]) {
        [self handleColorShadeWithRAREUIColorShade:cs];
      }
    }
    [self setBackgroundPainterWithRAREiBackgroundPainter:(bg == nil) ? nil : [[RAREUISimpleBackgroundPainter alloc] initWithRAREUIColor:bg] withBoolean:checkOthers];
  }
}

- (void)setBackgroundOverlayPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)painter {
  if (bgOverlayPainter_ != painter) {
    if (painter != nil) {
      (void) [painter reference];
    }
    id<RAREiPlatformPainter> ov = bgOverlayPainter_;
    bgOverlayPainter_ = painter;
    [self firePropertyChangeWithNSString:[RAREiComponentPainter PROPERTY_BACKGROUND_OVERLAY_PAINTER] withId:ov withId:painter];
    if (ov != nil) {
      [ov dispose];
    }
    [self imagePainterCheckedAndOkToAddWithRAREiPlatformPainter:painter];
  }
}

+ (void)setBackgroundOverlayPainterWithRAREiPainterSupport:(id<RAREiPainterSupport>)comp
                                  withRAREiPlatformPainter:(id<RAREiPlatformPainter>)painter {
  id<RAREiPlatformComponentPainter> cp = [((id<RAREiPainterSupport>) nil_chk(comp)) getComponentPainter];
  if (cp == nil) {
    cp = [[RAREUIComponentPainter alloc] init];
    [comp setComponentPainterWithRAREiPlatformComponentPainter:cp];
  }
  [((id<RAREiPlatformComponentPainter>) nil_chk(cp)) setBackgroundOverlayPainterWithRAREiPlatformPainter:painter];
}

- (void)setBackgroundPainterWithRAREiBackgroundPainter:(id<RAREiBackgroundPainter>)painter
                                           withBoolean:(BOOL)checkOthers {
  if (backgroundPainter_ != painter) {
    if (painter != nil) {
      (void) [painter reference];
    }
    id<RAREiPlatformPainter> ov = backgroundPainter_;
    backgroundPainter_ = painter;
    [self firePropertyChangeWithNSString:[RAREiComponentPainter PROPERTY_BACKGROUND_PAINTER] withId:ov withId:painter];
    if (ov != nil) {
      [ov dispose];
    }
    [self imagePainterCheckedAndOkToAddWithRAREiPlatformPainter:painter];
    if (checkOthers) {
      [self fixPainterholderWithBoolean:NO withBoolean:NO];
    }
  }
}

+ (void)setBackgroundPainterWithRAREiPainterSupport:(id<RAREiPainterSupport>)comp
                         withRAREiBackgroundPainter:(id<RAREiBackgroundPainter>)painter {
  id<RAREiPlatformComponentPainter> cp = [((id<RAREiPainterSupport>) nil_chk(comp)) getComponentPainter];
  if (cp == nil) {
    cp = [[RAREUIComponentPainter alloc] init];
    [comp setComponentPainterWithRAREiPlatformComponentPainter:cp];
  }
  [((id<RAREiPlatformComponentPainter>) nil_chk(cp)) setBackgroundPainterWithRAREiBackgroundPainter:painter withBoolean:NO];
}

+ (void)setBorderWithRAREiPainterSupport:(id<RAREiPainterSupport>)comp
                 withRAREiPlatformBorder:(id<RAREiPlatformBorder>)border {
  id<RAREiPlatformComponentPainter> cp = [((id<RAREiPainterSupport>) nil_chk(comp)) getComponentPainter];
  if (cp == nil) {
    cp = [[RAREUIComponentPainter alloc] init];
    [comp setComponentPainterWithRAREiPlatformComponentPainter:cp];
  }
  [((id<RAREiPlatformComponentPainter>) nil_chk(cp)) setBorderWithRAREiPlatformBorder:border];
}

- (void)setBorderWithRAREiPlatformBorder:(id<RAREiPlatformBorder>)b {
  if ((border_ != b) || ((b != nil) && ([b getModCount] != borderModCount_))) {
    id ov = border_;
    self->border_ = b;
    borderModCount_ = (b == nil) ? 0 : [b getModCount];
    [self fixPainterholderWithBoolean:NO withBoolean:YES];
    [self firePropertyChangeWithNSString:[RAREiComponentPainter PROPERTY_BORDER] withId:ov withId:b];
  }
}

- (void)setForegroundColorWithRAREUIColor:(RAREUIColor *)fg {
  foregroundColor_ = fg;
  if (fg != nil) {
    [self fixPainterholderWithBoolean:YES withBoolean:NO];
  }
}

- (void)setDisabledForegroundColorWithRAREUIColor:(RAREUIColor *)fg {
  if (fg != nil) {
    RAREPainterHolder *ph = painterHolder_;
    if (ph != nil) {
      if ([ph isShared]) {
        ph = (RAREPainterHolder *) check_class_cast([ph clone], [RAREPainterHolder class]);
        painterHolder_ = ph;
      }
      [((RAREPainterHolder *) nil_chk(ph)) setDisabledForegroundColorWithRAREUIColor:fg];
    }
  }
}

- (void)setOverlayPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)painter {
  if (overlayPainter_ != painter) {
    if (painter != nil) {
      (void) [painter reference];
    }
    id<RAREiPlatformPainter> ov = overlayPainter_;
    overlayPainter_ = painter;
    [self firePropertyChangeWithNSString:[RAREiComponentPainter PROPERTY_OVERLAY_PAINTER] withId:ov withId:painter];
    if (ov != nil) {
      [ov dispose];
    }
    [self imagePainterCheckedAndOkToAddWithRAREiPlatformPainter:painter];
  }
}

- (void)setPainterHolderWithRAREPainterHolder:(RAREPainterHolder *)ph {
  if (ph != painterHolder_) {
    RAREPainterHolder *oph = painterHolder_;
    self->painterHolder_ = ph;
    [self firePropertyChangeWithNSString:[RAREiComponentPainter PROPERTY_PAINTER_HOLDER] withId:oph withId:ph];
  }
}

- (void)setParentShapeWithRAREiPlatformShape:(id<RAREiPlatformShape>)parentShape {
  self->parentShape_ = parentShape;
}

- (void)setSharedBorderWithRARESharedLineBorder:(RARESharedLineBorder *)sharedBorder {
  self->sharedBorder_ = sharedBorder;
}

- (RAREUIColor *)getBackgroundColor {
  if (backgroundPainter_ != nil) {
    return [backgroundPainter_ getBackgroundColor];
  }
  return nil;
}

- (id<RAREiPlatformPainter>)getBackgroundOverlayPainter {
  return bgOverlayPainter_;
}

- (id<RAREiBackgroundPainter>)getBackgroundPainter {
  return backgroundPainter_;
}

- (id<RAREiPlatformBorder>)getBorder {
  return border_;
}

- (id<RAREiPlatformBorder>)getBorderAlways {
  id<RAREiPlatformBorder> b = (painterHolder_ != nil) ? [painterHolder_ getBorderWithRAREiPaintedButton_ButtonStateEnum:[RAREiPaintedButton_ButtonStateEnum DEFAULT]] : nil;
  return (b == nil) ? border_ : b;
}

- (RAREUIColor *)getForegroundColor {
  if ((foregroundColor_ != nil) || (painterHolder_ == nil)) {
    return foregroundColor_;
  }
  ;
  return ((RAREPainterHolder *) nil_chk(painterHolder_))->foregroundColor_;
}

- (id<RAREiPlatformPainter>)getOverlayPainter {
  return overlayPainter_;
}

- (id<RAREiPlatformPaint>)getPaintWithFloat:(float)width
                                  withFloat:(float)height {
  if (border_ != nil) {
    return nil;
  }
  if (bgOverlayPainter_ == nil) {
    return (backgroundPainter_ == nil) ? nil : [backgroundPainter_ getPaintWithFloat:width withFloat:height];
  }
  else if (backgroundPainter_ == nil) {
    return (bgOverlayPainter_ == nil) ? nil : [bgOverlayPainter_ getPaintWithFloat:width withFloat:height];
  }
  return nil;
}

- (RAREPainterHolder *)getPainterHolder {
  return painterHolder_;
}

- (id<RAREiPlatformShape>)getParentShape {
  return parentShape_;
}

- (RARESharedLineBorder *)getSharedBorder {
  return sharedBorder_;
}

- (BOOL)isBackgroundPaintEnabled {
  return (backgroundPainter_ != nil) || (bgOverlayPainter_ != nil);
}

+ (BOOL)isOkToPaintWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                      withRAREiPlatformBorder:(id<RAREiPlatformBorder>)border {
  return YES;
}

+ (BOOL)isOkToPaintWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                     withRAREiPlatformPainter:(id<RAREiPlatformPainter>)p {
  return [RAREaUIComponentPainter isOkToPaintWithRAREiPlatformComponent:c withRAREiPlatformPainter:p withBoolean:YES withBoolean:NO];
}

+ (BOOL)isOkToPaintWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                     withRAREiPlatformPainter:(id<RAREiPlatformPainter>)p
                                  withBoolean:(BOOL)hasValue
                                  withBoolean:(BOOL)isOverlay {
  RAREDisplayedEnum *displayed = [((id<RAREiPlatformPainter>) nil_chk(p)) getDisplayed];
  if ((c == nil) || (displayed == nil)) {
    return YES;
  }
  switch ([displayed ordinal]) {
    case RAREDisplayed_ALWAYS:
    return YES;
    case RAREDisplayed_BEFORE_FIRST_FOCUS:
    return [((id<RAREiPlatformComponent>) nil_chk(c)) hasBeenFocused];
    case RAREDisplayed_BEFORE_INTERACTION:
    return ![((id<RAREiPlatformComponent>) nil_chk(c)) hasHadInteraction];
    case RAREDisplayed_WHEN_EMPTY:
    return !hasValue;
    case RAREDisplayed_WHEN_FOCUSED:
    return [((id<RAREiPlatformComponent>) nil_chk(c)) isFocusOwner];
    case RAREDisplayed_WHEN_NOT_FOCUSED:
    return ![((id<RAREiPlatformComponent>) nil_chk(c)) isFocusOwner];
    case RAREDisplayed_WHEN_WIDGET_FOCUSED:
    return [RAREaUIComponentPainter isWidgetFocusedWithRAREiWidget:[RAREPlatform findWidgetForComponentWithId:c]];
    case RAREDisplayed_WHEN_WIDGET_NOT_FOCUSED:
    return ![RAREaUIComponentPainter isWidgetFocusedWithRAREiWidget:[RAREPlatform findWidgetForComponentWithId:c]];
    case RAREDisplayed_WHEN_PARENT_WIDGET_FOCUSED:
    return [RAREaUIComponentPainter isParentWidgetFocusedWithRAREiWidget:[RAREPlatform findWidgetForComponentWithId:c]];
    case RAREDisplayed_WHEN_PARENT_WIDGET_NOT_FOCUSED:
    return ![RAREaUIComponentPainter isParentWidgetFocusedWithRAREiWidget:[RAREPlatform findWidgetForComponentWithId:c]];
    case RAREDisplayed_WHEN_CHILD_WIDGET_FOCUSED:
    return [RAREaUIComponentPainter isChildOfWithRAREiPlatformComponent:c withRAREiPlatformComponent:[((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getPermanentFocusOwner]];
    case RAREDisplayed_WHEN_CHILD_WIDGET_NOT_FOCUSED:
    return ![RAREaUIComponentPainter isChildOfWithRAREiPlatformComponent:c withRAREiPlatformComponent:[((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getPermanentFocusOwner]];
    case RAREDisplayed_WHEN_WINDOW_FOCUSED:
    return [RAREaUIComponentPainter isWindowFocusedWithRAREWindowViewer:[RAREPlatform getWindowViewerWithRAREiPlatformComponent:c]];
    case RAREDisplayed_WHEN_WINDOW_NOT_FOCUSED:
    return ![RAREaUIComponentPainter isWindowFocusedWithRAREWindowViewer:[RAREPlatform getWindowViewerWithRAREiPlatformComponent:c]];
    default:
    return YES;
  }
}

- (BOOL)isSingleColorPainter {
  if (overlayPainter_ != nil) {
    return NO;
  }
  if ((bgOverlayPainter_ != nil) && (backgroundPainter_ != nil)) {
    return NO;
  }
  if (backgroundPainter_ != nil) {
    if (![backgroundPainter_ isSingleColorPainter]) {
      return NO;
    }
  }
  if (bgOverlayPainter_ != nil) {
    return NO;
  }
  return YES;
}

- (void)disposeEx {
  if (changeSupport_ != nil) {
    [changeSupport_ dispose];
  }
  if (backgroundPainter_ != nil) {
    [backgroundPainter_ dispose];
  }
  if (bgOverlayPainter_ != nil) {
    [bgOverlayPainter_ dispose];
  }
  if (overlayPainter_ != nil) {
    [overlayPainter_ dispose];
  }
  backgroundPainter_ = nil;
  bgOverlayPainter_ = nil;
  border_ = nil;
  changeListener_ = nil;
  changeSupport_ = nil;
  overlayPainter_ = nil;
  painterHolder_ = nil;
  sharedBorder_ = nil;
  [super disposeEx];
}

- (void)firePropertyChangeWithNSString:(NSString *)propertyName
                                withId:(id)oldValue
                                withId:(id)newValue {
  modCount_++;
  if (changeListener_ != nil) {
    [changeListener_ propertyChangeWithJavaBeansPropertyChangeEvent:[[JavaBeansPropertyChangeEvent alloc] initWithId:self withNSString:propertyName withId:oldValue withId:newValue]];
  }
  if (changeSupport_ != nil) {
    [changeSupport_ firePropertyChangeWithNSString:propertyName withId:oldValue withId:newValue];
  }
}

- (void)fixPainterholderWithBoolean:(BOOL)forForeground
                        withBoolean:(BOOL)forBorder {
  RAREPainterHolder *ph = painterHolder_;
  if (ph != nil) {
    if ([ph isShared]) {
      ph = (RAREPainterHolder *) check_class_cast([ph clone], [RAREPainterHolder class]);
      painterHolder_ = ph;
    }
    if (((RAREPainterHolder *) nil_chk(ph))->normalPainter_ == nil) {
      ph->normalPainter_ = [[RAREPaintBucket alloc] init];
    }
    else {
      ph->normalPainter_ = (RAREPaintBucket *) check_class_cast([ph->normalPainter_ clone], [RAREPaintBucket class]);
    }
    if (forForeground) {
      [((RAREPaintBucket *) nil_chk(ph->normalPainter_)) setForegroundColorWithRAREUIColor:foregroundColor_];
    }
    else if (forBorder) {
      [((RAREPaintBucket *) nil_chk(ph->normalPainter_)) setBorderWithRAREiPlatformBorder:border_];
    }
    else {
      [((RAREPaintBucket *) nil_chk(ph->normalPainter_)) setBackgroundPainterWithRAREiBackgroundPainter:backgroundPainter_];
    }
  }
}

- (void)handleColorShadeWithRAREUIColorShade:(RAREUIColorShade *)cs {
}

+ (BOOL)isParentWidgetFocusedWithRAREiWidget:(id<RAREiWidget>)w {
  w = (w == nil) ? nil : [w getParent];
  return (w == nil) ? NO : [w isFocusOwner];
}

+ (BOOL)isWidgetFocusedWithRAREiWidget:(id<RAREiWidget>)w {
  return (w == nil) ? NO : [w isFocusOwner];
}

+ (BOOL)isWindowFocusedWithRAREWindowViewer:(RAREWindowViewer *)win {
  return (win == nil) ? NO : [win isShowing];
}

- (BOOL)imagePainterCheckedAndOkToAddWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)p {
  if ([(id) p isKindOfClass:[RAREUIImagePainter class]]) {
    RAREUIImagePainter *ip = (RAREUIImagePainter *) check_class_cast(p, [RAREUIImagePainter class]);
    if (([((RAREUIImagePainter *) nil_chk(ip)) getImage] != nil) && [((RAREUIImage *) nil_chk([ip getImage])) isLoadedWithRAREiImageObserver:self]) {
      return YES;
    }
    return NO;
  }
  return YES;
}

+ (BOOL)isChildOfWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)parent
                 withRAREiPlatformComponent:(id<RAREiPlatformComponent>)child {
  return [RAREPlatform isDescendingFromWithRAREiPlatformComponent:child withRAREiPlatformComponent:parent];
}

- (RAREUIColor *)getBackgroundColorEx {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)updateForStateWithRAREaView:(RAREaView *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (void)initialize {
  if (self == [RAREaUIComponentPainter class]) {
    RAREaUIComponentPainter_isApple_ = [RAREPlatform isIOS] || [RAREPlatform isMac];
    RAREaUIComponentPainter_paintFocus__ = ![RAREPlatform isTouchDevice];
  }
}

- (void)copyAllFieldsTo:(RAREaUIComponentPainter *)other {
  [super copyAllFieldsTo:other];
  other->backgroundPainter_ = backgroundPainter_;
  other->bgOverlayPainter_ = bgOverlayPainter_;
  other->border_ = border_;
  other->borderModCount_ = borderModCount_;
  other->changeListener_ = changeListener_;
  other->changeSupport_ = changeSupport_;
  other->foregroundColor_ = foregroundColor_;
  other->insets_ = insets_;
  other->overlayPainter_ = overlayPainter_;
  other->paintAll_ = paintAll_;
  other->painterHolder_ = painterHolder_;
  other->parentShape_ = parentShape_;
  other->sharedBorder_ = sharedBorder_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "clone", NULL, "LNSObject", 0x1, NULL },
    { "getBackgroundColor", NULL, "LRAREUIColor", 0x1, NULL },
    { "getBackgroundOverlayPainter", NULL, "LRAREiPlatformPainter", 0x1, NULL },
    { "getBackgroundPainter", NULL, "LRAREiBackgroundPainter", 0x1, NULL },
    { "getBorder", NULL, "LRAREiPlatformBorder", 0x1, NULL },
    { "getBorderAlways", NULL, "LRAREiPlatformBorder", 0x1, NULL },
    { "getForegroundColor", NULL, "LRAREUIColor", 0x1, NULL },
    { "getOverlayPainter", NULL, "LRAREiPlatformPainter", 0x1, NULL },
    { "getPaintWithFloat:withFloat:", NULL, "LRAREiPlatformPaint", 0x1, NULL },
    { "getPainterHolder", NULL, "LRAREPainterHolder", 0x1, NULL },
    { "getParentShape", NULL, "LRAREiPlatformShape", 0x1, NULL },
    { "getSharedBorder", NULL, "LRARESharedLineBorder", 0x1, NULL },
    { "isBackgroundPaintEnabled", NULL, "Z", 0x1, NULL },
    { "isOkToPaintWithRAREiPlatformComponent:withRAREiPlatformBorder:", NULL, "Z", 0x9, NULL },
    { "isOkToPaintWithRAREiPlatformComponent:withRAREiPlatformPainter:", NULL, "Z", 0x9, NULL },
    { "isOkToPaintWithRAREiPlatformComponent:withRAREiPlatformPainter:withBoolean:withBoolean:", NULL, "Z", 0x9, NULL },
    { "isSingleColorPainter", NULL, "Z", 0x1, NULL },
    { "disposeEx", NULL, "V", 0x4, NULL },
    { "firePropertyChangeWithNSString:withId:withId:", NULL, "V", 0x4, NULL },
    { "fixPainterholderWithBoolean:withBoolean:", NULL, "V", 0x4, NULL },
    { "handleColorShadeWithRAREUIColorShade:", NULL, "V", 0x4, NULL },
    { "isParentWidgetFocusedWithRAREiWidget:", NULL, "Z", 0xc, NULL },
    { "isWidgetFocusedWithRAREiWidget:", NULL, "Z", 0xc, NULL },
    { "isWindowFocusedWithRAREWindowViewer:", NULL, "Z", 0xc, NULL },
    { "imagePainterCheckedAndOkToAddWithRAREiPlatformPainter:", NULL, "Z", 0x2, NULL },
    { "isChildOfWithRAREiPlatformComponent:withRAREiPlatformComponent:", NULL, "Z", 0xa, NULL },
    { "getBackgroundColorEx", NULL, "LRAREUIColor", 0x401, NULL },
    { "updateForStateWithRAREaView:", NULL, "V", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "isApple_", NULL, 0xc, "Z" },
    { "paintFocus__", "paintFocus", 0x9, "Z" },
    { "focusPaint_", NULL, 0xc, "LRAREPaintBucket" },
    { "borderModCount_", NULL, 0x0, "I" },
    { "backgroundPainter_", NULL, 0x4, "LRAREiBackgroundPainter" },
    { "bgOverlayPainter_", NULL, 0x4, "LRAREiPlatformPainter" },
    { "border_", NULL, 0x4, "LRAREiPlatformBorder" },
    { "changeListener_", NULL, 0x4, "LJavaBeansPropertyChangeListener" },
    { "changeSupport_", NULL, 0x4, "LRAREPropertyChangeSupportEx" },
    { "foregroundColor_", NULL, 0x4, "LRAREUIColor" },
    { "insets_", NULL, 0x4, "LRAREUIInsets" },
    { "overlayPainter_", NULL, 0x4, "LRAREiPlatformPainter" },
    { "painterHolder_", NULL, 0x4, "LRAREPainterHolder" },
    { "parentShape_", NULL, 0x4, "LRAREiPlatformShape" },
    { "sharedBorder_", NULL, 0x4, "LRARESharedLineBorder" },
    { "paintAll_", NULL, 0x4, "Z" },
  };
  static J2ObjcClassInfo _RAREaUIComponentPainter = { "aUIComponentPainter", "com.appnativa.rare.ui.painter", NULL, 0x401, 28, methods, 16, fields, 0, NULL};
  return &_RAREaUIComponentPainter;
}

@end
