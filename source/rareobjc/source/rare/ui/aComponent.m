//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/aComponent.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIColorHelper.h"
#include "com/appnativa/rare/ui/UICursor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIFontHelper.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/UIPoint.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/aComponent.h"
#include "com/appnativa/rare/ui/effects/aAnimator.h"
#include "com/appnativa/rare/ui/event/ChangeEvent.h"
#include "com/appnativa/rare/ui/event/EventListenerList.h"
#include "com/appnativa/rare/ui/event/KeyEvent.h"
#include "com/appnativa/rare/ui/event/MouseEvent.h"
#include "com/appnativa/rare/ui/iComponent.h"
#include "com/appnativa/rare/ui/iParentComponent.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformGraphics.h"
#include "com/appnativa/rare/ui/listener/iFocusListener.h"
#include "com/appnativa/rare/ui/listener/iKeyListener.h"
#include "com/appnativa/rare/ui/listener/iMouseListener.h"
#include "com/appnativa/rare/ui/listener/iMouseMotionListener.h"
#include "com/appnativa/rare/ui/listener/iTextChangeListener.h"
#include "com/appnativa/rare/ui/listener/iViewListener.h"
#include "com/appnativa/rare/ui/painter/PaintBucket.h"
#include "com/appnativa/rare/ui/painter/UIComponentPainter.h"
#include "com/appnativa/rare/ui/painter/iPainterSupport.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/util/PropertyChangeSupportEx.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/jgoodies/forms/layout/CellConstraints.h"
#include "java/beans/PropertyChangeListener.h"
#include "java/lang/CharSequence.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/util/HashMap.h"

@implementation RAREaComponent

- (id)init {
  if (self = [super init]) {
    computeInsets_ = [[RAREUIInsets alloc] initWithInt:0 withInt:0 withInt:0 withInt:0];
    useBorderInSizeCalculation_ = YES;
    orientation_ = [RARERenderableDataItem_OrientationEnum HORIZONTAL];
    checkMinWhenCalculatingPreferred_ = YES;
    opaque_ = YES;
  }
  return self;
}

- (void)addFocusListenerWithRAREiFocusListener:(id<RAREiFocusListener>)l {
  [((RAREEventListenerList *) nil_chk([self getEventListenerList])) removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiFocusListener)] withId:l];
  [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiFocusListener)] withId:l];
}

- (BOOL)isScaleIcon {
  return NO;
}

- (float)getIconScaleFactor {
  return 1;
}

- (void)setScaleIconWithBoolean:(BOOL)scale_
                      withFloat:(float)scaleFactor {
}

- (void)addKeyListenerWithRAREiKeyListener:(id<RAREiKeyListener>)l {
  if (l == self) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Cannot this component as a key listener to itself"];
  }
  if (l != nil) {
    [((RAREEventListenerList *) nil_chk([self getEventListenerList])) removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiKeyListener)] withId:l];
    [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiKeyListener)] withId:l];
  }
}

- (void)addMouseListenerWithRAREiMouseListener:(id<RAREiMouseListener>)l {
  if (l == self) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Cannot this component as a mouse listener to itself"];
  }
  if (l != nil) {
    [((RAREEventListenerList *) nil_chk([self getEventListenerList])) removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiMouseListener)] withId:l];
    [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiMouseListener)] withId:l];
  }
}

- (void)addMouseMotionListenerWithRAREiMouseMotionListener:(id<RAREiMouseMotionListener>)l {
  if (l == self) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Cannot this component as a mouse motion listener to itself"];
  }
  if (l != nil) {
    wantsMoveEvents_ = [l wantsMouseMovedEvents];
    [((RAREEventListenerList *) nil_chk([self getEventListenerList])) removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiMouseMotionListener)] withId:l];
    [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiMouseMotionListener)] withId:l];
  }
}

- (void)addPropertyChangeListenerWithNSString:(NSString *)propertyName
          withJavaBeansPropertyChangeListener:(id<JavaBeansPropertyChangeListener>)listener {
  if (listener != nil) {
    if (changeSupport_ == nil) {
      changeSupport_ = [[RAREPropertyChangeSupportEx alloc] initWithId:self];
    }
    [((RAREPropertyChangeSupportEx *) nil_chk(changeSupport_)) addPropertyChangeListenerWithNSString:propertyName withJavaBeansPropertyChangeListener:listener];
  }
}

- (void)addTextChangeListenerWithRAREiTextChangeListener:(id<RAREiTextChangeListener>)l {
  if (l == self) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Cannot this component as a text change listener to itself"];
  }
  if (l != nil) {
    [((RAREEventListenerList *) nil_chk([self getEventListenerList])) removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiTextChangeListener)] withId:l];
    [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiTextChangeListener)] withId:l];
  }
}

- (void)addViewListenerWithRAREiViewListener:(id<RAREiViewListener>)l {
  [((RAREEventListenerList *) nil_chk([self getEventListenerList])) removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiViewListener)] withId:l];
  [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiViewListener)] withId:l];
  if ([((id<RAREiViewListener>) nil_chk(l)) wantsResizeEvent]) {
    wantsViewResizeEvent_ = YES;
  }
}

- (BOOL)setAlphaWithFloat:(float)alpha {
  return [RAREPlatformHelper setComponentAlphaWithRAREiPlatformComponent:self withFloat:alpha];
}

- (BOOL)adjustMinimumHeightForWidth {
  return NO;
}

- (void)dispose {
  if (listenerList_ != nil) {
    [listenerList_ clear];
    listenerList_ = nil;
  }
  widget_ = nil;
  if (changeSupport_ != nil) {
    [changeSupport_ dispose];
  }
  if (properties_ != nil) {
    [properties_ clear];
  }
  changeSupport_ = nil;
  constraints_ = nil;
  properties_ = nil;
  disposed_ = YES;
  computeInsets_ = nil;
}

- (void)focusChangedWithId:(id)view
               withBoolean:(BOOL)hasFocus
                    withId:(id)oppositeView {
  if ((view == nil) || disposed_) {
    return;
  }
  if (focusPainted_ && ![self isDisposed] && [self isShowing]) {
    id<RAREiParentComponent> p = [self getParent];
    if ((p != nil) && ([p getOrientation] != [RARERenderableDataItem_OrientationEnum HORIZONTAL])) {
      [p repaint];
    }
    [self repaint];
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if ((IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiFocusListener)]) && (IOSObjectArray_Get(listeners, i + 1) != self)) {
        [((id<RAREiFocusListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiFocusListener))) focusChangedWithId:view withBoolean:hasFocus withId:oppositeView];
      }
    }
  }
}

- (BOOL)heightChangesBasedOnWidth {
  return NO;
}

- (void)imageLoadedWithRAREUIImage:(RAREUIImage *)image {
  [self revalidate];
  [self repaint];
}

- (void)keyPressedWithRAREKeyEvent:(RAREKeyEvent *)e {
  if (disposed_) {
    return;
  }
  if (interactionListenerAdded_) {
    [self interacted];
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if ((IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiKeyListener)]) && (IOSObjectArray_Get(listeners, i + 1) != self)) {
        [((id<RAREiKeyListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiKeyListener))) keyPressedWithRAREKeyEvent:e];
      }
    }
  }
}

- (void)keyReleasedWithRAREKeyEvent:(RAREKeyEvent *)e {
  if (disposed_) {
    return;
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if ((IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiKeyListener)]) && (IOSObjectArray_Get(listeners, i + 1) != self)) {
        [((id<RAREiKeyListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiKeyListener))) keyReleasedWithRAREKeyEvent:e];
      }
    }
  }
}

- (void)keyTypedWithRAREKeyEvent:(RAREKeyEvent *)e {
  if (disposed_) {
    return;
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if ((IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiKeyListener)]) && (IOSObjectArray_Get(listeners, i + 1) != self)) {
        [((id<RAREiKeyListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiKeyListener))) keyTypedWithRAREKeyEvent:e];
      }
    }
  }
}

- (void)mouseDraggedWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (disposed_) {
    return;
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if ((IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiMouseMotionListener)]) && (IOSObjectArray_Get(listeners, i + 1) != self)) {
        [((id<RAREiMouseMotionListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiMouseMotionListener))) mouseDraggedWithRAREMouseEvent:e];
      }
    }
  }
}

- (void)mouseEnteredWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (disposed_) {
    return;
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if ((IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiMouseListener)]) && (IOSObjectArray_Get(listeners, i + 1) != self)) {
        [((id<RAREiMouseListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiMouseListener))) mouseEnteredWithRAREMouseEvent:e];
      }
    }
  }
}

- (void)mouseExitedWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (disposed_) {
    return;
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if ((IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiMouseListener)]) && (IOSObjectArray_Get(listeners, i + 1) != self)) {
        [((id<RAREiMouseListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiMouseListener))) mouseExitedWithRAREMouseEvent:e];
      }
    }
  }
}

- (void)mouseMovedWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (disposed_) {
    return;
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if ((IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiMouseMotionListener)]) && (IOSObjectArray_Get(listeners, i + 1) != self)) {
        [((id<RAREiMouseMotionListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiMouseMotionListener))) mouseMovedWithRAREMouseEvent:e];
      }
    }
  }
}

- (void)mousePressedWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (disposed_) {
    return;
  }
  if (interactionListenerAdded_) {
    [self interacted];
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if ((IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiMouseListener)]) && (IOSObjectArray_Get(listeners, i + 1) != self)) {
        [((id<RAREiMouseListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiMouseListener))) mousePressedWithRAREMouseEvent:e];
      }
    }
  }
}

- (void)mouseReleasedWithRAREMouseEvent:(RAREMouseEvent *)e {
  if (disposed_) {
    return;
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if ((IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiMouseListener)]) && (IOSObjectArray_Get(listeners, i + 1) != self)) {
        [((id<RAREiMouseListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiMouseListener))) mouseReleasedWithRAREMouseEvent:e];
      }
    }
  }
}

- (void)pressCanceledWithRAREMouseEvent:(RAREMouseEvent *)e {
}

- (void)putClientPropertyWithNSString:(NSString *)key
                               withId:(id)value {
  if (key == [RAREiConstants RARE_WIDTH_PROPERTY]) {
    sageWidth_ = (NSString *) check_class_cast(value, [NSString class]);
  }
  else if (key == [RAREiConstants RARE_HEIGHT_PROPERTY]) {
    sageHeight_ = (NSString *) check_class_cast(value, [NSString class]);
  }
  else if (key == [RAREiConstants RARE_MIN_WIDTH_PROPERTY]) {
    sageMinWidth_ = (NSString *) check_class_cast(value, [NSString class]);
  }
  else if (key == [RAREiConstants RARE_MIN_HEIGHT_PROPERTY]) {
    sageMinHeight_ = (NSString *) check_class_cast(value, [NSString class]);
  }
  else if (key == [RAREiConstants RARE_WIDGET_COMPONENT_PROPERTY]) {
    widget_ = (id<RAREiWidget>) check_protocol_cast(value, @protocol(RAREiWidget));
  }
  else if (key == [RAREiConstants RARE_CONSTRAINTS_PROPERTY]) {
    constraints_ = value;
  }
  else {
    [self putClientPropertyExWithNSString:key withId:value];
  }
}

- (void)removeFocusListenerWithRAREiFocusListener:(id<RAREiFocusListener>)l {
  if (listenerList_ != nil) {
    [listenerList_ removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiFocusListener)] withId:l];
  }
}

- (void)removeFromParent {
  id<RAREiParentComponent> p = [self isDisposed] ? nil : [self getParent];
  if ((p != nil) && ![p isDisposed]) {
    [p removeWithRAREiPlatformComponent:self];
  }
}

- (void)removeKeyListenerWithRAREiKeyListener:(id<RAREiKeyListener>)l {
  if (listenerList_ != nil) {
    [listenerList_ removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiKeyListener)] withId:l];
  }
}

- (void)removeMouseListenerWithRAREiMouseListener:(id<RAREiMouseListener>)l {
  if (listenerList_ != nil) {
    [listenerList_ removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiMouseListener)] withId:l];
  }
}

- (void)removeMouseMotionListenerWithRAREiMouseMotionListener:(id<RAREiMouseMotionListener>)l {
  if (listenerList_ != nil) {
    [listenerList_ removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiMouseMotionListener)] withId:l];
  }
}

- (void)removePropertyChangeListenerWithNSString:(NSString *)propertyName
             withJavaBeansPropertyChangeListener:(id<JavaBeansPropertyChangeListener>)listener {
  if ((listener != nil) && (changeSupport_ != nil)) {
    [changeSupport_ removePropertyChangeListenerWithNSString:propertyName withJavaBeansPropertyChangeListener:listener];
  }
}

- (void)removeTextChangeListenerWithRAREiTextChangeListener:(id<RAREiTextChangeListener>)l {
  if ((l != self) && (l != nil) && (listenerList_ != nil)) {
    [listenerList_ removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiTextChangeListener)] withId:l];
  }
}

- (void)removeViewListenerWithRAREiViewListener:(id<RAREiViewListener>)l {
  if (listenerList_ != nil) {
    [((RAREEventListenerList *) nil_chk([self getEventListenerList])) removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiViewListener)] withId:l];
  }
}

- (void)requestFocusWithBoolean:(BOOL)temporary {
  [self requestFocus];
}

- (BOOL)shouldStopEditingWithId:(id)source {
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiTextChangeListener)]) {
        if (![((id<RAREiTextChangeListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiTextChangeListener))) shouldStopEditingWithId:self]) {
          return NO;
        }
      }
    }
  }
  return YES;
}

- (void)textChangedWithId:(id)source {
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiTextChangeListener)]) {
        [((id<RAREiTextChangeListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiTextChangeListener))) textChangedWithId:self];
      }
    }
  }
}

- (BOOL)textChangingWithId:(id)source
                   withInt:(int)startIndex
                   withInt:(int)endIndex
  withJavaLangCharSequence:(id<JavaLangCharSequence>)replacementString {
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiTextChangeListener)]) {
        if (![((id<RAREiTextChangeListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiTextChangeListener))) textChangingWithId:self withInt:startIndex withInt:endIndex withJavaLangCharSequence:replacementString]) {
          return NO;
        }
      }
    }
  }
  return YES;
}

- (void)updateUI {
  [self revalidate];
  [self repaint];
}

- (void)viewHiddenWithRAREChangeEvent:(RAREChangeEvent *)e {
  if (disposed_ || ![self hasListenersWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiViewListener)]] || [RAREaAnimator isViewEventsDisabledWithRAREiPlatformComponent:self]) {
    return;
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiViewListener)]) {
        [((id<RAREiViewListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiViewListener))) viewHiddenWithRAREChangeEvent:e];
      }
    }
  }
}

- (void)viewResizedWithRAREChangeEvent:(RAREChangeEvent *)e {
  if (disposed_ || ![self hasListenersWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiViewListener)]] || [RAREaAnimator isViewEventsDisabledWithRAREiPlatformComponent:self]) {
    return;
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiViewListener)]) {
        [((id<RAREiViewListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiViewListener))) viewResizedWithRAREChangeEvent:e];
      }
    }
  }
}

- (void)viewShownWithRAREChangeEvent:(RAREChangeEvent *)e {
  if (disposed_ || ![self hasListenersWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiViewListener)]] || [RAREaAnimator isViewEventsDisabledWithRAREiPlatformComponent:self]) {
    return;
  }
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiViewListener)]) {
        [((id<RAREiViewListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiViewListener))) viewShownWithRAREChangeEvent:e];
      }
    }
  }
}

- (BOOL)wantsLongPress {
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiMouseListener)]) {
        if ([((id<RAREiMouseListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiMouseListener))) wantsLongPress]) {
          return YES;
        }
      }
    }
  }
  return NO;
}

- (BOOL)wantsMouseMovedEvents {
  return wantsMoveEvents_;
}

- (BOOL)wantsResizeEvent {
  return wantsViewResizeEvent_;
}

- (void)setBoundsWithRAREUIRectangle:(RAREUIRectangle *)bounds {
  [self setBoundsWithFloat:((RAREUIRectangle *) nil_chk(bounds))->x_ withFloat:bounds->y_ withFloat:bounds->width_ withFloat:bounds->height_];
}

- (void)setBoundsWithInt:(int)x
                 withInt:(int)y
                 withInt:(int)width
                 withInt:(int)height {
  [self setBoundsWithFloat:(float) x withFloat:(float) y withFloat:(float) width withFloat:(float) height];
}

- (void)setDisabledColorWithRAREUIColor:(RAREUIColor *)color {
  disabledColor_ = color;
}

- (void)setDisabledForegroundWithRAREUIColor:(RAREUIColor *)fg {
  id<RAREiPlatformComponentPainter> cp = [self getComponentPainterWithBoolean:YES];
  [((id<RAREiPlatformComponentPainter>) nil_chk(cp)) setDisabledForegroundColorWithRAREUIColor:fg];
}

- (void)setFocusPaintWithRAREPaintBucket:(RAREPaintBucket *)focusPaint {
  self->focusPaint_ = focusPaint;
}

- (void)setFocusPaintedWithBoolean:(BOOL)focusPainted {
  self->focusPainted_ = focusPainted;
  if (focusPainted) {
    [self removeFocusListenerWithRAREiFocusListener:self];
    [self addFocusListenerWithRAREiFocusListener:self];
  }
}

- (void)setLockedWithBoolean:(BOOL)lock {
  locked_ = lock;
  [self setEnabledWithBoolean:!lock];
}

- (void)setOrientationWithRARERenderableDataItem_OrientationEnum:(RARERenderableDataItem_OrientationEnum *)orientation {
  self->orientation_ = orientation;
}

- (void)setSelectedWithBoolean:(BOOL)selected {
}

- (void)setSizeLockedWithBoolean:(BOOL)sizeLocked {
  self->sizeLocked_ = sizeLocked;
}

- (void)setPreferredSizeWithFloat:(float)width
                        withFloat:(float)height {
  NSString *w = nil;
  NSString *h = nil;
  if (height != -1) {
    h = [NSString stringWithFormat:@"%fpx", height];
  }
  if (width != -1) {
    w = [NSString stringWithFormat:@"%fpx", width];
  }
  [self putClientPropertyWithNSString:[RAREiConstants RARE_WIDTH_PROPERTY] withId:w];
  [self putClientPropertyWithNSString:[RAREiConstants RARE_HEIGHT_PROPERTY] withId:h];
}

- (void)setWidgetWithRAREiWidget:(id<RAREiWidget>)widget {
  self->widget_ = widget;
}

- (RAREUIColor *)getBackground {
  RAREUIColor *bg = [self getBackgroundEx];
  if (bg != nil) {
    return bg;
  }
  if ([self getParent] != nil) {
    return [((id<RAREiParentComponent>) nil_chk([self getParent])) getBackground];
  }
  return [RAREColorUtils getBackground];
}

- (RAREUIColor *)getBackgroundEx {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getBottom {
  return [self getY] + [self getHeight];
}

- (id)getClientPropertyWithNSString:(NSString *)key {
  if (disposed_) {
    return nil;
  }
  if (key == [RAREiConstants RARE_WIDTH_PROPERTY]) {
    return sageWidth_;
  }
  else if (key == [RAREiConstants RARE_HEIGHT_PROPERTY]) {
    return sageHeight_;
  }
  else if (key == [RAREiConstants RARE_MIN_WIDTH_PROPERTY]) {
    return sageMinWidth_;
  }
  else if (key == [RAREiConstants RARE_MIN_HEIGHT_PROPERTY]) {
    return sageMinHeight_;
  }
  else if (key == [RAREiConstants RARE_WIDGET_COMPONENT_PROPERTY]) {
    return widget_;
  }
  else if (key == [RAREiConstants RARE_CONSTRAINTS_PROPERTY]) {
    return constraints_;
  }
  return [self getClientPropertyExWithNSString:key];
}

- (id<RAREiPlatformComponentPainter>)getComponentPainter {
  return [self getComponentPainterWithBoolean:NO];
}

- (RAREUIColor *)getDisabledColor {
  return disabledColor_;
}

- (RAREUIInsets *)getFocusInsetsWithRAREUIInsets:(RAREUIInsets *)insets {
  return nil;
}

- (RAREPaintBucket *)getFocusPaintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                                        withRAREPaintBucket:(RAREPaintBucket *)def {
  if (!focusPainted_ || ![self isFocusOwner]) {
    return nil;
  }
  return (focusPaint_ == nil) ? def : focusPaint_;
}

- (RAREUIFont *)getFont {
  RAREUIFont *f = [self getFontEx];
  if (f != nil) {
    return f;
  }
  if ([self getParent] != nil) {
    return [((id<RAREiParentComponent>) nil_chk([self getParent])) getFont];
  }
  return [RAREUIFontHelper getDefaultFont];
}

- (RAREUIFont *)getFontEx {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (RAREUIColor *)getForeground {
  RAREUIColor *fg = [self getForegroundEx];
  if (fg != nil) {
    return fg;
  }
  if ([self getParent] != nil) {
    return [((id<RAREiParentComponent>) nil_chk([self getParent])) getForeground];
  }
  return [RAREUIColorHelper getForeground];
}

- (RAREUIColor *)getForegroundEx {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiWidget>)getHostWidget {
  return (widget_ != nil) ? widget_ : [RAREPlatform findWidgetForComponentWithId:self];
}

- (RAREUIRectangle *)getInnerBoundsWithRAREUIRectangle:(RAREUIRectangle *)rect {
  if (rect == nil) {
    rect = [[RAREUIRectangle alloc] init];
  }
  ((RAREUIRectangle *) nil_chk(rect))->x_ = 0;
  rect->y_ = 0;
  rect->width_ = [self getWidth];
  rect->height_ = [self getHeight];
  id<RAREiPlatformBorder> b = [self getBorder];
  if (b != nil) {
    RAREUIInsets *in = [b getBorderInsetsWithRAREUIInsets:[[RAREUIInsets alloc] init]];
    rect->x_ = ((RAREUIInsets *) nil_chk(in))->left_;
    rect->y_ = in->top_;
    rect->width_ -= (in->left_ + in->right_);
    rect->height_ -= (in->top_ + in->bottom_);
  }
  return rect;
}

- (RAREUIDimension *)getInnerSizeWithRAREUIDimension:(RAREUIDimension *)size {
  size = [self getSizeWithRAREUIDimension:size];
  id<RAREiPlatformBorder> b = [self getBorder];
  if (b != nil) {
    RAREUIInsets *in = [b getBorderInsetsWithRAREUIInsets:[[RAREUIInsets alloc] init]];
    ((RAREUIDimension *) nil_chk(size))->width_ -= (((RAREUIInsets *) nil_chk(in))->left_ + in->right_);
    size->height_ -= (in->top_ + in->bottom_);
  }
  return size;
}

- (int)getLeft {
  return [self getX];
}

- (RAREUIPoint *)getLocation {
  return [self getLocationWithRAREUIPoint:[[RAREUIPoint alloc] init]];
}

- (RAREUIPoint *)getLocationWithRAREUIPoint:(RAREUIPoint *)loc {
  if (loc == nil) {
    loc = [[RAREUIPoint alloc] initWithFloat:[self getX] withFloat:[self getY]];
  }
  else {
    loc->x_ = [self getX];
    loc->y_ = [self getY];
  }
  return loc;
}

- (RAREUIPoint *)getLocationOnScreen {
  return [self getLocationOnScreenWithRAREUIPoint:nil];
}

- (RAREUIDimension *)getMinimumSize {
  return [self getMinimumSizeWithRAREUIDimension:[[RAREUIDimension alloc] init]];
}

- (RAREUIDimension *)getMinimumSizeWithRAREUIDimension:(RAREUIDimension *)size {
  if (sizeLocked_) {
    return [self getSizeWithRAREUIDimension:size];
  }
  float h = -1;
  float w = -1;
  if (size == nil) {
    size = [[RAREUIDimension alloc] init];
  }
  BOOL pget = NO;
  if (sageMinHeight_ != nil) {
    if ([sageMinHeight_ isEqual:@"!"]) {
      (void) [self getPreferredSizeWithRAREUIDimension:size];
      h = ((RAREUIDimension *) nil_chk(size))->height_;
    }
    else {
      h = [RAREScreenUtils toPlatformPixelHeightWithNSString:sageMinHeight_ withRAREiPlatformComponent:self withFloat:-1];
    }
  }
  if (sageMinWidth_ != nil) {
    if ([sageMinWidth_ isEqual:@"!"]) {
      if (!pget) {
        (void) [self getPreferredSizeWithRAREUIDimension:size];
      }
      w = ((RAREUIDimension *) nil_chk(size))->width_;
    }
    else {
      w = [RAREScreenUtils toPlatformPixelWidthWithNSString:sageMinWidth_ withRAREiPlatformComponent:self withFloat:-1];
    }
  }
  if ((h > -1) && (w > -1)) {
    [((RAREUIDimension *) nil_chk(size)) setSizeWithDouble:w withDouble:h];
    return [[RAREUIDimension alloc] initWithFloat:w withFloat:h];
  }
  [self getMinimumSizeExWithRAREUIDimension:size];
  if (useBorderInSizeCalculation_) {
    id<RAREiPlatformBorder> b = [self getBorder];
    RAREUIInsets *in = (b == nil) ? nil : [b getBorderInsetsWithRAREUIInsets:computeInsets_];
    if (in != nil) {
      ((RAREUIDimension *) nil_chk(size))->width_ += in->left_ + in->right_;
      size->height_ += in->top_ + in->bottom_;
    }
  }
  if (w > -1) {
    ((RAREUIDimension *) nil_chk(size))->width_ = [JavaLangMath maxWithFloat:w withFloat:size->width_];
  }
  if (h > -1) {
    ((RAREUIDimension *) nil_chk(size))->height_ = [JavaLangMath maxWithFloat:h withFloat:size->height_];
  }
  return size;
}

- (RARERenderableDataItem_OrientationEnum *)getOrientation {
  return orientation_;
}

- (RAREUIPoint *)getOrientedLocationWithRAREUIPoint:(RAREUIPoint *)loc {
  (void) [self getLocationWithRAREUIPoint:loc];
  id<RAREiPlatformComponent> c = [self getParent];
  float n;
  if (c != nil) {
    {
      RAREUIDimension *size;
      switch ([[c getOrientation] ordinal]) {
        case RARERenderableDataItem_Orientation_VERTICAL_DOWN:
        n = ((RAREUIPoint *) nil_chk(loc))->x_;
        loc->x_ = loc->y_;
        loc->y_ = n;
        break;
        case RARERenderableDataItem_Orientation_VERTICAL_UP:
        size = [c getOrientedSizeWithRAREUIDimension:nil];
        n = ((RAREUIPoint *) nil_chk(loc))->x_;
        loc->x_ = loc->y_;
        loc->y_ = ((RAREUIDimension *) nil_chk(size))->height_ - n;
        size = [self getOrientedSizeWithRAREUIDimension:size];
        loc->y_ -= ((RAREUIDimension *) nil_chk(size))->height_;
        break;
        default:
        break;
      }
    }
  }
  return loc;
}

- (RAREUIDimension *)getOrientedSizeWithRAREUIDimension:(RAREUIDimension *)size {
  if (size == nil) {
    size = [[RAREUIDimension alloc] init];
  }
  (void) [self getSizeWithRAREUIDimension:size];
  id<RAREiPlatformComponent> c = [self getParent];
  if (c != nil) {
    switch ([[c getOrientation] ordinal]) {
      case RARERenderableDataItem_Orientation_VERTICAL_UP:
      case RARERenderableDataItem_Orientation_VERTICAL_DOWN:
      [size setSizeWithDouble:((RAREUIDimension *) nil_chk(size))->height_ withDouble:size->width_];
      break;
      default:
      break;
    }
  }
  return size;
}

- (RAREUIDimension *)getPreferredSize {
  return [self getPreferredSizeWithRAREUIDimension:[[RAREUIDimension alloc] init] withFloat:0];
}

- (RAREUIDimension *)getPreferredSizeWithRAREUIDimension:(RAREUIDimension *)size {
  return [self getPreferredSizeWithRAREUIDimension:size withFloat:0];
}

- (RAREUIDimension *)getPreferredSizeWithRAREUIDimension:(RAREUIDimension *)size
                                               withFloat:(float)maxWidth {
  if (sizeLocked_) {
    return [self getSizeWithRAREUIDimension:size];
  }
  float h = -1;
  float w = -1;
  if (sageHeight_ != nil) {
    h = [RAREScreenUtils toPlatformPixelHeightWithNSString:sageHeight_ withRAREiPlatformComponent:self withFloat:-1];
  }
  if (sageWidth_ != nil) {
    w = [RAREScreenUtils toPlatformPixelWidthWithNSString:sageWidth_ withRAREiPlatformComponent:self withFloat:-1];
  }
  if (size == nil) {
    size = [[RAREUIDimension alloc] init];
  }
  if ((h > -1) && (w > -1)) {
    [((RAREUIDimension *) nil_chk(size)) setSizeWithDouble:w withDouble:h];
    return size;
  }
  if ((w > -1) && ((maxWidth == 0) || (w < maxWidth))) {
    maxWidth = w;
  }
  [self getPreferredSizeExWithRAREUIDimension:size withFloat:maxWidth];
  if (useBorderInSizeCalculation_) {
    id<RAREiPlatformBorder> b = [self getBorder];
    RAREUIInsets *in = (b == nil) ? nil : [b getBorderInsetsWithRAREUIInsets:computeInsets_];
    if (in != nil) {
      ((RAREUIDimension *) nil_chk(size))->width_ += in->left_ + in->right_;
      size->height_ += in->top_ + in->bottom_;
    }
  }
  if (w > -1) {
    ((RAREUIDimension *) nil_chk(size))->width_ = w;
  }
  if (h > -1) {
    ((RAREUIDimension *) nil_chk(size))->height_ = h;
  }
  if (checkMinWhenCalculatingPreferred_) {
    if (sageMinHeight_ != nil) {
      h = [RAREScreenUtils toPlatformPixelHeightWithNSString:sageMinHeight_ withRAREiPlatformComponent:self withFloat:-1];
      if (h > ((RAREUIDimension *) nil_chk(size))->height_) {
        size->height_ = h;
      }
    }
    if (sageMinWidth_ != nil) {
      w = [RAREScreenUtils toPlatformPixelWidthWithNSString:sageMinWidth_ withRAREiPlatformComponent:self withFloat:-1];
      if (w > ((RAREUIDimension *) nil_chk(size))->width_) {
        size->width_ = w;
      }
    }
  }
  return size;
}

- (int)getRight {
  return [self getX] + [self getWidth];
}

- (RAREUIDimension *)getSize {
  return [self getSizeWithRAREUIDimension:[[RAREUIDimension alloc] init]];
}

- (int)getTop {
  return [self getY];
}

- (id<RAREiWidget>)getWidget {
  return widget_;
}

- (BOOL)hasChildren {
  return NO;
}

- (BOOL)hasMouseListeners {
  if (listenerList_ == nil) {
    return NO;
  }
  return [((RAREEventListenerList *) nil_chk(listenerList_)) getListenerCountWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiMouseListener)]] > 0;
}

- (BOOL)hasMouseMotionListeners {
  if (listenerList_ == nil) {
    return NO;
  }
  return [((RAREEventListenerList *) nil_chk(listenerList_)) getListenerCountWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiMouseMotionListener)]] > 0;
}

- (BOOL)isAnimating {
  return [RAREaAnimator isAnimatingWithRAREiPlatformComponent:self];
}

- (BOOL)isBackgroundSet {
  return [self getBackgroundEx] != nil;
}

- (BOOL)isDisposed {
  return disposed_;
}

- (BOOL)isFocusPainted {
  return focusPainted_;
}

- (BOOL)isFontSet {
  return [self getFontEx] != nil;
}

- (BOOL)isForegroundSet {
  return [self getForegroundEx] != nil;
}

- (BOOL)isLeftToRight {
  return YES;
}

- (BOOL)isLocked {
  return locked_;
}

- (BOOL)isMouseOver {
  return NO;
}

- (BOOL)isOpaque {
  return opaque_;
}

- (void)setOpaqueWithBoolean:(BOOL)opaque {
  self->opaque_ = opaque;
  id<RAREiPlatformComponentPainter> cp = [self getComponentPainterEx];
  if (cp != nil) {
    [cp setBackgroundColorWithRAREUIColor:nil withBoolean:YES];
  }
}

- (BOOL)isPartOfAnimation {
  if ([self isAnimating]) {
    return YES;
  }
  id<RAREiParentComponent> p = [self getParent];
  if ([(id) p isKindOfClass:[RAREaComponent class]]) {
    return [((RAREaComponent *) check_class_cast(p, [RAREaComponent class])) isPartOfAnimation];
  }
  return NO;
}

- (BOOL)isPressed {
  return NO;
}

- (BOOL)isSelectable {
  return NO;
}

- (BOOL)isSelected {
  return NO;
}

- (BOOL)isSizeLocked {
  return sizeLocked_;
}

- (void)firePropertyChangeWithNSString:(NSString *)propertyName
                                withId:(id)oldValue
                                withId:(id)newValue {
  if (changeSupport_ != nil) {
    [changeSupport_ firePropertyChangeWithNSString:propertyName withId:oldValue withId:newValue];
  }
}

- (void)interacted {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (BOOL)needsHiearachyInvalidated {
  return YES;
}

+ (void)populateMeasuredSizeCacheWithRAREiParentComponent:(id<RAREiParentComponent>)parent
                                              withBoolean:(BOOL)populateMin {
  id<RAREiPlatformComponent> c;
  int len = [((id<RAREiParentComponent>) nil_chk(parent)) getComponentCount];
  RAREUIDimension *size = [[RAREUIDimension alloc] init];
  for (int i = 0; i < len; i++) {
    c = [parent getComponentAtWithInt:i];
    if (![((id<RAREiPlatformComponent>) nil_chk(c)) isVisible]) {
      continue;
    }
    id o = [c getClientPropertyWithNSString:[RAREiConstants RARE_CONSTRAINTS_PROPERTY]];
    if (!([o isKindOfClass:[RAREJGCellConstraints class]])) {
      o = [[RAREJGCellConstraints alloc] init];
      [c putClientPropertyWithNSString:[RAREiConstants RARE_CONSTRAINTS_PROPERTY] withId:o];
    }
    RAREJGCellConstraints *cc = (RAREJGCellConstraints *) check_class_cast(o, [RAREJGCellConstraints class]);
    (void) [c getPreferredSizeWithRAREUIDimension:size];
    ((RAREJGCellConstraints *) nil_chk(cc))->gridWidth_ = (int) size->width_;
    cc->gridHeight_ = (int) size->height_;
    if (populateMin) {
      (void) [c getMinimumSizeWithRAREUIDimension:size];
      cc->gridX_ = (int) size->width_;
      cc->gridY_ = (int) size->height_;
    }
  }
}

- (void)putClientPropertyExWithNSString:(NSString *)key
                                 withId:(id)value {
  if (properties_ == nil) {
    properties_ = [[JavaUtilHashMap alloc] initWithInt:5];
  }
  (void) [((JavaUtilHashMap *) nil_chk(properties_)) putWithId:key withId:value];
}

- (id)getClientPropertyExWithNSString:(NSString *)key {
  return (properties_ == nil) ? nil : [properties_ getWithId:key];
}

- (id<RAREiPlatformComponentPainter>)getComponentPainterWithBoolean:(BOOL)create {
  id<RAREiPlatformComponentPainter> cp = [self getComponentPainterEx];
  if ((cp != nil) || !create) {
    return cp;
  }
  cp = [[RAREUIComponentPainter alloc] init];
  [self setComponentPainterWithRAREiPlatformComponentPainter:cp];
  return cp;
}

- (id<RAREiPlatformComponentPainter>)getComponentPainterEx {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (RAREEventListenerList *)getEventListenerList {
  if (listenerList_ == nil) {
    listenerList_ = [[RAREEventListenerList alloc] init];
  }
  return listenerList_;
}

+ (RAREJGCellConstraints *)getMeasuredCellConstraintsWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                                                    withBoolean:(BOOL)populateMin {
  id o = [((id<RAREiPlatformComponent>) nil_chk(c)) getClientPropertyWithNSString:[RAREiConstants RARE_CONSTRAINTS_PROPERTY]];
  if (!([o isKindOfClass:[RAREJGCellConstraints class]])) {
    RAREJGCellConstraints *cc = [[RAREJGCellConstraints alloc] init];
    [c putClientPropertyWithNSString:[RAREiConstants RARE_CONSTRAINTS_PROPERTY] withId:cc];
    RAREUIDimension *d = [c getPreferredSize];
    cc->gridWidth_ = (int) ((RAREUIDimension *) nil_chk(d))->width_;
    cc->gridHeight_ = (int) d->height_;
    if (populateMin) {
      (void) [c getMinimumSizeWithRAREUIDimension:d];
      cc->gridX_ = (int) d->width_;
      cc->gridY_ = (int) d->height_;
    }
    o = cc;
  }
  return (RAREJGCellConstraints *) check_class_cast(o, [RAREJGCellConstraints class]);
}

- (void)getMinimumSizeExWithRAREUIDimension:(RAREUIDimension *)size {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)getPreferredSizeExWithRAREUIDimension:(RAREUIDimension *)size
                                    withFloat:(float)maxWidth {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (BOOL)hasListenersWithIOSClass:(IOSClass *)cls {
  return (listenerList_ == nil) ? NO : [listenerList_ hasListenersWithIOSClass:cls];
}

- (void)componentEventWithBoolean:(BOOL)shown
                      withBoolean:(BOOL)resized
                      withBoolean:(BOOL)moved {
  if (listenerList_ != nil) {
    IOSObjectArray *listeners = [listenerList_ getListenerList];
    for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
      if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiViewListener)]) {
        if (changeEvent_ == nil) {
          changeEvent_ = [[RAREChangeEvent alloc] initWithId:self];
        }
        if (resized) {
          [((id<RAREiViewListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiViewListener))) viewResizedWithRAREChangeEvent:changeEvent_];
        }
        else if (shown) {
          [((id<RAREiViewListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiViewListener))) viewShownWithRAREChangeEvent:changeEvent_];
        }
        else if (shown) {
          [((id<RAREiViewListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiViewListener))) viewShownWithRAREChangeEvent:changeEvent_];
        }
        else {
          [((id<RAREiViewListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiViewListener))) viewHiddenWithRAREChangeEvent:changeEvent_];
        }
      }
    }
  }
}

- (void)setComponentPainterWithRAREiPlatformComponentPainter:(id<RAREiPlatformComponentPainter>)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (RAREUIImage *)capture {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiPlatformComponent>)copy__ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dispatchEventWithRAREKeyEvent:(RAREKeyEvent *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dispatchEventWithRAREMouseEvent:(RAREMouseEvent *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<RAREiParentComponent>)getParent {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getProxy {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (RAREView *)getView {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)hasBeenFocused {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)hasHadInteraction {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)bringToFront {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<RAREiPlatformBorder>)getBorder {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (RAREUIRectangle *)getBounds {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getHeight {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (RAREUIPoint *)getLocationOnScreenWithRAREUIPoint:(RAREUIPoint *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getNativeView {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (RAREUIDimension *)getSizeWithRAREUIDimension:(RAREUIDimension *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getWidth {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getX {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getY {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isDisplayable {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isEnabled {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isFocusOwner {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isFocusable {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isShowing {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isVisible {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)repaint {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)requestFocus {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)revalidate {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)sendToBack {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setBackgroundWithRAREUIColor:(RAREUIColor *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setBorderWithRAREiPlatformBorder:(id<RAREiPlatformBorder>)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setBoundsWithFloat:(float)param0
                 withFloat:(float)param1
                 withFloat:(float)param2
                 withFloat:(float)param3 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setCursorWithRAREUICursor:(RAREUICursor *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setEnabledWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setFocusableWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setFontWithRAREUIFont:(RAREUIFont *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setForegroundWithRAREUIColor:(RAREUIColor *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setLocationWithFloat:(float)param0
                   withFloat:(float)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setSizeWithFloat:(float)param0
               withFloat:(float)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setVisibleWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)copyAllFieldsTo:(RAREaComponent *)other {
  [super copyAllFieldsTo:other];
  other->changeEvent_ = changeEvent_;
  other->changeSupport_ = changeSupport_;
  other->checkMinWhenCalculatingPreferred_ = checkMinWhenCalculatingPreferred_;
  other->computeInsets_ = computeInsets_;
  other->constraints_ = constraints_;
  other->disabledColor_ = disabledColor_;
  other->disposed_ = disposed_;
  other->focusPaint_ = focusPaint_;
  other->focusPainted_ = focusPainted_;
  other->interactionListenerAdded_ = interactionListenerAdded_;
  other->listenerList_ = listenerList_;
  other->locked_ = locked_;
  other->opaque_ = opaque_;
  other->orientation_ = orientation_;
  other->properties_ = properties_;
  other->sageHeight_ = sageHeight_;
  other->sageMinHeight_ = sageMinHeight_;
  other->sageMinWidth_ = sageMinWidth_;
  other->sageWidth_ = sageWidth_;
  other->sizeLocked_ = sizeLocked_;
  other->useBorderInSizeCalculation_ = useBorderInSizeCalculation_;
  other->wantsMoveEvents_ = wantsMoveEvents_;
  other->wantsViewResizeEvent_ = wantsViewResizeEvent_;
  other->widget_ = widget_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x4, NULL },
    { "isScaleIcon", NULL, "Z", 0x1, NULL },
    { "setAlphaWithFloat:", NULL, "Z", 0x1, NULL },
    { "adjustMinimumHeightForWidth", NULL, "Z", 0x1, NULL },
    { "heightChangesBasedOnWidth", NULL, "Z", 0x1, NULL },
    { "shouldStopEditingWithId:", NULL, "Z", 0x1, NULL },
    { "textChangingWithId:withInt:withInt:withJavaLangCharSequence:", NULL, "Z", 0x1, NULL },
    { "wantsLongPress", NULL, "Z", 0x1, NULL },
    { "wantsMouseMovedEvents", NULL, "Z", 0x1, NULL },
    { "wantsResizeEvent", NULL, "Z", 0x1, NULL },
    { "getBackground", NULL, "LRAREUIColor", 0x1, NULL },
    { "getBackgroundEx", NULL, "LRAREUIColor", 0x401, NULL },
    { "getClientPropertyWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getComponentPainter", NULL, "LRAREiPlatformComponentPainter", 0x1, NULL },
    { "getDisabledColor", NULL, "LRAREUIColor", 0x1, NULL },
    { "getFocusInsetsWithRAREUIInsets:", NULL, "LRAREUIInsets", 0x1, NULL },
    { "getFocusPaintWithRAREiPlatformGraphics:withRAREPaintBucket:", NULL, "LRAREPaintBucket", 0x1, NULL },
    { "getFont", NULL, "LRAREUIFont", 0x1, NULL },
    { "getFontEx", NULL, "LRAREUIFont", 0x401, NULL },
    { "getForeground", NULL, "LRAREUIColor", 0x1, NULL },
    { "getForegroundEx", NULL, "LRAREUIColor", 0x401, NULL },
    { "getHostWidget", NULL, "LRAREiWidget", 0x1, NULL },
    { "getInnerBoundsWithRAREUIRectangle:", NULL, "LRAREUIRectangle", 0x1, NULL },
    { "getInnerSizeWithRAREUIDimension:", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getLocation", NULL, "LRAREUIPoint", 0x1, NULL },
    { "getLocationWithRAREUIPoint:", NULL, "LRAREUIPoint", 0x1, NULL },
    { "getLocationOnScreen", NULL, "LRAREUIPoint", 0x1, NULL },
    { "getMinimumSize", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getMinimumSizeWithRAREUIDimension:", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getOrientation", NULL, "LRARERenderableDataItem_OrientationEnum", 0x1, NULL },
    { "getOrientedLocationWithRAREUIPoint:", NULL, "LRAREUIPoint", 0x1, NULL },
    { "getOrientedSizeWithRAREUIDimension:", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getPreferredSize", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getPreferredSizeWithRAREUIDimension:", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getPreferredSizeWithRAREUIDimension:withFloat:", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getSize", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getWidget", NULL, "LRAREiWidget", 0x1, NULL },
    { "hasChildren", NULL, "Z", 0x1, NULL },
    { "hasMouseListeners", NULL, "Z", 0x1, NULL },
    { "hasMouseMotionListeners", NULL, "Z", 0x1, NULL },
    { "isAnimating", NULL, "Z", 0x1, NULL },
    { "isBackgroundSet", NULL, "Z", 0x1, NULL },
    { "isDisposed", NULL, "Z", 0x1, NULL },
    { "isFocusPainted", NULL, "Z", 0x1, NULL },
    { "isFontSet", NULL, "Z", 0x1, NULL },
    { "isForegroundSet", NULL, "Z", 0x1, NULL },
    { "isLeftToRight", NULL, "Z", 0x1, NULL },
    { "isLocked", NULL, "Z", 0x1, NULL },
    { "isMouseOver", NULL, "Z", 0x1, NULL },
    { "isOpaque", NULL, "Z", 0x1, NULL },
    { "isPartOfAnimation", NULL, "Z", 0x1, NULL },
    { "isPressed", NULL, "Z", 0x1, NULL },
    { "isSelectable", NULL, "Z", 0x1, NULL },
    { "isSelected", NULL, "Z", 0x1, NULL },
    { "isSizeLocked", NULL, "Z", 0x1, NULL },
    { "firePropertyChangeWithNSString:withId:withId:", NULL, "V", 0x4, NULL },
    { "interacted", NULL, "V", 0x404, NULL },
    { "needsHiearachyInvalidated", NULL, "Z", 0x4, NULL },
    { "populateMeasuredSizeCacheWithRAREiParentComponent:withBoolean:", NULL, "V", 0xc, NULL },
    { "putClientPropertyExWithNSString:withId:", NULL, "V", 0x4, NULL },
    { "getClientPropertyExWithNSString:", NULL, "LNSObject", 0x4, NULL },
    { "getComponentPainterWithBoolean:", NULL, "LRAREiPlatformComponentPainter", 0x4, NULL },
    { "getComponentPainterEx", NULL, "LRAREiPlatformComponentPainter", 0x404, NULL },
    { "getEventListenerList", NULL, "LRAREEventListenerList", 0x4, NULL },
    { "getMeasuredCellConstraintsWithRAREiPlatformComponent:withBoolean:", NULL, "LRAREJGCellConstraints", 0xc, NULL },
    { "getMinimumSizeExWithRAREUIDimension:", NULL, "V", 0x404, NULL },
    { "getPreferredSizeExWithRAREUIDimension:withFloat:", NULL, "V", 0x404, NULL },
    { "hasListenersWithIOSClass:", NULL, "Z", 0x4, NULL },
    { "componentEventWithBoolean:withBoolean:withBoolean:", NULL, "V", 0x4, NULL },
    { "setComponentPainterWithRAREiPlatformComponentPainter:", NULL, "V", 0x401, NULL },
    { "capture", NULL, "LRAREUIImage", 0x401, NULL },
    { "copy__", NULL, "LRAREiPlatformComponent", 0x401, NULL },
    { "dispatchEventWithRAREKeyEvent:", NULL, "V", 0x401, NULL },
    { "dispatchEventWithRAREMouseEvent:", NULL, "V", 0x401, NULL },
    { "getParent", NULL, "LRAREiParentComponent", 0x401, NULL },
    { "getProxy", NULL, "LNSObject", 0x401, NULL },
    { "getView", NULL, "LRAREView", 0x401, NULL },
    { "hasBeenFocused", NULL, "Z", 0x401, NULL },
    { "hasHadInteraction", NULL, "Z", 0x401, NULL },
    { "bringToFront", NULL, "V", 0x401, NULL },
    { "getBorder", NULL, "LRAREiPlatformBorder", 0x401, NULL },
    { "getBounds", NULL, "LRAREUIRectangle", 0x401, NULL },
    { "getHeight", NULL, "I", 0x401, NULL },
    { "getLocationOnScreenWithRAREUIPoint:", NULL, "LRAREUIPoint", 0x401, NULL },
    { "getNativeView", NULL, "LNSObject", 0x401, NULL },
    { "getSizeWithRAREUIDimension:", NULL, "LRAREUIDimension", 0x401, NULL },
    { "getWidth", NULL, "I", 0x401, NULL },
    { "getX", NULL, "I", 0x401, NULL },
    { "getY", NULL, "I", 0x401, NULL },
    { "isDisplayable", NULL, "Z", 0x401, NULL },
    { "isEnabled", NULL, "Z", 0x401, NULL },
    { "isFocusOwner", NULL, "Z", 0x401, NULL },
    { "isFocusable", NULL, "Z", 0x401, NULL },
    { "isShowing", NULL, "Z", 0x401, NULL },
    { "isVisible", NULL, "Z", 0x401, NULL },
    { "repaint", NULL, "V", 0x401, NULL },
    { "requestFocus", NULL, "V", 0x401, NULL },
    { "revalidate", NULL, "V", 0x401, NULL },
    { "sendToBack", NULL, "V", 0x401, NULL },
    { "setBackgroundWithRAREUIColor:", NULL, "V", 0x401, NULL },
    { "setBorderWithRAREiPlatformBorder:", NULL, "V", 0x401, NULL },
    { "setBoundsWithFloat:withFloat:withFloat:withFloat:", NULL, "V", 0x401, NULL },
    { "setCursorWithRAREUICursor:", NULL, "V", 0x401, NULL },
    { "setEnabledWithBoolean:", NULL, "V", 0x401, NULL },
    { "setFocusableWithBoolean:", NULL, "V", 0x401, NULL },
    { "setFontWithRAREUIFont:", NULL, "V", 0x401, NULL },
    { "setForegroundWithRAREUIColor:", NULL, "V", 0x401, NULL },
    { "setLocationWithFloat:withFloat:", NULL, "V", 0x401, NULL },
    { "setSizeWithFloat:withFloat:", NULL, "V", 0x401, NULL },
    { "setVisibleWithBoolean:", NULL, "V", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "computeInsets_", NULL, 0x4, "LRAREUIInsets" },
    { "useBorderInSizeCalculation_", NULL, 0x4, "Z" },
    { "orientation_", NULL, 0x4, "LRARERenderableDataItem_OrientationEnum" },
    { "checkMinWhenCalculatingPreferred_", NULL, 0x4, "Z" },
    { "changeSupport_", NULL, 0x4, "LRAREPropertyChangeSupportEx" },
    { "constraints_", NULL, 0x4, "LNSObject" },
    { "disabledColor_", NULL, 0x4, "LRAREUIColor" },
    { "disposed_", NULL, 0x4, "Z" },
    { "focusPaint_", NULL, 0x4, "LRAREPaintBucket" },
    { "focusPainted_", NULL, 0x4, "Z" },
    { "interactionListenerAdded_", NULL, 0x4, "Z" },
    { "listenerList_", NULL, 0x4, "LRAREEventListenerList" },
    { "locked_", NULL, 0x4, "Z" },
    { "properties_", NULL, 0x4, "LJavaUtilHashMap" },
    { "sageHeight_", NULL, 0x4, "LNSString" },
    { "sageMinHeight_", NULL, 0x4, "LNSString" },
    { "sageMinWidth_", NULL, 0x4, "LNSString" },
    { "sageWidth_", NULL, 0x4, "LNSString" },
    { "sizeLocked_", NULL, 0x4, "Z" },
    { "wantsMoveEvents_", NULL, 0x4, "Z" },
    { "wantsViewResizeEvent_", NULL, 0x4, "Z" },
    { "widget_", NULL, 0x4, "LRAREiWidget" },
    { "opaque_", NULL, 0x4, "Z" },
    { "changeEvent_", NULL, 0x4, "LRAREChangeEvent" },
  };
  static J2ObjcClassInfo _RAREaComponent = { "aComponent", "com.appnativa.rare.ui", NULL, 0x401, 110, methods, 24, fields, 0, NULL};
  return &_RAREaComponent;
}

@end
