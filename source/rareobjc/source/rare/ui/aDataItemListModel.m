//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/aDataItemListModel.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/ui/Column.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/aDataItemListModel.h"
#include "com/appnativa/rare/ui/event/EventListenerList.h"
#include "com/appnativa/rare/ui/event/iDataModelListener.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/util/IntList.h"
#include "com/appnativa/util/aFilterableList.h"
#include "com/appnativa/util/iStringConverter.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"

@implementation RAREaDataItemListModel

- (id)initRAREaDataItemListModel {
  if (self = [super init]) {
    eventsEnabled_ = YES;
  }
  return self;
}

- (id)init {
  return [self initRAREaDataItemListModel];
}

- (id)initWithRAREaDataItemListModel:(RAREaDataItemListModel *)m {
  if (self = [self initRAREaDataItemListModel]) {
    [self addAllWithJavaUtilCollection:m];
    self->theWidget_ = ((RAREaDataItemListModel *) nil_chk(m))->theWidget_;
    self->columnDescription_ = m->columnDescription_;
  }
  return self;
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)widget
           withRAREColumn:(RAREColumn *)column {
  if (self = [self initRAREaDataItemListModel]) {
    self->columnDescription_ = column;
    self->theWidget_ = widget;
  }
  return self;
}

- (BOOL)addWithId:(RARERenderableDataItem *)e {
  int len = [self size];
  if ([super addWithId:e]) {
    [self fireIntervalAddedWithId:self withInt:len withInt:len];
  }
  return YES;
}

- (void)addWithInt:(int)index
            withId:(RARERenderableDataItem *)e {
  int len = [self size];
  if ((index < 0) || (index > len)) {
    index = len;
  }
  [super addWithInt:index withId:e];
  [self fireIntervalAddedWithId:self withInt:index withInt:index];
}

- (BOOL)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  BOOL oenabled = eventsEnabled_;
  eventsEnabled_ = NO;
  int len1 = [self size];
  @try {
    [super addAllWithJavaUtilCollection:c];
  }
  @finally {
    eventsEnabled_ = oenabled;
  }
  int len2 = [self size];
  if (len2 > len1) {
    [self fireIntervalAddedWithId:self withInt:len1 withInt:len2 - 1];
  }
  return [((id<JavaUtilCollection>) nil_chk(c)) size] > 0;
}

- (BOOL)addAllWithInt:(int)index
withJavaUtilCollection:(id<JavaUtilCollection>)c {
  BOOL oenabled = eventsEnabled_;
  eventsEnabled_ = NO;
  int len1 = [self size];
  @try {
    [super addAllWithInt:index withJavaUtilCollection:c];
  }
  @finally {
    eventsEnabled_ = oenabled;
  }
  int len2 = [self size];
  if (len1 != len2) {
    [self fireContentsChangedWithId:self withInt:index withInt:index + (len2 - len1) - 1];
  }
  return len1 != len2;
}

- (void)addAllExWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  BOOL oenabled = eventsEnabled_;
  eventsEnabled_ = NO;
  @try {
    [super addAllWithJavaUtilCollection:c];
  }
  @finally {
    eventsEnabled_ = oenabled;
  }
}

- (void)addDataModelListenerWithRAREiDataModelListener:(id<RAREiDataModelListener>)l {
  if (listenerList_ == nil) {
    listenerList_ = [[RAREEventListenerList alloc] init];
  }
  [((RAREEventListenerList *) nil_chk(listenerList_)) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiDataModelListener)] withId:l];
}

- (void)addIndexToFilteredListWithInt:(int)index {
  int len = [self size];
  [super addIndexToFilteredListWithInt:index];
  int len2 = [self size];
  if (index == -1) {
    if (len > 0) {
      [self fireIntervalRemovedWithId:self withInt:0 withInt:len - 1 withJavaUtilList:[self getUnfilteredList]];
    }
  }
  else if (len != len2) {
    [self fireIntervalRemovedWithId:self withInt:index withInt:index withJavaUtilList:[JavaUtilArrays asListWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self getWithInt:index] } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
}

- (void)addToFilteredListWithId:(RARERenderableDataItem *)e {
  int len = [self size];
  [super addToFilteredListWithId:e];
  [self fireIntervalAddedWithId:self withInt:len withInt:len];
}

- (void)addToFilteredListWithInt:(int)index
                          withId:(RARERenderableDataItem *)e {
  int len = [self size];
  if ((index < 0) || (index > len)) {
    index = len;
  }
  [super addToFilteredListWithInt:index withId:e];
  [self fireIntervalAddedWithId:self withInt:index withInt:index];
}

- (void)clear {
  int index1 = [self size] - 1;
  [self clearEx];
  if (index1 >= 0) {
    [self fireContentsChangedWithId:self];
  }
}

- (void)clearEx {
  [super clear];
}

- (void)dispose {
  [self clearEx];
  theWidget_ = nil;
  if (listenerList_ != nil) {
    [listenerList_ clear];
    listenerList_ = nil;
  }
}

- (void)editModeChangeAllMarksWithBoolean:(BOOL)mark {
  if (editingMarks_ != nil) {
    if (mark) {
      int len = [self size];
      [editingMarks_ ensureCapacityWithInt:len];
      IOSIntArray *a = editingMarks_->A_;
      for (int i = 0; i < len; i++) {
        (*IOSIntArray_GetRef(nil_chk(a), i)) = i;
      }
      editingMarks_->_length_ = len;
    }
    else {
      [editingMarks_ clear];
    }
  }
}

- (void)editModeChangeMarkWithInt:(int)index
                      withBoolean:(BOOL)mark {
  if (editingMarks_ != nil) {
    int i = [editingMarks_ indexOfWithInt:index];
    if (mark) {
      if (i == -1) {
        [editingMarks_ addWithInt:index];
      }
    }
    else if (i != -1) {
      [editingMarks_ removeAtWithInt:i];
    }
  }
}

- (void)editModeClearMarks {
  if (editingMarks_ != nil) {
    editingMarks_->_length_ = 0;
  }
}

- (int)editModeGetMarkCount {
  return (editingMarks_ == nil) ? 0 : editingMarks_->_length_;
}

- (IOSIntArray *)editModeGetMarkedIndices {
  if ((editingMarks_ == nil) || (editingMarks_->_length_ == 0)) {
    return nil;
  }
  return [((RAREUTIntList *) nil_chk(editingMarks_)) toArray];
}

- (IOSObjectArray *)editModeGetMarkedItems {
  if ((editingMarks_ == nil) || (editingMarks_->_length_ == 0)) {
    return nil;
  }
  int len = ((RAREUTIntList *) nil_chk(editingMarks_))->_length_;
  IOSIntArray *a = editingMarks_->A_;
  IOSObjectArray *items = [IOSObjectArray arrayWithLength:len type:[IOSClass classWithClass:[RARERenderableDataItem class]]];
  for (int i = 0; i < len; i++) {
    (void) IOSObjectArray_Set(items, i, [self getWithInt:IOSIntArray_Get(nil_chk(a), i)]);
  }
  return items;
}

- (BOOL)editModeIsItemMarkedWithInt:(int)index {
  if ((editingMarks_ == nil) || (editingMarks_->_length_ == 0)) {
    return NO;
  }
  return [((RAREUTIntList *) nil_chk(editingMarks_)) indexOfWithInt:index] != -1;
}

- (void)editModeToggleMarkWithInt:(int)index {
  if (editingMarks_ != nil) {
    int i = [editingMarks_ indexOfWithInt:index];
    if (i == -1) {
      [editingMarks_ addWithInt:index];
    }
    else {
      [editingMarks_ removeAtWithInt:i];
    }
  }
}

- (int)indexOfLinkedDataWithId:(id)value {
  int len = [self size];
  id o;
  for (int i = 0; i < len; i++) {
    o = [((RARERenderableDataItem *) nil_chk([self getWithInt:i])) getLinkedData];
    if (o == value) {
      return i;
    }
  }
  return -1;
}

- (int)indexOfLinkedDataEqualsWithId:(id)value {
  int len = [self size];
  id o;
  for (int i = 0; i < len; i++) {
    o = [((RARERenderableDataItem *) nil_chk([self getWithInt:i])) getLinkedData];
    if ((o != nil) && ((o == value) || [o isEqual:value])) {
      return i;
    }
  }
  return -1;
}

- (int)indexOfValueWithId:(id)value {
  int len = [self size];
  id o;
  for (int i = 0; i < len; i++) {
    o = [((RARERenderableDataItem *) nil_chk([self getWithInt:i])) getValue];
    if (o == value) {
      return i;
    }
  }
  return -1;
}

- (int)indexOfValueEqualsWithId:(id)value {
  int len = [self size];
  id o;
  for (int i = 0; i < len; i++) {
    o = [((RARERenderableDataItem *) nil_chk([self getWithInt:i])) getValue];
    if ((o != nil) && ((o == value) || [o isEqual:value])) {
      return i;
    }
  }
  return -1;
}

- (void)refreshItems {
  [self fireContentsChangedWithId:self];
}

- (RARERenderableDataItem *)removeWithInt:(int)index {
  RARERenderableDataItem *di = [super removeWithInt:index];
  if (di != nil) {
    [self fireIntervalRemovedWithId:self withInt:index withInt:index withJavaUtilList:[JavaUtilArrays asListWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ di } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  return di;
}

- (BOOL)removeWithId:(id)o {
  int n = [self indexOfWithId:o];
  if (n == -1) {
    return NO;
  }
  (void) [self removeWithInt:n];
  return YES;
}

- (BOOL)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  BOOL modified = [super removeAllWithJavaUtilCollection:c];
  if (modified) {
    [self fireContentsChangedWithId:self];
  }
  return modified;
}

- (id<JavaUtilList>)reverse {
  id<JavaUtilList> list = [super reverse];
  if ([self size] > 0) {
    [self fireContentsChangedWithId:self];
  }
  return list;
}

- (void)removeDataModelListenerWithRAREiDataModelListener:(id<RAREiDataModelListener>)l {
  if (listenerList_ != nil) {
    [listenerList_ removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiDataModelListener)] withId:l];
  }
}

- (void)removeRowsWithIntArray:(IOSIntArray *)indexes {
  [super removeRowsWithIntArray:indexes];
  if ((indexes != nil) && ((int) [indexes count] > 0)) {
    [self fireContentsChangedWithId:self withInt:0 withInt:[self size]];
  }
}

- (void)removeRowsWithInt:(int)firstRow
                  withInt:(int)lastRow {
  if (lastRow == -1) {
    lastRow = [self size] - 1;
  }
  int len = lastRow - firstRow + 1;
  if (len < 1) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"firstRow=%d, lastRow=%d", firstRow, lastRow]];
  }
  if (len == 1) {
    (void) [self removeWithInt:firstRow];
    return;
  }
  id<JavaUtilList> list = [[JavaUtilArrayList alloc] initWithInt:len];
  for (int i = firstRow; i <= lastRow; i++) {
    [list addWithId:[super removeWithInt:i]];
  }
  [self rowsDeletedWithInt:firstRow withInt:lastRow withJavaUtilList:list];
}

- (BOOL)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  BOOL modified = [super retainAllWithJavaUtilCollection:c];
  if (modified) {
    [self fireContentsChangedWithId:self];
  }
  return modified;
}

- (void)rowChangedWithInt:(int)index {
  if ((index > -1) && (index < [self size])) {
    [self fireContentsChangedWithId:self withInt:index withInt:index];
  }
}

- (void)rowChangedWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  [self rowChangedWithInt:[self indexOfWithId:item]];
}

- (void)rowsChangedWithIntArray:(IOSIntArray *)index {
  {
    IOSIntArray *a__ = index;
    int const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    int const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      int i = (*b__++);
      [self rowChangedWithInt:i];
    }
  }
}

- (void)rowsChangedWithInt:(int)firstRow
                   withInt:(int)lastRow {
  [self fireContentsChangedWithId:self withInt:firstRow withInt:lastRow];
}

- (void)rowsDeletedWithInt:(int)firstRow
                   withInt:(int)lastRow
          withJavaUtilList:(id<JavaUtilList>)removed {
  [self fireIntervalRemovedWithId:self withInt:firstRow withInt:lastRow withJavaUtilList:removed];
}

- (void)rowsInsertedWithInt:(int)firstRow
                    withInt:(int)lastRow {
  [self fireIntervalAddedWithId:self withInt:firstRow withInt:lastRow];
}

- (void)sortWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  [super sortWithJavaUtilComparator:comparator];
  [self fireContentsChangedWithId:self];
}

- (void)sortExWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  [super sortWithJavaUtilComparator:comparator];
}

- (void)structureChanged {
  [self fireContentsChangedWithId:self];
}

- (void)swapWithInt:(int)index1
            withInt:(int)index2 {
  [super swapWithInt:index1 withInt:index2];
  if (index2 == (index1 + 1)) {
    [self fireContentsChangedWithId:self withInt:index1 withInt:index2];
  }
  else if (index1 == (index2 + 1)) {
    [self fireContentsChangedWithId:self withInt:index2 withInt:index1];
  }
  else {
    [self fireContentsChangedWithId:self withInt:index1 withInt:index1];
    [self fireContentsChangedWithId:self withInt:index2 withInt:index2];
  }
}

- (NSString *)toStringWithId:(id)item {
  RARERenderableDataItem *di = (RARERenderableDataItem *) check_class_cast(item, [RARERenderableDataItem class]);
  if ((columnDescription_ != nil) && ![((RARERenderableDataItem *) nil_chk(di)) isConverted]) {
    [columnDescription_ convertWithRAREiWidget:theWidget_ withRARERenderableDataItem:di];
  }
  return [((RARERenderableDataItem *) nil_chk(di)) description];
}

- (RARERenderableDataItem *)setWithInt:(int)index
                                withId:(RARERenderableDataItem *)e {
  RARERenderableDataItem *di = [super setWithInt:index withId:e];
  if (di != e) {
    [self fireContentsChangedWithId:self withInt:index withInt:index];
  }
  return di;
}

- (BOOL)setAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  [super clear];
  return [self addAllWithJavaUtilCollection:collection];
}

- (void)setColumnDescriptionWithRAREColumn:(RAREColumn *)column {
  self->columnDescription_ = column;
}

- (void)setEditingWithBoolean:(BOOL)editing {
  if (self->editing_ != editing) {
    self->editing_ = editing;
    if (editing) {
      editingMarks_ = [[RAREUTIntList alloc] init];
    }
  }
}

- (void)setEventsEnabledWithBoolean:(BOOL)enabled {
  self->eventsEnabled_ = enabled;
}

- (void)setItemsWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  [self setAllWithJavaUtilCollection:collection];
}

- (void)setWidgetWithRAREiWidget:(id<RAREiWidget>)widget {
  self->theWidget_ = widget;
}

- (RARERenderableDataItem *)getWithInt:(int)index {
  RARERenderableDataItem *di = [super getWithInt:index];
  if ((columnDescription_ != nil) && ![((RARERenderableDataItem *) nil_chk(di)) isConverted]) {
    [columnDescription_ convertWithRAREiWidget:theWidget_ withRARERenderableDataItem:di];
  }
  return di;
}

- (RAREColumn *)getColumnDescription {
  return columnDescription_;
}

- (id)getElementAtWithInt:(int)index {
  return [self getWithInt:index];
}

- (RARERenderableDataItem *)getRowWithInt:(int)index {
  return [self getWithInt:index];
}

- (id<RAREiWidget>)getWidget {
  return theWidget_;
}

- (BOOL)isEditing {
  return editing_;
}

- (BOOL)isEventsEnabled {
  return eventsEnabled_;
}

- (void)fireContentsChangedWithId:(id)source {
  [self editModeClearMarks];
  if (!eventsEnabled_ || (listenerList_ == nil)) {
    return;
  }
  IOSObjectArray *listeners = [((RAREEventListenerList *) nil_chk(listenerList_)) getListenerList];
  for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
    if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiDataModelListener)]) {
      [((id<RAREiDataModelListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiDataModelListener))) contentsChangedWithId:source];
    }
  }
}

- (void)fireContentsChangedWithId:(id)source
                          withInt:(int)index0
                          withInt:(int)index1 {
  [self editModeClearMarks];
  if (!eventsEnabled_ || (listenerList_ == nil)) {
    return;
  }
  IOSObjectArray *listeners = [((RAREEventListenerList *) nil_chk(listenerList_)) getListenerList];
  for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
    if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiDataModelListener)]) {
      [((id<RAREiDataModelListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiDataModelListener))) contentsChangedWithId:source withInt:index0 withInt:index1];
    }
  }
}

- (void)fireIntervalAddedWithId:(id)source
                        withInt:(int)index0
                        withInt:(int)index1 {
  [self editModeClearMarks];
  if (!eventsEnabled_ || (listenerList_ == nil)) {
    return;
  }
  IOSObjectArray *listeners = [((RAREEventListenerList *) nil_chk(listenerList_)) getListenerList];
  for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
    if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiDataModelListener)]) {
      [((id<RAREiDataModelListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiDataModelListener))) intervalAddedWithId:source withInt:index0 withInt:index1];
    }
  }
}

- (void)fireIntervalRemovedWithId:(id)source
                          withInt:(int)index0
                          withInt:(int)index1
                 withJavaUtilList:(id<JavaUtilList>)removed {
  [self editModeClearMarks];
  if (!eventsEnabled_ || (listenerList_ == nil)) {
    return;
  }
  IOSObjectArray *listeners = [((RAREEventListenerList *) nil_chk(listenerList_)) getListenerList];
  for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
    if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiDataModelListener)]) {
      [((id<RAREiDataModelListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiDataModelListener))) intervalRemovedWithId:source withInt:index0 withInt:index1 withJavaUtilList:removed];
    }
  }
}

- (void)setConverterWithRAREUTiStringConverter:(id<RAREUTiStringConverter>)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (BOOL)isEqual:(id)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSUInteger)hash {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)copyAllFieldsTo:(RAREaDataItemListModel *)other {
  [super copyAllFieldsTo:other];
  other->columnDescription_ = columnDescription_;
  other->editing_ = editing_;
  other->editingMarks_ = editingMarks_;
  other->eventsEnabled_ = eventsEnabled_;
  other->listenerList_ = listenerList_;
  other->theWidget_ = theWidget_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addWithRARERenderableDataItem:", NULL, "Z", 0x1, NULL },
    { "addAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "addAllWithInt:withJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "editModeGetMarkedIndices", NULL, "LIOSIntArray", 0x1, NULL },
    { "editModeGetMarkedItems", NULL, "LIOSObjectArray", 0x1, NULL },
    { "editModeIsItemMarkedWithInt:", NULL, "Z", 0x1, NULL },
    { "removeWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "removeWithId:", NULL, "Z", 0x1, NULL },
    { "removeAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "reverse", NULL, "LJavaUtilList", 0x1, NULL },
    { "retainAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "rowsChangedWithIntArray:", NULL, "V", 0x81, NULL },
    { "toStringWithId:", NULL, "LNSString", 0x1, NULL },
    { "setWithInt:withRARERenderableDataItem:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "setAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "getWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getColumnDescription", NULL, "LRAREColumn", 0x1, NULL },
    { "getElementAtWithInt:", NULL, "LNSObject", 0x1, NULL },
    { "getRowWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getWidget", NULL, "LRAREiWidget", 0x1, NULL },
    { "isEditing", NULL, "Z", 0x1, NULL },
    { "isEventsEnabled", NULL, "Z", 0x1, NULL },
    { "fireContentsChangedWithId:", NULL, "V", 0x4, NULL },
    { "fireContentsChangedWithId:withInt:withInt:", NULL, "V", 0x4, NULL },
    { "fireIntervalAddedWithId:withInt:withInt:", NULL, "V", 0x4, NULL },
    { "fireIntervalRemovedWithId:withInt:withInt:withJavaUtilList:", NULL, "V", 0x4, NULL },
    { "setConverterWithRAREUTiStringConverter:", NULL, "V", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "eventsEnabled_", NULL, 0x4, "Z" },
    { "columnDescription_", NULL, 0x4, "LRAREColumn" },
    { "editing_", NULL, 0x4, "Z" },
    { "editingMarks_", NULL, 0x4, "LRAREUTIntList" },
    { "listenerList_", NULL, 0x4, "LRAREEventListenerList" },
    { "theWidget_", NULL, 0x4, "LRAREiWidget" },
  };
  static const char *superclass_type_args[] = {"LRARERenderableDataItem"};
  static J2ObjcClassInfo _RAREaDataItemListModel = { "aDataItemListModel", "com.appnativa.rare.ui", NULL, 0x401, 27, methods, 6, fields, 1, superclass_type_args};
  return &_RAREaDataItemListModel;
}

@end
