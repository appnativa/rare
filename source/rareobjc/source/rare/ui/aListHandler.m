//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/aListHandler.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/ui/Column.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIPoint.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/UIStroke.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/aListHandler.h"
#include "com/appnativa/rare/ui/event/ActionEvent.h"
#include "com/appnativa/rare/ui/event/EventListenerList.h"
#include "com/appnativa/rare/ui/event/FocusEvent.h"
#include "com/appnativa/rare/ui/event/ItemChangeEvent.h"
#include "com/appnativa/rare/ui/event/iActionListener.h"
#include "com/appnativa/rare/ui/event/iDataModelListener.h"
#include "com/appnativa/rare/ui/event/iItemChangeListener.h"
#include "com/appnativa/rare/ui/iListHandler.h"
#include "com/appnativa/rare/ui/iListView.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformItemRenderer.h"
#include "com/appnativa/rare/ui/iPlatformListDataModel.h"
#include "com/appnativa/rare/ui/iPlatformRenderingComponent.h"
#include "com/appnativa/rare/ui/iScrollerSupport.h"
#include "com/appnativa/rare/ui/painter/UIScrollingEdgePainter.h"
#include "com/appnativa/rare/ui/renderer/UILabelRenderer.h"
#include "com/appnativa/rare/util/DataItemCollection.h"
#include "com/appnativa/rare/util/ListHelper.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/IntList.h"
#include "com/appnativa/util/iFilter.h"
#include "com/appnativa/util/iStringConverter.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/util/AbstractList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"

@implementation RAREaListHandler

- (id)initWithRAREiListView:(id<RAREiListView>)view {
  if (self = [super init]) {
    deselectEventsDisabled_ = YES;
    changeEventsEnabled_ = YES;
    self->listView_ = view;
  }
  return self;
}

- (BOOL)isAtLeftEdge {
  return [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) isAtLeftEdge];
}

- (BOOL)isAtRightEdge {
  return [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) isAtRightEdge];
}

- (BOOL)isAtTopEdge {
  return [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) isAtTopEdge];
}

- (void)repaintRowWithInt:(int)row {
  [((id<RAREiListView>) nil_chk(listView_)) repaintRowWithInt:row];
}

- (BOOL)isAtBottomEdge {
  return [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) isAtBottomEdge];
}

- (void)scrollToBottomEdge {
  [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) scrollToBottomEdge];
}

- (void)scrollToLeftEdge {
  [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) scrollToLeftEdge];
}

- (void)scrollToRightEdge {
  [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) scrollToRightEdge];
}

- (void)scrollToTopEdge {
  [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) scrollToTopEdge];
}

- (void)moveUpDownWithBoolean:(BOOL)up
                  withBoolean:(BOOL)block {
  [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) moveUpDownWithBoolean:up withBoolean:block];
}

- (void)moveLeftRightWithBoolean:(BOOL)left
                     withBoolean:(BOOL)block {
  [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) moveLeftRightWithBoolean:left withBoolean:block];
}

- (BOOL)isScrolling {
  return [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) isScrolling];
}

- (RAREUIPoint *)getContentOffset {
  return [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) getContentOffset];
}

- (void)setContentOffsetWithFloat:(float)x
                        withFloat:(float)y {
  [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) setContentOffsetWithFloat:x withFloat:y];
}

- (void)setScrollingEdgePainterWithRAREUIScrollingEdgePainter:(RAREUIScrollingEdgePainter *)painter {
  [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) setScrollingEdgePainterWithRAREUIScrollingEdgePainter:painter];
}

- (RAREUIScrollingEdgePainter *)getScrollingEdgePainter {
  return [((id<RAREiScrollerSupport>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getScrollerSupport])) getScrollingEdgePainter];
}

- (BOOL)isAutoHilight {
  return [((id<RAREiListView>) nil_chk(listView_)) isAutoHilight];
}

- (id)initWithRAREiListView:(id<RAREiListView>)view
withRAREiPlatformListDataModel:(id<RAREiPlatformListDataModel>)model {
  if (self = [super init]) {
    deselectEventsDisabled_ = YES;
    changeEventsEnabled_ = YES;
    self->listView_ = view;
    self->listModel_ = model;
  }
  return self;
}

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  [self fireActionWithRAREActionEvent:e];
}

- (BOOL)addWithId:(RARERenderableDataItem *)e {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) addWithId:e];
}

- (void)setFilteredListWithJavaUtilList:(id<JavaUtilList>)list
                      withRAREUTiFilter:(id<RAREUTiFilter>)lastFilter {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) setFilteredListWithJavaUtilList:list withRAREUTiFilter:lastFilter];
}

- (void)removeDataModelListenerWithRAREiDataModelListener:(id<RAREiDataModelListener>)l {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) removeDataModelListenerWithRAREiDataModelListener:l];
}

- (void)addDataModelListenerWithRAREiDataModelListener:(id<RAREiDataModelListener>)l {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) addDataModelListenerWithRAREiDataModelListener:l];
}

- (void)addWithInt:(int)index
            withId:(RARERenderableDataItem *)element {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) addWithInt:index withId:element];
}

- (void)addActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
  if (listenerList_ == nil) {
    listenerList_ = [[RAREEventListenerList alloc] init];
  }
  [((id<RAREiListView>) nil_chk(listView_)) setActionListenerWithRAREiActionListener:self];
  [((RAREEventListenerList *) nil_chk(listenerList_)) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiActionListener)] withId:l];
}

- (BOOL)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) addAllWithJavaUtilCollection:collection];
}

- (BOOL)addAllWithInt:(int)location
withJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) addAllWithInt:location withJavaUtilCollection:collection];
}

- (void)addAllWithInt:(int)index
     withJavaUtilList:(id<JavaUtilList>)items
          withBoolean:(BOOL)insertMode {
  [self addAllWithInt:index withJavaUtilCollection:items];
}

- (void)addIndexToFilteredListWithInt:(int)index {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) addIndexToFilteredListWithInt:index];
}

- (void)addSelectionChangeListenerWithRAREiItemChangeListener:(id<RAREiItemChangeListener>)l {
  if (listenerList_ == nil) {
    listenerList_ = [[RAREEventListenerList alloc] init];
  }
  [((id<RAREiListView>) nil_chk(listView_)) setSelectionChangeListenerWithRAREiItemChangeListener:self];
  [((RAREEventListenerList *) nil_chk(listenerList_)) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiItemChangeListener)] withId:l];
}

- (void)addSelectionIndexWithInt:(int)index {
  [((id<RAREiListView>) nil_chk(listView_)) addSelectionIndexWithInt:index];
  [self selectionsChangesWithId:nil withId:[JavaLangInteger valueOfWithInt:index]];
}

- (void)addToFilteredListWithId:(RARERenderableDataItem *)item {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) addToFilteredListWithId:item];
}

- (void)addToFilteredListWithInt:(int)index
                          withId:(RARERenderableDataItem *)item {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) addToFilteredListWithInt:index withId:item];
}

- (void)clear {
  [self clearSelection];
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) clear];
}

- (void)clearContextMenuIndex {
  [((id<RAREiListView>) nil_chk(listView_)) clearContextMenuIndex];
}

- (void)scrollRowToBottomWithInt:(int)row {
  [((id<RAREiListView>) nil_chk(listView_)) scrollRowToBottomWithInt:row];
}

- (void)scrollRowToTopWithInt:(int)row {
  [((id<RAREiListView>) nil_chk(listView_)) scrollRowToTopWithInt:row];
}

- (void)scrollRowToVisibleWithInt:(int)row {
  [((id<RAREiListView>) nil_chk(listView_)) scrollRowToVisibleWithInt:row];
}

- (void)clearSelection {
  [self setSelectedIndexWithInt:-1];
}

- (id<JavaUtilList>)concatWithJavaUtilListArray:(IOSObjectArray *)e {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) concatWithJavaUtilListArray:e];
}

- (void)copySelectedItemsWithInt:(int)index
                     withBoolean:(BOOL)insertMode
                     withBoolean:(BOOL)delete_ {
  [RAREListHelper copySelectedItemsWithRAREiListHandler:self withInt:index withBoolean:insertMode withBoolean:delete_];
}

- (id)deleteSelectedDataWithBoolean:(BOOL)returnData {
  return [RAREListHelper deleteItemsWithRAREiListHandler:self withIntArray:[self getSelectedIndexes] withBoolean:returnData];
}

+ (id)deleteSelectedDataExWithRAREiListHandler:(id<RAREiListHandler>)listComponent
                                   withBoolean:(BOOL)returnData {
  IOSIntArray *sels = [((id<RAREiListHandler>) nil_chk(listComponent)) getSelectedIndexes];
  if (sels == nil) {
    return nil;
  }
  int len = (int) [((IOSIntArray *) nil_chk(sels)) count];
  IOSObjectArray *a = returnData ? [IOSObjectArray arrayWithLength:len type:[IOSClass classWithClass:[RARERenderableDataItem class]]] : nil;
  if (returnData) {
    for (int i = 0; i < len; i++) {
      (void) IOSObjectArray_Set(a, i, [listComponent getWithInt:IOSIntArray_Get(sels, i)]);
    }
  }
  for (int i = len - 1; i >= 0; i--) {
    (void) [listComponent removeWithInt:IOSIntArray_Get(sels, i)];
  }
  return a;
}

- (void)dispose {
  if (listenerList_ != nil) {
    [listenerList_ clear];
  }
  if (computeSizeRenderer_ != nil) {
    [computeSizeRenderer_ dispose];
  }
  calcRenderer_ = nil;
  calcComponent_ = nil;
  computeSizeRenderer_ = nil;
  listenerList_ = nil;
  listModel_ = nil;
  listView_ = nil;
}

- (void)ensureCapacityWithInt:(int)capacity {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) ensureCapacityWithInt:capacity];
}

- (BOOL)filterWithRAREUTiFilter:(id<RAREUTiFilter>)filter {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) filterWithRAREUTiFilter:filter];
}

- (BOOL)filterWithNSString:(NSString *)filter
               withBoolean:(BOOL)contains {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) filterWithNSString:filter withBoolean:contains];
}

- (BOOL)filterWithNSString:(NSString *)filter
               withBoolean:(BOOL)contains
               withBoolean:(BOOL)nullPasses
               withBoolean:(BOOL)emptyPasses {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) filterWithNSString:filter withBoolean:contains withBoolean:nullPasses withBoolean:emptyPasses];
}

- (int)findWithRAREUTiFilter:(id<RAREUTiFilter>)filter
                     withInt:(int)start {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) findWithRAREUTiFilter:filter withInt:start];
}

- (int)findWithNSString:(NSString *)filter
                withInt:(int)start
            withBoolean:(BOOL)contains {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) findWithNSString:filter withInt:start withBoolean:contains];
}

- (void)fireActionWithRAREActionEvent:(RAREActionEvent *)e {
  if ((listenerList_ != nil) && ([self getListComponent] != nil)) {
    [RAREUtils fireActionEventWithRAREEventListenerList:listenerList_ withRAREActionEvent:e];
  }
}

- (void)fireActionForSelected {
  if ([self hasSelection]) {
    RAREActionEvent *e = [[RAREActionEvent alloc] initWithId:[self getListComponent] withNSString:@"fireActionForSelected"];
    [RAREUtils fireActionEventWithRAREEventListenerList:listenerList_ withRAREActionEvent:e];
  }
}

+ (BOOL)focusEventWithRAREiListHandler:(id<RAREiListHandler>)listComponent
                    withRAREFocusEvent:(RAREFocusEvent *)e
                           withBoolean:(BOOL)focusOwner {
  if ([((RAREFocusEvent *) nil_chk(e)) wasFocusGained]) {
    BOOL hs = [((id<RAREiListHandler>) nil_chk(listComponent)) hasSelection];
    if (!focusOwner && hs) {
      [((id<RAREiPlatformComponent>) nil_chk([listComponent getListComponent])) repaint];
    }
    else if ([listComponent isHandleFirstFocusSelection] && !hs && ([listComponent size] > 0)) {
      [listComponent setSelectedIndexWithInt:0];
    }
    focusOwner = YES;
  }
  else {
    id<RAREiPlatformComponent> fc = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getPermanentFocusOwner];
    if (fc == nil) {
      focusOwner = NO;
    }
    if (![e isTemporary] || ([e getOppositeComponent] == nil)) {
      focusOwner = NO;
    }
    if (!focusOwner && [((id<RAREiListHandler>) nil_chk(listComponent)) hasSelection]) {
      [((id<RAREiPlatformComponent>) nil_chk([listComponent getListComponent])) repaint];
    }
  }
  return focusOwner;
}

- (int)indexOfWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) indexOfWithId:item];
}

- (void)itemChangedWithRAREItemChangeEvent:(RAREItemChangeEvent *)e {
  if ((listenerList_ == nil) || ![self isChangeEventsEnabled]) {
    return;
  }
  id ov = [self resolveChangeValueWithId:[((RAREItemChangeEvent *) nil_chk(e)) getOldValue]];
  id nv = [self resolveChangeValueWithId:[e getNewValue]];
  [self selectionsChangesWithId:ov withId:nv];
}

- (NSString *)joinWithNSString:(NSString *)sep {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) joinWithNSString:sep];
}

- (void)moveWithInt:(int)from
            withInt:(int)to {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) moveWithInt:from withInt:to];
}

- (void)moveRowWithInt:(int)from
               withInt:(int)to {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) moveWithInt:from withInt:to];
}

- (RARERenderableDataItem *)pop {
  return ((listModel_ == nil) || ([listModel_ size] == 0)) ? nil : [listModel_ removeWithInt:[listModel_ size] - 1];
}

- (void)pushWithNSObjectArray:(IOSObjectArray *)value {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) pushWithNSObjectArray:value];
}

- (BOOL)refilter {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) refilter];
}

- (void)refreshItems {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) refreshItems];
}

- (void)registerActionListenerWithBoolean:(BOOL)single {
}

- (RARERenderableDataItem *)removeWithInt:(int)index {
  if ([self isRowSelectedWithInt:index]) {
    [self removeSelectionWithInt:index];
  }
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) removeWithInt:index];
}

- (BOOL)removeWithId:(id)item {
  int n = [self indexOfWithId:item];
  if (n == -1) {
    return NO;
  }
  return [self removeWithInt:n] != nil;
}

- (void)removeActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
  if (listenerList_ != nil) {
    [listenerList_ removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiActionListener)] withId:l];
  }
}

- (BOOL)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  IOSObjectArray *a = [self getSelections];
  [self clearSelection];
  BOOL ok = [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) removeAllWithJavaUtilCollection:c];
  [RAREaListHandler setSelectionsWithRAREiListHandler:self withNSObjectArray:a];
  return ok;
}

- (void)removeSelectionChangeListenerWithRAREiItemChangeListener:(id<RAREiItemChangeListener>)l {
  if (listenerList_ != nil) {
    [listenerList_ removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiItemChangeListener)] withId:l];
  }
}

- (void)removeRowsWithIntArray:(IOSIntArray *)indexes {
  if (indexes != nil) {
    {
      IOSIntArray *a__ = indexes;
      int const *b__ = a__->buffer_;
      int const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        int index = (*b__++);
        if ([self isRowSelectedWithInt:index]) {
          [self removeSelectionWithInt:index];
        }
      }
    }
    [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) removeRowsWithIntArray:indexes];
  }
}

- (void)removeSelectionWithInt:(int)index {
  if ([self getSelectedIndex] == index) {
    [self setSelectedIndexWithInt:-1];
  }
}

- (BOOL)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  IOSObjectArray *a = [self getSelections];
  [self clearSelection];
  BOOL ok = [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) retainAllWithJavaUtilCollection:c];
  [RAREaListHandler setSelectionsWithRAREiListHandler:self withNSObjectArray:a];
  return ok;
}

- (id<JavaUtilList>)reverse {
  (void) [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) reverse];
  return self;
}

- (RARERenderableDataItem *)shift {
  return ((listModel_ == nil) || ([listModel_ size] == 0)) ? nil : [listModel_ removeWithInt:0];
}

- (int)size {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) size];
}

- (void)sizeRowsToFit {
}

- (id<JavaUtilList>)sliceWithInt:(int)start {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) sliceWithInt:start withInt:[self size]];
}

- (id<JavaUtilList>)sliceWithInt:(int)start
                         withInt:(int)end {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) sliceWithInt:start withInt:end];
}

- (void)sortWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) sortWithJavaUtilComparator:comparator];
}

- (void)trimToSize {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) trimToSize];
}

- (id<JavaUtilList>)spliceWithInt:(int)index
                          withInt:(int)howMany {
  return [self spliceWithInt:index withInt:howMany withNSObjectArray:(IOSObjectArray *) check_class_cast(nil, [IOSObjectArray class])];
}

- (id<JavaUtilList>)spliceWithInt:(int)index
                          withInt:(int)howMany
                withNSObjectArray:(IOSObjectArray *)e {
  return [self spliceListWithInt:index withInt:howMany withJavaUtilList:(e == nil) ? nil : [JavaUtilArrays asListWithNSObjectArray:e]];
}

- (id<JavaUtilList>)spliceListWithInt:(int)index
                              withInt:(int)howMany
                     withJavaUtilList:(id<JavaUtilList>)e {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) spliceListWithInt:index withInt:howMany withJavaUtilList:e];
}

- (void)swapWithInt:(int)index1
            withInt:(int)index2 {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) swapWithInt:index1 withInt:index2];
  if ([self isRowSelectedWithInt:index1]) {
    [self setSelectedIndexWithInt:index2];
  }
  else if ([self isRowSelectedWithInt:index2]) {
    [self setSelectedIndexWithInt:index1];
  }
}

- (BOOL)unfilter {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) unfilter];
}

- (void)unshiftWithId:(RARERenderableDataItem *)value {
  [self addWithInt:0 withId:value];
}

- (RARERenderableDataItem *)setWithInt:(int)index
                                withId:(RARERenderableDataItem *)item {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) setWithInt:index withId:item];
}

- (BOOL)setAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) setAllWithJavaUtilCollection:collection];
}

- (void)setAutoHilightWithBoolean:(BOOL)autoHilight {
  [((id<RAREiListView>) nil_chk(listView_)) setAutoHilightWithBoolean:autoHilight];
}

- (void)setChangeEventsEnabledWithBoolean:(BOOL)enabled {
  self->changeEventsEnabled_ = enabled;
}

- (void)setChangeSelColorOnLostFocusWithBoolean:(BOOL)change {
  changeSelColorOnLostFocus_ = change;
}

- (void)setConverterWithRAREUTiStringConverter:(id<RAREUTiStringConverter>)converter {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) setConverterWithRAREUTiStringConverter:converter];
}

- (void)setDataEventsEnabledWithBoolean:(BOOL)enabled {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) setEventsEnabledWithBoolean:enabled];
}

- (void)setDeselectEventsDisabledWithBoolean:(BOOL)deselectEventsDisabled {
  self->deselectEventsDisabled_ = deselectEventsDisabled;
}

- (void)setDividerLineWithRAREUIColor:(RAREUIColor *)color
                     withRAREUIStroke:(RAREUIStroke *)stroke {
  [((id<RAREiListView>) nil_chk(listView_)) setDividerLineWithRAREUIColor:color withRAREUIStroke:stroke];
}

- (void)setHandleFirstFocusSelectionWithBoolean:(BOOL)handle {
  handleFirstFocusSelection_ = handle;
}

- (void)setMinRowHeightWithInt:(int)min {
  self->minRowHeight_ = min;
  if ([self getRowHeight] < min) {
    [self setRowHeightWithInt:min];
  }
}

- (void)setRowHeightWithInt:(int)height {
  if (height < minRowHeight_) {
    height = minRowHeight_;
  }
  [self setRowHeightExWithInt:height];
}

- (void)setSelectedIndexWithInt:(int)index {
  id ov = nil;
  if ([self wantsDeselectedEvents]) {
    ov = [self getSelectionObjectsForChangeEvent];
  }
  [self setSelectedIndexExWithInt:index];
  if ([self wantsSelectedEvents]) {
    id nv = [self getSelectionObjectsForChangeEvent];
    [self selectionsChangesWithId:ov withId:nv];
  }
}

- (void)setSelectedIndexesWithIntArray:(IOSIntArray *)indices {
  if ((indices == nil) || ((int) [indices count] == 0)) {
    [self clearSelection];
    return;
  }
  if ([self isMultipleSelectionAllowed]) {
    id ov = [self wantsDeselectedEvents] ? [self getSelectionObjectsForChangeEvent] : nil;
    [self setSelectedIndexesExWithIntArray:indices];
    if (tmpList_ == nil) {
      tmpList_ = [[RAREUTIntList alloc] initWithIntArray:indices];
    }
    else {
      tmpList_->A_ = indices;
      tmpList_->_length_ = (int) [((IOSIntArray *) nil_chk(indices)) count];
    }
    [self selectionsChangesWithId:ov withId:tmpList_];
  }
  else {
    [self setSelectedIndexWithInt:IOSIntArray_Get(nil_chk(indices), 0)];
  }
}

- (void)setSelectedItemWithRARERenderableDataItem:(RARERenderableDataItem *)value {
  int n = [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) indexOfWithId:value];
  if (n != -1) {
    [self setSelectedIndexWithInt:n];
  }
}

- (void)setSelectionModeWithRAREiListHandler_SelectionModeEnum:(RAREiListHandler_SelectionModeEnum *)selectionMode {
  [((id<RAREiListView>) nil_chk(listView_)) setSelectionModeWithRAREiListHandler_SelectionModeEnum:selectionMode];
}

+ (void)setSelectionsWithRAREiListHandler:(id<RAREiListHandler>)listComponent
                        withNSObjectArray:(IOSObjectArray *)a {
  int len = (a == nil) ? 0 : (int) [a count];
  if (len == 0) {
    return;
  }
  RAREUTIntList *list = [[RAREUTIntList alloc] initWithInt:len];
  int n;
  for (int i = 0; i < len; i++) {
    n = [((id<RAREiListHandler>) nil_chk(listComponent)) indexOfWithId:IOSObjectArray_Get(nil_chk(a), i)];
    if (n > -1) {
      [list addWithInt:n];
    }
  }
  if ([list size] > 0) {
    [((id<RAREiListHandler>) nil_chk(listComponent)) setSelectedIndexesWithIntArray:[list toArray]];
  }
}

- (void)setShowDividerWithBoolean:(BOOL)show {
  [((id<RAREiListView>) nil_chk(listView_)) setShowDividerWithBoolean:show];
}

- (void)setSingleClickActionWithBoolean:(BOOL)singleClickAction {
  [((id<RAREiListView>) nil_chk(listView_)) setSingleClickActionWithBoolean:singleClickAction];
}

- (void)makeSelectionVisible {
  [((id<RAREiListView>) nil_chk(listView_)) makeSelectionVisible];
}

- (BOOL)isKeepSelectionVisible {
  return [((id<RAREiListView>) nil_chk(listView_)) isKeepSelectionVisible];
}

- (void)setKeepSelectionVisibleWithBoolean:(BOOL)keepSelectionVisible {
  [((id<RAREiListView>) nil_chk(listView_)) setKeepSelectionVisibleWithBoolean:keepSelectionVisible];
}

- (void)setVisibleRowCountWithInt:(int)rows {
  visibleRowCount_ = rows;
  [((id<RAREiListView>) nil_chk(listView_)) setVisibleRowCountWithInt:rows];
}

- (void)setMinimumVisibleRowCountWithInt:(int)rows {
  minVisibleRowCount_ = rows;
  [((id<RAREiListView>) nil_chk(listView_)) setMinimumVisibleRowCountWithInt:rows];
}

- (int)getMinimumVisibleRowCount {
  return minVisibleRowCount_;
}

- (RARERenderableDataItem *)getWithInt:(int)pos {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) getWithInt:pos];
}

- (RARERenderableDataItem *)getExWithInt:(int)pos {
  if ((pos < 0) || (pos >= [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) size])) {
    return nil;
  }
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) getWithInt:pos];
}

- (int)getAnchorSelectionIndex {
  return [self getMaxSelectionIndex];
}

- (id<RAREUTiStringConverter>)getConverter {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) getConverter];
}

- (id<JavaUtilList>)getFilteredList {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) getFilteredList];
}

- (int)getFirstVisibleIndex {
  return [((id<RAREiListView>) nil_chk(listView_)) getFirstVisibleIndex];
}

- (int)getItemCount {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) size];
}

+ (int)getFirstSelectableIndexWithJavaUtilList:(id<JavaUtilList>)list {
  int len = [((id<JavaUtilList>) nil_chk(list)) size];
  for (int i = 0; i < len; i++) {
    RARERenderableDataItem *item = [list getWithInt:i];
    if ((item != nil) && [item isEnabled] && [item isSelectable]) {
      return i;
    }
  }
  return -1;
}

+ (IOSObjectArray *)getItemsWithJavaUtilList:(id<JavaUtilList>)list
                                withIntArray:(IOSIntArray *)rows
                                     withInt:(int)col {
  int len = (list == nil) ? 0 : [list size];
  if (rows != nil) {
    len = (int) [rows count];
  }
  if (len == 0) {
    return nil;
  }
  IOSObjectArray *a = [IOSObjectArray arrayWithLength:len type:[IOSClass classWithClass:[RARERenderableDataItem class]]];
  RARERenderableDataItem *di;
  for (int i = 0; i < len; i++) {
    di = [((id<JavaUtilList>) nil_chk(list)) getWithInt:(rows == nil) ? i : IOSIntArray_Get(rows, i)];
    if ((col != -1) && (di != nil)) {
      di = [di getItemExWithInt:col];
    }
    if (di != nil) {
      (void) IOSObjectArray_Set(a, i, di);
    }
  }
  return a;
}

- (id<RAREUTiFilter>)getLastFilter {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) getLastFilter];
}

- (int)getLastVisibleIndex {
  return [((id<RAREiListView>) nil_chk(listView_)) getLastVisibleIndex];
}

- (id<RAREiPlatformComponent>)getListComponent {
  return [((id<RAREiListView>) nil_chk(listView_)) getListComponent];
}

- (int)getMaxSelectionIndex {
  return [self getSelectedIndex];
}

- (int)getMinRowHeight {
  return minRowHeight_;
}

- (int)getMinSelectionIndex {
  return [self getSelectedIndex];
}

- (int)getContextMenuIndex {
  return [((id<RAREiListView>) nil_chk(listView_)) getContextMenuIndex];
}

- (RARERenderableDataItem *)getContextMenuItem {
  int n = [self getContextMenuIndex];
  return (n == -1) ? nil : [self getWithInt:n];
}

- (int)getPreferredHeightWithInt:(int)row {
  calcRenderer_ = [self getItemRenderer];
  calcComponent_ = [self getListComponent];
  RAREUIDimension *size = calcPrefSize_;
  if (size == nil) {
    size = [[RAREUIDimension alloc] init];
    calcPrefSize_ = size;
  }
  [self calculateRowSizeWithInt:row withRAREUIDimension:size];
  return (int) ((RAREUIDimension *) nil_chk(size))->height_;
}

- (RAREUIDimension *)getPreferredSize {
  calcRenderer_ = [self getItemRenderer];
  calcComponent_ = [self getListComponent];
  RAREUIDimension *size = [[RAREUIDimension alloc] init];
  float width = 0;
  float height = 0;
  int len = [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) size];
  int rh = [((id<RAREiListView>) nil_chk(listView_)) isRowSizeFixed] ? [self getRowHeight] : 0;
  for (int i = 0; i < len; i++) {
    [self calculateRowSizeWithInt:i withRAREUIDimension:size];
    width = [JavaLangMath maxWithFloat:width withFloat:size->width_];
    if (rh == 0) {
      height += size->height_ + 1;
    }
    else {
      height += rh + 1;
    }
  }
  size->height_ = height;
  size->width_ = width;
  return size;
}

- (float)getPreferredWidth {
  calcRenderer_ = [self getItemRenderer];
  calcComponent_ = [self getListComponent];
  RAREUIDimension *size = [[RAREUIDimension alloc] init];
  float width = 0;
  int len = [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) size];
  for (int i = 0; i < len; i++) {
    [self calculateRowSizeWithInt:i withRAREUIDimension:size];
    width = [JavaLangMath maxWithFloat:width withFloat:size->width_];
  }
  return width;
}

- (RAREUIRectangle *)getRowBoundsWithInt:(int)row0
                                 withInt:(int)row1 {
  return [[RAREUIRectangle alloc] initWithFloat:0 withFloat:0 withFloat:0 withFloat:0];
}

- (int)getRowIndexAtWithRAREUIPoint:(RAREUIPoint *)p {
  return [self getRowIndexAtWithFloat:((RAREUIPoint *) nil_chk(p))->x_ withFloat:p->y_];
}

- (id<JavaUtilList>)getRows {
  return listModel_;
}

- (int)getSelectedIndex {
  return [((id<RAREiListView>) nil_chk(listView_)) getSelectedIndex];
}

- (int)getSelectedIndexCount {
  return [((id<RAREiListView>) nil_chk(listView_)) getSelectedIndexCount];
}

- (RARERenderableDataItem *)getSelectedItem {
  int n = [self getSelectedIndex];
  return (n == -1) ? nil : [self getWithInt:n];
}

- (IOSObjectArray *)getSelectedObjects {
  IOSObjectArray *a = [self getSelections];
  if ((a == nil) || ((int) [a count] == 0)) {
    return nil;
  }
  return a;
}

- (id)getSelection {
  return [self getSelectedItem];
}

- (NSString *)getSelectionAsString {
  return [RAREUTHelper toStringWithNSObjectArray:[self getSelectionsAsStrings] withNSString:@"\x0d\n"];
}

- (IOSObjectArray *)getSelections {
  return [RAREDataItemCollection getSelectionsWithRAREiListHandler:self withInt:-1];
}

- (IOSObjectArray *)getSelectionsAsStrings {
  return [RAREDataItemCollection getValuesAsStringsWithJavaUtilList:listModel_ withIntArray:[self getSelectedIndexes] withInt:-1 withBoolean:NO withBoolean:NO withNSString:nil];
}

- (id<JavaUtilList>)getUnfilteredList {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) getUnfilteredList];
}

- (int)getVisibleRowCount {
  if (visibleRowCount_ != 0) {
    return visibleRowCount_;
  }
  int h = [RAREUIScreen snapToSizeWithFloat:[((id<RAREiPlatformComponent>) nil_chk([((id<RAREiListView>) nil_chk(listView_)) getListComponent])) getHeight]];
  int rh = [self getRowHeight];
  if (rh < 1) {
    rh = [RAREScreenUtils lineHeightWithRAREiPlatformComponent:[self getListComponent]];
  }
  return [JavaLangMath maxWithInt:h / rh withInt:1];
}

- (BOOL)hasSelection {
  return [self getSelectedIndex] != -1;
}

- (BOOL)hasValue {
  return [self getItemCount] > 0;
}

- (BOOL)isChangeEventsEnabled {
  return changeEventsEnabled_;
}

- (BOOL)isChangeSelColorOnLostFocus {
  return changeSelColorOnLostFocus_;
}

- (BOOL)isDataEventsEnabled {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) isEventsEnabled];
}

- (BOOL)isDeselectEventsDisabled {
  return deselectEventsDisabled_;
}

- (BOOL)isFiltered {
  return [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) isFiltered];
}

- (BOOL)isHandleFirstFocusSelection {
  return handleFirstFocusSelection_;
}

- (BOOL)isListSelectable {
  return [((id<RAREiListView>) nil_chk(listView_)) isSelectable];
}

- (BOOL)isMultipleSelectionAllowed {
  return NO;
}

- (BOOL)isRowSelectedWithInt:(int)row {
  return [self getSelectedIndex] == row;
}

- (BOOL)isRowSelectedWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  int row = [self indexOfWithRARERenderableDataItem:item];
  return (row == -1) ? NO : [self isRowSelectedWithInt:row];
}

- (BOOL)isSingleClickAction {
  return [((id<RAREiListView>) nil_chk(listView_)) isSingleClickAction];
}

- (BOOL)isTabular {
  return NO;
}

- (id)resolveChangeValueWithId:(id)cv {
  if ([cv isKindOfClass:[RAREUTIntList class]]) {
    RAREUTIntList *l = (RAREUTIntList *) check_class_cast(cv, [RAREUTIntList class]);
    int len = [((RAREUTIntList *) nil_chk(l)) size];
    if ((len == 0) || ((len == 1) && ([l getWithInt:0] == -1))) {
      return nil;
    }
    IOSObjectArray *a = [IOSObjectArray arrayWithLength:len type:[IOSClass classWithClass:[RARERenderableDataItem class]]];
    for (int i = 0; i < len; i++) {
      (void) IOSObjectArray_Set(a, i, [self getExWithInt:[l getWithInt:i]]);
    }
    cv = a;
  }
  else if ([cv isKindOfClass:[IOSIntArray class]]) {
    IOSIntArray *l = (IOSIntArray *) check_class_cast(cv, [IOSIntArray class]);
    int len = (int) [((IOSIntArray *) nil_chk(l)) count];
    if ((len == 0) || ((len == 1) && (IOSIntArray_Get(l, 0) == -1))) {
      return nil;
    }
    IOSObjectArray *a = [IOSObjectArray arrayWithLength:len type:[IOSClass classWithClass:[RARERenderableDataItem class]]];
    for (int i = 0; i < len; i++) {
      (void) IOSObjectArray_Set(a, i, [self getExWithInt:IOSIntArray_Get(l, i)]);
    }
    cv = a;
  }
  else if (cv != nil) {
    JavaLangInteger *n = (JavaLangInteger *) check_class_cast(cv, [JavaLangInteger class]);
    if ([n intValue] == -1) {
      cv = nil;
    }
    else {
      cv = [self getExWithInt:[n intValue]];
    }
  }
  return cv;
}

- (void)selectionsChangesWithId:(id)ov
                         withId:(id)nv {
  if ((ov != nil) && !deselectEventsDisabled_) {
    RAREItemChangeEvent *ie = [[RAREItemChangeEvent alloc] initWithId:[((id<RAREiListView>) nil_chk(listView_)) getListComponent] withId:ov withId:nil];
    [RAREUtils fireItemChangedWithRAREEventListenerList:listenerList_ withRAREItemChangeEvent:ie];
  }
  if (nv != nil) {
    RAREItemChangeEvent *ie = [[RAREItemChangeEvent alloc] initWithId:[((id<RAREiListView>) nil_chk(listView_)) getListComponent] withId:ov withId:nv];
    [RAREUtils fireItemChangedWithRAREEventListenerList:listenerList_ withRAREItemChangeEvent:ie];
  }
}

- (BOOL)wantsDeselectedEvents {
  return !deselectEventsDisabled_ && (listenerList_ != nil) && ([listenerList_ getListenerCountWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiItemChangeListener)]] > 0);
}

- (BOOL)wantsSelectedEvents {
  return [self isChangeEventsEnabled] && (listenerList_ != nil) && ([listenerList_ getListenerCountWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiItemChangeListener)]] > 0);
}

- (void)setRowHeightExWithInt:(int)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setSelectedIndexExWithInt:(int)index {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setSelectedIndexesExWithIntArray:(IOSIntArray *)indices {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)getSelectionObjectsForChangeEvent {
  return [self getSelection];
}

- (void)calculateItemSizeWithRAREColumn:(RAREColumn *)col
             withRARERenderableDataItem:(RARERenderableDataItem *)item
                                withInt:(int)row
             withRARERenderableDataItem:(RARERenderableDataItem *)rowItem
                    withRAREUIDimension:(RAREUIDimension *)size {
  id<RAREiPlatformComponent> c = [((RARERenderableDataItem *) nil_chk(item)) getRenderingComponent];
  if (c != nil) {
    (void) [c getPreferredSizeWithRAREUIDimension:size];
  }
  else {
    id<RAREiPlatformRenderingComponent> rc = (col == nil) ? nil : [col getCellRenderer];
    if (rc == nil) {
      rc = computeSizeRenderer_;
      if (rc == nil) {
        rc = computeSizeRenderer_ = [[RAREUILabelRenderer alloc] init];
      }
    }
    id<JavaLangCharSequence> text = [((id<RAREiPlatformItemRenderer>) nil_chk(calcRenderer_)) configureRenderingComponentWithRAREiPlatformComponent:calcComponent_ withRAREiPlatformRenderingComponent:rc withRARERenderableDataItem:item withInt:row withBoolean:NO withBoolean:NO withRAREColumn:col withRARERenderableDataItem:rowItem];
    (void) [((id<RAREiPlatformComponent>) nil_chk([((id<RAREiPlatformRenderingComponent>) nil_chk(rc)) getComponentWithJavaLangCharSequence:text withRARERenderableDataItem:item])) getPreferredSizeWithRAREUIDimension:size];
  }
}

- (void)calculateRowSizeWithInt:(int)row
            withRAREUIDimension:(RAREUIDimension *)size {
  [self calculateItemSizeWithRAREColumn:nil withRARERenderableDataItem:[((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) getWithInt:row] withInt:row withRARERenderableDataItem:nil withRAREUIDimension:size];
}

- (RAREUIColor *)getAlternatingRowColor {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSIntArray *)getCheckedIndexes {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiPlatformComponent>)getContainerComponent {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiPlatformItemRenderer>)getItemRenderer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (RAREiListHandler_SelectionTypeEnum *)getListSelectionType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getRowHeight {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getRowIndexAtWithFloat:(float)param0
                    withFloat:(float)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSIntArray *)getSelectedIndexes {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)selectAll {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setAlternatingRowColorWithRAREUIColor:(RAREUIColor *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setListSelectableWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setListSelectionTypeWithRAREiListHandler_SelectionTypeEnum:(RAREiListHandler_SelectionTypeEnum *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)copyAllFieldsTo:(RAREaListHandler *)other {
  [super copyAllFieldsTo:other];
  other->calcComponent_ = calcComponent_;
  other->calcPrefSize_ = calcPrefSize_;
  other->calcRenderer_ = calcRenderer_;
  other->changeEventsEnabled_ = changeEventsEnabled_;
  other->changeSelColorOnLostFocus_ = changeSelColorOnLostFocus_;
  other->computeSizeRenderer_ = computeSizeRenderer_;
  other->deselectEventsDisabled_ = deselectEventsDisabled_;
  other->handleFirstFocusSelection_ = handleFirstFocusSelection_;
  other->listModel_ = listModel_;
  other->listView_ = listView_;
  other->listenerList_ = listenerList_;
  other->minRowHeight_ = minRowHeight_;
  other->minVisibleRowCount_ = minVisibleRowCount_;
  other->tmpList_ = tmpList_;
  other->visibleRowCount_ = visibleRowCount_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "isAtLeftEdge", NULL, "Z", 0x1, NULL },
    { "isAtRightEdge", NULL, "Z", 0x1, NULL },
    { "isAtTopEdge", NULL, "Z", 0x1, NULL },
    { "isAtBottomEdge", NULL, "Z", 0x1, NULL },
    { "isScrolling", NULL, "Z", 0x1, NULL },
    { "getContentOffset", NULL, "LRAREUIPoint", 0x1, NULL },
    { "getScrollingEdgePainter", NULL, "LRAREUIScrollingEdgePainter", 0x1, NULL },
    { "isAutoHilight", NULL, "Z", 0x1, NULL },
    { "addWithRARERenderableDataItem:", NULL, "Z", 0x1, NULL },
    { "addAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "addAllWithInt:withJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "concatWithJavaUtilListArray:", NULL, "LJavaUtilList", 0x81, NULL },
    { "deleteSelectedDataWithBoolean:", NULL, "LNSObject", 0x1, NULL },
    { "deleteSelectedDataExWithRAREiListHandler:withBoolean:", NULL, "LNSObject", 0x9, NULL },
    { "filterWithRAREUTiFilter:", NULL, "Z", 0x1, NULL },
    { "filterWithNSString:withBoolean:", NULL, "Z", 0x1, NULL },
    { "filterWithNSString:withBoolean:withBoolean:withBoolean:", NULL, "Z", 0x1, NULL },
    { "focusEventWithRAREiListHandler:withRAREFocusEvent:withBoolean:", NULL, "Z", 0x9, NULL },
    { "joinWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "pop", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "pushWithRARERenderableDataItemArray:", NULL, "V", 0x81, NULL },
    { "refilter", NULL, "Z", 0x1, NULL },
    { "removeWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "removeWithId:", NULL, "Z", 0x1, NULL },
    { "removeAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "retainAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "reverse", NULL, "LJavaUtilList", 0x1, NULL },
    { "shift", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "sliceWithInt:", NULL, "LJavaUtilList", 0x1, NULL },
    { "sliceWithInt:withInt:", NULL, "LJavaUtilList", 0x1, NULL },
    { "spliceWithInt:withInt:", NULL, "LJavaUtilList", 0x1, NULL },
    { "spliceWithInt:withInt:withRARERenderableDataItemArray:", NULL, "LJavaUtilList", 0x81, NULL },
    { "spliceListWithInt:withInt:withJavaUtilList:", NULL, "LJavaUtilList", 0x1, NULL },
    { "unfilter", NULL, "Z", 0x1, NULL },
    { "setWithInt:withRARERenderableDataItem:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "setAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "isKeepSelectionVisible", NULL, "Z", 0x1, NULL },
    { "getWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getExWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getConverter", NULL, "LRAREUTiStringConverter", 0x1, NULL },
    { "getFilteredList", NULL, "LJavaUtilList", 0x1, NULL },
    { "getItemsWithJavaUtilList:withIntArray:withInt:", NULL, "LIOSObjectArray", 0x9, NULL },
    { "getLastFilter", NULL, "LRAREUTiFilter", 0x1, NULL },
    { "getListComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getContextMenuItem", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getPreferredSize", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getRowBoundsWithInt:withInt:", NULL, "LRAREUIRectangle", 0x1, NULL },
    { "getRows", NULL, "LJavaUtilList", 0x1, NULL },
    { "getSelectedItem", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getSelectedObjects", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getSelection", NULL, "LNSObject", 0x1, NULL },
    { "getSelectionAsString", NULL, "LNSString", 0x1, NULL },
    { "getSelections", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getSelectionsAsStrings", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getUnfilteredList", NULL, "LJavaUtilList", 0x1, NULL },
    { "hasSelection", NULL, "Z", 0x1, NULL },
    { "hasValue", NULL, "Z", 0x1, NULL },
    { "isChangeEventsEnabled", NULL, "Z", 0x1, NULL },
    { "isChangeSelColorOnLostFocus", NULL, "Z", 0x1, NULL },
    { "isDataEventsEnabled", NULL, "Z", 0x1, NULL },
    { "isDeselectEventsDisabled", NULL, "Z", 0x1, NULL },
    { "isFiltered", NULL, "Z", 0x1, NULL },
    { "isHandleFirstFocusSelection", NULL, "Z", 0x1, NULL },
    { "isListSelectable", NULL, "Z", 0x1, NULL },
    { "isMultipleSelectionAllowed", NULL, "Z", 0x1, NULL },
    { "isRowSelectedWithInt:", NULL, "Z", 0x1, NULL },
    { "isRowSelectedWithRARERenderableDataItem:", NULL, "Z", 0x1, NULL },
    { "isSingleClickAction", NULL, "Z", 0x1, NULL },
    { "isTabular", NULL, "Z", 0x1, NULL },
    { "resolveChangeValueWithId:", NULL, "LNSObject", 0x4, NULL },
    { "selectionsChangesWithId:withId:", NULL, "V", 0x4, NULL },
    { "wantsDeselectedEvents", NULL, "Z", 0x4, NULL },
    { "wantsSelectedEvents", NULL, "Z", 0x4, NULL },
    { "setRowHeightExWithInt:", NULL, "V", 0x404, NULL },
    { "setSelectedIndexExWithInt:", NULL, "V", 0x404, NULL },
    { "setSelectedIndexesExWithIntArray:", NULL, "V", 0x404, NULL },
    { "getSelectionObjectsForChangeEvent", NULL, "LNSObject", 0x4, NULL },
    { "calculateItemSizeWithRAREColumn:withRARERenderableDataItem:withInt:withRARERenderableDataItem:withRAREUIDimension:", NULL, "V", 0x2, NULL },
    { "calculateRowSizeWithInt:withRAREUIDimension:", NULL, "V", 0x2, NULL },
    { "getAlternatingRowColor", NULL, "LRAREUIColor", 0x401, NULL },
    { "getCheckedIndexes", NULL, "LIOSIntArray", 0x401, NULL },
    { "getContainerComponent", NULL, "LRAREiPlatformComponent", 0x401, NULL },
    { "getItemRenderer", NULL, "LRAREiPlatformItemRenderer", 0x401, NULL },
    { "getListSelectionType", NULL, "LRAREiListHandler_SelectionTypeEnum", 0x401, NULL },
    { "getRowHeight", NULL, "I", 0x401, NULL },
    { "getRowIndexAtWithFloat:withFloat:", NULL, "I", 0x401, NULL },
    { "getSelectedIndexes", NULL, "LIOSIntArray", 0x401, NULL },
    { "selectAll", NULL, "V", 0x401, NULL },
    { "setAlternatingRowColorWithRAREUIColor:", NULL, "V", 0x401, NULL },
    { "setListSelectableWithBoolean:", NULL, "V", 0x401, NULL },
    { "setListSelectionTypeWithRAREiListHandler_SelectionTypeEnum:", NULL, "V", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "deselectEventsDisabled_", NULL, 0x4, "Z" },
    { "changeEventsEnabled_", NULL, 0x4, "Z" },
    { "changeSelColorOnLostFocus_", NULL, 0x4, "Z" },
    { "computeSizeRenderer_", NULL, 0x4, "LRAREUILabelRenderer" },
    { "handleFirstFocusSelection_", NULL, 0x4, "Z" },
    { "listModel_", NULL, 0x4, "LRAREiPlatformListDataModel" },
    { "listView_", NULL, 0x4, "LRAREiListView" },
    { "listenerList_", NULL, 0x4, "LRAREEventListenerList" },
    { "minRowHeight_", NULL, 0x4, "I" },
    { "tmpList_", NULL, 0x4, "LRAREUTIntList" },
    { "visibleRowCount_", NULL, 0x4, "I" },
    { "minVisibleRowCount_", NULL, 0x4, "I" },
  };
  static const char *superclass_type_args[] = {"LRARERenderableDataItem"};
  static J2ObjcClassInfo _RAREaListHandler = { "aListHandler", "com.appnativa.rare.ui", NULL, 0x401, 91, methods, 12, fields, 1, superclass_type_args};
  return &_RAREaListHandler;
}

@end
