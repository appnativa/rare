//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/Column.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/converters/ColorConverter.h"
#include "com/appnativa/rare/converters/ConverterContext.h"
#include "com/appnativa/rare/converters/StringConverter.h"
#include "com/appnativa/rare/converters/iDataConverter.h"
#include "com/appnativa/rare/spot/ItemDescription.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/Column.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIPopupMenu.h"
#include "com/appnativa/rare/ui/event/iActionListener.h"
#include "com/appnativa/rare/ui/iPlatformCellEditingComponent.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/iPlatformRenderingComponent.h"
#include "com/appnativa/rare/ui/painter/PaintBucket.h"
#include "com/appnativa/rare/ui/painter/PainterHolder.h"
#include "com/appnativa/rare/ui/painter/UIComponentPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/SimpleDateFormatEx.h"
#include "com/appnativa/util/iFilterableList.h"
#include "java/lang/CharSequence.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Comparable.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/Math.h"
#include "java/lang/Throwable.h"
#include "java/text/DecimalFormat.h"
#include "java/text/NumberFormat.h"

@implementation RAREColumn

static BOOL RAREColumn_defaultHeaderWordWrap_ = YES;

+ (int)FOOTER {
  return RAREColumn_FOOTER;
}

+ (int)FOOTER_INDEX {
  return RAREColumn_FOOTER_INDEX;
}

+ (int)FOOTER_INDEX_NORMAL {
  return RAREColumn_FOOTER_INDEX_NORMAL;
}

+ (int)FOOTER_NORMAL {
  return RAREColumn_FOOTER_NORMAL;
}

+ (int)HEADER {
  return RAREColumn_HEADER;
}

+ (int)HEADER_INDEX {
  return RAREColumn_HEADER_INDEX;
}

+ (int)HEADER_INDEX_NORMAL {
  return RAREColumn_HEADER_INDEX_NORMAL;
}

+ (int)HEADER_NORMAL {
  return RAREColumn_HEADER_NORMAL;
}

+ (int)INDEX_NORMAL {
  return RAREColumn_INDEX_NORMAL;
}

+ (int)NORMAL {
  return RAREColumn_NORMAL;
}

+ (BOOL)defaultHeaderWordWrap {
  return RAREColumn_defaultHeaderWordWrap_;
}

+ (BOOL *)defaultHeaderWordWrapRef {
  return &RAREColumn_defaultHeaderWordWrap_;
}

+ (int)WIDTH_TYPE_MAX {
  return RAREColumn_WIDTH_TYPE_MAX;
}

+ (int)WIDTH_TYPE_MIN {
  return RAREColumn_WIDTH_TYPE_MIN;
}

+ (int)WIDTH_TYPE_NORMAL {
  return RAREColumn_WIDTH_TYPE_NORMAL;
}

- (float)getIconScaleFactor {
  return iconScaleFactor_;
}

- (BOOL)isScaleHeaderIcon {
  return scaleIcon_ && (headerIconScaleFactor_ > 0);
}

- (void)setScaleHeaderIconWithBoolean:(BOOL)scale_
                            withFloat:(float)scaleFactor {
  scaleHeaderIcon_Column_ = scale_;
  self->headerIconScaleFactor_ = scaleFactor;
}

- (float)getHeaderIconScaleFactor {
  return headerIconScaleFactor_;
}

- (id)init {
  if (self = [super init]) {
    maxWidth_ = 0;
    minWidth_ = 0;
    preferedWidth_ = 0;
    sortable_ = YES;
    sizeFixed_ = NO;
    showable_ = YES;
    moveable_ = YES;
    hideable_ = YES;
    wordWrap_ = NO;
    headerWordWrap_ = RAREColumn_defaultHeaderWordWrap_;
    overrideSelectionBackground_ = NO;
    firstTable_ = 0;
    columnTitle_ = @"";
    indexColumn_ = NO;
    headerColumn_ = NO;
    footerColumn_ = NO;
    renderType_ = RAREColumn_NORMAL;
    headerVerticalAlign_ = [RARERenderableDataItem_VerticalAlignEnum AUTO];
    headerIconPosition_ = [RARERenderableDataItem_IconPositionEnum AUTO];
    headerHorizontalAlign_ = [RARERenderableDataItem_HorizontalAlignEnum AUTO];
    renderDetail_ = [RAREColumn_RenderDetailEnum AUTO];
  }
  return self;
}

- (id)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)title {
  return [self initRAREColumnWithJavaLangCharSequence:title withId:nil withInt:RARERenderableDataItem_TYPE_STRING withId:nil withRAREiPlatformIcon:nil];
}

- (id)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)title
                           withInt:(int)type {
  return [self initRAREColumnWithJavaLangCharSequence:title withId:nil withInt:type withId:nil withRAREiPlatformIcon:nil];
}

- (id)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)title
                           withInt:(int)type
                            withId:(id)data {
  return [self initRAREColumnWithJavaLangCharSequence:title withId:nil withInt:type withId:data withRAREiPlatformIcon:nil];
}

- (id)initRAREColumnWithJavaLangCharSequence:(id<JavaLangCharSequence>)title
                                      withId:(id)value
                                     withInt:(int)type
                                      withId:(id)data
                       withRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  if (self = [super initWithId:value withInt:type withId:data withRAREiPlatformIcon:icon]) {
    maxWidth_ = 0;
    minWidth_ = 0;
    preferedWidth_ = 0;
    sortable_ = YES;
    sizeFixed_ = NO;
    showable_ = YES;
    moveable_ = YES;
    hideable_ = YES;
    wordWrap_ = NO;
    headerWordWrap_ = RAREColumn_defaultHeaderWordWrap_;
    overrideSelectionBackground_ = NO;
    firstTable_ = 0;
    columnTitle_ = @"";
    indexColumn_ = NO;
    headerColumn_ = NO;
    footerColumn_ = NO;
    renderType_ = RAREColumn_NORMAL;
    headerVerticalAlign_ = [RARERenderableDataItem_VerticalAlignEnum AUTO];
    headerIconPosition_ = [RARERenderableDataItem_IconPositionEnum AUTO];
    headerHorizontalAlign_ = [RARERenderableDataItem_HorizontalAlignEnum AUTO];
    renderDetail_ = [RAREColumn_RenderDetailEnum AUTO];
    [self setColumnTitleWithJavaLangCharSequence:title];
  }
  return self;
}

- (id)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)title
                            withId:(id)value
                           withInt:(int)type
                            withId:(id)data
             withRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  return [self initRAREColumnWithJavaLangCharSequence:title withId:value withInt:type withId:data withRAREiPlatformIcon:icon];
}

- (int)calculateMinimumWidthWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                             withFloat:(float)tableWidth {
  if (minWidth_ > 0) {
    return [RAREScreenUtils toPlatformPixelWidthWithFloat:minWidth_ withRAREScreenUtils_UnitEnum:minWidthUnit_ withRAREiPlatformComponent:c withFloat:tableWidth withBoolean:NO];
  }
  if (!sizeFixed_) {
    return 0;
  }
  int n = (preferedWidth_ == 0) ? 0 : [RAREScreenUtils toPlatformPixelWidthWithFloat:preferedWidth_ withRAREScreenUtils_UnitEnum:widthUnit_ withRAREiPlatformComponent:c withFloat:tableWidth withBoolean:NO];
  if (maxWidth_ > 0) {
    n = [JavaLangMath maxWithInt:[RAREScreenUtils toPlatformPixelWidthWithFloat:maxWidth_ withRAREScreenUtils_UnitEnum:maxWidthUnit_ withRAREiPlatformComponent:c withFloat:tableWidth withBoolean:NO] withInt:n];
  }
  return n;
}

- (int)calculatePreferedWidthWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                              withFloat:(float)tableWidth {
  int n = (preferedWidth_ == 0) ? 0 : [RAREScreenUtils toPlatformPixelWidthWithFloat:preferedWidth_ withRAREScreenUtils_UnitEnum:widthUnit_ withRAREiPlatformComponent:c withFloat:tableWidth withBoolean:NO];
  if (minWidth_ > 0) {
    n = [JavaLangMath minWithInt:[RAREScreenUtils toPlatformPixelWidthWithFloat:minWidth_ withRAREScreenUtils_UnitEnum:minWidthUnit_ withRAREiPlatformComponent:c withFloat:tableWidth withBoolean:NO] withInt:n];
  }
  if (maxWidth_ > 0) {
    n = [JavaLangMath maxWithInt:[RAREScreenUtils toPlatformPixelWidthWithFloat:maxWidth_ withRAREScreenUtils_UnitEnum:maxWidthUnit_ withRAREiPlatformComponent:c withFloat:tableWidth withBoolean:NO] withInt:n];
  }
  return n;
}

- (id)clone {
  RAREColumn *item = (RAREColumn *) check_class_cast([super clone], [RAREColumn class]);
  ((RAREColumn *) nil_chk(item))->firstTable_ = 0;
  id<RAREUTiFilterableList> subs = item->subItems_;
  int len = (subs == nil) ? 0 : [subs size];
  if (len > 0) {
    id<RAREUTiFilterableList> tsubs = subItems_;
    for (int i = 0; i < len; i++) {
      [((id<RAREUTiFilterableList>) nil_chk(subs)) addWithId:(RARERenderableDataItem *) check_class_cast([((RARERenderableDataItem *) nil_chk([((id<RAREUTiFilterableList>) nil_chk(tsubs)) getWithInt:i])) clone], [RARERenderableDataItem class])];
    }
  }
  return item;
}

- (void)convertWithRAREiWidget:(id<RAREiWidget>)w
    withRARERenderableDataItem:(RARERenderableDataItem *)di {
  id<RAREiDataConverter> cvt = [self getDataConverter];
  if (cvt != nil) {
    (void) [((RARERenderableDataItem *) nil_chk(di)) convertWithRAREiWidget:w withInt:[self getType] withRAREiDataConverter:cvt withId:[self getValueContext]];
  }
}

- (BOOL)isEqual:(id)o {
  return o == self;
}

- (id)convertWithRAREiWidget:(id<RAREiWidget>)w
                withNSString:(NSString *)value {
  id<RAREiDataConverter> cvt = [self getDataConverter];
  id ctx = [self getValueContext];
  if (cvt == nil) {
    return value;
  }
  if (ctx == nil) {
    ctx = [self getValueContext];
  }
  return [((id<RAREiDataConverter>) nil_chk(cvt)) objectFromStringWithRAREiWidget:w withNSString:value withId:ctx];
}

- (id)convertWithRAREiWidget:(id<RAREiWidget>)w
  withRARERenderableDataItem:(RARERenderableDataItem *)di
                withNSString:(NSString *)value {
  id<RAREiDataConverter> cvt = [((RARERenderableDataItem *) nil_chk(di)) getDataConverter];
  id ctx = [di getValueContext];
  if (cvt == nil) {
    cvt = [self getDataConverter];
  }
  if (cvt == nil) {
    return value;
  }
  if (ctx == nil) {
    ctx = [self getValueContext];
  }
  return [((id<RAREiDataConverter>) nil_chk(cvt)) objectFromStringWithRAREiWidget:w withNSString:value withId:ctx];
}

- (RARERenderableDataItem *)convertToItem {
  [self setFontWithRAREUIFont:self->headerFont_];
  [self setValueWithId:columnTitle_];
  [self setVerticalAlignmentWithRARERenderableDataItem_VerticalAlignEnum:headerVerticalAlign_];
  [self setHorizontalAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:headerHorizontalAlign_];
  [self setIconPositionWithRARERenderableDataItem_IconPositionEnum:headerIconPosition_];
  return self;
}

+ (int)fromSPOTTypeWithInt:(int)type {
  switch (type) {
    case RARESPOTItemDescription_CValueType_string_type:
    type = RARERenderableDataItem_TYPE_STRING;
    break;
    case RARESPOTItemDescription_CValueType_date_type:
    type = RARERenderableDataItem_TYPE_DATE;
    break;
    case RARESPOTItemDescription_CValueType_date_time_type:
    type = RARERenderableDataItem_TYPE_DATETIME;
    break;
    case RARESPOTItemDescription_CValueType_time_type:
    type = RARERenderableDataItem_TYPE_TIME;
    break;
    case RARESPOTItemDescription_CValueType_array_type:
    type = RARERenderableDataItem_TYPE_ARRAY;
    break;
    case RARESPOTItemDescription_CValueType_struct_type:
    type = RARERenderableDataItem_TYPE_STRUCT;
    break;
    case RARESPOTItemDescription_CValueType_integer_type:
    type = RARERenderableDataItem_TYPE_INTEGER;
    break;
    case RARESPOTItemDescription_CValueType_decimal_type:
    type = RARERenderableDataItem_TYPE_DECIMAL;
    break;
    case RARESPOTItemDescription_CValueType_boolean_type:
    type = RARERenderableDataItem_TYPE_BOOLEAN;
    break;
    case RARESPOTItemDescription_CValueType_widget_type:
    type = RARERenderableDataItem_TYPE_WIDGET;
    break;
    default:
    type = RARERenderableDataItem_TYPE_UNKNOWN;
    break;
  }
  return type;
}

- (void)setupConverterWithRAREiWidget:(id<RAREiWidget>)widget
                         withNSString:(NSString *)name
              withSPOTPrintableString:(SPOTPrintableString *)e {
  NSString *context = nil;
  id<JavaLangComparable> min = nil, max = nil;
  if (e != nil) {
    context = [e getValue];
    NSString *s = [e spot_getAttributeWithNSString:@"minimum"];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      min = s;
    }
    s = [e spot_getAttributeWithNSString:@"maximum"];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      max = s;
    }
  }
  [self setupConverterWithRAREiWidget:widget withNSString:name withNSString:context withId:min withId:max withBoolean:YES];
}

- (void)setupConverterWithRAREiWidget:(id<RAREiWidget>)widget
                         withNSString:(NSString *)name
                         withNSString:(NSString *)context
                               withId:(id)min
                               withId:(id)max
                          withBoolean:(BOOL)convertRange {
  IOSClass *cls = nil;
  if (name != nil) {
    cls = [RAREPlatform getDataConverterClassWithNSString:name];
    if ((context == nil) && (cls == [IOSClass classWithClass:[RAREStringConverter class]])) {
      context = [((RAREConverterContext *) nil_chk([RAREStringConverter EXPANDER_CONTEXT])) getName];
    }
  }
  if (cls == nil) {
    cls = [RARERenderableDataItem getDefaultConverterClassWithInt:[self getType]];
    if ((cls == nil) && ([self getJavaClass] == [IOSClass classWithClass:[RAREUIColor class]])) {
      cls = [IOSClass classWithClass:[RAREColorConverter class]];
    }
  }
  if (cls == nil) {
    return;
  }
  dataConverter_ = [RAREPlatform getDataConverterWithIOSClass:cls];
  if (dataClass_ != nil) {
    [((id<RAREiDataConverter>) nil_chk(dataConverter_)) setObjectClassWithIOSClass:dataClass_];
  }
  if (context != nil) {
    [self setValueContextWithId:[((id<RAREiDataConverter>) nil_chk(dataConverter_)) createContextWithRAREiWidget:widget withNSString:context]];
  }
  if (convertRange) {
    if ([min isKindOfClass:[NSString class]]) {
      min = [((id<RAREiDataConverter>) nil_chk(dataConverter_)) objectFromStringWithRAREiWidget:widget withNSString:(NSString *) check_class_cast(min, [NSString class])];
    }
    if ([max isKindOfClass:[NSString class]]) {
      max = [((id<RAREiDataConverter>) nil_chk(dataConverter_)) objectFromStringWithRAREiWidget:widget withNSString:(NSString *) check_class_cast(max, [NSString class])];
    }
  }
  [((id<RAREiDataConverter>) nil_chk(dataConverter_)) setMaxValueWithJavaLangComparable:(id<JavaLangComparable>) check_protocol_cast(max, @protocol(JavaLangComparable))];
  [dataConverter_ setMinValueWithJavaLangComparable:(id<JavaLangComparable>) check_protocol_cast(min, @protocol(JavaLangComparable))];
  if (cellRenderer_ == nil) {
    cellRenderer_ = [dataConverter_ getRendererWithRAREiWidget:widget withId:valueContext_];
  }
}

- (id<JavaLangCharSequence>)toCharSequenceWithRAREiWidget:(id<RAREiWidget>)w
                               withRARERenderableDataItem:(RARERenderableDataItem *)di {
  return [((RARERenderableDataItem *) nil_chk(di)) toCharSequenceWithRAREiWidget:w withRAREiDataConverter:dataConverter_ withId:valueContext_];
}

- (id<JavaLangCharSequence>)toCharSequenceWithRAREiWidget:(id<RAREiWidget>)w
                               withRARERenderableDataItem:(RARERenderableDataItem *)di
                                                   withId:(id)value {
  return [((RARERenderableDataItem *) nil_chk(di)) toCharSequenceWithRAREiWidget:w withId:value withRAREiDataConverter:dataConverter_ withId:valueContext_];
}

- (NSString *)description {
  if (theValue_ == nil) {
    id<JavaLangCharSequence> s = [self getColumnTitle];
    return (s == nil) ? @"" : [s sequenceDescription];
  }
  return [super description];
}

- (void)setCellRendererWithRAREiPlatformRenderingComponent:(id<RAREiPlatformRenderingComponent>)r {
  cellRenderer_ = r;
}

- (void)setCellRendererWithNSString:(NSString *)cls {
  IOSClass *c = [RAREPlatform loadClassWithNSString:cls];
  cellRenderer_ = (id<RAREiPlatformRenderingComponent>) check_protocol_cast([((IOSClass *) nil_chk(c)) newInstance], @protocol(RAREiPlatformRenderingComponent));
}

- (void)setCellEditorWithRAREiPlatformCellEditingComponent:(id<RAREiPlatformCellEditingComponent>)editor {
  cellEditor_ = editor;
}

- (id<RAREiPlatformCellEditingComponent>)getCellEditor {
  return cellEditor_;
}

- (void)setColumnMaxWidthWithNSString:(NSString *)s {
  [self setColumnWidthWithNSString:s withInt:RAREColumn_WIDTH_TYPE_MAX];
}

- (void)setColumnMenuWithSPOTSet:(SPOTSet *)menu {
  menuSet_ = menu;
  if (menuSet_ != nil) {
    [menuSet_ spot_setParentWithISPOTElement:nil];
  }
}

- (void)setColumnMenuWithRAREUIPopupMenu:(RAREUIPopupMenu *)menu {
  popupMenu_ = menu;
  menuSet_ = nil;
}

- (void)setColumnMinWidthWithNSString:(NSString *)s {
  [self setColumnWidthWithNSString:s withInt:RAREColumn_WIDTH_TYPE_MIN];
}

- (void)setColumnTitleWithJavaLangCharSequence:(id<JavaLangCharSequence>)columnTitle {
  self->columnTitle_ = (columnTitle == nil) ? @"" : ((id) columnTitle);
}

- (void)setColumnWidthWithSPOTPrintableString:(SPOTPrintableString *)width {
  [self setColumnWidthWithNSString:[((SPOTPrintableString *) nil_chk(width)) getValue] withInt:RAREColumn_WIDTH_TYPE_NORMAL];
  minWidth_ = 0;
  maxWidth_ = 0;
  NSString *s = [width spot_getAttributeWithNSString:@"min"];
  if (s != nil) {
    [self setColumnWidthWithNSString:s withInt:RAREColumn_WIDTH_TYPE_MIN];
  }
  s = [width spot_getAttributeWithNSString:@"max"];
  if (s != nil) {
    [self setColumnWidthWithNSString:s withInt:RAREColumn_WIDTH_TYPE_MAX];
  }
}

- (void)setColumnWidthWithNSString:(NSString *)s {
  [self setColumnWidthWithNSString:s withInt:RAREColumn_WIDTH_TYPE_NORMAL];
}

- (void)setDateTimeFormatWithNSString:(NSString *)format {
  [self setValueContextWithId:[[RAREUTSimpleDateFormatEx alloc] initWithNSString:format]];
}

- (void)setHeaderActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
  headerActionListener_ = l;
}

- (void)setHeaderFontWithRAREUIFont:(RAREUIFont *)headerFont {
  self->headerFont_ = headerFont;
}

- (void)setHeaderHorizontalAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:(RARERenderableDataItem_HorizontalAlignEnum *)align {
  headerHorizontalAlign_ = align;
}

- (void)setHeaderIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)headerIcon {
  self->headerIcon_ = headerIcon;
}

- (void)setHeaderIconPositionWithRARERenderableDataItem_IconPositionEnum:(RARERenderableDataItem_IconPositionEnum *)position {
  headerIconPosition_ = position;
}

- (void)setHeaderPainterWithRAREPaintBucket:(RAREPaintBucket *)pb {
  headerPainter_ = pb;
}

- (void)setHeaderRollOverPainterWithRAREPaintBucket:(RAREPaintBucket *)pb {
  self->headerRolloverPainter_ = pb;
}

- (void)setHeaderSelectionPainterWithRAREPaintBucket:(RAREPaintBucket *)pb {
  self->headerSelectionPainter_ = pb;
}

- (void)setHeaderVerticalAlignmentWithRARERenderableDataItem_VerticalAlignEnum:(RARERenderableDataItem_VerticalAlignEnum *)align {
  headerVerticalAlign_ = align;
}

- (void)setItemPainterWithRAREPaintBucket:(RAREPaintBucket *)itemPainter {
  self->itemPainter_ = itemPainter;
}

- (void)setItemSelectionPainterWithRAREPaintBucket:(RAREPaintBucket *)pb {
  itemSelectionPainter_ = pb;
}

- (void)setJavaClassWithIOSClass:(IOSClass *)cls {
  dataClass_ = cls;
}

- (void)setNumberFormatWithNSString:(NSString *)format {
  if ((format == nil) || ([format sequenceLength] == 0)) {
    return;
  }
  JavaTextNumberFormat *nf = [JavaTextNumberFormat getInstance];
  if (![((NSString *) nil_chk(format)) isEqual:@"*"]) {
    if ([nf isKindOfClass:[JavaTextDecimalFormat class]]) {
      [((JavaTextDecimalFormat *) check_class_cast(nf, [JavaTextDecimalFormat class])) applyPatternWithNSString:format];
    }
  }
  [self setValueContextWithId:nf];
}

- (void)setRenderDetailWithRAREColumn_RenderDetailEnum:(RAREColumn_RenderDetailEnum *)renderDetail {
  self->renderDetail_ = renderDetail;
}

- (void)setRenderTypeWithInt:(int)renderType {
  self->renderType_ = renderType;
  if (renderType == RAREColumn_INDEX_NORMAL) {
    self->renderType_ = RAREColumn_NORMAL;
    indexColumn_ = YES;
    return;
  }
  headerColumn_ = NO;
  indexColumn_ = NO;
  footerColumn_ = NO;
  switch (renderType) {
    case RAREColumn_HEADER_INDEX_NORMAL:
    case RAREColumn_HEADER_NORMAL:
    case RAREColumn_HEADER:
    headerColumn_ = YES;
    break;
    case RAREColumn_FOOTER_INDEX_NORMAL:
    case RAREColumn_FOOTER_NORMAL:
    case RAREColumn_FOOTER:
    footerColumn_ = YES;
    break;
    default:
    break;
  }
  switch (renderType) {
    case RAREColumn_HEADER_INDEX_NORMAL:
    case RAREColumn_FOOTER_INDEX_NORMAL:
    indexColumn_ = YES;
    break;
    default:
    break;
  }
  switch (renderType) {
    case RAREColumn_HEADER:
    case RAREColumn_FOOTER:
    itemPainter_ = [RAREColorUtils getBackgroundBucket];
    break;
    default:
    break;
  }
}

- (id<RAREiPlatformRenderingComponent>)getCellRenderer {
  return cellRenderer_;
}

- (id<JavaLangCharSequence>)getColumnTitle {
  return columnTitle_;
}

- (id<RAREiActionListener>)getHeaderActionListener {
  return headerActionListener_;
}

- (id<RAREiPlatformComponentPainter>)getHeaderComponentPainter {
  if ((headerSelectionPainter_ != nil) || (headerRolloverPainter_ != nil)) {
    RAREPainterHolder *ph = [[RAREPainterHolder alloc] initWithRAREPaintBucket:headerPainter_ withRAREPaintBucket:headerSelectionPainter_ withRAREPaintBucket:headerRolloverPainter_ withRAREPaintBucket:nil withRAREPaintBucket:nil];
    RAREUIComponentPainter *cp = [[RAREUIComponentPainter alloc] init];
    [cp setPainterHolderWithRAREPainterHolder:ph];
    return cp;
  }
  return (headerPainter_ == nil) ? nil : [headerPainter_ getCachedComponentPainter];
}

- (RAREUIFont *)getHeaderFont {
  return headerFont_;
}

- (RARERenderableDataItem_HorizontalAlignEnum *)getHeaderHorizontalAlignment {
  return headerHorizontalAlign_;
}

- (id<RAREiPlatformIcon>)getHeaderIcon {
  return headerIcon_;
}

- (RARERenderableDataItem_IconPositionEnum *)getHeaderIconPosition {
  return headerIconPosition_;
}

- (RAREPaintBucket *)getHeaderPainter {
  return headerPainter_;
}

- (RAREPaintBucket *)getHeaderRollOverPainter {
  return headerRolloverPainter_;
}

- (RAREPaintBucket *)getHeaderSelectionPainter {
  return headerSelectionPainter_;
}

- (RARERenderableDataItem_VerticalAlignEnum *)getHeaderVerticalAlignment {
  return (headerVerticalAlign_ == [RARERenderableDataItem_VerticalAlignEnum AUTO]) ? [RARERenderableDataItem_VerticalAlignEnum CENTER] : headerVerticalAlign_;
}

- (RAREPaintBucket *)getItemPainter {
  return itemPainter_;
}

- (RAREPaintBucket *)getItemPainterWithBoolean:(BOOL)selected {
  return selected ? ((itemSelectionPainter_ == nil) ? itemPainter_ : itemSelectionPainter_) : itemPainter_;
}

- (RAREPaintBucket *)getItemSelectionPainter {
  return itemSelectionPainter_;
}

- (RAREUIPopupMenu *)getPopupMenuWithRAREiWidget:(id<RAREiWidget>)context {
  if (popupMenu_ != nil) {
    [popupMenu_ setContextWidgetWithRAREiWidget:context];
    return popupMenu_;
  }
  if ((menuSet_ != nil)) {
    RAREUIPopupMenu *menu = [[RAREUIPopupMenu alloc] initWithRAREiWidget:context withSPOTSet:menuSet_];
    menuSet_ = nil;
    popupMenu_ = menu;
    return menu;
  }
  return nil;
}

- (RAREColumn_RenderDetailEnum *)getRenderDetail {
  return renderDetail_;
}

- (int)getRenderType {
  return renderType_;
}

- (BOOL)hasPopupMenu {
  return (menuSet_ != nil) || (popupMenu_ != nil);
}

- (BOOL)isFooterColumn {
  return footerColumn_;
}

- (BOOL)isHeaderColumn {
  return headerColumn_;
}

- (BOOL)isHeaderOrFooterColumn {
  return headerColumn_ || footerColumn_;
}

- (BOOL)isIndexColumn {
  return indexColumn_;
}

- (BOOL)isRenderNormal {
  if ((renderType_ == RAREColumn_NORMAL) || (renderType_ == RAREColumn_HEADER_NORMAL) || (renderType_ == RAREColumn_HEADER_INDEX_NORMAL) || (renderType_ == RAREColumn_FOOTER_NORMAL) || (renderType_ == RAREColumn_FOOTER_INDEX_NORMAL)) {
    return YES;
  }
  return NO;
}

- (void)dealloc {
  if (cellRenderer_ != nil) {
    @try {
      [cellRenderer_ dispose];
    }
    @catch (JavaLangThrowable *ignore) {
    }
  }
  if (popupMenu_ != nil) {
    @try {
      [popupMenu_ dispose];
    }
    @catch (JavaLangThrowable *ignore) {
    }
  }
  cellEditor_ = nil;
  minWidthUnit_ = nil;
  maxWidthUnit_ = nil;
  itemSelectionPainter_ = nil;
  itemPainter_ = nil;
  headerSelectionPainter_ = nil;
  headerRolloverPainter_ = nil;
  headerPainter_ = nil;
  headerIcon_ = nil;
  dataClass_ = nil;
  headerCellRenderer_ = nil;
  cellRenderer_ = nil;
  renderDetail_ = nil;
  headerHorizontalAlign_ = nil;
  headerIconPosition_ = nil;
  headerVerticalAlign_ = nil;
  columnTitle_ = nil;
  popupMenu_ = nil;
  menuSet_ = nil;
  headerFont_ = nil;
  headerActionListener_ = nil;
  widthUnit_ = nil;
  columnName_ = nil;
  categoryName_ = nil;
}

- (void)setColumnWidthWithNSString:(NSString *)s
                           withInt:(int)type {
  RAREScreenUtils_UnitEnum *unit = nil;
  float width = 0;
  BOOL fixed = NO;
  if ((s != nil) && ([s sequenceLength] > 0)) {
    if ([s hasSuffix:@"!"]) {
      unit = [RAREScreenUtils getUnitWithNSString:s withInt:[s sequenceLength] - 1];
      width = [RAREUTSNumber floatValueWithNSString:s];
      fixed = YES;
    }
    else {
      unit = [RAREScreenUtils getUnitWithNSString:s withInt:[s sequenceLength]];
      width = [RAREUTSNumber floatValueWithNSString:s];
    }
    if (width < 0) {
      width = 0;
    }
  }
  switch (type) {
    case RAREColumn_WIDTH_TYPE_MIN:
    minWidthUnit_ = unit;
    minWidth_ = width;
    break;
    case RAREColumn_WIDTH_TYPE_MAX:
    maxWidthUnit_ = unit;
    maxWidth_ = width;
    break;
    default:
    widthUnit_ = unit;
    preferedWidth_ = width;
    sizeFixed_ = fixed;
    break;
  }
}

- (id<RAREiPlatformRenderingComponent>)getHeaderCellRenderer {
  return headerCellRenderer_;
}

- (void)setHeaderCellRendererWithRAREiPlatformRenderingComponent:(id<RAREiPlatformRenderingComponent>)headerCellRenderer {
  self->headerCellRenderer_ = headerCellRenderer;
}

- (void)copyAllFieldsTo:(RAREColumn *)other {
  [super copyAllFieldsTo:other];
  other->categoryName_ = categoryName_;
  other->cellEditor_ = cellEditor_;
  other->cellRenderer_ = cellRenderer_;
  other->columnName_ = columnName_;
  other->columnTitle_ = columnTitle_;
  other->dataClass_ = dataClass_;
  other->firstTable_ = firstTable_;
  other->footerColumn_ = footerColumn_;
  other->headerActionListener_ = headerActionListener_;
  other->headerCellRenderer_ = headerCellRenderer_;
  other->headerColumn_ = headerColumn_;
  other->headerFont_ = headerFont_;
  other->headerHorizontalAlign_ = headerHorizontalAlign_;
  other->headerIcon_ = headerIcon_;
  other->headerIconPosition_ = headerIconPosition_;
  other->headerIconScaleFactor_ = headerIconScaleFactor_;
  other->headerPainter_ = headerPainter_;
  other->headerRolloverPainter_ = headerRolloverPainter_;
  other->headerSelectionPainter_ = headerSelectionPainter_;
  other->headerVerticalAlign_ = headerVerticalAlign_;
  other->headerWordWrap_ = headerWordWrap_;
  other->hideable_ = hideable_;
  other->indexColumn_ = indexColumn_;
  other->itemPainter_ = itemPainter_;
  other->itemSelectionPainter_ = itemSelectionPainter_;
  other->maxWidth_ = maxWidth_;
  other->maxWidthUnit_ = maxWidthUnit_;
  other->menuSet_ = menuSet_;
  other->minWidth_ = minWidth_;
  other->minWidthUnit_ = minWidthUnit_;
  other->moveable_ = moveable_;
  other->overrideSelectionBackground_ = overrideSelectionBackground_;
  other->popupMenu_ = popupMenu_;
  other->preferedWidth_ = preferedWidth_;
  other->renderDetail_ = renderDetail_;
  other->renderType_ = renderType_;
  other->scaleHeaderIcon_Column_ = scaleHeaderIcon_Column_;
  other->showable_ = showable_;
  other->sizeFixed_ = sizeFixed_;
  other->sortable_ = sortable_;
  other->widthUnit_ = widthUnit_;
  other->wordWrap_ = wordWrap_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "isScaleHeaderIcon", NULL, "Z", 0x1, NULL },
    { "clone", NULL, "LNSObject", 0x1, NULL },
    { "convertWithRAREiWidget:withNSString:", NULL, "LNSObject", 0x1, NULL },
    { "convertWithRAREiWidget:withRARERenderableDataItem:withNSString:", NULL, "LNSObject", 0x1, NULL },
    { "convertToItem", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "setupConverterWithRAREiWidget:withNSString:withSPOTPrintableString:", NULL, "V", 0x1, "JavaLangException" },
    { "setupConverterWithRAREiWidget:withNSString:withNSString:withId:withId:withBoolean:", NULL, "V", 0x1, "JavaLangException" },
    { "toCharSequenceWithRAREiWidget:withRARERenderableDataItem:", NULL, "LJavaLangCharSequence", 0x11, NULL },
    { "toCharSequenceWithRAREiWidget:withRARERenderableDataItem:withId:", NULL, "LJavaLangCharSequence", 0x1, NULL },
    { "setCellRendererWithNSString:", NULL, "V", 0x1, "JavaLangInstantiationException;JavaLangClassNotFoundException;JavaLangIllegalAccessException" },
    { "getCellEditor", NULL, "LRAREiPlatformCellEditingComponent", 0x1, NULL },
    { "getCellRenderer", NULL, "LRAREiPlatformRenderingComponent", 0x1, NULL },
    { "getColumnTitle", NULL, "LJavaLangCharSequence", 0x1, NULL },
    { "getHeaderActionListener", NULL, "LRAREiActionListener", 0x1, NULL },
    { "getHeaderComponentPainter", NULL, "LRAREiPlatformComponentPainter", 0x1, NULL },
    { "getHeaderFont", NULL, "LRAREUIFont", 0x1, NULL },
    { "getHeaderHorizontalAlignment", NULL, "LRARERenderableDataItem_HorizontalAlignEnum", 0x1, NULL },
    { "getHeaderIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getHeaderIconPosition", NULL, "LRARERenderableDataItem_IconPositionEnum", 0x1, NULL },
    { "getHeaderPainter", NULL, "LRAREPaintBucket", 0x1, NULL },
    { "getHeaderRollOverPainter", NULL, "LRAREPaintBucket", 0x1, NULL },
    { "getHeaderSelectionPainter", NULL, "LRAREPaintBucket", 0x1, NULL },
    { "getHeaderVerticalAlignment", NULL, "LRARERenderableDataItem_VerticalAlignEnum", 0x1, NULL },
    { "getItemPainter", NULL, "LRAREPaintBucket", 0x1, NULL },
    { "getItemPainterWithBoolean:", NULL, "LRAREPaintBucket", 0x1, NULL },
    { "getItemSelectionPainter", NULL, "LRAREPaintBucket", 0x1, NULL },
    { "getPopupMenuWithRAREiWidget:", NULL, "LRAREUIPopupMenu", 0x1, NULL },
    { "getRenderDetail", NULL, "LRAREColumn_RenderDetailEnum", 0x1, NULL },
    { "hasPopupMenu", NULL, "Z", 0x1, NULL },
    { "isFooterColumn", NULL, "Z", 0x1, NULL },
    { "isHeaderColumn", NULL, "Z", 0x1, NULL },
    { "isHeaderOrFooterColumn", NULL, "Z", 0x1, NULL },
    { "isIndexColumn", NULL, "Z", 0x1, NULL },
    { "isRenderNormal", NULL, "Z", 0x1, NULL },
    { "dealloc", NULL, "V", 0x4, "JavaLangThrowable" },
    { "setColumnWidthWithNSString:withInt:", NULL, "V", 0x4, NULL },
    { "getHeaderCellRenderer", NULL, "LRAREiPlatformRenderingComponent", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "FOOTER_", NULL, 0x19, "I" },
    { "FOOTER_INDEX_", NULL, 0x19, "I" },
    { "FOOTER_INDEX_NORMAL_", NULL, 0x19, "I" },
    { "FOOTER_NORMAL_", NULL, 0x19, "I" },
    { "HEADER_", NULL, 0x19, "I" },
    { "HEADER_INDEX_", NULL, 0x19, "I" },
    { "HEADER_INDEX_NORMAL_", NULL, 0x19, "I" },
    { "HEADER_NORMAL_", NULL, 0x19, "I" },
    { "INDEX_NORMAL_", NULL, 0x19, "I" },
    { "NORMAL_", NULL, 0x19, "I" },
    { "defaultHeaderWordWrap_", NULL, 0x9, "Z" },
    { "WIDTH_TYPE_MAX_", NULL, 0x1c, "I" },
    { "WIDTH_TYPE_MIN_", NULL, 0x1c, "I" },
    { "WIDTH_TYPE_NORMAL_", NULL, 0x1c, "I" },
    { "maxWidth_", NULL, 0x1, "F" },
    { "minWidth_", NULL, 0x1, "F" },
    { "preferedWidth_", NULL, 0x1, "F" },
    { "sortable_", NULL, 0x1, "Z" },
    { "sizeFixed_", NULL, 0x1, "Z" },
    { "showable_", NULL, 0x1, "Z" },
    { "moveable_", NULL, 0x1, "Z" },
    { "hideable_", NULL, 0x1, "Z" },
    { "wordWrap_", NULL, 0x1, "Z" },
    { "headerWordWrap_", NULL, 0x1, "Z" },
    { "overrideSelectionBackground_", NULL, 0x1, "Z" },
    { "categoryName_", NULL, 0x1, "LNSString" },
    { "columnName_", NULL, 0x1, "LNSString" },
    { "widthUnit_", NULL, 0x1, "LRAREScreenUtils_UnitEnum" },
    { "firstTable_", NULL, 0x0, "I" },
    { "headerActionListener_", NULL, 0x4, "LRAREiActionListener" },
    { "headerFont_", NULL, 0x4, "LRAREUIFont" },
    { "menuSet_", NULL, 0x4, "LSPOTSet" },
    { "popupMenu_", NULL, 0x4, "LRAREUIPopupMenu" },
    { "renderDetail_", NULL, 0x4, "LRAREColumn_RenderDetailEnum" },
    { "headerIconScaleFactor_", NULL, 0x4, "F" },
    { "scaleHeaderIcon_Column_", "scaleHeaderIcon", 0x4, "Z" },
  };
  static J2ObjcClassInfo _RAREColumn = { "Column", "com.appnativa.rare.ui", NULL, 0x1, 37, methods, 36, fields, 0, NULL};
  return &_RAREColumn;
}

@end

static RAREColumn_RenderDetailEnum *RAREColumn_RenderDetailEnum_AUTO;
static RAREColumn_RenderDetailEnum *RAREColumn_RenderDetailEnum_ALL;
static RAREColumn_RenderDetailEnum *RAREColumn_RenderDetailEnum_TEXT_AND_ICON;
static RAREColumn_RenderDetailEnum *RAREColumn_RenderDetailEnum_TEXT_ONLY;
static RAREColumn_RenderDetailEnum *RAREColumn_RenderDetailEnum_ICON_ONLY;
IOSObjectArray *RAREColumn_RenderDetailEnum_values;

@implementation RAREColumn_RenderDetailEnum

+ (RAREColumn_RenderDetailEnum *)AUTO {
  return RAREColumn_RenderDetailEnum_AUTO;
}
+ (RAREColumn_RenderDetailEnum *)ALL {
  return RAREColumn_RenderDetailEnum_ALL;
}
+ (RAREColumn_RenderDetailEnum *)TEXT_AND_ICON {
  return RAREColumn_RenderDetailEnum_TEXT_AND_ICON;
}
+ (RAREColumn_RenderDetailEnum *)TEXT_ONLY {
  return RAREColumn_RenderDetailEnum_TEXT_ONLY;
}
+ (RAREColumn_RenderDetailEnum *)ICON_ONLY {
  return RAREColumn_RenderDetailEnum_ICON_ONLY;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [RAREColumn_RenderDetailEnum class]) {
    RAREColumn_RenderDetailEnum_AUTO = [[RAREColumn_RenderDetailEnum alloc] initWithNSString:@"AUTO" withInt:0];
    RAREColumn_RenderDetailEnum_ALL = [[RAREColumn_RenderDetailEnum alloc] initWithNSString:@"ALL" withInt:1];
    RAREColumn_RenderDetailEnum_TEXT_AND_ICON = [[RAREColumn_RenderDetailEnum alloc] initWithNSString:@"TEXT_AND_ICON" withInt:2];
    RAREColumn_RenderDetailEnum_TEXT_ONLY = [[RAREColumn_RenderDetailEnum alloc] initWithNSString:@"TEXT_ONLY" withInt:3];
    RAREColumn_RenderDetailEnum_ICON_ONLY = [[RAREColumn_RenderDetailEnum alloc] initWithNSString:@"ICON_ONLY" withInt:4];
    RAREColumn_RenderDetailEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ RAREColumn_RenderDetailEnum_AUTO, RAREColumn_RenderDetailEnum_ALL, RAREColumn_RenderDetailEnum_TEXT_AND_ICON, RAREColumn_RenderDetailEnum_TEXT_ONLY, RAREColumn_RenderDetailEnum_ICON_ONLY, nil } count:5 type:[IOSClass classWithClass:[RAREColumn_RenderDetailEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:RAREColumn_RenderDetailEnum_values];
}

+ (RAREColumn_RenderDetailEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [RAREColumn_RenderDetailEnum_values count]; i++) {
    RAREColumn_RenderDetailEnum *e = RAREColumn_RenderDetailEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LRAREColumn_RenderDetailEnum"};
  static J2ObjcClassInfo _RAREColumn_RenderDetailEnum = { "RenderDetail", "com.appnativa.rare.ui", "Column", 0x4019, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_RAREColumn_RenderDetailEnum;
}

@end
