//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/aUIRectangle.java
//
//  Created by decoteaud on 7/29/15.
//

#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIPoint.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/aUIRectangle.h"
#include "java/lang/Math.h"

@implementation RAREaUIRectangle

- (id)init {
  if (self = [super init]) {
    [self setBoundsWithFloat:0 withFloat:0 withFloat:0 withFloat:0];
  }
  return self;
}

- (id)initWithRAREUIDimension:(RAREUIDimension *)d {
  if (self = [super init]) {
    [self setBoundsWithFloat:0 withFloat:0 withFloat:((RAREUIDimension *) nil_chk(d))->width_ withFloat:d->height_];
  }
  return self;
}

- (id)initWithRAREUIPoint:(RAREUIPoint *)p {
  if (self = [super init]) {
    [self setBoundsWithFloat:((RAREUIPoint *) nil_chk(p))->x_ withFloat:p->y_ withFloat:0 withFloat:0];
  }
  return self;
}

- (id)initWithRAREaUIRectangle:(RAREaUIRectangle *)r {
  if (self = [super init]) {
    [self setBoundsWithFloat:((RAREaUIRectangle *) nil_chk(r))->x_ withFloat:r->y_ withFloat:r->width_ withFloat:r->height_];
  }
  return self;
}

- (id)initWithFloat:(float)width
          withFloat:(float)height {
  if (self = [super init]) {
    [self setBoundsWithFloat:0 withFloat:0 withFloat:width withFloat:height];
  }
  return self;
}

- (id)initWithRAREUIPoint:(RAREUIPoint *)p
      withRAREUIDimension:(RAREUIDimension *)d {
  if (self = [super init]) {
    [self setBoundsWithFloat:((RAREUIPoint *) nil_chk(p))->x_ withFloat:p->y_ withFloat:((RAREUIDimension *) nil_chk(d))->width_ withFloat:d->height_];
  }
  return self;
}

- (id)initWithFloat:(float)x
          withFloat:(float)y
          withFloat:(float)width
          withFloat:(float)height {
  if (self = [super init]) {
    [self setBoundsWithFloat:x withFloat:y withFloat:width withFloat:height];
  }
  return self;
}

- (void)addWithRAREUIPoint:(RAREUIPoint *)p {
  [self addWithFloat:((RAREUIPoint *) nil_chk(p))->x_ withFloat:p->y_];
}

- (void)addWithRAREaUIRectangle:(RAREaUIRectangle *)r {
  float x1 = [JavaLangMath minWithFloat:x_ withFloat:((RAREaUIRectangle *) nil_chk(r))->x_];
  float x2 = [JavaLangMath maxWithFloat:x_ + width_ withFloat:r->x_ + r->width_];
  float y1 = [JavaLangMath minWithFloat:y_ withFloat:r->y_];
  float y2 = [JavaLangMath maxWithFloat:y_ + height_ withFloat:r->y_ + r->height_];
  [self setBoundsWithFloat:x1 withFloat:y1 withFloat:x2 - x1 withFloat:y2 - y1];
}

- (void)addWithFloat:(float)px
           withFloat:(float)py {
  float x1 = [JavaLangMath minWithFloat:x_ withFloat:px];
  float x2 = [JavaLangMath maxWithFloat:x_ + width_ withFloat:px];
  float y1 = [JavaLangMath minWithFloat:y_ withFloat:py];
  float y2 = [JavaLangMath maxWithFloat:y_ + height_ withFloat:py];
  [self setBoundsWithFloat:x1 withFloat:y1 withFloat:x2 - x1 withFloat:y2 - y1];
}

- (float)bottom {
  return y_ + height_;
}

- (BOOL)containsWithRAREUIPoint:(RAREUIPoint *)p {
  return [self containsWithFloat:((RAREUIPoint *) nil_chk(p))->x_ withFloat:p->y_];
}

- (BOOL)containsWithRAREaUIRectangle:(RAREaUIRectangle *)r {
  return [self containsWithFloat:((RAREaUIRectangle *) nil_chk(r))->x_ withFloat:r->y_ withFloat:r->width_ withFloat:r->height_];
}

- (BOOL)containsWithFloat:(float)px
                withFloat:(float)py {
  if ((width_ <= 0) || (height_ <= 0)) {
    return NO;
  }
  return (px >= x_) && (px < x_ + width_) && (py >= y_) && (py < y_ + height_);
}

- (BOOL)containsWithFloat:(float)rx
                withFloat:(float)ry
                withFloat:(float)rwidth
                withFloat:(float)rheight {
  if ((width_ <= 0) || (height_ <= 0) || (rwidth <= 0) || (rheight <= 0)) {
    return NO;
  }
  if (!((rx >= x_) && (rx < x_ + width_) && (ry >= y_) && (ry < y_ + height_))) {
    return NO;
  }
  ;
  rx += rwidth - 1;
  ry += rheight - 1;
  return ((rx >= x_) && (rx < x_ + width_) && (ry >= y_) && (ry < y_ + height_));
}

- (void)growWithFloat:(float)dx
            withFloat:(float)dy {
  x_ -= dx;
  y_ -= dy;
  width_ += dx + dx;
  height_ += dy + dy;
}

- (RAREUIRectangle *)intersectionWithRAREaUIRectangle:(RAREaUIRectangle *)r {
  float x1 = [JavaLangMath maxWithFloat:x_ withFloat:((RAREaUIRectangle *) nil_chk(r))->x_];
  float y1 = [JavaLangMath maxWithFloat:y_ withFloat:r->y_];
  float x2 = [JavaLangMath minWithFloat:x_ + width_ withFloat:r->x_ + r->width_];
  float y2 = [JavaLangMath minWithFloat:y_ + height_ withFloat:r->y_ + r->height_];
  return [[RAREUIRectangle alloc] initWithFloat:x1 withFloat:y1 withFloat:x2 - x1 withFloat:y2 - y1];
}

- (BOOL)intersectsWithRAREaUIRectangle:(RAREaUIRectangle *)r {
  return ![((RAREUIRectangle *) nil_chk([self intersectionWithRAREaUIRectangle:r])) isEmpty];
}

- (float)right {
  return x_ + width_;
}

- (NSString *)description {
  return [NSString stringWithFormat:@"[x=%f,y=%f,width=%f,height=%f]", x_, y_, width_, height_];
}

- (void)translateWithFloat:(float)mx
                 withFloat:(float)my {
  x_ += mx;
  y_ += my;
}

- (RAREUIRectangle *)union__WithRAREaUIRectangle:(RAREaUIRectangle *)r {
  RAREUIRectangle *dst = [[RAREUIRectangle alloc] initWithFloat:x_ withFloat:y_ withFloat:width_ withFloat:height_];
  [dst addWithRAREaUIRectangle:r];
  return dst;
}

- (void)setWithRAREaUIRectangle:(RAREaUIRectangle *)r {
  [self setBoundsWithFloat:((RAREaUIRectangle *) nil_chk(r))->x_ withFloat:r->y_ withFloat:r->width_ withFloat:r->height_];
}

- (void)setWithFloat:(float)x
           withFloat:(float)y
           withFloat:(float)width
           withFloat:(float)height {
  [self setBoundsWithFloat:x withFloat:y withFloat:width withFloat:height];
}

- (void)setBoundsWithRAREaUIRectangle:(RAREaUIRectangle *)r {
  [self setBoundsWithFloat:((RAREaUIRectangle *) nil_chk(r))->x_ withFloat:r->y_ withFloat:r->width_ withFloat:r->height_];
}

- (void)setBoundsWithFloat:(float)x
                 withFloat:(float)y
                 withFloat:(float)width
                 withFloat:(float)height {
  self->x_ = x;
  self->y_ = y;
  self->height_ = height;
  self->width_ = width;
}

- (void)setBoundsWithDouble:(double)x
                 withDouble:(double)y
                 withDouble:(double)width
                 withDouble:(double)height {
  self->x_ = (float) x;
  self->y_ = (float) y;
  self->height_ = (float) height;
  self->width_ = (float) width;
}

- (void)setLocationWithRAREUIPoint:(RAREUIPoint *)p {
  [self setLocationWithFloat:((RAREUIPoint *) nil_chk(p))->x_ withFloat:p->y_];
}

- (void)setLocationWithFloat:(float)x
                   withFloat:(float)y {
  self->x_ = x;
  self->y_ = y;
}

- (void)setRectWithFloat:(float)x
               withFloat:(float)y
               withFloat:(float)width
               withFloat:(float)height {
  float x1 = (float) [JavaLangMath floorWithDouble:x];
  float y1 = (float) [JavaLangMath floorWithDouble:y];
  float x2 = (float) [JavaLangMath ceilWithDouble:x + width];
  float y2 = (float) [JavaLangMath ceilWithDouble:y + height];
  [self setBoundsWithFloat:x1 withFloat:y1 withFloat:x2 - x1 withFloat:y2 - y1];
}

- (void)setSizeWithRAREUIDimension:(RAREUIDimension *)d {
  [self setSizeWithFloat:((RAREUIDimension *) nil_chk(d))->width_ withFloat:d->height_];
}

- (int)intWidth {
  return (int) [JavaLangMath ceilWithDouble:width_];
}

- (int)intHeight {
  return (int) [JavaLangMath ceilWithDouble:height_];
}

- (int)intX {
  return [JavaLangMath roundWithFloat:width_];
}

- (int)intY {
  return [JavaLangMath roundWithFloat:height_];
}

- (void)setSizeWithFloat:(float)width
               withFloat:(float)height {
  self->width_ = width;
  self->height_ = height;
}

- (RAREUIRectangle *)getBounds {
  return [[RAREUIRectangle alloc] initWithFloat:x_ withFloat:y_ withFloat:width_ withFloat:height_];
}

- (float)getHeight {
  return height_;
}

- (RAREUIPoint *)getLocation {
  return [[RAREUIPoint alloc] initWithFloat:x_ withFloat:y_];
}

- (RAREUIDimension *)getSize {
  return [[RAREUIDimension alloc] initWithFloat:width_ withFloat:height_];
}

- (float)getWidth {
  return width_;
}

- (float)getX {
  return x_;
}

- (float)getY {
  return y_;
}

- (BOOL)isEmpty {
  return (width_ <= 0) || (height_ <= 0);
}

- (NSUInteger)hash {
  return ((int) (x_ * y_) ^ (int) ((long long int) (width_ * height_) >> 32));
}

- (BOOL)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if ([obj isKindOfClass:[RAREaUIRectangle class]]) {
    RAREaUIRectangle *r = (RAREaUIRectangle *) check_class_cast(obj, [RAREaUIRectangle class]);
    if ([JavaLangMath absWithFloat:x_ - ((RAREaUIRectangle *) nil_chk(r))->x_] > .0000001) {
      return NO;
    }
    if ([JavaLangMath absWithFloat:y_ - r->y_] > .0000001) {
      return NO;
    }
    if ([JavaLangMath absWithFloat:width_ - r->width_] > .0000001) {
      return NO;
    }
    if ([JavaLangMath absWithFloat:height_ - r->height_] > .0000001) {
      return NO;
    }
    return YES;
  }
  return NO;
}

- (void)copyAllFieldsTo:(RAREaUIRectangle *)other {
  [super copyAllFieldsTo:other];
  other->height_ = height_;
  other->width_ = width_;
  other->x_ = x_;
  other->y_ = y_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "containsWithRAREUIPoint:", NULL, "Z", 0x1, NULL },
    { "containsWithRAREaUIRectangle:", NULL, "Z", 0x1, NULL },
    { "containsWithFloat:withFloat:", NULL, "Z", 0x1, NULL },
    { "containsWithFloat:withFloat:withFloat:withFloat:", NULL, "Z", 0x1, NULL },
    { "intersectionWithRAREaUIRectangle:", NULL, "LRAREUIRectangle", 0x1, NULL },
    { "intersectsWithRAREaUIRectangle:", NULL, "Z", 0x1, NULL },
    { "union__WithRAREaUIRectangle:", NULL, "LRAREUIRectangle", 0x1, NULL },
    { "getBounds", NULL, "LRAREUIRectangle", 0x1, NULL },
    { "getLocation", NULL, "LRAREUIPoint", 0x1, NULL },
    { "getSize", NULL, "LRAREUIDimension", 0x1, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "height_", NULL, 0x1, "F" },
    { "width_", NULL, 0x1, "F" },
    { "x_", NULL, 0x1, "F" },
    { "y_", NULL, 0x1, "F" },
  };
  static J2ObjcClassInfo _RAREaUIRectangle = { "aUIRectangle", "com.appnativa.rare.ui", NULL, 0x401, 11, methods, 4, fields, 0, NULL};
  return &_RAREaUIRectangle;
}

@end
