//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/aUIImageIcon.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/ui/Displayed.h"
#include "com/appnativa/rare/ui/RenderType.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIImageHelper.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/aUIImageIcon.h"
#include "com/appnativa/rare/ui/iImageObserver.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformGraphics.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/iPlatformPaint.h"
#include "com/appnativa/rare/ui/painter/RenderSpace.h"
#include "com/appnativa/rare/ui/painter/aUIPainter.h"
#include "com/appnativa/rare/ui/painter/iBackgroundPainter.h"
#include "com/appnativa/rare/ui/painter/iImagePainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformPainter.h"
#include "java/lang/Math.h"
#include "java/lang/Runnable.h"
#include "java/lang/Throwable.h"
#include "java/net/URL.h"

@implementation RAREaUIImageIcon

static RAREUIImage * RAREaUIImageIcon_brokenImage_;

+ (RAREUIImage *)brokenImage {
  return RAREaUIImageIcon_brokenImage_;
}

+ (void)setBrokenImage:(RAREUIImage *)brokenImage {
  RAREaUIImageIcon_brokenImage_ = brokenImage;
}

- (id)init {
  if (self = [super init]) {
    description__ = nil;
    iconHeight_ = -1;
    iconWidth_ = -1;
    scalingType_ = [RAREiImagePainter_ScalingTypeEnum BILINEAR];
    renderType_ = [RARERenderTypeEnum UPPER_LEFT];
    renderSpace_ = [RARERenderSpaceEnum WITHIN_BORDER];
    enabled_ = YES;
    displayed_ = [RAREDisplayedEnum ALWAYS];
  }
  return self;
}

- (id)initWithRAREUIImage:(RAREUIImage *)image {
  if (self = [super init]) {
    description__ = nil;
    iconHeight_ = -1;
    iconWidth_ = -1;
    scalingType_ = [RAREiImagePainter_ScalingTypeEnum BILINEAR];
    renderType_ = [RARERenderTypeEnum UPPER_LEFT];
    renderSpace_ = [RARERenderSpaceEnum WITHIN_BORDER];
    enabled_ = YES;
    displayed_ = [RAREDisplayedEnum ALWAYS];
    [self setImageWithRAREUIImage:image];
  }
  return self;
}

- (id)initRAREaUIImageIconWithRAREUIImage:(RAREUIImage *)image
                             withNSString:(NSString *)description_ {
  return [self initRAREaUIImageIconWithRAREUIImage:image withNSString:description_ withNSString:nil];
}

- (id)initWithRAREUIImage:(RAREUIImage *)image
             withNSString:(NSString *)description_ {
  return [self initRAREaUIImageIconWithRAREUIImage:image withNSString:description_];
}

- (NSString *)description {
  if (resourceName_ != nil) {
    return resourceName_;
  }
  if (description__ != nil) {
    return description__;
  }
  if (image_ != nil) {
    return [image_ description];
  }
  return [super description];
}

- (id)initRAREaUIImageIconWithRAREUIImage:(RAREUIImage *)image
                             withNSString:(NSString *)description_
                             withNSString:(NSString *)resource {
  if (self = [super init]) {
    description__ = nil;
    iconHeight_ = -1;
    iconWidth_ = -1;
    scalingType_ = [RAREiImagePainter_ScalingTypeEnum BILINEAR];
    renderType_ = [RARERenderTypeEnum UPPER_LEFT];
    renderSpace_ = [RARERenderSpaceEnum WITHIN_BORDER];
    enabled_ = YES;
    displayed_ = [RAREDisplayedEnum ALWAYS];
    [self setImageWithRAREUIImage:image];
    self->description__ = description_;
    resourceName_ = resource;
  }
  return self;
}

- (id)initWithRAREUIImage:(RAREUIImage *)image
             withNSString:(NSString *)description_
             withNSString:(NSString *)resource {
  return [self initRAREaUIImageIconWithRAREUIImage:image withNSString:description_ withNSString:resource];
}

- (id)initRAREaUIImageIconWithJavaNetURL:(JavaNetURL *)location
                            withNSString:(NSString *)description_
                    withRAREaUIImageIcon:(RAREaUIImageIcon *)delayedIcon
                                 withInt:(int)constraints {
  if (self = [self initRAREaUIImageIconWithRAREUIImage:nil withNSString:description_]) {
    self->location_ = location;
    self->delayedIcon_ = delayedIcon;
    self->delayedIconConstraints_ = constraints;
  }
  return self;
}

- (id)initWithJavaNetURL:(JavaNetURL *)location
            withNSString:(NSString *)description_
    withRAREaUIImageIcon:(RAREaUIImageIcon *)delayedIcon
                 withInt:(int)constraints {
  return [self initRAREaUIImageIconWithJavaNetURL:location withNSString:description_ withRAREaUIImageIcon:delayedIcon withInt:constraints];
}

- (id)initWithJavaNetURL:(JavaNetURL *)location
            withNSString:(NSString *)description_
    withRAREaUIImageIcon:(RAREaUIImageIcon *)delayedIcon
         withRAREUIColor:(RAREUIColor *)bg {
  if (self = [self initRAREaUIImageIconWithJavaNetURL:location withNSString:description_ withRAREaUIImageIcon:delayedIcon withInt:5]) {
    self->constrainedBackground_ = bg;
  }
  return self;
}

- (id<RAREiBackgroundPainter>)alphaWithInt:(int)alpha {
  return self;
}

- (id)clone {
  return [self getCopyWithNSString:nil];
}

- (void)dispose {
  scalingType_ = nil;
  renderType_ = nil;
  renderSpace_ = nil;
  displayed_ = nil;
  backgroundColor_ = nil;
  constrainedBackground_ = nil;
  delayedIcon_ = nil;
  disabledIcon_ = nil;
  image_ = nil;
  imageObserver_ = nil;
  linkedData_ = nil;
  location_ = nil;
  notifieRunner_ = nil;
}

- (BOOL)isDisposed {
  return (image_ == nil) && (location_ == nil);
}

- (void)imageLoadedWithRAREUIImage:(RAREUIImage *)image {
  [self imageWasLoaded];
}

- (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)width
                             withFloat:(float)height {
  if ((image_ != nil) && loaded_) {
    float iw = [image_ getWidth];
    float ih = [image_ getHeight];
    float f = 0;
    id<RAREiPlatformComponent> c = [((id<RAREiPlatformGraphics>) nil_chk(g)) getComponent];
    if ((c != nil) && [c isScaleIcon]) {
      f = [c getIconScaleFactor];
      if (iw > 60) {
        f = 1;
      }
      float size = [JavaLangMath minWithFloat:width withFloat:height] * f;
      f = size / [JavaLangMath maxWithFloat:iw withFloat:ih];
      iw *= f;
      ih *= f;
    }
    if (renderType_ != [RARERenderTypeEnum UPPER_LEFT]) {
      renderLoc_ = [RAREaUIPainter getRenderLocationWithId:[g getComponent] withRARERenderSpaceEnum:[self getRenderSpace] withRARERenderTypeEnum:renderType_ withFloat:x withFloat:y withFloat:width withFloat:height withFloat:iw withFloat:ih withRAREUIRectangle:renderLoc_];
      x = ((RAREUIRectangle *) nil_chk(renderLoc_))->x_;
      y = renderLoc_->y_;
    }
    BOOL cliped = NO;
    if (imageBorder_ != nil) {
      if ([imageBorder_ clipsContents]) {
        [g saveState];
        [imageBorder_ clipWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:iw withFloat:ih];
        cliped = YES;
      }
    }
    if (backgroundColor_ != nil) {
      [g setColorWithRAREUIColor:backgroundColor_];
      [g fillRectWithFloat:x withFloat:y withFloat:iw withFloat:ih];
    }
    if (f == 0) {
      [g drawImageWithRAREiPlatformImage:image_ withFloat:x withFloat:y];
    }
    else {
      [g drawImageWithRAREiPlatformImage:image_ withFloat:x withFloat:y withFloat:iw withFloat:ih];
    }
    if (cliped) {
      [g restoreState];
    }
    if (imageBorder_ != nil) {
      [imageBorder_ paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:iw withFloat:ih withBoolean:[imageBorder_ isPaintLast]];
    }
  }
}

- (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)width
                             withFloat:(float)height
                               withInt:(int)orientation {
  [self paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height];
}

- (id<RAREiPlatformPainter>)reference {
  return self;
}

- (void)scale__WithInt:(int)width
               withInt:(int)height {
  RAREUIImage *img = [self getImage];
  if ([((RAREUIImage *) nil_chk(img)) getHeight] != height && [img getWidth] != width) {
    self->image_ = [RAREUIImageHelper scaleImageWithRAREUIImage:img withInt:width withInt:height];
  }
}

- (void)setBackgroundColorWithRAREUIColor:(RAREUIColor *)bg {
  backgroundColor_ = bg;
}

+ (void)setBrokenimageWithRAREUIImage:(RAREUIImage *)image {
  RAREaUIImageIcon_brokenImage_ = image;
}

- (void)setDescriptionWithNSString:(NSString *)description_ {
  self->description__ = description_;
}

- (void)setDisplayedWithRAREDisplayedEnum:(RAREDisplayedEnum *)displayed {
  self->displayed_ = (displayed == nil) ? [RAREDisplayedEnum ALWAYS] : displayed;
}

- (void)setDisposableWithBoolean:(BOOL)disposable {
}

- (void)setEnabledWithBoolean:(BOOL)enabled {
  self->enabled_ = enabled;
}

- (void)setImageWithRAREUIImage:(RAREUIImage *)image {
  self->image_ = image;
  if (image != nil) {
    iconHeight_ = [image getHeight];
    iconWidth_ = [image getWidth];
    loaded_ = [image isImageLoadedWithRAREiImageObserver:self];
  }
}

- (void)setImageObserverWithRAREiImageObserver:(id<RAREiImageObserver>)io {
  imageObserver_ = io;
}

- (void)setLinkedDataWithId:(id)linkedData {
  self->linkedData_ = linkedData;
}

- (void)setNotifierRunnerWithJavaLangRunnable:(id<JavaLangRunnable>)r
                                  withBoolean:(BOOL)runOnEventThread {
  self->notifieRunner_ = r;
  self->runNotifierOnEventThread_ = runOnEventThread;
}

- (void)setRenderSpaceWithRARERenderSpaceEnum:(RARERenderSpaceEnum *)space {
  renderSpace_ = (space == nil) ? [RARERenderSpaceEnum COMPONENT] : space;
}

- (void)setRenderTypeWithRARERenderTypeEnum:(RARERenderTypeEnum *)type {
  self->renderType_ = (type == nil) ? [RARERenderTypeEnum TILED] : type;
}

- (void)setResourceNameWithNSString:(NSString *)name {
  resourceName_ = name;
}

- (void)setScalingTypeWithRAREiImagePainter_ScalingTypeEnum:(RAREiImagePainter_ScalingTypeEnum *)st {
  scalingType_ = st;
}

- (RAREUIColor *)getBackgroundColor {
  return backgroundColor_;
}

+ (RAREUIImage *)getBrokenImage {
  if (RAREaUIImageIcon_brokenImage_ == nil) {
    @try {
      RAREaUIImageIcon_brokenImage_ = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getResourceAsImageWithNSString:@"Rare.icon.broken"];
    }
    @catch (JavaLangThrowable *e) {
    }
  }
  return RAREaUIImageIcon_brokenImage_;
}

- (RAREaUIImageIcon *)getCopyWithNSString:(NSString *)description_ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getDescription {
  return description__;
}

- (id<RAREiPlatformIcon>)getDisabledVersion {
  if (disabledIconIsSelf_) {
    return self;
  }
  if (disabledIcon_ == nil) {
    if ([self getIconHeight] != -1) {
      RAREaUIImageIcon *ic = (RAREaUIImageIcon *) check_class_cast([RAREaPlatformHelper createDisabledIconIfNeededWithRAREiPlatformIcon:self], [RAREaUIImageIcon class]);
      if (ic == self) {
        disabledIconIsSelf_ = YES;
        return self;
      }
      else if (ic != nil) {
        ic->scalingType_ = self->scalingType_;
        ic->disabledIconIsSelf_ = YES;
        NSString *s = [self getDescription];
        if (s != nil) {
          [ic setDescriptionWithNSString:[NSString stringWithFormat:@"%@ (disabled)", s]];
        }
        disabledIcon_ = ic;
      }
    }
  }
  return disabledIcon_;
}

- (RAREDisplayedEnum *)getDisplayed {
  return displayed_;
}

- (int)getIconHeight {
  id<RAREiPlatformIcon> dl = delayedIcon_;
  if (dl != nil) {
    return [dl getIconHeight];
  }
  return iconHeight_;
}

- (int)getIconWidth {
  id<RAREiPlatformIcon> dl = delayedIcon_;
  if (dl != nil) {
    return [dl getIconWidth];
  }
  return iconWidth_;
}

- (RAREUIImage *)getImage {
  return image_;
}

- (id<RAREiImageObserver>)getImageObserver {
  return imageObserver_;
}

- (id)getLinkedData {
  return linkedData_;
}

- (id<JavaLangRunnable>)getNotifieRunner {
  return notifieRunner_;
}

- (RAREaUIImageIcon *)getProportionallyScaledCopyWithInt:(int)width
                                                 withInt:(int)height
                                            withNSString:(NSString *)description_ {
  RAREaUIImageIcon *icon = [self getCopyWithNSString:description_];
  int iw = [self getIconWidth];
  int ih = [self getIconHeight];
  if ((iw > width) || (ih > height)) {
    if (iw == ih) {
      ih = (int) (((float) width / (float) iw) * ih);
      iw = ih;
    }
    else if (iw > ih) {
      ih = (int) (((float) width / (float) iw) * ih);
      iw = width;
    }
    else {
      iw = (int) (((float) height / (float) ih) * iw);
      ih = height;
    }
  }
  [((RAREaUIImageIcon *) nil_chk(icon)) scale__WithInt:iw withInt:ih];
  return icon;
}

- (RARERenderSpaceEnum *)getRenderSpace {
  return renderSpace_;
}

- (RARERenderTypeEnum *)getRenderType {
  return renderType_;
}

- (NSString *)getResourceName {
  return resourceName_;
}

- (RAREaUIImageIcon *)getScaledCopyWithInt:(int)width
                                   withInt:(int)height
                              withNSString:(NSString *)description_ {
  RAREaUIImageIcon *icon = [self getCopyWithNSString:description_];
  [((RAREaUIImageIcon *) nil_chk(icon)) scale__WithInt:width withInt:height];
  return icon;
}

- (RAREiImagePainter_ScalingTypeEnum *)getScalingType {
  return scalingType_;
}

- (RAREaUIImageIcon *)getSliceWithNSString:(NSString *)description_
                       withRAREUIRectangle:(RAREUIRectangle *)rect {
  if ((((RAREUIRectangle *) nil_chk(rect))->width_ == 0) && (rect->height_ == 0)) {
    return [self getSliceWithNSString:description_ withInt:(int) rect->x_ withInt:(int) rect->y_];
  }
  else {
    return [self getSliceWithNSString:description_ withInt:(int) rect->x_ withInt:(int) rect->y_ withInt:(int) rect->width_ withInt:(int) rect->height_];
  }
}

- (RAREaUIImageIcon *)getSliceWithNSString:(NSString *)description_
                                   withInt:(int)pos
                                   withInt:(int)size {
  RAREaUIImageIcon *ic = [self getCopyWithNSString:description_];
  [((RAREaUIImageIcon *) nil_chk(ic)) setSliceWithInt:pos withInt:size];
  return ic;
}

- (RAREaUIImageIcon *)getSliceWithNSString:(NSString *)description_
                                   withInt:(int)x
                                   withInt:(int)y
                                   withInt:(int)width
                                   withInt:(int)height {
  RAREaUIImageIcon *ic = [self getCopyWithNSString:description_];
  [((RAREaUIImageIcon *) nil_chk(ic)) setSliceWithInt:x withInt:y withInt:width withInt:height];
  return ic;
}

- (RAREUIImage *)getUIImage {
  return [self getImage];
}

- (BOOL)isBrokenImage {
  return loaded_ && ([self getImage] == [RAREaUIImageIcon getBrokenImage]);
}

- (BOOL)isCanceled {
  return canceled_;
}

- (BOOL)isDisposable {
  return NO;
}

- (BOOL)isDone {
  return (image_ == nil) || ![self isDelayedImage];
}

- (BOOL)isEnabled {
  return enabled_;
}

- (BOOL)isImageLoadedWithRAREiImageObserver:(id<RAREiImageObserver>)is {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isSingleColorPainter {
  return NO;
}

- (void)imageWasLoaded {
  loaded_ = YES;
  iconHeight_ = [((RAREUIImage *) nil_chk(image_)) getHeight];
  iconWidth_ = [image_ getWidth];
  if (delayedInfo_ != nil) {
    RAREUIRectangle *r = delayedInfo_->slice_;
    if (r != nil) {
      [self setImageWithRAREUIImage:[((RAREUIImage *) nil_chk([self getImage])) getSliceWithInt:(int) r->x_ withInt:(int) r->y_ withInt:(int) r->width_ withInt:(int) r->height_]];
    }
    else {
      [self setImageWithRAREUIImage:[RAREUtils getSliceWithRAREUIImage:[self getImage] withInt:delayedInfo_->slicePosition_ withInt:delayedInfo_->sliceSize_]];
    }
    delayedInfo_ = nil;
  }
}

- (BOOL)isDelayedImage {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setSliceWithInt:(int)pos
                withInt:(int)size {
  if (!loaded_) {
    delayedInfo_ = [[RAREaUIImageIcon_DelayedInfo alloc] initWithInt:pos withInt:size];
  }
  else {
    [self setImageWithRAREUIImage:[RAREUtils getSliceWithRAREUIImage:[self getImage] withInt:pos withInt:size]];
  }
}

- (void)setSliceWithInt:(int)x
                withInt:(int)y
                withInt:(int)width
                withInt:(int)height {
  if (!loaded_) {
    delayedInfo_ = [[RAREaUIImageIcon_DelayedInfo alloc] initWithRAREUIRectangle:[[RAREUIRectangle alloc] initWithFloat:x withFloat:y withFloat:width withFloat:height]];
  }
  else {
    [self setImageWithRAREUIImage:[((RAREUIImage *) nil_chk([self getImage])) getSliceWithInt:x withInt:y withInt:width withInt:height]];
  }
}

- (id<RAREiPlatformBorder>)getImageBorder {
  return imageBorder_;
}

- (void)setImageBorderWithRAREiPlatformBorder:(id<RAREiPlatformBorder>)imageBorder {
  self->imageBorder_ = imageBorder;
}

- (BOOL)canUseLayer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)canUseMainLayer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getModCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)updateModCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<RAREiPlatformPaint>)getPaintWithFloat:(float)param0
                                  withFloat:(float)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)run {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)cancelWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllFieldsTo:(RAREaUIImageIcon *)other {
  [super copyAllFieldsTo:other];
  other->backgroundColor_ = backgroundColor_;
  other->canceled_ = canceled_;
  other->constrainedBackground_ = constrainedBackground_;
  other->delayedIcon_ = delayedIcon_;
  other->delayedIconConstraints_ = delayedIconConstraints_;
  other->delayedInfo_ = delayedInfo_;
  other->description__ = description__;
  other->disabledIcon_ = disabledIcon_;
  other->disabledIconIsSelf_ = disabledIconIsSelf_;
  other->displayed_ = displayed_;
  other->enabled_ = enabled_;
  other->iconHeight_ = iconHeight_;
  other->iconWidth_ = iconWidth_;
  other->image_ = image_;
  other->imageBorder_ = imageBorder_;
  other->imageObserver_ = imageObserver_;
  other->linkedData_ = linkedData_;
  other->loaded_ = loaded_;
  other->location_ = location_;
  other->notifieRunner_ = notifieRunner_;
  other->renderLoc_ = renderLoc_;
  other->renderSpace_ = renderSpace_;
  other->renderType_ = renderType_;
  other->resourceName_ = resourceName_;
  other->runNotifierOnEventThread_ = runNotifierOnEventThread_;
  other->scalingType_ = scalingType_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "alphaWithInt:", NULL, "LRAREiBackgroundPainter", 0x1, NULL },
    { "clone", NULL, "LNSObject", 0x1, NULL },
    { "isDisposed", NULL, "Z", 0x1, NULL },
    { "reference", NULL, "LRAREiPlatformPainter", 0x1, NULL },
    { "getBackgroundColor", NULL, "LRAREUIColor", 0x1, NULL },
    { "getBrokenImage", NULL, "LRAREUIImage", 0x9, NULL },
    { "getCopyWithNSString:", NULL, "LRAREaUIImageIcon", 0x401, NULL },
    { "getDescription", NULL, "LNSString", 0x1, NULL },
    { "getDisabledVersion", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getDisplayed", NULL, "LRAREDisplayedEnum", 0x1, NULL },
    { "getImage", NULL, "LRAREUIImage", 0x1, NULL },
    { "getImageObserver", NULL, "LRAREiImageObserver", 0x1, NULL },
    { "getLinkedData", NULL, "LNSObject", 0x1, NULL },
    { "getNotifieRunner", NULL, "LJavaLangRunnable", 0x1, NULL },
    { "getProportionallyScaledCopyWithInt:withInt:withNSString:", NULL, "LRAREaUIImageIcon", 0x1, NULL },
    { "getRenderSpace", NULL, "LRARERenderSpaceEnum", 0x1, NULL },
    { "getRenderType", NULL, "LRARERenderTypeEnum", 0x1, NULL },
    { "getResourceName", NULL, "LNSString", 0x1, NULL },
    { "getScaledCopyWithInt:withInt:withNSString:", NULL, "LRAREaUIImageIcon", 0x1, NULL },
    { "getScalingType", NULL, "LRAREiImagePainter_ScalingTypeEnum", 0x1, NULL },
    { "getSliceWithNSString:withRAREUIRectangle:", NULL, "LRAREaUIImageIcon", 0x1, NULL },
    { "getSliceWithNSString:withInt:withInt:", NULL, "LRAREaUIImageIcon", 0x1, NULL },
    { "getSliceWithNSString:withInt:withInt:withInt:withInt:", NULL, "LRAREaUIImageIcon", 0x1, NULL },
    { "getUIImage", NULL, "LRAREUIImage", 0x1, NULL },
    { "isBrokenImage", NULL, "Z", 0x1, NULL },
    { "isCanceled", NULL, "Z", 0x1, NULL },
    { "isDisposable", NULL, "Z", 0x1, NULL },
    { "isDone", NULL, "Z", 0x1, NULL },
    { "isEnabled", NULL, "Z", 0x1, NULL },
    { "isImageLoadedWithRAREiImageObserver:", NULL, "Z", 0x401, NULL },
    { "isSingleColorPainter", NULL, "Z", 0x1, NULL },
    { "imageWasLoaded", NULL, "V", 0x4, NULL },
    { "isDelayedImage", NULL, "Z", 0x404, NULL },
    { "setSliceWithInt:withInt:", NULL, "V", 0x2, NULL },
    { "setSliceWithInt:withInt:withInt:withInt:", NULL, "V", 0x2, NULL },
    { "getImageBorder", NULL, "LRAREiPlatformBorder", 0x1, NULL },
    { "canUseLayer", NULL, "Z", 0x401, NULL },
    { "canUseMainLayer", NULL, "Z", 0x401, NULL },
    { "getModCount", NULL, "I", 0x401, NULL },
    { "updateModCount", NULL, "V", 0x401, NULL },
    { "getPaintWithFloat:withFloat:", NULL, "LRAREiPlatformPaint", 0x401, NULL },
    { "run", NULL, "V", 0x401, NULL },
    { "cancelWithBoolean:", NULL, "V", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "brokenImage_", NULL, 0xa, "LRAREUIImage" },
    { "description__", "description", 0x4, "LNSString" },
    { "iconHeight_", NULL, 0x4, "I" },
    { "iconWidth_", NULL, 0x4, "I" },
    { "scalingType_", NULL, 0x4, "LRAREiImagePainter_ScalingTypeEnum" },
    { "renderType_", NULL, 0x4, "LRARERenderTypeEnum" },
    { "renderSpace_", NULL, 0x4, "LRARERenderSpaceEnum" },
    { "enabled_", NULL, 0x4, "Z" },
    { "displayed_", NULL, 0x4, "LRAREDisplayedEnum" },
    { "backgroundColor_", NULL, 0x4, "LRAREUIColor" },
    { "canceled_", NULL, 0x44, "Z" },
    { "constrainedBackground_", NULL, 0x4, "LRAREUIColor" },
    { "delayedIcon_", NULL, 0x44, "LRAREaUIImageIcon" },
    { "delayedIconConstraints_", NULL, 0x4, "I" },
    { "disabledIcon_", NULL, 0x4, "LRAREaUIImageIcon" },
    { "disabledIconIsSelf_", NULL, 0x4, "Z" },
    { "image_", NULL, 0x84, "LRAREUIImage" },
    { "imageObserver_", NULL, 0x4, "LRAREiImageObserver" },
    { "linkedData_", NULL, 0x4, "LNSObject" },
    { "loaded_", NULL, 0x4, "Z" },
    { "location_", NULL, 0x44, "LJavaNetURL" },
    { "notifieRunner_", NULL, 0x4, "LJavaLangRunnable" },
    { "renderLoc_", NULL, 0x4, "LRAREUIRectangle" },
    { "resourceName_", NULL, 0x4, "LNSString" },
    { "runNotifierOnEventThread_", NULL, 0x4, "Z" },
    { "imageBorder_", NULL, 0x4, "LRAREiPlatformBorder" },
  };
  static J2ObjcClassInfo _RAREaUIImageIcon = { "aUIImageIcon", "com.appnativa.rare.ui", NULL, 0x401, 43, methods, 26, fields, 0, NULL};
  return &_RAREaUIImageIcon;
}

@end
@implementation RAREaUIImageIcon_DelayedInfo

- (id)initWithRAREUIRectangle:(RAREUIRectangle *)slice {
  if (self = [super init]) {
    self->slice_ = slice;
  }
  return self;
}

- (id)initWithInt:(int)slicePosition
          withInt:(int)sliceSize {
  if (self = [super init]) {
    self->slicePosition_ = slicePosition;
    self->sliceSize_ = sliceSize;
  }
  return self;
}

- (void)copyAllFieldsTo:(RAREaUIImageIcon_DelayedInfo *)other {
  [super copyAllFieldsTo:other];
  other->slice_ = slice_;
  other->slicePosition_ = slicePosition_;
  other->sliceSize_ = sliceSize_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "slice_", NULL, 0x0, "LRAREUIRectangle" },
    { "slicePosition_", NULL, 0x0, "I" },
    { "sliceSize_", NULL, 0x0, "I" },
  };
  static J2ObjcClassInfo _RAREaUIImageIcon_DelayedInfo = { "DelayedInfo", "com.appnativa.rare.ui", "aUIImageIcon", 0xc, 0, NULL, 3, fields, 0, NULL};
  return &_RAREaUIImageIcon_DelayedInfo;
}

@end
