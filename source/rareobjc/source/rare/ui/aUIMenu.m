//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/ui/aUIMenu.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/iURLConnection.h"
#include "com/appnativa/rare/platform/ActionHelper.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/spot/MenuBar.h"
#include "com/appnativa/rare/spot/MenuItem.h"
#include "com/appnativa/rare/ui/MenuUtils.h"
#include "com/appnativa/rare/ui/PopupList.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIMenu.h"
#include "com/appnativa/rare/ui/UIMenuItem.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/aFocusedAction.h"
#include "com/appnativa/rare/ui/aUIMenu.h"
#include "com/appnativa/rare/ui/aUIMenuItem.h"
#include "com/appnativa/rare/ui/event/ExpansionEvent.h"
#include "com/appnativa/rare/ui/iListHandler.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/util/DataParser.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/iFilterableList.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@implementation RAREaUIMenu

- (id)init {
  return [super init];
}

- (void)addWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp {
  @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"NOT SUPPORTED ON THIS PLATFORM"];
}

- (void)setHeaderWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (BOOL)addWithId:(RARERenderableDataItem *)item {
  RAREUIMenuItem *mi;
  if (!([item isKindOfClass:[RARERenderableDataItem class]])) {
    mi = [[RAREUIMenuItem alloc] initWithRARERenderableDataItem:item];
  }
  else {
    mi = (RAREUIMenuItem *) check_class_cast(item, [RAREUIMenuItem class]);
  }
  [super addWithId:mi];
  if (![((RAREUIMenuItem *) nil_chk(mi)) isSelected]) {
    [self register__WithRAREUIMenuItem:mi];
  }
  [self addToNativeMenuWithInt:-1 withRAREUIMenuItem:mi];
  return YES;
}

- (RAREUIMenuItem *)addWithRAREUIAction:(RAREUIAction *)a {
  RAREUIMenuItem *mi = [[RAREUIMenuItem alloc] initWithRAREUIAction:a withBoolean:NO];
  [self addWithId:mi];
  return mi;
}

- (void)addWithInt:(int)pos
            withId:(RARERenderableDataItem *)item {
  RAREUIMenuItem *mi;
  if (!([item isKindOfClass:[RARERenderableDataItem class]])) {
    mi = [[RAREUIMenuItem alloc] initWithRARERenderableDataItem:item];
  }
  else {
    mi = (RAREUIMenuItem *) check_class_cast(item, [RAREUIMenuItem class]);
  }
  [super addWithInt:pos withId:mi];
  if (![((RAREUIMenuItem *) nil_chk(mi)) isSelected]) {
    [self register__WithRAREUIMenuItem:mi];
  }
  [self addToNativeMenuWithInt:pos withRAREUIMenuItem:mi];
}

- (RAREUIMenuItem *)addWithInt:(int)pos
              withRAREUIAction:(RAREUIAction *)a {
  RAREUIMenuItem *mi = [[RAREUIMenuItem alloc] initWithRAREUIAction:a];
  [self addWithInt:pos withId:mi];
  return mi;
}

- (void)addSeparator {
  [self addWithId:[RAREMenuUtils getSeparatorItem]];
}

- (void)addSeparatorWithInt:(int)pos {
  [self addWithInt:pos withId:[RAREMenuUtils getSeparatorItem]];
}

- (void)clear {
  id<JavaUtilList> items = [self getItems];
  int len = (items == nil) ? 0 : [items size];
  int i = 0;
  while (i < len) {
    [((RAREUIMenuItem *) check_class_cast([((id<JavaUtilList>) nil_chk(items)) getWithInt:i++], [RAREUIMenuItem class])) dispose];
  }
  [super clear];
  if (nameMap_ != nil) {
    [nameMap_ clear];
  }
}

- (void)clearSubItems {
  [super clearSubItems];
  if (nameMap_ != nil) {
    [nameMap_ clear];
  }
}

- (void)dispose {
  [self clear];
  [super dispose];
  nameMap_ = nil;
  selectedItem_ = nil;
}

- (id)registerItemWithNSString:(NSString *)name
                        withId:(id)mi {
  if (nameMap_ == nil) {
    nameMap_ = [[JavaUtilHashMap alloc] init];
  }
  return [((JavaUtilHashMap *) nil_chk(nameMap_)) putWithId:name withId:mi];
}

- (RARERenderableDataItem *)removeWithInt:(int)pos {
  RAREUIMenuItem *mi = (RAREUIMenuItem *) check_class_cast([super removeWithInt:pos], [RAREUIMenuItem class]);
  if (mi != nil) {
    [self unregisterWithRAREUIMenuItem:mi];
    [mi setParentMenuWithRAREaUIMenu:nil];
    [self removeNativeItemWithRAREUIMenuItem:mi];
  }
  return mi;
}

- (BOOL)removeWithId:(id)o {
  int n = [self indexOfWithId:o];
  if (n != -1) {
    (void) [self removeWithInt:n];
    return YES;
  }
  return NO;
}

- (void)showWithRAREiWidget:(id<RAREiWidget>)context
                withBoolean:(BOOL)modal {
  [self showWithRAREiWidget:context withRAREiPlatformComponent:nil withBoolean:modal];
}

- (void)showWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)owner
                               withInt:(int)x
                               withInt:(int)y {
  BOOL m = modal_;
  if (!m) {
    m = [RAREScreenUtils isSmallScreen] || [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getBooleanWithNSString:@"Rare.PopupMenu.showModal" withBoolean:NO];
  }
  if (m) {
    [self showWithRAREiWidget:[((id<RAREiPlatformComponent>) nil_chk(owner)) getWidget] withRAREiPlatformComponent:owner withBoolean:YES];
    return;
  }
  invokingWidget_ = [((id<RAREiPlatformComponent>) nil_chk(owner)) getWidget];
  RAREPopupList *list = [[RAREPopupList alloc] initWithRAREiWidget:[owner getWidget]];
  [list addPopupMenuListenerWithRAREiPopupMenuListener:[[RAREaUIMenu_$1 alloc] initWithRAREaUIMenu:self]];
  [list setItemsWithJavaUtilList:[self getItems] withRAREiActionListener:nil withBoolean:YES withInt:[self size]];
  [list showPopupWithRAREiPlatformComponent:nil withInt:x withInt:y];
}

- (void)showWithRAREiWidget:(id<RAREiWidget>)context
 withRAREiPlatformComponent:(id<RAREiPlatformComponent>)owner
                withBoolean:(BOOL)modal {
  RAREPopupList *list = [[RAREPopupList alloc] initWithRAREiWidget:context];
  [list addPopupMenuListenerWithRAREiPopupMenuListener:[[RAREaUIMenu_$2 alloc] initWithRAREaUIMenu:self]];
  if (owner == nil) {
    owner = [((id<RAREiWidget>) nil_chk(context)) getContainerComponent];
  }
  invokingWidget_ = [((id<RAREiPlatformComponent>) nil_chk(owner)) getWidget];
  if (cancelButtonText_ != nil) {
    [list setCancelButtonTextWithNSString:[((id<RAREiWidget>) nil_chk(context)) expandStringWithNSString:cancelButtonText_ withBoolean:NO]];
  }
  [list setItemsWithJavaUtilList:[self getItems] withRAREiActionListener:nil withBoolean:YES withInt:[self size]];
  if (modal) {
    [list showModalPopupWithBoolean:![RAREPlatformHelper hasEscapeButton] || [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getBooleanWithNSString:@"Rare.Menu.showCloseButton" withBoolean:NO]];
  }
  else {
    RAREUIRectangle *r = [[RAREUIRectangle alloc] init];
    [RAREUtils getProposedPopupBoundsWithRAREUIRectangle:r withRAREiPlatformComponent:owner withRAREUIDimension:[list getPreferredSize] withFloat:0 withRARERenderableDataItem_HorizontalAlignEnum:[RARERenderableDataItem_HorizontalAlignEnum AUTO] withRAREiPlatformBorder:[list getPopupBorder] withBoolean:NO];
    [list showPopupWithRAREiPlatformComponent:owner withInt:(int) r->x_ withInt:(int) r->y_];
  }
}

- (BOOL)isShowing {
  if (showing_) {
    return YES;
  }
  return showing_;
}

- (id)unregisterItemWithNSString:(NSString *)name {
  if (nameMap_ != nil) {
    return [nameMap_ removeWithId:name];
  }
  return nil;
}

- (RARERenderableDataItem *)setItemWithInt:(int)pos
                withRARERenderableDataItem:(RARERenderableDataItem *)item {
  RAREUIMenuItem *newmi = (RAREUIMenuItem *) check_class_cast(item, [RAREUIMenuItem class]);
  RAREUIMenuItem *mi = (RAREUIMenuItem *) check_class_cast([super setItemWithInt:pos withRARERenderableDataItem:newmi], [RAREUIMenuItem class]);
  if (mi != nil) {
    [self unregisterWithRAREUIMenuItem:mi];
  }
  [self setNativeItemWithInt:pos withRAREUIMenuItem:newmi];
  [self register__WithRAREUIMenuItem:newmi];
  return mi;
}

- (void)setItemEnabledWithNSString:(NSString *)name
                       withBoolean:(BOOL)enabled {
  RAREUIMenuItem *item = [self getMenuItemWithNSString:name];
  if (item == nil) {
    return;
  }
  [((RAREUIMenuItem *) nil_chk(item)) setEnabledWithBoolean:enabled];
}

- (void)setItemSelectedWithNSString:(NSString *)name
                        withBoolean:(BOOL)selected {
  RAREUIMenuItem *item = [self getMenuItemWithNSString:name];
  if (item == nil) {
    return;
  }
  [((RAREUIMenuItem *) nil_chk(item)) setSelectedWithBoolean:selected];
}

- (void)setItemVisibleWithNSString:(NSString *)name
                       withBoolean:(BOOL)visible {
  RAREUIMenuItem *item = [self getMenuItemWithNSString:name];
  if (item == nil) {
    return;
  }
  [((RAREUIMenuItem *) nil_chk(item)) setVisibleWithBoolean:visible];
}

- (void)setItemsWithJavaUtilList:(id<JavaUtilList>)items {
  [self clear];
  int count = (items == nil) ? 0 : [items size];
  [self ensureCapacityWithInt:count];
  for (int i = 0; i < count; i++) {
    [self addWithId:[((id<JavaUtilList>) nil_chk(items)) getWithInt:i]];
  }
}

- (void)setItemsWithRARERenderableDataItemArray:(IOSObjectArray *)items
                                        withInt:(int)count {
  [self clear];
  [self ensureCapacityWithInt:count];
  for (int i = 0; i < count; i++) {
    [self addWithId:IOSObjectArray_Get(nil_chk(items), i)];
  }
}

- (void)setNativeItemWithInt:(int)pos
          withRAREUIMenuItem:(RAREUIMenuItem *)mi {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setSelectedItemWithRAREUIMenuItem:(RAREUIMenuItem *)item {
  self->selectedItem_ = item;
}

- (void)setValueWithRAREaUIMenu:(RAREaUIMenu *)menu {
  [self clear];
  [self addAllWithJavaUtilCollection:menu];
}

- (void)setValueWithId:(id)value {
  if ([value isKindOfClass:[RAREaUIMenu class]]) {
    [self setValueWithRAREaUIMenu:(RAREaUIMenu *) check_class_cast(value, [RAREaUIMenu class])];
  }
  else {
    [super setValueWithId:value];
  }
}

- (RAREUIMenuItem *)getMenuItemWithInt:(int)index {
  return (RAREUIMenuItem *) check_class_cast([self getWithInt:index], [RAREUIMenuItem class]);
}

- (RAREUIMenuItem *)getMenuItemWithNSString:(NSString *)name {
  if (nameMap_ == nil) {
    return nil;
  }
  return (RAREUIMenuItem *) check_class_cast([((JavaUtilHashMap *) nil_chk(nameMap_)) getWithId:name], [RAREUIMenuItem class]);
}

- (RAREUIMenuItem *)getSelectedItem {
  return selectedItem_;
}

- (id<JavaUtilMap>)getSubs {
  if (nameMap_ == nil) {
    nameMap_ = [[JavaUtilHashMap alloc] init];
  }
  return nameMap_;
}

- (BOOL)isItemEnabledWithNSString:(NSString *)name {
  RAREUIMenuItem *item = [self getMenuItemWithNSString:name];
  if (item == nil) {
    return NO;
  }
  return [((RAREUIMenuItem *) nil_chk(item)) isEnabled];
}

- (BOOL)isItemSelectedWithNSString:(NSString *)name {
  RAREUIMenuItem *item = [self getMenuItemWithNSString:name];
  if (item == nil) {
    return NO;
  }
  return [((RAREUIMenuItem *) nil_chk(item)) isSelected];
}

- (BOOL)isItemVisibleWithNSString:(NSString *)name {
  RAREUIMenuItem *item = [self getMenuItemWithNSString:name];
  if (item == nil) {
    return NO;
  }
  return [((RAREUIMenuItem *) nil_chk(item)) isVisible];
}

- (void)addToNativeMenuWithInt:(int)pos
            withRAREUIMenuItem:(RAREUIMenuItem *)mi {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)configureWithRARESPOTMenuBar:(RARESPOTMenuBar *)cfg {
  SPOTSet *menus = [((RARESPOTMenuBar *) nil_chk(cfg)) getPopupMenu];
  NSString *s;
  id<RAREiWidget> context = contextWidget_;
  if (menus == nil) {
    s = [((SPOTPrintableString *) nil_chk(cfg->dataURL_)) getValue];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      id<iSPOTElement> item;
      @try {
        RAREActionLink *link = [RAREActionLink getActionLinkWithRAREUTiURLResolver:context withSPOTPrintableString:cfg->dataURL_ withInt:0];
        item = [RAREDataParser loadSPOTObjectWithRAREiWidget:context withRAREiURLConnection:[((RAREActionLink *) nil_chk(link)) getConnection] withISPOTElement:nil];
        if ([(id) item isKindOfClass:[RARESPOTMenuItem class]]) {
          menus = [((RARESPOTMenuItem *) check_class_cast(item, [RARESPOTMenuItem class])) getSubMenu];
        }
        else if ([(id) item isKindOfClass:[RARESPOTMenuBar class]]) {
          cfg = (RARESPOTMenuBar *) check_class_cast(item, [RARESPOTMenuBar class]);
          menus = [((RARESPOTMenuBar *) nil_chk(cfg)) getPopupMenu];
        }
      }
      @catch (JavaLangException *ex) {
        @throw [RAREDataParser invalidConfigurationExceptionWithRAREiPlatformAppContext:[((id<RAREiWidget>) nil_chk(context)) getAppContext] withJavaLangThrowable:ex withNSString:s];
      }
    }
  }
  s = [((RARESPOTMenuBar *) nil_chk(cfg)) spot_getAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION]];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    actionScript_ = s;
  }
  [self configureWithSPOTSet:menus withBoolean:[self isAddHomeMenu]];
}

- (void)configureWithSPOTSet:(SPOTSet *)menus
                 withBoolean:(BOOL)addHome {
  int len = (menus == nil) ? 0 : [menus getCount];
  IOSObjectArray *menuItems;
  if (len > 0) {
    menuItems = [RAREMenuUtils createMenuItemsWithRAREiWidget:contextWidget_ withSPOTSet:menus];
    [self addAllWithRARERenderableDataItemArray:menuItems];
    NSString *s = [((SPOTSet *) nil_chk(menus)) spot_getAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION]];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      actionScript_ = s;
    }
    s = [menus spot_getAttributeWithNSString:@"cancelButtonText"];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      cancelButtonText_ = s;
    }
  }
  RAREUIAction *home = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getActionWithNSString:@"Rare.action.home"];
  if (addHome && (home != nil)) {
    [self addWithId:[[RAREUIMenuItem alloc] initWithRAREUIAction:home]];
  }
}

- (void)disableFocusedActionsWithRAREaUIMenu:(RAREaUIMenu *)menu
                             withRAREiWidget:(id<RAREiWidget>)context {
  id<RAREUTiFilterableList> list = [((RAREaUIMenu *) nil_chk(menu)) getItems];
  RAREUIMenuItem *mi;
  int len = [((id<RAREUTiFilterableList>) nil_chk(list)) size];
  for (int i = 0; i < len; i++) {
    mi = (RAREUIMenuItem *) check_class_cast([list getWithInt:i], [RAREUIMenuItem class]);
    if ([mi isKindOfClass:[RAREaUIMenu class]]) {
      [self disableFocusedActionsWithRAREaUIMenu:(RAREUIMenu *) check_class_cast(mi, [RAREUIMenu class]) withRAREiWidget:context];
    }
    else {
      RAREUIAction *a = [((RAREUIMenuItem *) nil_chk(mi)) getAction];
      if ([a isKindOfClass:[RAREaFocusedAction class]]) {
        if ((context != nil) && [context canCopy] && (a == [RAREActionHelper getCopyAction])) {
          [((RAREUIAction *) nil_chk(a)) setEnabledWithBoolean:YES];
        }
        else if ((context != nil) && [context canCut] && (a == [RAREActionHelper getCutAction])) {
          [((RAREUIAction *) nil_chk(a)) setEnabledWithBoolean:YES];
        }
        else if ((context != nil) && [context canPaste] && (a == [RAREActionHelper getPasteAction])) {
          [((RAREUIAction *) nil_chk(a)) setEnabledWithBoolean:YES];
        }
        else if ((context != nil) && [context canDelete] && (a == [RAREActionHelper getDeleteAction])) {
          [((RAREUIAction *) nil_chk(a)) setEnabledWithBoolean:YES];
        }
        else if ((context != nil) && [context canSelectAll] && (a == [RAREActionHelper getSelectAllAction])) {
          [((RAREUIAction *) nil_chk(a)) setEnabledWithBoolean:YES];
        }
        else if ((context != nil) && ((a == [RAREActionHelper getUndoAction]) || (a == [RAREActionHelper getRedoAction])) && [context canUndoOrRedo]) {
          [((RAREUIAction *) nil_chk(a)) setEnabledWithBoolean:YES];
        }
        else {
          [((RAREUIAction *) nil_chk(a)) setEnabledWithBoolean:NO];
        }
      }
    }
  }
}

- (void)menuWillBecomeInvisible {
  id<RAREiWidget> invoker = [self hasParentMenu] ? nil : [self getInvoker];
  if ((invoker != nil) && ![((id<RAREiPlatformComponent>) nil_chk([invoker getDataComponent])) isFocusable]) {
    [self resetFocusedActionsWithRAREaUIMenu:self];
  }
  id<RAREiListHandler> h;
  if ([(id) invoker conformsToProtocol: @protocol(RAREiListHandler)]) {
    h = (id<RAREiListHandler>) check_protocol_cast(invoker, @protocol(RAREiListHandler));
  }
  else {
    id<RAREiWidget> ctx = [self getContextWidget];
    if ([(id) ctx conformsToProtocol: @protocol(RAREiListHandler)]) {
      h = (id<RAREiListHandler>) check_protocol_cast(ctx, @protocol(RAREiListHandler));
    }
    else {
      h = nil;
    }
  }
  if (h != nil) {
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREaUIMenu_$3 alloc] initWithRAREiListHandler:h]];
  }
  showing_ = NO;
}

- (void)menuWillBecomeVisible {
  id<RAREiWidget> invoker = [self hasParentMenu] ? nil : [self getInvoker];
  if ((invoker != nil) && ![((id<RAREiPlatformComponent>) nil_chk([invoker getDataComponent])) isFocusable]) {
    [self disableFocusedActionsWithRAREaUIMenu:self withRAREiWidget:invoker];
  }
  else {
    [self resetFocusedActionsWithRAREaUIMenu:self];
  }
  showing_ = YES;
}

- (void)removeNativeItemWithRAREUIMenuItem:(RAREUIMenuItem *)mi {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)resetFocusedActionsWithRAREaUIMenu:(RAREaUIMenu *)menu {
  id<RAREUTiFilterableList> list = [((RAREaUIMenu *) nil_chk(menu)) getItems];
  RAREUIMenuItem *mi;
  int len = [((id<RAREUTiFilterableList>) nil_chk(list)) size];
  for (int i = 0; i < len; i++) {
    mi = (RAREUIMenuItem *) check_class_cast([list getWithInt:i], [RAREUIMenuItem class]);
    if ([mi isKindOfClass:[RAREaUIMenu class]]) {
      [self resetFocusedActionsWithRAREaUIMenu:(RAREUIMenu *) check_class_cast(mi, [RAREUIMenu class])];
    }
    else {
      RAREUIAction *a = [((RAREUIMenuItem *) nil_chk(mi)) getAction];
      if ([a isKindOfClass:[RAREaFocusedAction class]]) {
        [((RAREaFocusedAction *) check_class_cast(a, [RAREaFocusedAction class])) update];
      }
      if (a != nil) {
        [mi setEnabledWithBoolean:[a isEnabled]];
      }
    }
  }
}

- (id<RAREiWidget>)getInvoker {
  return invokingWidget_ == nil ? [self getContextWidget] : invokingWidget_;
}

- (BOOL)hasParentMenu {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isAddHomeMenu {
  return NO;
}

- (void)register__WithRAREUIMenuItem:(RAREUIMenuItem *)mi {
  NSString *name = [((RAREUIMenuItem *) nil_chk(mi)) getName];
  if ((name != nil) && ([name sequenceLength] > 0)) {
    (void) [self registerItemWithNSString:name withId:mi];
  }
  [mi setParentMenuWithRAREaUIMenu:self];
}

- (void)unregisterWithRAREUIMenuItem:(RAREUIMenuItem *)mi {
  NSString *name = [((RAREUIMenuItem *) nil_chk(mi)) getName];
  if ((name != nil) && ([name sequenceLength] > 0)) {
    (void) [self unregisterItemWithNSString:name];
  }
  [mi setParentMenuWithRAREaUIMenu:nil];
}

- (NSString *)getCancelButtonText {
  return cancelButtonText_;
}

- (void)setCancelButtonTextWithNSString:(NSString *)cancelButtonText {
  self->cancelButtonText_ = cancelButtonText;
}

- (BOOL)isModal {
  return modal_;
}

- (void)setModalWithBoolean:(BOOL)modal {
  self->modal_ = modal;
}

- (void)copyAllFieldsTo:(RAREaUIMenu *)other {
  [super copyAllFieldsTo:other];
  other->cancelButtonText_ = cancelButtonText_;
  other->invokingWidget_ = invokingWidget_;
  other->modal_ = modal_;
  other->nameMap_ = nameMap_;
  other->selectedItem_ = selectedItem_;
  other->showing_ = showing_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "setHeaderWithRAREiPlatformComponent:", NULL, "V", 0x401, NULL },
    { "addWithRARERenderableDataItem:", NULL, "Z", 0x1, NULL },
    { "addWithRAREUIAction:", NULL, "LRAREUIMenuItem", 0x1, NULL },
    { "addWithInt:withRAREUIAction:", NULL, "LRAREUIMenuItem", 0x1, NULL },
    { "registerItemWithNSString:withId:", NULL, "LNSObject", 0x1, NULL },
    { "removeWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "removeWithId:", NULL, "Z", 0x1, NULL },
    { "isShowing", NULL, "Z", 0x1, NULL },
    { "unregisterItemWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "setItemWithInt:withRARERenderableDataItem:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "setNativeItemWithInt:withRAREUIMenuItem:", NULL, "V", 0x401, NULL },
    { "getMenuItemWithInt:", NULL, "LRAREUIMenuItem", 0x1, NULL },
    { "getMenuItemWithNSString:", NULL, "LRAREUIMenuItem", 0x1, NULL },
    { "getSelectedItem", NULL, "LRAREUIMenuItem", 0x1, NULL },
    { "getSubs", NULL, "LJavaUtilMap", 0x1, NULL },
    { "isItemEnabledWithNSString:", NULL, "Z", 0x1, NULL },
    { "isItemSelectedWithNSString:", NULL, "Z", 0x1, NULL },
    { "isItemVisibleWithNSString:", NULL, "Z", 0x1, NULL },
    { "addToNativeMenuWithInt:withRAREUIMenuItem:", NULL, "V", 0x404, NULL },
    { "configureWithRARESPOTMenuBar:", NULL, "V", 0x4, NULL },
    { "configureWithSPOTSet:withBoolean:", NULL, "V", 0x4, NULL },
    { "disableFocusedActionsWithRAREaUIMenu:withRAREiWidget:", NULL, "V", 0x4, NULL },
    { "menuWillBecomeInvisible", NULL, "V", 0x4, NULL },
    { "menuWillBecomeVisible", NULL, "V", 0x4, NULL },
    { "removeNativeItemWithRAREUIMenuItem:", NULL, "V", 0x404, NULL },
    { "resetFocusedActionsWithRAREaUIMenu:", NULL, "V", 0x4, NULL },
    { "getInvoker", NULL, "LRAREiWidget", 0x4, NULL },
    { "hasParentMenu", NULL, "Z", 0x404, NULL },
    { "isAddHomeMenu", NULL, "Z", 0x4, NULL },
    { "register__WithRAREUIMenuItem:", NULL, "V", 0x2, NULL },
    { "unregisterWithRAREUIMenuItem:", NULL, "V", 0x2, NULL },
    { "getCancelButtonText", NULL, "LNSString", 0x1, NULL },
    { "isModal", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "nameMap_", NULL, 0x4, "LJavaUtilHashMap" },
    { "selectedItem_", NULL, 0x4, "LRAREUIMenuItem" },
    { "cancelButtonText_", NULL, 0x4, "LNSString" },
    { "modal_", NULL, 0x4, "Z" },
    { "invokingWidget_", NULL, 0x4, "LRAREiWidget" },
  };
  static J2ObjcClassInfo _RAREaUIMenu = { "aUIMenu", "com.appnativa.rare.ui", NULL, 0x401, 33, methods, 5, fields, 0, NULL};
  return &_RAREaUIMenu;
}

@end
@implementation RAREaUIMenu_$1

- (void)popupMenuWillBecomeVisibleWithRAREExpansionEvent:(RAREExpansionEvent *)e {
  [this$0_ menuWillBecomeVisible];
}

- (void)popupMenuWillBecomeInvisibleWithRAREExpansionEvent:(RAREExpansionEvent *)e {
  [this$0_ menuWillBecomeInvisible];
}

- (void)popupMenuCanceledWithRAREExpansionEvent:(RAREExpansionEvent *)e {
}

- (id)initWithRAREaUIMenu:(RAREaUIMenu *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaUIMenu" },
  };
  static J2ObjcClassInfo _RAREaUIMenu_$1 = { "$1", "com.appnativa.rare.ui", "aUIMenu", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaUIMenu_$1;
}

@end
@implementation RAREaUIMenu_$2

- (void)popupMenuWillBecomeVisibleWithRAREExpansionEvent:(RAREExpansionEvent *)e {
  [this$0_ menuWillBecomeVisible];
}

- (void)popupMenuWillBecomeInvisibleWithRAREExpansionEvent:(RAREExpansionEvent *)e {
  [this$0_ menuWillBecomeInvisible];
}

- (void)popupMenuCanceledWithRAREExpansionEvent:(RAREExpansionEvent *)e {
}

- (id)initWithRAREaUIMenu:(RAREaUIMenu *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaUIMenu" },
  };
  static J2ObjcClassInfo _RAREaUIMenu_$2 = { "$2", "com.appnativa.rare.ui", "aUIMenu", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaUIMenu_$2;
}

@end
@implementation RAREaUIMenu_$3

- (void)run {
  id<RAREiPlatformComponent> c = [((id<RAREiListHandler>) nil_chk(val$h_)) getListComponent];
  if (c != nil && ![c isDisposed]) {
    [val$h_ clearContextMenuIndex];
  }
}

- (id)initWithRAREiListHandler:(id<RAREiListHandler>)capture$0 {
  val$h_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$h_", NULL, 0x1012, "LRAREiListHandler" },
  };
  static J2ObjcClassInfo _RAREaUIMenu_$3 = { "$3", "com.appnativa.rare.ui", "aUIMenu", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaUIMenu_$3;
}

@end
