//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/viewer/aStackPaneViewer.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iAsyncLoadStatusHandler.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iFunctionCallback.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/spot/StackPane.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/ui/ContainerPanel.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UITarget.h"
#include "com/appnativa/rare/ui/ViewerCreator.h"
#include "com/appnativa/rare/ui/aWidgetListener.h"
#include "com/appnativa/rare/ui/effects/TransitionAnimator.h"
#include "com/appnativa/rare/ui/effects/aAnimator.h"
#include "com/appnativa/rare/ui/effects/iAnimator.h"
#include "com/appnativa/rare/ui/effects/iPlatformAnimator.h"
#include "com/appnativa/rare/ui/effects/iTransitionAnimator.h"
#include "com/appnativa/rare/ui/event/EventListenerList.h"
#include "com/appnativa/rare/ui/event/iChangeListener.h"
#include "com/appnativa/rare/ui/iParentComponent.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformWindowManager.h"
#include "com/appnativa/rare/ui/iWindowManager.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/aContainer.h"
#include "com/appnativa/rare/viewer/aStackPaneViewer.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iTarget.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTInteger.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Throwable.h"
#include "java/net/MalformedURLException.h"
#include "java/util/EventObject.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"

@implementation RAREaStackPaneViewer

- (id)init {
  return [self initRAREaStackPaneViewerWithRAREiContainer:nil];
}

- (id)initRAREaStackPaneViewerWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    changeIndex_ = -1;
    viewerIndex_ = -1;
    namedEntries_ = [[JavaUtilHashMap alloc] init];
    entries_ = [[RAREUTIdentityArrayList alloc] init];
    changeEvent_ = [[JavaUtilEventObject alloc] initWithId:self];
    listenerList_ = [[RAREEventListenerList alloc] init];
    widgetType_ = [RAREiWidget_WidgetTypeEnum StackPane];
  }
  return self;
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  return [self initRAREaStackPaneViewerWithRAREiContainer:parent];
}

- (void)addChangeListenerWithRAREiChangeListener:(id<RAREiChangeListener>)l {
  [((RAREEventListenerList *) nil_chk(listenerList_)) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiChangeListener)] withId:l];
}

- (int)addViewerWithNSString:(NSString *)name
          withRAREActionLink:(RAREActionLink *)link {
  RAREaStackPaneViewer_StackEntry *e = [[RAREaStackPaneViewer_StackEntry alloc] initWithRAREaStackPaneViewer:self withNSString:name withRAREActionLink:link];
  [((RAREUTIdentityArrayList *) nil_chk(entries_)) addWithId:e];
  if (name != nil) {
    (void) [((JavaUtilHashMap *) nil_chk(self->namedEntries_)) putWithId:name withId:e];
  }
  return [entries_ size] - 1;
}

- (int)addViewerWithNSString:(NSString *)name
             withRAREiViewer:(id<RAREiViewer>)v {
  RAREaStackPaneViewer_StackEntry *e = [[RAREaStackPaneViewer_StackEntry alloc] initWithRAREaStackPaneViewer:self withNSString:name withRAREiViewer:v];
  [((RAREUTIdentityArrayList *) nil_chk(entries_)) addWithId:e];
  if (name != nil) {
    (void) [((JavaUtilHashMap *) nil_chk(self->namedEntries_)) putWithId:name withId:e];
  }
  return [entries_ size] - 1;
}

- (void)addViewerWithInt:(int)index
            withNSString:(NSString *)name
      withRAREActionLink:(RAREActionLink *)link {
  RAREaStackPaneViewer_StackEntry *e = [[RAREaStackPaneViewer_StackEntry alloc] initWithRAREaStackPaneViewer:self withNSString:name withRAREActionLink:link];
  id<RAREiViewer> v = [self getActiveViewer];
  [((RAREUTIdentityArrayList *) nil_chk(entries_)) addWithInt:index withId:e];
  if (v != nil) {
    viewerIndex_ = [self indexOfWithId:v];
  }
  if (name != nil) {
    (void) [((JavaUtilHashMap *) nil_chk(self->namedEntries_)) putWithId:name withId:e];
  }
}

- (void)addViewerWithInt:(int)index
            withNSString:(NSString *)name
         withRAREiViewer:(id<RAREiViewer>)v {
  RAREaStackPaneViewer_StackEntry *e = [[RAREaStackPaneViewer_StackEntry alloc] initWithRAREaStackPaneViewer:self withNSString:name withRAREiViewer:v];
  id<RAREiViewer> av = [self getActiveViewer];
  [((RAREUTIdentityArrayList *) nil_chk(entries_)) addWithInt:index withId:e];
  if (v != nil) {
    viewerIndex_ = [self indexOfWithId:av];
  }
  if (name != nil) {
    (void) [((JavaUtilHashMap *) nil_chk(self->namedEntries_)) putWithId:name withId:e];
  }
}

- (void)clearContents {
  int len = [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
  for (int i = 0; i < len; i++) {
    [((RAREaStackPaneViewer_StackEntry *) nil_chk([entries_ getWithInt:i])) clearContents];
  }
  (void) [((RAREUITarget *) nil_chk(paneTarget_)) removeViewer];
}

- (void)swapWithInt:(int)index1
            withInt:(int)index2 {
  RAREaStackPaneViewer_StackEntry *e1 = [((RAREUTIdentityArrayList *) nil_chk(entries_)) getWithInt:index1];
  RAREaStackPaneViewer_StackEntry *e2 = [entries_ getWithInt:index2];
  ;
  (void) [entries_ setWithInt:index1 withId:e2];
  (void) [entries_ setWithInt:index2 withId:e1];
  if (viewerIndex_ == index1) {
    viewerIndex_ = index2;
  }
  else if (viewerIndex_ == index2) {
    viewerIndex_ = index1;
  }
}

- (void)configureWithRARESPOTViewer:(RARESPOTViewer *)vcfg {
  [self configureExWithRARESPOTStackPane:(RARESPOTStackPane *) check_class_cast(vcfg, [RARESPOTStackPane class])];
  [self fireConfigureEventWithRARESPOTWidget:vcfg withNSString:[RAREiConstants EVENT_CONFIGURE]];
}

- (void)handleActionLinkWithRAREActionLink:(RAREActionLink *)link
                               withBoolean:(BOOL)deferred {
  id<RAREiViewer> v = [((RAREUITarget *) nil_chk(paneTarget_)) getViewer];
  if (v != nil) {
    [v setDataLinkWithRAREActionLink:link];
  }
}

- (int)indexOfWithId:(id)viewer {
  int len = [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
  for (int i = 0; i < len; i++) {
    id<RAREiViewer> fv = ((RAREaStackPaneViewer_StackEntry *) nil_chk([entries_ getWithInt:i]))->theViewer_;
    if (viewer == fv) {
      return i;
    }
  }
  return -1;
}

- (void)onConfigurationChangedWithBoolean:(BOOL)reset {
  int len = [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
  RAREaStackPaneViewer_StackEntry *e = nil;
  for (int i = 0; i < len; i++) {
    e = [entries_ getWithInt:i];
    if (((RAREaStackPaneViewer_StackEntry *) nil_chk(e))->httpLink_ != nil) {
    }
    if (e->theViewer_ != nil) {
      [e->theViewer_ onConfigurationChangedWithBoolean:reset];
    }
  }
  [self handleViewerConfigurationChangedWithBoolean:reset];
}

- (void)register__ {
  [self callaViewerRegister];
  id<RAREiWindowManager> wm = ([self getAppContext] == nil) ? nil : [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowManager];
  if ((wm != nil) && (paneTarget_ != nil) && ([wm getTargetWithNSString:[paneTarget_ getName]] != paneTarget_)) {
    id<RAREiViewer> v = [paneTarget_ getViewer];
    if (v != nil) {
      [v setParentWithRAREiContainer:self];
      [v targetAcquiredWithRAREiTarget:paneTarget_];
    }
  }
  [self registerWidgets];
}

- (void)reloadWithBoolean:(BOOL)context {
  wasReset_ = NO;
  if (!context) {
    int len = [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
    [((RAREUITarget *) nil_chk(paneTarget_)) reloadViewer];
    for (int i = 0; i < len; i++) {
      if (i != viewerIndex_) {
        [((RAREaStackPaneViewer_StackEntry *) nil_chk([entries_ getWithInt:i])) reset];
      }
    }
  }
  else {
    [super reloadWithBoolean:NO];
  }
}

- (void)reloadWithInt:(int)index {
  int len = [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
  if (index >= len) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"%@>=%@", [NSString valueOfInt:index], [NSString valueOfInt:len]]];
  }
  if (index < 0) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"%@<0", [NSString valueOfInt:index]]];
  }
  RAREaStackPaneViewer_StackEntry *e = [entries_ getWithInt:index];
  if (((RAREaStackPaneViewer_StackEntry *) nil_chk(e))->theViewer_ == nil) {
    (void) [e getViewerWithRAREiFunctionCallback:nil];
  }
  else {
    [((id<RAREiViewer>) nil_chk([e getViewerWithRAREiFunctionCallback:nil])) reloadWithBoolean:NO];
  }
}

- (void)reloadWithNSString:(NSString *)name {
  RAREaStackPaneViewer_StackEntry *e = [((JavaUtilHashMap *) nil_chk(namedEntries_)) getWithId:name];
  if (e != nil) {
    if (e->theViewer_ == nil) {
      (void) [e getViewerWithRAREiFunctionCallback:nil];
    }
    else {
      [((id<RAREiViewer>) nil_chk([e getViewerWithRAREiFunctionCallback:nil])) reloadWithBoolean:NO];
    }
  }
}

- (void)removeAllViewersWithBoolean:(BOOL)disposeViewers {
  int len = [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
  id<RAREiViewer> v = [((RAREUITarget *) nil_chk(paneTarget_)) removeViewer];
  if ((v != nil) && disposeViewers) {
    [v dispose];
  }
  for (int i = 0; i < len; i++) {
    v = ((RAREaStackPaneViewer_StackEntry *) nil_chk([entries_ getWithInt:i]))->theViewer_;
    if ((v != nil) && disposeViewers) {
      [v dispose];
    }
  }
  [entries_ clear];
  viewerIndex_ = -1;
  [((JavaUtilHashMap *) nil_chk(namedEntries_)) clear];
}

- (void)removeChangeListenerWithRAREiChangeListener:(id<RAREiChangeListener>)l {
  [((RAREEventListenerList *) nil_chk(listenerList_)) removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiChangeListener)] withId:l];
}

- (id<RAREiViewer>)removeViewerWithInt:(int)index {
  int len = [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
  RAREaStackPaneViewer_StackEntry *e = nil;
  if ((index > -1) && (index < len)) {
    e = [entries_ removeWithInt:index];
    if (e != nil) {
      NSString *name = [e getName];
      if (name != nil) {
        (void) [((JavaUtilHashMap *) nil_chk(namedEntries_)) removeWithId:[e getName]];
      }
    }
  }
  if (e != nil) {
    if (reloadOnActivation_) {
      [e reset];
    }
    return [self viewerRemovalCheckWithRAREiViewer:e->theViewer_];
  }
  return nil;
}

- (id<RAREiViewer>)removeViewerWithNSString:(NSString *)name {
  RAREaStackPaneViewer_StackEntry *e = [((JavaUtilHashMap *) nil_chk(namedEntries_)) removeWithId:name];
  if (e != nil) {
    return [self removeViewerWithInt:[((RAREUTIdentityArrayList *) nil_chk(entries_)) indexOfWithId:e]];
  }
  return nil;
}

- (BOOL)requestFocus {
  if ([self isDesignMode]) {
    return YES;
  }
  id<RAREiViewer> v = [((RAREUITarget *) nil_chk(paneTarget_)) getViewer];
  if (v != nil) {
    return [v requestFocus];
  }
  return [super requestFocus];
}

- (void)switchToWithInt:(int)index {
  [self switchToWithInt:index withRAREiFunctionCallback:nil];
}

- (void)switchToWithNSString:(NSString *)name {
  [self switchToWithNSString:name withRAREiFunctionCallback:nil];
}

- (void)switchToWithInt:(int)index
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  int len = [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
  if (index >= len) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"%@>=%@", [NSString valueOfInt:index], [NSString valueOfInt:len]]];
  }
  if (index < 0) {
    viewerIndex_ = -1;
    (void) [((RAREUITarget *) nil_chk(paneTarget_)) removeViewer];
    [self fireChangeEvent];
    if (cb != nil) {
      [cb finishedWithBoolean:NO withId:nil];
    }
  }
  else {
    [self switchToWithInt:index withRAREaStackPaneViewer_StackEntry:[entries_ getWithInt:index] withRAREiFunctionCallback:cb];
  }
}

- (void)switchToWithNSString:(NSString *)name
   withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  RAREaStackPaneViewer_StackEntry *e = [((JavaUtilHashMap *) nil_chk(namedEntries_)) getWithId:name];
  if (e == nil) {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:[NSString stringWithFormat:@"No such viewer: %@", name]];
  }
  [self switchToWithInt:-1 withRAREaStackPaneViewer_StackEntry:e withRAREiFunctionCallback:cb];
}

- (void)unregisterWithBoolean:(BOOL)disposing {
  [super unregisterWithBoolean:disposing];
  if ([self isDisposed]) {
    return;
  }
  if (paneTarget_ != nil) {
    id<RAREiWindowManager> wm = ([self getAppContext] == nil) ? nil : [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowManager];
    if (wm != nil) {
      id<RAREiViewer> v = [paneTarget_ getViewer];
      if (v != nil) {
        [v targetLostWithRAREiTarget:paneTarget_];
        [v setParentWithRAREiContainer:nil];
      }
    }
  }
}

- (RARERenderableDataItem *)setWithInt:(int)index
                                withId:(RARERenderableDataItem *)element {
  if (!([element conformsToProtocol: @protocol(RAREiViewer)]) && (element != nil)) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"element must be a viewer"];
  }
  return (RARERenderableDataItem *) check_class_cast([self setViewerWithInt:index withRAREiViewer:(id<RAREiViewer>) check_protocol_cast(element, @protocol(RAREiViewer))], [RARERenderableDataItem class]);
}

- (void)setSelectedIndexWithInt:(int)index {
  [self switchToWithInt:index];
}

- (void)setTransitionAnimatorWithRAREiTransitionAnimator:(id<RAREiTransitionAnimator>)ta {
  transitionAnimator_ = ta;
  if (ta != nil) {
    [ta setOutgoingPersistsWithBoolean:YES];
  }
}

- (void)setTransitionAnimatorWithNSString:(NSString *)inAnimation {
  id<RAREiPlatformAnimator> ia = [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) createAnimatorWithNSString:inAnimation];
  if (ia == nil) {
    [RAREPlatform debugLogWithNSString:[NSString stringWithFormat:@"Unknown annimation:%@", ia]];
    return;
  }
  [self setTransitionAnimatorWithRAREiTransitionAnimator:[[RARETransitionAnimator alloc] initWithRAREiPlatformAnimator:ia withRAREiPlatformAnimator:nil]];
}

- (id<RAREiViewer>)setViewerWithInt:(int)index
                    withRAREiViewer:(id<RAREiViewer>)v {
  if (index == [((RAREUTIdentityArrayList *) nil_chk(entries_)) size]) {
    [self addViewerWithNSString:nil withRAREiViewer:v];
    return nil;
  }
  RAREaStackPaneViewer_StackEntry *e = [entries_ getWithInt:index];
  id<RAREiViewer> ov = ((RAREaStackPaneViewer_StackEntry *) nil_chk(e))->theViewer_;
  e->theViewer_ = v;
  if (index == viewerIndex_) {
    (void) [((RAREUITarget *) nil_chk(paneTarget_)) setViewerWithRAREiViewer:v];
  }
  return ov;
}

- (RARERenderableDataItem *)getWithInt:(int)index {
  id<RAREiViewer> v = [self getViewerWithInt:index];
  if ([(id) v isKindOfClass:[RARERenderableDataItem class]]) {
    return (RARERenderableDataItem *) check_class_cast(v, [RARERenderableDataItem class]);
  }
  return nil;
}

- (id<RAREiViewer>)getActiveViewer {
  return (paneTarget_ == nil) ? nil : [paneTarget_ getViewer];
}

- (id<RAREiViewer>)getActiveViewerWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if ((changeIndex_ < 0) || (changeIndex_ >= [self size]) || (changeIndex_ == viewerIndex_)) {
    return [self getActiveViewer];
  }
  RAREaStackPaneViewer_StackEntry *e = [((RAREUTIdentityArrayList *) nil_chk(entries_)) getWithInt:changeIndex_];
  return [((RAREaStackPaneViewer_StackEntry *) nil_chk(e)) getViewerWithRAREiFunctionCallback:cb];
}

- (NSString *)getActiveViewerAlias {
  return (viewerIndex_ == -1) ? nil : [((RAREaStackPaneViewer_StackEntry *) nil_chk([((RAREUTIdentityArrayList *) nil_chk(entries_)) getWithInt:viewerIndex_])) getName];
}

- (NSString *)getActiveViewerHREF {
  RAREActionLink *l = (viewerIndex_ == -1) ? nil : ((RAREaStackPaneViewer_StackEntry *) nil_chk([((RAREUTIdentityArrayList *) nil_chk(entries_)) getWithInt:viewerIndex_]))->httpLink_;
  @try {
    return (l == nil) ? nil : [l getStringURLWithRAREiWidget:self];
  }
  @catch (JavaNetMalformedURLException *e) {
    [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
    return nil;
  }
}

- (int)getActiveViewerIndex {
  return viewerIndex_;
}

- (int)getEntryCount {
  return [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
}

- (int)size {
  return [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
}

- (id)getNamedItemWithNSString:(NSString *)name {
  RAREaStackPaneViewer_StackEntry *e = [((JavaUtilHashMap *) nil_chk(namedEntries_)) getWithId:name];
  return (e == nil) ? [super getNamedItemWithNSString:name] : ((id) [e getViewerWithRAREiFunctionCallback:nil]);
}

- (int)getSelectedIndex {
  return [self getActiveViewerIndex];
}

- (id)getSelection {
  return [((RAREUITarget *) nil_chk(paneTarget_)) getViewer];
}

- (id<RAREiTransitionAnimator>)getTransitionAnimator {
  return transitionAnimator_;
}

- (id<RAREiViewer>)getViewerWithInt:(int)index {
  int len = [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
  if (index >= len) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"%@>=%@", [NSString valueOfInt:index], [NSString valueOfInt:len]]];
  }
  if (index < 0) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"%@<0", [NSString valueOfInt:index]]];
  }
  return [((RAREaStackPaneViewer_StackEntry *) nil_chk([entries_ getWithInt:index])) getViewerWithRAREiFunctionCallback:nil];
}

- (id<RAREiViewer>)getViewerWithNSString:(NSString *)name {
  RAREaStackPaneViewer_StackEntry *e = [((JavaUtilHashMap *) nil_chk(namedEntries_)) getWithId:name];
  if (e != nil) {
    return [e getViewerWithRAREiFunctionCallback:nil];
  }
  return nil;
}

- (BOOL)isViewerLoadedWithNSString:(NSString *)name {
  RAREaStackPaneViewer_StackEntry *e = [((JavaUtilHashMap *) nil_chk(namedEntries_)) getWithId:name];
  return (e == nil) ? NO : e->theViewer_ != nil;
}

- (BOOL)isViewerLoadedWithInt:(int)index {
  int len = [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
  if (index >= len) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"%@>=%@", [NSString valueOfInt:index], [NSString valueOfInt:len]]];
  }
  if (index < 0) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"%@<0", [NSString valueOfInt:index]]];
  }
  RAREaStackPaneViewer_StackEntry *e = [entries_ getWithInt:index];
  return (e == nil) ? NO : e->theViewer_ != nil;
}

- (id<RAREiViewer>)getViewerWithInt:(int)index
          withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if (cb == nil) {
    @throw [[JavaLangNullPointerException alloc] initWithNSString:@"callback cannot be null"];
  }
  RAREaStackPaneViewer_StackEntry *e = [((RAREUTIdentityArrayList *) nil_chk(entries_)) getWithInt:index];
  return [((RAREaStackPaneViewer_StackEntry *) nil_chk(e)) getViewerWithRAREiFunctionCallback:cb];
}

- (id<RAREiViewer>)getViewerWithNSString:(NSString *)name
               withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if (cb == nil) {
    @throw [[JavaLangNullPointerException alloc] initWithNSString:@"callback cannot be null"];
  }
  RAREaStackPaneViewer_StackEntry *e = [((JavaUtilHashMap *) nil_chk(namedEntries_)) getWithId:name];
  if (e == nil) {
    @throw [[JavaUtilNoSuchElementException alloc] initWithNSString:name];
  }
  return [((RAREaStackPaneViewer_StackEntry *) nil_chk(e)) getViewerWithRAREiFunctionCallback:cb];
}

- (int)getWidgetCount {
  int cnt = 0;
  for (RAREaStackPaneViewer_StackEntry * __strong e in nil_chk(entries_)) {
    if (((RAREaStackPaneViewer_StackEntry *) nil_chk(e))->theViewer_ != nil) {
      cnt++;
    }
  }
  return cnt;
}

- (void)clearConfigurationWithBoolean:(BOOL)dispose {
  if (entries_ != nil) {
    if (paneTarget_ != nil) {
      [paneTarget_ disposeWithBoolean:dispose];
    }
    int len = [entries_ size];
    for (int i = 0; i < len; i++) {
      [((RAREaStackPaneViewer_StackEntry *) nil_chk([entries_ getWithInt:i])) disposeWithBoolean:dispose];
    }
    [entries_ clear];
  }
  if (namedEntries_ != nil) {
    [namedEntries_ clear];
  }
  if (dispose) {
    if (listenerList_ != nil) {
      [listenerList_ clear];
    }
    changeEvent_ = nil;
    listenerList_ = nil;
    namedEntries_ = nil;
    entries_ = nil;
    paneTarget_ = nil;
    transitionAnimator_ = nil;
    orientingAnimation_ = nil;
  }
  switchToCallback_ = nil;
  [super clearConfigurationWithBoolean:YES];
}

- (void)configureExWithRARESPOTStackPane:(RARESPOTStackPane *)cfg {
  formComponent_ = dataComponent_ = [self createPanel];
  [self configureExWithRARESPOTViewer:cfg withBoolean:YES withBoolean:NO withBoolean:YES];
  actAsFormViewer_ = [((SPOTBoolean *) nil_chk(((RARESPOTStackPane *) nil_chk(cfg))->actAsFormViewer_)) booleanValue];
  reloadOnActivation_ = [((SPOTBoolean *) nil_chk(cfg->reloadOnActivation_)) booleanValue];
  NSString *name = [self getName];
  if ((name != nil) && ![name hasPrefix:@"$"]) {
    name = [NSString stringWithFormat:@"%@_%d", name, (int) [self hash]];
  }
  paneTarget_ = [[RAREaStackPaneViewer_Target alloc] initWithRAREaStackPaneViewer:self withRAREiPlatformAppContext:[self getAppContext] withNSString:name withRAREiParentComponent:(id<RAREiParentComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiParentComponent))];
  [self createViewerEntriesWithRARESPOTStackPane:cfg];
  if (![((SPOTPrintableString *) nil_chk(cfg->bgColor_)) spot_valueWasSet]) {
    [((id<RAREiPlatformComponent>) nil_chk(dataComponent_)) setOpaqueWithBoolean:NO];
  }
  RAREaWidgetListener *l = [self getWidgetListener];
  if (l != nil) {
    [self addChangeListenerWithRAREiChangeListener:l];
  }
  if (![self isDesignMode] && ([((SPOTPrintableString *) nil_chk(cfg->transitionAnimator_)) getValue] != nil)) {
    id<RAREiTransitionAnimator> ta = [RAREaAnimator createTransitionAnimatorWithRAREiWidget:self withNSString:[cfg->transitionAnimator_ getValue] withJavaUtilMap:[cfg->transitionAnimator_ spot_getAttributesEx]];
    [self setTransitionAnimatorWithRAREiTransitionAnimator:ta];
  }
  int n = [((SPOTInteger *) nil_chk(cfg->selectedIndex_)) intValue];
  if ((n > -1) && (n < [((RAREUTIdentityArrayList *) nil_chk(entries_)) size])) {
    [self switchToWithInt:n];
  }
}

- (id<RAREiPlatformComponent>)createPanel {
  return [[RAREContainerPanel alloc] init];
}

- (void)createViewerEntriesWithRARESPOTStackPane:(RARESPOTStackPane *)cfg {
  int i;
  int len;
  RAREaStackPaneViewer_StackEntry *e;
  SPOTSet *set;
  NSString *name;
  set = [((RARESPOTStackPane *) nil_chk(cfg)) getViewers];
  len = (set == nil) ? 0 : [set getCount];
  for (i = 0; i < len; i++) {
    RARESPOTViewer *v = (RARESPOTViewer *) check_class_cast([((SPOTSet *) nil_chk(set)) getExWithInt:i], [RARESPOTViewer class]);
    name = [((SPOTPrintableString *) nil_chk(((RARESPOTViewer *) nil_chk(v))->name_)) getValue];
    e = [[RAREaStackPaneViewer_StackEntry alloc] initWithRAREaStackPaneViewer:self withNSString:name withRAREiViewer:(id<RAREiViewer>) check_protocol_cast([self createWidgetWithRARESPOTWidget:v], @protocol(RAREiViewer))];
    [((RAREUTIdentityArrayList *) nil_chk(entries_)) addWithId:e];
    if (name != nil) {
      (void) [((JavaUtilHashMap *) nil_chk(namedEntries_)) putWithId:name withId:e];
    }
  }
  set = [cfg getViewerURLs];
  SPOTPrintableString *aURL;
  len = (set == nil) ? 0 : [set getCount];
  for (i = 0; i < len; i++) {
    aURL = (SPOTPrintableString *) check_class_cast([((SPOTSet *) nil_chk(set)) getExWithInt:i], [SPOTPrintableString class]);
    RAREActionLink *link = [RAREActionLink getActionLinkWithRAREiWidget:self withSPOTPrintableString:aURL withInt:0];
    name = [((SPOTPrintableString *) nil_chk(aURL)) spot_getAttributeWithNSString:@"name"];
    e = [[RAREaStackPaneViewer_StackEntry alloc] initWithRAREaStackPaneViewer:self withNSString:name withRAREActionLink:link];
    [((RAREUTIdentityArrayList *) nil_chk(entries_)) addWithId:e];
    if (name != nil) {
      (void) [((JavaUtilHashMap *) nil_chk(namedEntries_)) putWithId:name withId:e];
    }
  }
}

- (void)fireChangeEvent {
  IOSObjectArray *listeners = [((RAREEventListenerList *) nil_chk(listenerList_)) getListenerList];
  for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
    if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiChangeListener)]) {
      [((id<RAREiChangeListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiChangeListener))) stateChangedWithJavaUtilEventObject:changeEvent_];
    }
  }
}

- (void)switchToWithInt:(int)index
withRAREaStackPaneViewer_StackEntry:(RAREaStackPaneViewer_StackEntry *)e
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  int idx = (index == -1) ? [((RAREUTIdentityArrayList *) nil_chk(entries_)) indexOfWithId:e] : index;
  id<RAREiFunctionCallback> scb = [[RAREaStackPaneViewer_$1 alloc] initWithRAREaStackPaneViewer:self withInt:idx withRAREaStackPaneViewer_StackEntry:e withRAREiFunctionCallback:cb];
  changeIndex_ = idx;
  switchToCallback_ = scb;
  id<RAREiViewer> v = [((RAREaStackPaneViewer_StackEntry *) nil_chk(e)) getViewerWithRAREiFunctionCallback:scb];
  if (v == nil) {
    if (cb != nil) {
      [cb finishedWithBoolean:NO withId:nil];
    }
    return;
  }
  switchToCallback_ = nil;
  changeIndex_ = -1;
  if ([self getActiveViewer] == v) {
    return;
  }
  [self switchToExWithInt:idx withRAREaStackPaneViewer_StackEntry:e withRAREiFunctionCallback:cb];
}

- (void)switchToExWithInt:(int)index
withRAREaStackPaneViewer_StackEntry:(RAREaStackPaneViewer_StackEntry *)e
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  changeIndex_ = -1;
  id<RAREiViewer> v = [((RAREaStackPaneViewer_StackEntry *) nil_chk(e)) getViewerWithRAREiFunctionCallback:nil];
  id<RAREiTransitionAnimator> ta = (viewerIndex_ == -1) ? nil : transitionAnimator_;
  @try {
    if ([self getActiveViewer] == v) {
      ta = nil;
      cb = nil;
      return;
    }
    RAREaStackPaneViewer_StackEntry *oe = (viewerIndex_ < 0) ? nil : [((RAREUTIdentityArrayList *) nil_chk(entries_)) getWithInt:viewerIndex_];
    index = [((RAREUTIdentityArrayList *) nil_chk(entries_)) indexOfWithId:e];
    if (index >= [entries_ size]) {
      return;
    }
    [((RAREUITarget *) nil_chk(paneTarget_)) setTransitionAnimatorWithRAREiTransitionAnimator:ta];
    if (ta != nil) {
      if ([((id<RAREiPlatformAnimator>) nil_chk([ta getInAnimator])) isAutoOrient]) {
        [((id<RAREiPlatformAnimator>) nil_chk([ta getInAnimator])) setDirectionWithRAREiAnimator_DirectionEnum:(viewerIndex_ > index) ? [RAREiAnimator_DirectionEnum BACKWARD] : [RAREiAnimator_DirectionEnum FORWARD]];
      }
      if (([ta getOutAnimator] != nil) && [((id<RAREiPlatformAnimator>) nil_chk([ta getOutAnimator])) isAutoOrient]) {
        [((id<RAREiPlatformAnimator>) nil_chk([ta getOutAnimator])) setDirectionWithRAREiAnimator_DirectionEnum:(viewerIndex_ > index) ? [RAREiAnimator_DirectionEnum BACKWARD] : [RAREiAnimator_DirectionEnum FORWARD]];
      }
      [ta setCallbackWithRAREiFunctionCallback:cb];
    }
    viewerIndex_ = index;
    [((id<RAREiViewer>) nil_chk(v)) setParentWithRAREiContainer:self];
    [self setViewerAndFireEventWithRAREiViewer:v withRAREaStackPaneViewer_StackEntry:oe];
  }
  @finally {
    if ((cb != nil) && (ta == nil)) {
      [cb finishedWithBoolean:NO withId:v];
    }
  }
}

- (id<RAREiViewer>)viewerRemovalCheckWithRAREiViewer:(id<RAREiViewer>)v {
  if ((v != nil) && (v == [self getActiveViewer])) {
    viewerIndex_ = -1;
    (void) [((RAREUITarget *) nil_chk(paneTarget_)) removeViewer];
  }
  else {
    id<RAREiViewer> vv = [((RAREUITarget *) nil_chk(paneTarget_)) getViewer];
    if (vv != nil) {
      int len = [((RAREUTIdentityArrayList *) nil_chk(entries_)) size];
      for (int i = 0; i < len; i++) {
        if (((RAREaStackPaneViewer_StackEntry *) nil_chk([entries_ getWithInt:i]))->theViewer_ == vv) {
          viewerIndex_ = i;
          break;
        }
      }
    }
    else {
      viewerIndex_ = -1;
    }
  }
  return v;
}

- (void)setViewerAndFireEventWithRAREiViewer:(id<RAREiViewer>)v
         withRAREaStackPaneViewer_StackEntry:(RAREaStackPaneViewer_StackEntry *)oldEntry {
  [((RAREaStackPaneViewer_Target *) check_class_cast(paneTarget_, [RAREaStackPaneViewer_Target class])) setViewerAndFireEventWithRAREiViewer:v withRAREaStackPaneViewer_StackEntry:oldEntry];
}

- (id<JavaUtilList>)getWidgetListEx {
  [((RAREUTIdentityArrayList *) nil_chk(widgetList_)) clear];
  if (entries_ != nil) {
    for (RAREaStackPaneViewer_StackEntry * __strong e in entries_) {
      if (((RAREaStackPaneViewer_StackEntry *) nil_chk(e))->theViewer_ != nil) {
        [widgetList_ addWithId:e->theViewer_];
      }
    }
  }
  return widgetList_;
}

- (void)copyAllFieldsTo:(RAREaStackPaneViewer *)other {
  [super copyAllFieldsTo:other];
  other->changeEvent_ = changeEvent_;
  other->changeIndex_ = changeIndex_;
  other->entries_ = entries_;
  other->listenerList_ = listenerList_;
  other->namedEntries_ = namedEntries_;
  other->orientingAnimation_ = orientingAnimation_;
  other->paneTarget_ = paneTarget_;
  other->reloadOnActivation_ = reloadOnActivation_;
  other->switchToCallback_ = switchToCallback_;
  other->transitionAnimator_ = transitionAnimator_;
  other->viewerIndex_ = viewerIndex_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "removeViewerWithInt:", NULL, "LRAREiViewer", 0x1, NULL },
    { "removeViewerWithNSString:", NULL, "LRAREiViewer", 0x1, NULL },
    { "requestFocus", NULL, "Z", 0x1, NULL },
    { "setWithInt:withRARERenderableDataItem:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "setViewerWithInt:withRAREiViewer:", NULL, "LRAREiViewer", 0x1, NULL },
    { "getWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getActiveViewer", NULL, "LRAREiViewer", 0x1, NULL },
    { "getActiveViewerWithRAREiFunctionCallback:", NULL, "LRAREiViewer", 0x1, NULL },
    { "getActiveViewerAlias", NULL, "LNSString", 0x1, NULL },
    { "getActiveViewerHREF", NULL, "LNSString", 0x1, NULL },
    { "getNamedItemWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getSelection", NULL, "LNSObject", 0x1, NULL },
    { "getTransitionAnimator", NULL, "LRAREiTransitionAnimator", 0x1, NULL },
    { "getViewerWithInt:", NULL, "LRAREiViewer", 0x1, NULL },
    { "getViewerWithNSString:", NULL, "LRAREiViewer", 0x1, NULL },
    { "isViewerLoadedWithNSString:", NULL, "Z", 0x1, NULL },
    { "isViewerLoadedWithInt:", NULL, "Z", 0x1, NULL },
    { "getViewerWithInt:withRAREiFunctionCallback:", NULL, "LRAREiViewer", 0x1, NULL },
    { "getViewerWithNSString:withRAREiFunctionCallback:", NULL, "LRAREiViewer", 0x1, NULL },
    { "clearConfigurationWithBoolean:", NULL, "V", 0x4, NULL },
    { "configureExWithRARESPOTStackPane:", NULL, "V", 0x4, NULL },
    { "createPanel", NULL, "LRAREiPlatformComponent", 0x4, NULL },
    { "createViewerEntriesWithRARESPOTStackPane:", NULL, "V", 0x4, NULL },
    { "fireChangeEvent", NULL, "V", 0x4, NULL },
    { "switchToWithInt:withRAREaStackPaneViewer_StackEntry:withRAREiFunctionCallback:", NULL, "V", 0x4, NULL },
    { "switchToExWithInt:withRAREaStackPaneViewer_StackEntry:withRAREiFunctionCallback:", NULL, "V", 0x4, NULL },
    { "viewerRemovalCheckWithRAREiViewer:", NULL, "LRAREiViewer", 0x4, NULL },
    { "setViewerAndFireEventWithRAREiViewer:withRAREaStackPaneViewer_StackEntry:", NULL, "V", 0x4, NULL },
    { "getWidgetListEx", NULL, "LJavaUtilList", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "switchToCallback_", NULL, 0x4, "LRAREiFunctionCallback" },
    { "changeIndex_", NULL, 0x4, "I" },
    { "viewerIndex_", NULL, 0x4, "I" },
    { "namedEntries_", NULL, 0x4, "LJavaUtilHashMap" },
    { "entries_", NULL, 0x4, "LRAREUTIdentityArrayList" },
    { "paneTarget_", NULL, 0x4, "LRAREUITarget" },
    { "reloadOnActivation_", NULL, 0x4, "Z" },
    { "listenerList_", NULL, 0x4, "LRAREEventListenerList" },
    { "orientingAnimation_", NULL, 0x4, "LRAREiPlatformAnimator" },
    { "transitionAnimator_", NULL, 0x4, "LRAREiTransitionAnimator" },
  };
  static J2ObjcClassInfo _RAREaStackPaneViewer = { "aStackPaneViewer", "com.appnativa.rare.viewer", NULL, 0x401, 29, methods, 10, fields, 0, NULL};
  return &_RAREaStackPaneViewer;
}

@end
@implementation RAREaStackPaneViewer_StackEntry

- (id)initWithRAREaStackPaneViewer:(RAREaStackPaneViewer *)outer$
                      withNSString:(NSString *)name
                withRAREActionLink:(RAREActionLink *)link {
  this$0_ = outer$;
  if (self = [super init]) {
    self->entryName_ = name;
    httpLink_ = link;
  }
  return self;
}

- (id)initWithRAREaStackPaneViewer:(RAREaStackPaneViewer *)outer$
                      withNSString:(NSString *)name
                   withRAREiViewer:(id<RAREiViewer>)v {
  this$0_ = outer$;
  if (self = [super init]) {
    theViewer_ = v;
    self->entryName_ = name;
  }
  return self;
}

- (BOOL)reloadWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if (httpLink_ != nil) {
    if (![httpLink_ isDeferredWithRAREiWidget:this$0_]) {
      [self reloadExWithRAREiViewer:[((RAREWindowViewer *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([this$0_ getAppContext])) getWindowViewer])) createViewerWithRAREActionLink:httpLink_]];
      [httpLink_ setViewerConfigurationWithRARESPOTViewer:nil];
      return YES;
    }
    else {
      id<RAREViewerCreator_iCallback> mcb = [[RAREaStackPaneViewer_StackEntry_$1 alloc] initWithRAREaStackPaneViewer_StackEntry:self withRAREiFunctionCallback:cb];
      loading_ = YES;
      @try {
        (void) [RAREViewerCreator createViewerWithRAREiWidget:this$0_ withRAREActionLink:httpLink_ withRAREViewerCreator_iCallback:mcb];
      }
      @catch (JavaNetMalformedURLException *e1) {
        @throw [[RAREApplicationException alloc] initWithJavaLangThrowable:e1];
      }
      return NO;
    }
  }
  else {
    [self reloadExWithRAREiViewer:nil];
    return YES;
  }
}

- (void)clearContents {
  if (theViewer_ != nil) {
    [theViewer_ clearContents];
  }
}

- (void)disposeWithBoolean:(BOOL)dispose {
  if ((theViewer_ != nil) && dispose) {
    [theViewer_ dispose];
  }
}

- (void)reset {
  entryWasReset_ = YES;
  if (theViewer_ != nil) {
    [theViewer_ dispose];
    theViewer_ = nil;
  }
}

- (NSString *)getName {
  return entryName_;
}

- (id<RAREiViewer>)getViewerWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if ((entryWasReset_ || (theViewer_ == nil)) && !loading_) {
    entryWasReset_ = NO;
    if (![self reloadWithRAREiFunctionCallback:cb]) {
      return nil;
    }
  }
  else if (loading_ && (cb != this$0_->switchToCallback_)) {
    waitingCallback_ = cb;
  }
  if ((cb != nil) && (theViewer_ != nil)) {
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREaStackPaneViewer_StackEntry_$2 alloc] initWithRAREaStackPaneViewer_StackEntry:self withRAREiFunctionCallback:cb]];
  }
  return theViewer_;
}

- (void)loadCompletedWithRAREiWidget:(id<RAREiWidget>)context
               withJavaLangThrowable:(JavaLangThrowable *)error {
  if (showingCursor_) {
    showingCursor_ = NO;
    if (error != nil) {
      [((id<RAREiAsyncLoadStatusHandler>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getAppContext])) getAsyncLoadStatusHandler])) errorOccuredWithRAREiWidget:context withRAREActionLink:httpLink_ withJavaLangThrowable:error];
    }
    else {
      [((id<RAREiAsyncLoadStatusHandler>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getAppContext])) getAsyncLoadStatusHandler])) loadCompletedWithRAREiWidget:context withRAREActionLink:httpLink_];
    }
  }
}

- (void)loadStartedWithRAREiWidget:(id<RAREiWidget>)context {
  if (!showingCursor_) {
    showingCursor_ = YES;
    [((id<RAREiAsyncLoadStatusHandler>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getAppContext])) getAsyncLoadStatusHandler])) loadStartedWithRAREiWidget:context withRAREActionLink:httpLink_ withRAREUTiCancelable:nil];
  }
}

- (void)reloadExWithRAREiViewer:(id<RAREiViewer>)v {
  if (v != nil) {
    if (theViewer_ != nil) {
      [theViewer_ dispose];
    }
    theViewer_ = v;
    if (theViewer_ != nil) {
      NSString *name = [theViewer_ getName];
      if (name != nil) {
        (void) [this$0_ registerNamedItemWithNSString:name withId:theViewer_];
      }
    }
  }
  else if (theViewer_ != nil) {
    [theViewer_ reloadWithBoolean:YES];
  }
}

- (void)copyAllFieldsTo:(RAREaStackPaneViewer_StackEntry *)other {
  [super copyAllFieldsTo:other];
  other->entryName_ = entryName_;
  other->entryWasReset_ = entryWasReset_;
  other->httpLink_ = httpLink_;
  other->loading_ = loading_;
  other->showingCursor_ = showingCursor_;
  other->theViewer_ = theViewer_;
  other->waitingCallback_ = waitingCallback_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithRAREaStackPaneViewer:withNSString:withRAREActionLink:", NULL, NULL, 0x0, NULL },
    { "initWithRAREaStackPaneViewer:withNSString:withRAREiViewer:", NULL, NULL, 0x0, NULL },
    { "reloadWithRAREiFunctionCallback:", NULL, "Z", 0x1, NULL },
    { "clearContents", NULL, "V", 0x0, NULL },
    { "disposeWithBoolean:", NULL, "V", 0x0, NULL },
    { "reset", NULL, "V", 0x0, NULL },
    { "getName", NULL, "LNSString", 0x0, NULL },
    { "getViewerWithRAREiFunctionCallback:", NULL, "LRAREiViewer", 0x0, NULL },
    { "loadCompletedWithRAREiWidget:withJavaLangThrowable:", NULL, "V", 0x4, NULL },
    { "loadStartedWithRAREiWidget:", NULL, "V", 0x4, NULL },
    { "reloadExWithRAREiViewer:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaStackPaneViewer" },
    { "entryName_", NULL, 0x0, "LNSString" },
    { "httpLink_", NULL, 0x0, "LRAREActionLink" },
    { "loading_", NULL, 0x40, "Z" },
    { "showingCursor_", NULL, 0x0, "Z" },
    { "theViewer_", NULL, 0x0, "LRAREiViewer" },
    { "waitingCallback_", NULL, 0x0, "LRAREiFunctionCallback" },
  };
  static J2ObjcClassInfo _RAREaStackPaneViewer_StackEntry = { "StackEntry", "com.appnativa.rare.viewer", "aStackPaneViewer", 0x4, 11, methods, 7, fields, 0, NULL};
  return &_RAREaStackPaneViewer_StackEntry;
}

@end
@implementation RAREaStackPaneViewer_StackEntry_$1

- (void)viewerCreatedWithRAREiWidget:(id<RAREiWidget>)context
                  withRAREActionLink:(RAREActionLink *)link
                     withRAREiViewer:(id<RAREiViewer>)viewer {
  @try {
    [this$0_ reloadExWithRAREiViewer:viewer];
  }
  @finally {
    this$0_->loading_ = NO;
    [this$0_ loadCompletedWithRAREiWidget:context withJavaLangThrowable:nil];
    id<RAREiFunctionCallback> c = this$0_->this$0_->switchToCallback_;
    this$0_->this$0_->switchToCallback_ = nil;
    if ((c != nil) && (c != val$cb_)) {
      [c finishedWithBoolean:NO withId:viewer];
    }
    else {
      [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:NO withId:viewer];
    }
    c = this$0_->waitingCallback_;
    this$0_->waitingCallback_ = nil;
    if ((c != nil) && (c != val$cb_)) {
      [c finishedWithBoolean:NO withId:viewer];
    }
  }
}

- (void)errorHappenedWithRAREiWidget:(id<RAREiWidget>)context
                  withRAREActionLink:(RAREActionLink *)link
               withJavaLangException:(JavaLangException *)e {
  this$0_->loading_ = NO;
  [this$0_ loadCompletedWithRAREiWidget:context withJavaLangThrowable:e];
  [this$0_->this$0_ handleExceptionWithJavaLangThrowable:e];
}

- (void)configCreatedWithRAREiWidget:(id<RAREiWidget>)context
                  withRAREActionLink:(RAREActionLink *)link
                  withRARESPOTViewer:(RARESPOTViewer *)cfg {
}

- (void)startingOperationWithRAREiWidget:(id<RAREiWidget>)context
                      withRAREActionLink:(RAREActionLink *)link {
  [this$0_ loadStartedWithRAREiWidget:this$0_->this$0_];
}

- (id)initWithRAREaStackPaneViewer_StackEntry:(RAREaStackPaneViewer_StackEntry *)outer$
                    withRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$0 {
  this$0_ = outer$;
  val$cb_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaStackPaneViewer_StackEntry" },
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
  };
  static J2ObjcClassInfo _RAREaStackPaneViewer_StackEntry_$1 = { "$1", "com.appnativa.rare.viewer", "aStackPaneViewer$StackEntry", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_RAREaStackPaneViewer_StackEntry_$1;
}

@end
@implementation RAREaStackPaneViewer_StackEntry_$2

- (void)run {
  [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:NO withId:this$0_->theViewer_];
}

- (id)initWithRAREaStackPaneViewer_StackEntry:(RAREaStackPaneViewer_StackEntry *)outer$
                    withRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$0 {
  this$0_ = outer$;
  val$cb_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaStackPaneViewer_StackEntry" },
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
  };
  static J2ObjcClassInfo _RAREaStackPaneViewer_StackEntry_$2 = { "$2", "com.appnativa.rare.viewer", "aStackPaneViewer$StackEntry", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_RAREaStackPaneViewer_StackEntry_$2;
}

@end
@implementation RAREaStackPaneViewer_Target

- (id)initWithRAREaStackPaneViewer:(RAREaStackPaneViewer *)outer$
       withRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                      withNSString:(NSString *)name
          withRAREiParentComponent:(id<RAREiParentComponent>)container {
  this$0_ = outer$;
  return [super initWithRAREiPlatformAppContext:app withNSString:name withRAREiParentComponent:container withBoolean:NO];
}

- (void)disposeWithBoolean:(BOOL)disposeviewer {
  if (![self isDisposed]) {
    @try {
      id<RAREiViewer> v = [self removeViewer];
      if (v != nil) {
        if (disposeviewer || [v isAutoDispose]) {
          [v dispose];
        }
      }
    }
    @catch (JavaLangThrowable *e) {
    }
    [super disposeWithBoolean:NO];
  }
}

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (!canceled) {
    [this$0_ fireChangeEvent];
    if ((oldEntry_ != nil) && this$0_->reloadOnActivation_) {
      [oldEntry_ reset];
    }
  }
  oldEntry_ = nil;
}

- (void)setViewerAndFireEventWithRAREiViewer:(id<RAREiViewer>)v
         withRAREaStackPaneViewer_StackEntry:(RAREaStackPaneViewer_StackEntry *)oldEntry {
  self->oldEntry_ = oldEntry;
  [self setViewerWithRAREiViewer:v withRAREiTransitionAnimator:transitionAnimator_ withRAREiFunctionCallback:self];
}

- (void)copyAllFieldsTo:(RAREaStackPaneViewer_Target *)other {
  [super copyAllFieldsTo:other];
  other->oldEntry_ = oldEntry_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaStackPaneViewer" },
    { "oldEntry_", NULL, 0x0, "LRAREaStackPaneViewer_StackEntry" },
  };
  static J2ObjcClassInfo _RAREaStackPaneViewer_Target = { "Target", "com.appnativa.rare.viewer", "aStackPaneViewer", 0x4, 0, NULL, 2, fields, 0, NULL};
  return &_RAREaStackPaneViewer_Target;
}

@end
@implementation RAREaStackPaneViewer_$1

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [this$0_ switchToExWithInt:val$idx_ withRAREaStackPaneViewer_StackEntry:val$e_ withRAREiFunctionCallback:val$cb_];
}

- (id)initWithRAREaStackPaneViewer:(RAREaStackPaneViewer *)outer$
                           withInt:(int)capture$0
withRAREaStackPaneViewer_StackEntry:(RAREaStackPaneViewer_StackEntry *)capture$1
         withRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$2 {
  this$0_ = outer$;
  val$idx_ = capture$0;
  val$e_ = capture$1;
  val$cb_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaStackPaneViewer" },
    { "val$idx_", NULL, 0x1012, "I" },
    { "val$e_", NULL, 0x1012, "LRAREaStackPaneViewer_StackEntry" },
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
  };
  static J2ObjcClassInfo _RAREaStackPaneViewer_$1 = { "$1", "com.appnativa.rare.viewer", "aStackPaneViewer", 0x8000, 0, NULL, 4, fields, 0, NULL};
  return &_RAREaStackPaneViewer_$1;
}

@end
