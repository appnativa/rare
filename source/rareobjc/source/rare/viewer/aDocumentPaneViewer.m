//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/viewer/aDocumentPaneViewer.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSCharArray.h"
#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/FormHelper.h"
#include "com/appnativa/rare/spot/DocumentPane.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iSpeechEnabler.h"
#include "com/appnativa/rare/ui/text/iPlatformTextEditor.h"
#include "com/appnativa/rare/ui/text/iTextAttributes.h"
#include "com/appnativa/rare/ui/text/iTextEditor.h"
#include "com/appnativa/rare/viewer/aDocumentPaneViewer.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/util/Streams.h"
#include "java/io/IOException.h"
#include "java/io/Reader.h"
#include "java/io/Writer.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/net/URL.h"

@implementation RAREaDocumentPaneViewer

- (id)init {
  return [self initRAREaDocumentPaneViewerWithRAREiContainer:nil];
}

- (id)initRAREaDocumentPaneViewerWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    widgetType_ = [RAREiWidget_WidgetTypeEnum DocumentPane];
  }
  return self;
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  return [self initRAREaDocumentPaneViewerWithRAREiContainer:parent];
}

- (void)appendTextWithNSString:(NSString *)text {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) appendTextWithNSString:text];
}

- (void)boldText {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) boldText];
}

- (BOOL)canCut {
  return [super canCut] && [self isEditable];
}

- (BOOL)canDelete {
  return [super canDelete] && [self isEditable];
}

- (BOOL)canPaste {
  return [super canPaste] && [self isEditable];
}

- (void)clearContents {
  [super clearContents];
  [self setTextWithNSString:@"" withBoolean:NO];
}

- (void)configureWithRARESPOTViewer:(RARESPOTViewer *)vcfg {
  [self configureExWithRARESPOTDocumentPane:(RARESPOTDocumentPane *) check_class_cast(vcfg, [RARESPOTDocumentPane class])];
  [self fireConfigureEventWithRARESPOTWidget:vcfg withNSString:[RAREiConstants EVENT_CONFIGURE]];
  [self handleDataURLWithRARESPOTWidget:vcfg];
}

- (void)decreaseIndent {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) decreaseIndent];
}

- (void)dispose {
  [super dispose];
  textEditor_ = nil;
}

- (BOOL)editorHasEditingToolbar {
  return NO;
}

- (void)enlargeFont {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) enlargeFont];
}

- (void)handleActionLinkWithRAREActionLink:(RAREActionLink *)link
                               withBoolean:(BOOL)deferred {
  if ([self isDisposed]) {
    return;
  }
  if (!deferred) {
    [self startedLoading];
  }
  @try {
    sourceURL_ = nil;
    widgetDataLink_ = link;
    sourceURL_ = [((RAREActionLink *) nil_chk(link)) getURLWithRAREiWidget:self];
    activeLink_ = link;
    NSString *s = [link getContentType];
    if (s == nil) {
      s = @"";
    }
    htmlDocument_ = [((NSString *) nil_chk(s)) hasPrefix:[RAREiConstants HTML_MIME_TYPE]];
    NSString *data = [link getContentAsString];
    if ([RAREPlatform isUIThread]) {
      [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) setTextWithNSString:data withBoolean:htmlDocument_];
    }
    else {
      [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREaDocumentPaneViewer_$1 alloc] initWithRAREaDocumentPaneViewer:self withNSString:data]];
    }
  }
  @catch (JavaIoIOException *ex) {
    @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:ex];
  }
  @finally {
    activeLink_ = nil;
    [((RAREActionLink *) nil_chk(link)) close];
  }
}

- (void)handleReaderWithNSString:(NSString *)mimeType
                withJavaIoReader:(JavaIoReader *)reader {
  @try {
    NSString *s = (mimeType == nil) ? @"" : mimeType;
    htmlDocument_ = [s hasPrefix:[RAREiConstants HTML_MIME_TYPE]];
    [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) setTextWithNSString:[RAREUTStreams readerToStringWithJavaIoReader:reader] withBoolean:htmlDocument_];
  }
  @catch (JavaLangException *ex) {
    [self handleExceptionWithJavaLangThrowable:ex];
  }
}

- (void)increaseIndent {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) increaseIndent];
}

- (void)insertHTMLWithInt:(int)pos
             withNSString:(NSString *)html {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) insertHTMLWithInt:pos withNSString:html];
}

- (void)insertTextWithInt:(int)pos
             withNSString:(NSString *)text {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) insertTextWithInt:pos withNSString:text];
}

- (void)italicText {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) italicText];
}

- (void)newHTMLDocument {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)newPlainTextDocument {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)pasteTextWithNSString:(NSString *)text {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) pasteTextWithNSString:text];
}

- (void)selectWithInt:(int)beginIndex {
  [self selectWithInt:beginIndex withInt:[self getTextLength]];
}

- (void)selectWithInt:(int)beginIndex
              withInt:(int)endIndex {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) setSelectionWithInt:beginIndex withInt:endIndex];
}

- (void)selectAll {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) selectAll];
}

- (void)shrinkFont {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) shrinkFont];
}

- (void)strikeThroughText {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) strikeThroughText];
}

- (void)subscriptText {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) subscriptText];
}

- (void)superscriptText {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) superscriptText];
}

- (void)underlineText {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) underlineText];
}

- (void)writeHTTPContentWithBoolean:(BOOL)first
                   withJavaIoWriter:(JavaIoWriter *)writer
                       withNSString:(NSString *)boundary {
  @try {
    NSString *name = [self getName];
    NSString *text;
    NSString *type;
    int len = [self getTextLength];
    if ((name == nil) || ![self isEnabled] || (len == 0)) {
      return;
    }
    if (htmlDocument_) {
      type = @"text/html";
      text = [self getHTMLText];
    }
    else {
      type = @"text/plain";
      text = [self getPlainText];
    }
    [RAREFormHelper writeFieldHeaderWithBoolean:first withJavaIoWriter:writer withNSString:boundary withNSString:name withNSString:type];
    @try {
      [((JavaIoWriter *) nil_chk(writer)) writeWithNSString:text];
      [writer writeWithNSString:@"\x0d\n"];
    }
    @catch (JavaIoIOException *ex) {
      [self handleExceptionWithJavaLangThrowable:ex];
    }
  }
  @catch (JavaLangException *e) {
    @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:e];
  }
}

- (id)getHTTPFormValue {
  if (htmlDocument_) {
    return [self getHTMLText];
  }
  else {
    return [self getPlainText];
  }
}

- (void)setCaretPositionWithInt:(int)position {
  id<RAREiTextEditor> e = textEditor_;
  [((id<RAREiTextEditor>) nil_chk(e)) setCaretPositionWithInt:position];
}

- (void)setChangeEventsEnabledWithBoolean:(BOOL)enabled {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) setChangeEventsEnabledWithBoolean:enabled];
}

- (void)setEditableWithBoolean:(BOOL)editable {
  id<RAREiTextEditor> e = textEditor_;
  [((id<RAREiTextEditor>) nil_chk(e)) setEditableWithBoolean:editable];
}

- (void)setFollowHyperlinksWithBoolean:(BOOL)follow {
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) setFollowHyperlinksWithBoolean:follow];
}

- (void)setHTMLWithNSString:(NSString *)text {
  htmlDocument_ = YES;
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) setTextWithNSString:text withBoolean:YES];
}

- (void)setPlainTextWithNSString:(NSString *)text {
  [self setTextWithNSString:text withBoolean:NO];
}

- (void)setTextWithNSString:(NSString *)text {
  htmlDocument_ = NO;
  [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) setTextWithNSString:text withBoolean:NO];
}

- (void)setTextWithNSString:(NSString *)text
                withBoolean:(BOOL)html {
  if (html) {
    [self setHTMLWithNSString:text];
  }
  else {
    [self setTextWithNSString:text];
  }
}

- (void)setTextColorWithRAREUIColor:(RAREUIColor *)c {
  if (c != nil) {
    [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) setTextForegroundWithRAREUIColor:c];
  }
}

- (void)setTextFontFamilyWithNSString:(NSString *)family {
  if (family != nil) {
    [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) setTextFontFamilyWithNSString:family];
  }
}

- (void)setTextFontSizeWithInt:(int)size {
  if (size > 0) {
    [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) setTextFontSizeWithInt:size];
  }
}

- (void)setUnModified {
}

- (void)setValueWithId:(id)value {
  if ([value isKindOfClass:[JavaNetURL class]]) {
    [self setDataLinkWithRAREActionLink:[[RAREActionLink alloc] initWithJavaNetURL:(JavaNetURL *) check_class_cast(value, [JavaNetURL class]) withNSString:nil]];
    return;
  }
  NSString *s = @"";
  if ([value isKindOfClass:[NSString class]]) {
    s = (NSString *) check_class_cast(value, [NSString class]);
  }
  else if (value != nil) {
    s = [self toStringWithRAREiWidget:self withId:value withId:nil];
  }
  [self setTextWithNSString:s];
}

- (void)setWordWrapWithBoolean:(BOOL)wrap {
}

- (id<RAREiTextAttributes>)getAttributeSetWithInt:(int)pos
                                      withBoolean:(BOOL)paragraph {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiTextAttributes>)getAttributeSetAtCursorWithBoolean:(BOOL)paragraph {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiTextAttributes>)getAttributeSetForSelectionWithBoolean:(BOOL)paragraph {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getCaretPosition {
  id<RAREiTextEditor> e = textEditor_;
  int n = [((id<RAREiTextEditor>) nil_chk(e)) getSelectionStart];
  return (n == -1) ? 0 : n;
}

- (NSString *)getHTMLText {
  return [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) getHtmlText];
}

- (NSString *)getPlainText {
  return [self getText];
}

- (id)getSelection {
  id<RAREiTextEditor> e = textEditor_;
  int n = [((id<RAREiTextEditor>) nil_chk(e)) getSelectionStart];
  int p = [e getSelectionEnd];
  if ((n == -1) || (p == -1) || (n == p)) {
    return nil;
  }
  return [e getTextWithInt:n withInt:p];
}

- (NSString *)getText {
  return [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) getPlainText];
}

- (int)getTextLength {
  return [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) getTextLength];
}

- (id)getValue {
  return [self getText];
}

- (NSString *)getValueAsString {
  return [self getText];
}

- (JavaIoWriter *)getWriter {
  return [[RAREaDocumentPaneViewer_$2 alloc] initWithRAREaDocumentPaneViewer:self];
}

- (BOOL)isFollowHyperlinks {
  return [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) isFollowHyperlinks];
}

- (BOOL)isMultipartContent {
  return YES;
}

- (BOOL)isOverwriteMode {
  return NO;
}

- (BOOL)isPlainTextDocument {
  return !htmlDocument_;
}

- (BOOL)isWordWrap {
  return YES;
}

- (void)configureExWithRARESPOTDocumentPane:(RARESPOTDocumentPane *)cfg {
  selectAllAllowed_ = YES;
  deletingAllowed_ = YES;
  pastingAllowed_ = YES;
  copyingAllowed_ = YES;
  textEditor_ = [self createEditorWithRARESPOTDocumentPane:cfg];
  dataComponent_ = [((id<RAREiPlatformTextEditor>) nil_chk(textEditor_)) getComponent];
  [((id<RAREiPlatformComponent>) nil_chk(dataComponent_)) setForegroundWithRAREUIColor:[RAREUIColor BLACK]];
  [dataComponent_ setBackgroundWithRAREUIColor:[RAREUIColor WHITE]];
  formComponent_ = [textEditor_ getContainer];
  [self configureWithRARESPOTWidget:cfg withBoolean:YES withBoolean:YES withBoolean:YES withBoolean:YES];
  if (![((SPOTBoolean *) nil_chk(((RARESPOTDocumentPane *) nil_chk(cfg))->focusPainted_)) spot_hasValue] || ![cfg->focusPainted_ booleanValue]) {
    [((id<RAREiPlatformComponent>) nil_chk(formComponent_)) setFocusPaintedWithBoolean:YES];
  }
  id<RAREiSpeechEnabler> sp = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getSpeechEnabler];
  if ((sp != nil) && [((SPOTBoolean *) nil_chk(cfg->speechInputSupported_)) booleanValue]) {
    formComponent_ = (id<RAREiPlatformComponent>) check_protocol_cast([sp configureWithRAREiWidget:self withId:formComponent_ withRARESPOTWidget:cfg], @protocol(RAREiPlatformComponent));
  }
  if (![((SPOTBoolean *) nil_chk(cfg->editable_)) booleanValue]) {
    [self setEditableWithBoolean:NO];
  }
}

- (id<RAREiPlatformTextEditor>)createEditorWithRARESPOTDocumentPane:(RARESPOTDocumentPane *)cfg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)copyAllFieldsTo:(RAREaDocumentPaneViewer *)other {
  [super copyAllFieldsTo:other];
  other->htmlDocument_ = htmlDocument_;
  other->modified_ = modified_;
  other->textEditor_ = textEditor_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "canCut", NULL, "Z", 0x1, NULL },
    { "canDelete", NULL, "Z", 0x1, NULL },
    { "canPaste", NULL, "Z", 0x1, NULL },
    { "editorHasEditingToolbar", NULL, "Z", 0x1, NULL },
    { "newHTMLDocument", NULL, "V", 0x401, NULL },
    { "newPlainTextDocument", NULL, "V", 0x401, NULL },
    { "pasteTextWithNSString:", NULL, "V", 0x1, "JavaLangException" },
    { "getHTTPFormValue", NULL, "LNSObject", 0x1, NULL },
    { "getAttributeSetWithInt:withBoolean:", NULL, "LRAREiTextAttributes", 0x401, NULL },
    { "getAttributeSetAtCursorWithBoolean:", NULL, "LRAREiTextAttributes", 0x401, NULL },
    { "getAttributeSetForSelectionWithBoolean:", NULL, "LRAREiTextAttributes", 0x401, NULL },
    { "getHTMLText", NULL, "LNSString", 0x1, NULL },
    { "getPlainText", NULL, "LNSString", 0x1, NULL },
    { "getSelection", NULL, "LNSObject", 0x1, NULL },
    { "getText", NULL, "LNSString", 0x1, NULL },
    { "getValue", NULL, "LNSObject", 0x1, NULL },
    { "getValueAsString", NULL, "LNSString", 0x1, NULL },
    { "getWriter", NULL, "LJavaIoWriter", 0x1, NULL },
    { "isFollowHyperlinks", NULL, "Z", 0x1, NULL },
    { "isMultipartContent", NULL, "Z", 0x1, NULL },
    { "isOverwriteMode", NULL, "Z", 0x1, NULL },
    { "isPlainTextDocument", NULL, "Z", 0x1, NULL },
    { "isWordWrap", NULL, "Z", 0x1, NULL },
    { "configureExWithRARESPOTDocumentPane:", NULL, "V", 0x4, NULL },
    { "createEditorWithRARESPOTDocumentPane:", NULL, "LRAREiPlatformTextEditor", 0x404, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "htmlDocument_", NULL, 0x4, "Z" },
    { "modified_", NULL, 0x4, "Z" },
    { "textEditor_", NULL, 0x4, "LRAREiPlatformTextEditor" },
  };
  static J2ObjcClassInfo _RAREaDocumentPaneViewer = { "aDocumentPaneViewer", "com.appnativa.rare.viewer", NULL, 0x401, 25, methods, 3, fields, 0, NULL};
  return &_RAREaDocumentPaneViewer;
}

@end
@implementation RAREaDocumentPaneViewer_$1

- (void)run {
  if (![this$0_ isDisposed]) {
    [((id<RAREiPlatformTextEditor>) nil_chk(this$0_->textEditor_)) setTextWithNSString:val$data_ withBoolean:this$0_->htmlDocument_];
  }
}

- (id)initWithRAREaDocumentPaneViewer:(RAREaDocumentPaneViewer *)outer$
                         withNSString:(NSString *)capture$0 {
  this$0_ = outer$;
  val$data_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaDocumentPaneViewer" },
    { "val$data_", NULL, 0x1012, "LNSString" },
  };
  static J2ObjcClassInfo _RAREaDocumentPaneViewer_$1 = { "$1", "com.appnativa.rare.viewer", "aDocumentPaneViewer", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_RAREaDocumentPaneViewer_$1;
}

@end
@implementation RAREaDocumentPaneViewer_$2

- (void)writeWithCharArray:(IOSCharArray *)cbuf
                   withInt:(int)off
                   withInt:(int)len {
  if (this$0_->dataComponent_ != nil) {
    id<RAREiTextEditor> e = this$0_->textEditor_;
    if (e != nil) {
      @synchronized (this$0_) {
        [e appendTextWithNSString:[NSString stringWithCharacters:cbuf offset:off length:len]];
      }
    }
  }
}

- (void)flush {
}

- (void)close {
}

- (id)initWithRAREaDocumentPaneViewer:(RAREaDocumentPaneViewer *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "writeWithCharArray:withInt:withInt:", NULL, "V", 0x1, "JavaIoIOException" },
    { "flush", NULL, "V", 0x1, "JavaIoIOException" },
    { "close", NULL, "V", 0x1, "JavaIoIOException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaDocumentPaneViewer" },
  };
  static J2ObjcClassInfo _RAREaDocumentPaneViewer_$2 = { "$2", "com.appnativa.rare.viewer", "aDocumentPaneViewer", 0x8000, 3, methods, 1, fields, 0, NULL};
  return &_RAREaDocumentPaneViewer_$2;
}

@end
