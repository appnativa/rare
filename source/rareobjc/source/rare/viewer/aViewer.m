//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/viewer/aViewer.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iExceptionHandler.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/platform/aAppContext.h"
#include "com/appnativa/rare/platform/iConfigurationListener.h"
#include "com/appnativa/rare/scripting/WidgetContext.h"
#include "com/appnativa/rare/scripting/iScriptHandler.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/RenderType.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/aWidgetListener.h"
#include "com/appnativa/rare/ui/border/UIBalloonBorder.h"
#include "com/appnativa/rare/ui/dnd/DropInformation.h"
#include "com/appnativa/rare/ui/effects/aAnimator.h"
#include "com/appnativa/rare/ui/effects/iAnimator.h"
#include "com/appnativa/rare/ui/effects/iPlatformAnimator.h"
#include "com/appnativa/rare/ui/event/DataEvent.h"
#include "com/appnativa/rare/ui/event/EventBase.h"
#include "com/appnativa/rare/ui/event/ExpansionEvent.h"
#include "com/appnativa/rare/ui/event/iExpandedListener.h"
#include "com/appnativa/rare/ui/event/iPopupMenuListener.h"
#include "com/appnativa/rare/ui/iActionComponent.h"
#include "com/appnativa/rare/ui/iCollapsible.h"
#include "com/appnativa/rare/ui/iParentComponent.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/iPlatformWindowManager.h"
#include "com/appnativa/rare/ui/iPopup.h"
#include "com/appnativa/rare/ui/iScrollerSupport.h"
#include "com/appnativa/rare/ui/iWindow.h"
#include "com/appnativa/rare/ui/iWindowManager.h"
#include "com/appnativa/rare/ui/print/iPageSetup.h"
#include "com/appnativa/rare/util/DataParser.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/aContainer.h"
#include "com/appnativa/rare/viewer/aPlatformViewer.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/viewer/iTarget.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "com/appnativa/util/ObjectHolder.h"
#include "java/beans/PropertyChangeEvent.h"
#include "java/io/Writer.h"
#include "java/lang/Boolean.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/net/URL.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/EventObject.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"

@implementation RAREaViewer

static RAREaViewer_ViewerListener * RAREaViewer_viewerListener_;

+ (RAREaViewer_ViewerListener *)viewerListener {
  return RAREaViewer_viewerListener_;
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    autoUnregister_ = YES;
    disposable_ = YES;
    disableBehavior_ = [RAREiViewer_DisableBehaviorEnum DISABLE_CONTAINER];
    autoDispose_ = YES;
    widgetType_ = [RAREiWidget_WidgetTypeEnum Custom];
  }
  return self;
}

- (BOOL)canPrint {
  return NO;
}

- (BOOL)canSave {
  return NO;
}

- (void)downArrow {
  id<RAREiScrollerSupport> ss = [self getScrollerSupport];
  if (ss != nil) {
    [ss moveUpDownWithBoolean:YES withBoolean:NO];
  }
}

- (void)leftArrow {
  id<RAREiScrollerSupport> ss = [self getScrollerSupport];
  if (ss != nil) {
    [ss moveLeftRightWithBoolean:NO withBoolean:NO];
  }
}

- (void)pageDown {
  id<RAREiScrollerSupport> ss = [self getScrollerSupport];
  if (ss != nil) {
    [ss moveUpDownWithBoolean:YES withBoolean:YES];
  }
}

- (void)pageEnd {
  id<RAREiScrollerSupport> ss = [self getScrollerSupport];
  if (ss != nil) {
    [ss scrollToBottomEdge];
  }
}

- (void)pageHome {
  id<RAREiScrollerSupport> ss = [self getScrollerSupport];
  if (ss != nil) {
    [ss scrollToTopEdge];
  }
}

- (void)pageHomeHorizontal {
  id<RAREiScrollerSupport> ss = [self getScrollerSupport];
  if (ss != nil) {
    [ss scrollToLeftEdge];
  }
}

- (void)pageEndHorizontal {
  id<RAREiScrollerSupport> ss = [self getScrollerSupport];
  if (ss != nil) {
    [ss scrollToRightEdge];
  }
}

- (void)pageLeft {
  id<RAREiScrollerSupport> ss = [self getScrollerSupport];
  if (ss != nil) {
    [ss moveLeftRightWithBoolean:NO withBoolean:YES];
  }
}

- (void)pageRight {
  id<RAREiScrollerSupport> ss = [self getScrollerSupport];
  if (ss != nil) {
    [ss moveLeftRightWithBoolean:YES withBoolean:YES];
  }
}

- (void)pageSetupWithRAREiPageSetup:(id<RAREiPageSetup>)ps {
}

- (void)pageUp {
  id<RAREiScrollerSupport> ss = [self getScrollerSupport];
  if (ss != nil) {
    [ss moveUpDownWithBoolean:NO withBoolean:YES];
  }
}

- (void)rightArrow {
  id<RAREiScrollerSupport> ss = [self getScrollerSupport];
  if (ss != nil) {
    [ss moveLeftRightWithBoolean:YES withBoolean:NO];
  }
}

- (void)upArrow {
  id<RAREiScrollerSupport> ss = [self getScrollerSupport];
  if (ss != nil) {
    [ss moveUpDownWithBoolean:NO withBoolean:NO];
  }
}

- (void)configureWithRARESPOTViewer:(RARESPOTViewer *)vcfg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)configureWithRARESPOTWidget:(RARESPOTWidget *)cfg {
  if (widgetName_ == nil) {
    widgetName_ = [((SPOTPrintableString *) nil_chk(((RARESPOTWidget *) nil_chk(cfg))->name_)) getValue];
    if ((widgetName_ == nil) || ([widgetName_ sequenceLength] == 0)) {
      widgetName_ = [RAREUtils makeWidgetNameWithRARESPOTWidget:cfg withRAREiWidget:self];
      isSubmittable__ = NO;
    }
  }
  [self configureWithRARESPOTViewer:(RARESPOTViewer *) check_class_cast(cfg, [RARESPOTViewer class])];
}

- (BOOL)containsNamedItemWithNSString:(NSString *)name {
  return (nameMap_ == nil) ? NO : [nameMap_ containsKeyWithId:name];
}

- (void)dispose {
  if (![self isDisposable]) {
    return;
  }
  @synchronized (widgetType_) {
    if (![self isDisposed]) {
      if (viewerActionLink_ != nil) {
        [viewerActionLink_ clear];
      }
      @try {
        RAREaWidgetListener *wl = [self getWidgetListener];
        if ((wl != nil) && [wl isEnabledWithNSString:[RAREiConstants EVENT_DISPOSE]]) {
          (void) [wl evaluateWithNSString:[RAREiConstants EVENT_DISPOSE] withJavaUtilEventObject:[[RAREEventBase alloc] initWithId:self] withBoolean:YES];
        }
      }
      @catch (JavaLangThrowable *e) {
        [RAREPlatform ignoreExceptionWithNSString:@"calling onDispose exception" withJavaLangThrowable:e];
      }
      @try {
        [self unregisterWithBoolean:YES];
        [self clearConfigurationWithBoolean:YES];
        sourceURL_ = nil;
        if (nameMap_ != nil) {
          [nameMap_ clear];
        }
        if (orphanWidgets_ != nil) {
          orphanWidgets_ = nil;
        }
      }
      @catch (JavaLangThrowable *e) {
        [RAREPlatform ignoreExceptionWithNSString:@"dispose exception" withJavaLangThrowable:e];
      }
      @finally {
        disableBehavior_ = nil;
        nameMap_ = nil;
        contextURL_ = nil;
        registeredName_ = nil;
        viewerActionLink_ = nil;
        renderType_ = nil;
        myTarget_ = nil;
        [super dispose];
      }
    }
  }
}

- (void)onConfigurationChangedWithBoolean:(BOOL)reset {
  [self handleViewerConfigurationChangedWithBoolean:reset];
}

- (void)onConfigurationWillChangeWithId:(id)newConfig {
  [self handleViewerConfigurationWillChangeWithId:newConfig];
}

- (void)register__ {
  if (!registered_) {
    registered_ = YES;
    if (orphanWidgets_ != nil) {
      id<RAREiFormViewer> fv = [self getFormViewer];
      id<RAREiContainer> p = [self findParent];
      if (p != nil) {
        for (id<RAREiWidget> __strong w in orphanWidgets_) {
          [((id<RAREiWidget>) nil_chk(w)) setParentWithRAREiContainer:p];
          (void) [((id<RAREiFormViewer>) nil_chk(fv)) registerFormWidgetWithRAREiWidget:w];
        }
      }
    }
    if (local_ || [self isDesignMode]) {
      return;
    }
    NSString *s = [self getName];
    if (registeredName_ != nil) {
      if ([registeredName_ isEqual:s]) {
        return;
      }
      [((id<RAREiPlatformWindowManager>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowManager])) unRegisterViewerWithNSString:registeredName_ withRAREiViewer:self];
    }
    registeredName_ = s;
    [((id<RAREiPlatformWindowManager>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowManager])) registerViewerWithNSString:registeredName_ withRAREiViewer:self];
  }
}

- (id)registerNamedItemWithNSString:(NSString *)name
                             withId:(id)object {
  if (name != nil) {
    if (nameMap_ == nil) {
      nameMap_ = [[JavaUtilHashMap alloc] init];
    }
    return [((JavaUtilHashMap *) nil_chk(nameMap_)) putWithId:name withId:object];
  }
  return nil;
}

- (void)reloadWithBoolean:(BOOL)context {
  wasReset_ = NO;
  RAREActionLink *link = [self getViewerActionLink];
  if (context || (link == nil)) {
    if (widgetDataLink_ != nil) {
      [self clearContents];
      [self handleActionLinkWithRAREActionLink:widgetDataLink_ withBoolean:NO];
      return;
    }
    else if (sourceURL_ != nil) {
      [self setDataLinkWithRAREActionLink:[[RAREActionLink alloc] initWithRAREiWidget:[self getParent] withJavaNetURL:sourceURL_]];
      return;
    }
  }
  if (link != nil) {
    id<RAREiTarget> t = [self getTarget];
    if (t != nil) {
      id<RAREiContainer> p = [self getParent];
      [link setTargetNameWithNSString:[t getName]];
      [link setContextWithRAREiWidget:p];
      viewerActionLink_ = nil;
      [RAREPlatform invokeLaterWithJavaLangRunnable:link];
      (void) [t removeViewer];
      [self dispose];
    }
  }
}

- (void)reset {
  if ([((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) isShowing]) {
    [self reloadWithBoolean:NO];
  }
  else {
    wasReset_ = YES;
  }
}

- (void)saveWithJavaIoWriter:(JavaIoWriter *)w {
  @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"Save"];
}

- (RAREWindowViewer *)showAsDialogWithJavaUtilMap:(id<JavaUtilMap>)winoptions {
  return [self showAsWindowOrDialogWithJavaUtilMap:winoptions withBoolean:YES];
}

- (RAREWindowViewer *)showAsDialogWithNSString:(NSString *)title
                                   withBoolean:(BOOL)modal {
  JavaUtilHashMap *winoptions = [[JavaUtilHashMap alloc] initWithInt:2];
  if (title != nil) {
    (void) [winoptions putWithId:@"title" withId:title];
  }
  (void) [winoptions putWithId:@"modal" withId:[JavaLangBoolean valueOfWithBoolean:modal]];
  return [self showAsWindowOrDialogWithJavaUtilMap:winoptions withBoolean:YES];
}

- (id<RAREiPopup>)showAsPopupWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)owner
                                        withJavaUtilMap:(id<JavaUtilMap>)options {
  return [self showAsPopupWithRAREiPlatformComponent:owner withFloat:-1 withFloat:-1 withRAREiPlatformAnimator:nil withJavaUtilMap:options];
}

- (id<RAREiPopup>)showAsPopupWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)owner
                                              withFloat:(float)x
                                              withFloat:(float)y
                              withRAREiPlatformAnimator:(id<RAREiPlatformAnimator>)animator
                                        withJavaUtilMap:(id<JavaUtilMap>)options {
  BOOL trans = YES;
  float left = -1;
  float top = -1;
  float width = -1;
  float height = -1;
  float swidth = [((id<RAREiPlatformWindowManager>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowManager])) getUsableScreenWidth];
  float sheight = [((id<RAREiPlatformWindowManager>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowManager])) getUsableScreenHeight];
  RAREUIColor *bg = nil;
  [self setParentWithRAREiContainer:nil];
  id<RAREiPlatformComponent> comp = [self getDataComponent];
  if (options != nil) {
    id o = [options getWithId:@"transient"];
    if ([o isKindOfClass:[JavaLangBoolean class]]) {
      trans = [(JavaLangBoolean *) check_class_cast(o, [JavaLangBoolean class]) booleanValue];
    }
    else if (o != nil) {
      trans = ![@"false" isEqual:o];
    }
    if (animator == nil) {
      o = [options getWithId:@"animator"];
      if ([o conformsToProtocol: @protocol(RAREiPlatformAnimator)]) {
        animator = (id<RAREiPlatformAnimator>) check_protocol_cast(o, @protocol(RAREiPlatformAnimator));
      }
      else if ([o isKindOfClass:[NSString class]]) {
        animator = [RAREaAnimator createAnimatorWithRAREiWidget:self withNSString:(NSString *) check_class_cast(o, [NSString class]) withJavaUtilMap:nil];
      }
    }
    o = [options getWithId:@"bgColor"];
    if (o != nil) {
      if ([o isKindOfClass:[RAREUIColor class]]) {
        bg = (RAREUIColor *) check_class_cast(o, [RAREUIColor class]);
      }
      else if ([o isKindOfClass:[NSString class]]) {
        bg = [RAREColorUtils getBackgroundColorWithNSString:(NSString *) check_class_cast(o, [NSString class])];
      }
    }
    o = [options getWithId:@"left"];
    if ([o isKindOfClass:[NSString class]]) {
      left = [RAREScreenUtils toPlatformPixelWidthWithNSString:(NSString *) check_class_cast(o, [NSString class]) withRAREiPlatformComponent:comp withFloat:swidth];
    }
    else if ([o isKindOfClass:[NSNumber class]]) {
      left = [((NSNumber *) check_class_cast(o, [NSNumber class])) intValue];
    }
    o = [options getWithId:@"top"];
    if ([o isKindOfClass:[NSString class]]) {
      top = [RAREScreenUtils toPlatformPixelHeightWithNSString:(NSString *) check_class_cast(o, [NSString class]) withRAREiPlatformComponent:comp withFloat:sheight];
    }
    else if ([o isKindOfClass:[NSNumber class]]) {
      top = [((NSNumber *) check_class_cast(o, [NSNumber class])) intValue];
    }
    o = [options getWithId:@"height"];
    if ([o isKindOfClass:[NSString class]]) {
      height = [RAREScreenUtils toPlatformPixelHeightWithNSString:(NSString *) check_class_cast(o, [NSString class]) withRAREiPlatformComponent:comp withFloat:sheight];
    }
    else if ([o isKindOfClass:[NSNumber class]]) {
      height = [((NSNumber *) check_class_cast(o, [NSNumber class])) intValue];
    }
    o = [options getWithId:@"width"];
    if ([o isKindOfClass:[NSString class]]) {
      width = [RAREScreenUtils toPlatformPixelWidthWithNSString:(NSString *) check_class_cast(o, [NSString class]) withRAREiPlatformComponent:comp withFloat:swidth];
    }
    else if ([o isKindOfClass:[NSNumber class]]) {
      width = [((NSNumber *) check_class_cast(o, [NSNumber class])) intValue];
    }
  }
  RAREUIDimension *d = [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getPreferredSize];
  if (swidth < ((RAREUIDimension *) nil_chk(d))->width_) {
    d->width_ = swidth;
  }
  if (sheight < d->height_) {
    d->height_ = sheight;
  }
  if (width < 0) {
    width = d->width_;
  }
  if (height < 0) {
    height = d->height_;
  }
  d->width_ = width;
  d->height_ = height;
  RAREUIRectangle *r = [[RAREUIRectangle alloc] init];
  if (owner != nil) {
    [self getProposedPopupBoundsWithRAREiPlatformComponent:owner withRAREUIDimension:d withRAREUIRectangle:r withBoolean:YES];
  }
  id<RAREiPopup> popup = [self createPopupWithInt:[RAREUIScreen snapToSizeWithFloat:r->width_] withInt:[RAREUIScreen snapToSizeWithFloat:r->height_]];
  [((id<RAREiPopup>) nil_chk(popup)) setAnimatorWithRAREiPlatformAnimator:animator];
  (void) [popup setViewerWithRAREiViewer:self];
  if (top < 0) {
    y = top;
  }
  if (left < 0) {
    x = left;
  }
  if (bg != nil) {
    [popup setBackgroundColorWithRAREUIColor:bg];
  }
  [popup setTransientWithBoolean:trans];
  if (options != nil) {
    [self addPopupMenuListenerWithRAREiPopup:popup withJavaUtilMap:options];
  }
  if (owner != nil) {
    if (x == -1) {
      x = [RAREUIScreen snapToPositionWithFloat:r->x_];
    }
    if (y == -1) {
      y = [RAREUIScreen snapToPositionWithFloat:r->y_];
    }
    [popup showPopupWithRAREiPlatformComponent:owner withFloat:x withFloat:y];
  }
  else {
    if (x == -1) {
      x = [JavaLangMath maxWithFloat:(swidth - width) / 2 withFloat:0];
    }
    if (y == -1) {
      y = [JavaLangMath maxWithFloat:(sheight - height) / 2 withFloat:0];
    }
    [popup showPopupWithRAREiPlatformComponent:[((id<RAREiPlatformWindowManager>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowManager])) getComponent] withFloat:x withFloat:y];
  }
  return popup;
}

- (RAREWindowViewer *)showAsWindowWithJavaUtilMap:(id<JavaUtilMap>)winoptions {
  BOOL dialog = [RAREPlatform isTouchDevice];
  if (winoptions != nil) {
    id o = [winoptions getWithId:@"windowtype"];
    if ([o isKindOfClass:[NSString class]]) {
      dialog = [@"dialog" isEqual:o];
    }
  }
  return [self showAsWindowOrDialogWithJavaUtilMap:winoptions withBoolean:dialog];
}

- (RAREWindowViewer *)showAsWindowWithNSString:(NSString *)title {
  JavaUtilHashMap *winoptions = [[JavaUtilHashMap alloc] initWithInt:1];
  if (title != nil) {
    (void) [winoptions putWithId:@"title" withId:title];
  }
  return [self showAsWindowOrDialogWithJavaUtilMap:winoptions withBoolean:[RAREPlatform isTouchDevice]];
}

- (void)targetAcquiredWithRAREiTarget:(id<RAREiTarget>)target {
  if (target == nil) {
    @throw [[JavaLangNullPointerException alloc] init];
  }
  if (target != myTarget_) {
    id<RAREiContainer> cp = parentContainer_;
    id<RAREiContainer> p = nil;
    id<RAREiWidget> w = [RAREPlatform findWidgetForComponentWithId:[((id<RAREiTarget>) nil_chk(target)) getContainerComponent]];
    if ([(id) w conformsToProtocol: @protocol(RAREiContainer)]) {
      p = (id<RAREiContainer>) check_protocol_cast(w, @protocol(RAREiContainer));
    }
    if (p != cp) {
      if (p != nil) {
        [self setParentWithRAREiContainer:p];
      }
      else {
        p = cp;
      }
    }
    if (p != nil) {
      (void) [((id<RAREiFormViewer>) nil_chk([p getFormViewer])) registerFormWidgetWithRAREiWidget:self];
    }
    myTarget_ = target;
    [self register__];
    [self loaded];
  }
}

- (void)targetLostWithRAREiTarget:(id<RAREiTarget>)target {
  myTarget_ = nil;
  id<RAREiContainer> p = [self getParent];
  if (p == nil) {
    id<RAREiWidget> w = [RAREPlatform findWidgetForComponentWithId:[((id<RAREiTarget>) nil_chk(target)) getContainerComponent]];
    if ([(id) w conformsToProtocol: @protocol(RAREiContainer)]) {
      p = (id<RAREiContainer>) check_protocol_cast(w, @protocol(RAREiContainer));
    }
  }
  if (p != nil) {
    id<RAREiFormViewer> fv = [((RAREaContainer *) check_class_cast(p, [RAREaContainer class])) getFormViewerEx];
    [((id<RAREiFormViewer>) nil_chk(fv)) unregisterFormWidgetWithRAREiWidget:self];
  }
  @try {
    [self unloaded];
  }
  @finally {
    if ([self isAutoUnregister]) {
      [self unregisterWithBoolean:NO];
    }
    [self setParentWithRAREiContainer:nil];
  }
}

- (NSString *)description {
  NSString *s = [self getValueAsString];
  if (s == nil) {
    return [NSString stringWithFormat:@"%@::%@", widgetType_, [self getName]];
  }
  return s;
}

- (void)unregisterWithBoolean:(BOOL)disposing {
  if (registered_) {
    registered_ = NO;
    if (orphanWidgets_ != nil) {
      id<RAREiFormViewer> fv = disposing ? nil : [self getFormViewer];
      for (id<RAREiWidget> __strong w in orphanWidgets_) {
        if ((fv != nil) && !disposing) {
          [fv unregisterFormWidgetWithRAREiWidget:w];
        }
        if (disposing) {
          if ([(id) w conformsToProtocol: @protocol(RAREiViewer)]) {
            if (![((id<RAREiViewer>) check_protocol_cast(w, @protocol(RAREiViewer))) isAutoDispose]) {
              continue;
            }
          }
          [((id<RAREiWidget>) nil_chk(w)) dispose];
        }
        else {
          [((id<RAREiWidget>) nil_chk(w)) setParentWithRAREiContainer:nil];
        }
      }
    }
    id<RAREiWindowManager> wm = ([self getAppContext] == nil) ? nil : [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowManager];
    if (wm != nil) {
      if (registeredName_ != nil) {
        [wm unRegisterViewerWithNSString:registeredName_ withRAREiViewer:self];
      }
      registeredName_ = nil;
    }
  }
}

- (id)unregisterNamedItemWithNSString:(NSString *)name {
  if ((name != nil) && (nameMap_ != nil)) {
    return [nameMap_ removeWithId:name];
  }
  return nil;
}

- (void)setAppContextWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)context {
  appContext_ = context;
}

- (void)setAutoDisposeWithBoolean:(BOOL)autoDispose {
  self->autoDispose_ = autoDispose;
}

- (void)setAutoUnregisterWithBoolean:(BOOL)autoUnregister {
  self->autoUnregister_ = autoUnregister;
}

- (void)setCollapsedTitleWithNSString:(NSString *)title {
  self->collapsedTitle_ = title;
}

- (void)setCollapsiblePaneTitleIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  [((id<RAREiCollapsible>) nil_chk([self getCollapsible])) setTitleIconWithRAREiPlatformIcon:icon];
}

- (void)setCollapsiblePaneTitleTextWithNSString:(NSString *)text {
  [((id<RAREiCollapsible>) nil_chk([self getCollapsible])) setTitleTextWithJavaLangCharSequence:text];
}

- (void)setContextURLWithJavaNetURL:(JavaNetURL *)url {
  contextURL_ = url;
}

- (void)setDisableBehaviorWithRAREiViewer_DisableBehaviorEnum:(RAREiViewer_DisableBehaviorEnum *)behavior {
  disableBehavior_ = behavior;
}

- (void)setDisposableWithBoolean:(BOOL)disposable {
  self->disposable_ = disposable;
}

- (void)setEnabledWithBoolean:(BOOL)enabled {
  [super setEnabledWithBoolean:enabled];
  switch ([disableBehavior_ ordinal]) {
    case RAREiViewer_DisableBehavior_DISABLE_CONTAINER:
    break;
    case RAREiViewer_DisableBehavior_DISABLE_WIDGETS:
    case RAREiViewer_DisableBehavior_DISABLE_BOTH:
    if (orphanWidgets_ != nil) {
      for (id<RAREiWidget> __strong w in orphanWidgets_) {
        [((id<RAREiWidget>) nil_chk(w)) setEnabledWithBoolean:enabled];
      }
    }
    break;
  }
}

- (void)setFocusableWithBoolean:(BOOL)focusable {
  [super setFocusableWithBoolean:focusable];
  [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) setFocusableWithBoolean:focusable];
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) setFocusableWithBoolean:focusable];
}

- (void)setItemDataWithNSString:(NSString *)name
                         withId:(id)value {
  id o = [self getNamedItemWithNSString:name];
  if (o == nil) {
    return;
  }
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) setLinkedDataWithId:value];
  }
}

- (void)setItemEnabledWithNSString:(NSString *)name
                       withBoolean:(BOOL)enabled {
  id o = [self getNamedItemWithNSString:name];
  if (o == nil) {
    return;
  }
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) setEnabledWithBoolean:enabled];
  }
  else if ([o conformsToProtocol: @protocol(RAREiPlatformComponent)]) {
    [((id<RAREiPlatformComponent>) check_protocol_cast(o, @protocol(RAREiPlatformComponent))) setEnabledWithBoolean:enabled];
  }
}

- (void)setItemIconWithNSString:(NSString *)name
          withRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  id o = [self getNamedItemWithNSString:name];
  if (o == nil) {
    return;
  }
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) setIconWithRAREiPlatformIcon:icon];
  }
  else if ([o conformsToProtocol: @protocol(RAREiActionComponent)]) {
    [((id<RAREiActionComponent>) check_protocol_cast(o, @protocol(RAREiActionComponent))) setIconWithRAREiPlatformIcon:icon];
  }
}

- (void)setItemSelectedWithNSString:(NSString *)name
                        withBoolean:(BOOL)selected {
  id o = [self getNamedItemWithNSString:name];
  if (o == nil) {
    return;
  }
  if ([o conformsToProtocol: @protocol(RAREiWidget)]) {
    id<RAREiWidget> di = (id<RAREiWidget>) check_protocol_cast(o, @protocol(RAREiWidget));
    [((id<RAREiWidget>) nil_chk(di)) setSelectedWithBoolean:selected];
  }
}

- (void)setItemTooltipWithNSString:(NSString *)name
                      withNSString:(NSString *)tooltip {
}

- (void)setItemValueWithNSString:(NSString *)name
                          withId:(id)value {
  id o = [self getNamedItemWithNSString:name];
  if (o == nil) {
    return;
  }
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) setValueWithId:value];
  }
  else if ([value isKindOfClass:[NSString class]]) {
    if ([o conformsToProtocol: @protocol(RAREiActionComponent)]) {
      [((id<RAREiActionComponent>) check_protocol_cast(o, @protocol(RAREiActionComponent))) setTextWithJavaLangCharSequence:(NSString *) check_class_cast(value, [NSString class])];
    }
  }
}

- (void)setItemVisibleWithNSString:(NSString *)name
                       withBoolean:(BOOL)visible {
  id o = [self getNamedItemWithNSString:name];
  if (o == nil) {
    return;
  }
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) setVisibleWithBoolean:visible];
  }
  else if ([o conformsToProtocol: @protocol(RAREiPlatformComponent)]) {
    [((id<RAREiPlatformComponent>) check_protocol_cast(o, @protocol(RAREiPlatformComponent))) setVisibleWithBoolean:visible];
  }
}

- (void)setLoadAnimatorWithRAREiAnimator:(id<RAREiAnimator>)wa {
}

- (void)setNameWithNSString:(NSString *)name {
  widgetName_ = name;
}

- (void)setRenderTypeWithRARERenderTypeEnum:(RARERenderTypeEnum *)renderType {
  self->renderType_ = renderType;
}

- (void)setSourceURLWithJavaNetURL:(JavaNetURL *)url {
  sourceURL_ = url;
}

- (void)setViewerActionLinkWithRAREActionLink:(RAREActionLink *)link {
  if ((link != nil) && ![link hasURL]) {
    link = nil;
  }
  self->viewerActionLink_ = link;
}

- (id)getWithNSString:(NSString *)name {
  return [self getNamedItemWithNSString:name];
}

- (id<RAREiPlatformAppContext>)getAppContext {
  if (appContext_ != nil) {
    return appContext_;
  }
  return [RAREPlatform getAppContext];
}

- (JavaNetURL *)getBaseURL {
  if ((contextURL_ != nil) && [RAREUtils isValidBaseURLWithJavaNetURL:contextURL_]) {
    return contextURL_;
  }
  if ((sourceURL_ != nil) && [RAREUtils isValidBaseURLWithJavaNetURL:sourceURL_]) {
    return sourceURL_;
  }
  id<RAREiContainer> p = [self getParent];
  if (p != nil) {
    return [p getBaseURL];
  }
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getContextURL];
}

- (NSString *)getCollapsedTitle {
  return (collapsedTitle_ == nil) ? nil : [self expandStringWithNSString:collapsedTitle_ withBoolean:NO];
}

- (id<RAREiCollapsible>)getCollapsiblePane {
  id<RAREiTarget> t = [self getTarget];
  id<RAREiParentComponent> c = (t == nil) ? nil : [t getContainerComponent];
  if ([(id) c conformsToProtocol: @protocol(RAREiCollapsible)]) {
    return (id<RAREiCollapsible>) check_protocol_cast(c, @protocol(RAREiCollapsible));
  }
  if ((c != nil) && ([c getComponentCount] == 1) && ([(id) [c getComponentAtWithInt:0] conformsToProtocol: @protocol(RAREiCollapsible)])) {
    return (id<RAREiCollapsible>) check_protocol_cast([c getComponentAtWithInt:0], @protocol(RAREiCollapsible));
  }
  c = (c == nil) ? nil : [c getParent];
  if ([(id) c conformsToProtocol: @protocol(RAREiCollapsible)]) {
    return (id<RAREiCollapsible>) check_protocol_cast(c, @protocol(RAREiCollapsible));
  }
  return nil;
}

- (id<RAREiContainer>)getContainerViewer {
  return [self getParent];
}

- (JavaNetURL *)getContextURL {
  if (contextURL_ != nil) {
    return contextURL_;
  }
  id<RAREiContainer> parent = [self getParent];
  return (parent == nil) ? nil : [parent getContextURL];
}

- (id<RAREiPlatformComponent>)getDataComponent {
  if (dataComponent_ != nil) {
    return dataComponent_;
  }
  return [self getContainerComponent];
}

- (RAREiViewer_DisableBehaviorEnum *)getDisableBehavior {
  return disableBehavior_;
}

- (id<RAREiExpandedListener>)getExpandedListener {
  return RAREaViewer_viewerListener_;
}

- (id)getItemDataWithNSString:(NSString *)name {
  id o = [self getNamedItemExWithNSString:name];
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    RARERenderableDataItem *di = (RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class]);
    return [((RARERenderableDataItem *) nil_chk(di)) getLinkedData];
  }
  return nil;
}

- (NSString *)getItemDataStringWithNSString:(NSString *)name {
  id o = [self getNamedItemExWithNSString:name];
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    RARERenderableDataItem *di = (RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class]);
    o = [((RARERenderableDataItem *) nil_chk(di)) getLinkedData];
    return (o == nil) ? nil : [o description];
  }
  return nil;
}

- (id)getItemValueWithNSString:(NSString *)name {
  id o = [self getNamedItemExWithNSString:name];
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    RARERenderableDataItem *di = (RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class]);
    return [((RARERenderableDataItem *) nil_chk(di)) getValue];
  }
  else if ([o conformsToProtocol: @protocol(RAREiActionComponent)]) {
    return [((id<RAREiActionComponent>) check_protocol_cast(o, @protocol(RAREiActionComponent))) getText];
  }
  return nil;
}

- (id)getNamedItemWithNSString:(NSString *)name {
  if (nameMap_ == nil) {
    return nil;
  }
  return [((JavaUtilHashMap *) nil_chk(nameMap_)) getWithId:name];
}

- (id)getNamedItemExWithNSString:(NSString *)name {
  id o = [self getNamedItemWithNSString:name];
  if (o == nil) {
    @throw [[JavaUtilNoSuchElementException alloc] initWithNSString:[RAREaPlatformHelper formatWithNSString:[((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceAsStringWithNSString:@"Rare.runtime.text.noSuchItem"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ name } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  return o;
}

- (id<JavaUtilList>)getNames {
  if (nameMap_ == nil) {
    return [JavaUtilCollections EMPTY_LIST];
  }
  JavaUtilArrayList *list = [[JavaUtilArrayList alloc] init];
  [list addAllWithJavaUtilCollection:[((JavaUtilHashMap *) nil_chk(nameMap_)) keySet]];
  return list;
}

- (id<RAREiTarget>)getParentTarget {
  id<RAREiContainer> p = [self getParent];
  return (p == nil) ? nil : [p getTarget];
}

- (id<RAREiPlatformComponent>)getPrintComponent {
  return [self getDataComponent];
}

- (RARERenderTypeEnum *)getRenderType {
  return renderType_;
}

- (id<RAREiWidget>)getScrollPaneWidgetWithNSString:(NSString *)name {
  return [((id<RAREiContainer>) nil_chk([self getContainerViewer])) getWidgetWithNSString:name];
}

- (id)getSelection {
  return theValue_;
}

- (JavaNetURL *)getSourceURL {
  return sourceURL_;
}

- (id<RAREiTarget>)getTarget {
  return myTarget_;
}

- (NSString *)getTitle {
  NSString *s = (widgetTitle_ == nil) ? nil : [self expandStringWithNSString:widgetTitle_ withBoolean:NO];
  if (s == nil) {
    return @"";
  }
  return s;
}

- (id<RAREiViewer>)getViewer {
  return self;
}

- (RAREActionLink *)getViewerActionLink {
  return viewerActionLink_;
}

- (JavaNetURL *)getViewerURL {
  return contextURL_;
}

- (BOOL)hasSelection {
  return [self getSelection] != nil;
}

- (BOOL)isAutoDispose {
  return autoDispose_;
}

- (BOOL)isAutoUnregister {
  return autoUnregister_;
}

- (BOOL)isBackPressedHandled {
  RAREaWidgetListener *l = [self getWidgetListener];
  if ((l != nil) && [l isEnabledWithNSString:[RAREiConstants EVENT_BACK_PRESSED]]) {
    RAREDataEvent *e = [[RAREDataEvent alloc] initWithId:self withId:nil];
    (void) [l evaluateWithNSString:[RAREiConstants EVENT_BACK_PRESSED] withJavaUtilEventObject:e withBoolean:YES];
    return [e isConsumed];
  }
  return NO;
}

- (BOOL)isDisposable {
  return disposable_;
}

- (BOOL)isExternalViewer {
  return NO;
}

- (BOOL)isItemEnabledWithNSString:(NSString *)name {
  id o = [self getNamedItemWithNSString:name];
  if (o == nil) {
    return NO;
  }
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    RARERenderableDataItem *di = (RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class]);
    return [((RARERenderableDataItem *) nil_chk(di)) isEnabled];
  }
  else if ([o conformsToProtocol: @protocol(RAREiPlatformComponent)]) {
    id<RAREiPlatformComponent> di = (id<RAREiPlatformComponent>) check_protocol_cast(o, @protocol(RAREiPlatformComponent));
    return [((id<RAREiPlatformComponent>) nil_chk(di)) isEnabled];
  }
  return NO;
}

- (BOOL)isItemSelectedWithNSString:(NSString *)name {
  id o = [self getNamedItemWithNSString:name];
  if (o == nil) {
    return NO;
  }
  if ([o conformsToProtocol: @protocol(RAREiWidget)]) {
    id<RAREiWidget> di = (id<RAREiWidget>) check_protocol_cast(o, @protocol(RAREiWidget));
    return [((id<RAREiWidget>) nil_chk(di)) isSelected];
  }
  return NO;
}

- (BOOL)isItemVisibleWithNSString:(NSString *)name {
  id o = [self getNamedItemWithNSString:name];
  if (o == nil) {
    return NO;
  }
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    return [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) isVisible];
  }
  else if ([o conformsToProtocol: @protocol(RAREiPlatformComponent)]) {
    return [((id<RAREiPlatformComponent>) check_protocol_cast(o, @protocol(RAREiPlatformComponent))) isVisible];
  }
  return NO;
}

- (BOOL)isRegistered {
  return registered_;
}

- (BOOL)isTabPaneViewer {
  return NO;
}

- (BOOL)isViewer {
  return YES;
}

- (BOOL)isWindowOnlyViewer {
  return NO;
}

- (void)registerOrphanWidgetWithRAREiWidget:(id<RAREiWidget>)widget {
  if (orphanWidgets_ == nil) {
    orphanWidgets_ = [[RAREUTIdentityArrayList alloc] initWithInt:2];
  }
  if ([((RAREUTIdentityArrayList *) nil_chk(orphanWidgets_)) addIfNotPresentWithId:widget]) {
    if (registered_) {
      [((id<RAREiWidget>) nil_chk(widget)) setParentWithRAREiContainer:[self findParent]];
      (void) [((id<RAREiFormViewer>) nil_chk([self getFormViewer])) registerFormWidgetWithRAREiWidget:widget];
      if ([(id) widget isKindOfClass:[RAREaViewer class]]) {
        [((RAREaViewer *) check_class_cast(widget, [RAREaViewer class])) register__];
        if ([(id) widget isKindOfClass:[RAREaContainer class]]) {
          RAREaContainer *c = ((RAREaContainer *) check_class_cast(widget, [RAREaContainer class]));
          if (!c->actAsFormViewer_) {
            [c registerWidgetsWithRAREiFormViewer:[self getFormViewer]];
          }
        }
      }
    }
  }
}

- (void)unregisterOrphanWidgetWithRAREiWidget:(id<RAREiWidget>)widget {
  if ((orphanWidgets_ != nil) && [orphanWidgets_ removeWithId:widget]) {
    if (registered_) {
      [((id<RAREiFormViewer>) nil_chk([self getFormViewer])) unregisterFormWidgetWithRAREiWidget:widget];
      if ([(id) widget isKindOfClass:[RAREaViewer class]]) {
        [((RAREaViewer *) check_class_cast(widget, [RAREaViewer class])) unregisterWithBoolean:NO];
        if ([(id) widget isKindOfClass:[RAREaContainer class]]) {
          RAREaContainer *c = ((RAREaContainer *) check_class_cast(widget, [RAREaContainer class]));
          if (!((RAREaContainer *) nil_chk(c))->actAsFormViewer_) {
            [c unregisterWidgetsWithRAREiFormViewer:[self getFormViewer]];
          }
        }
      }
    }
    [((id<RAREiWidget>) nil_chk(widget)) setParentWithRAREiContainer:nil];
  }
}

- (void)addPopupMenuListenerWithRAREiPopup:(id<RAREiPopup>)popup
                           withJavaUtilMap:(id<JavaUtilMap>)options {
  id o = [((id<JavaUtilMap>) nil_chk(options)) getWithId:@"onWillExpand"];
  if (o == nil) {
    o = [options getWithId:@"onwillexpand"];
  }
  id expand = o;
  o = [options getWithId:@"onWillCollapse"];
  if (o == nil) {
    o = [options getWithId:@"onwillcollapse"];
  }
  id collapse = o;
  id<RAREiPopupMenuListener> pml = [[RAREaViewer_$1 alloc] initWithRAREaViewer:self withId:expand withId:collapse withRAREiPopup:popup];
  [((id<RAREiPopup>) nil_chk(popup)) addPopupMenuListenerWithRAREiPopupMenuListener:pml];
}

- (void)clearConfigurationWithBoolean:(BOOL)dispose {
  [self clearNameMap];
  [self clearContextData];
  showDefaultMenu_ = NO;
  if (dispose) {
    viewerActionLink_ = nil;
    displayIcon_ = nil;
  }
}

- (void)clearNameMap {
  if (nameMap_ != nil) {
    [nameMap_ clear];
  }
}

- (void)configureExWithRARESPOTViewer:(RARESPOTViewer *)cfg
                          withBoolean:(BOOL)border
                          withBoolean:(BOOL)textMenus
                          withBoolean:(BOOL)margin {
  RAREActionLink *link = nil;
  id<RAREiPlatformAppContext> app = [self getAppContext];
  NSString *s = [((SPOTPrintableString *) nil_chk(((RARESPOTViewer *) nil_chk(cfg))->contextURL_)) getValue];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    @try {
      [self setContextURLWithJavaNetURL:[((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getURLWithNSString:s]];
    }
    @catch (JavaLangException *e) {
      [self handleExceptionWithJavaLangThrowable:e];
    }
  }
  [self setRenderTypeWithRARERenderTypeEnum:[RAREUtils getRenderTypeWithInt:[((RARESPOTWidget_CHorizontalAlign *) nil_chk(cfg->horizontalAlign_)) intValue] withInt:[((RARESPOTWidget_CVerticalAlign *) nil_chk(cfg->verticalAlign_)) intValue]]];
  if (!textMenus && [((SPOTBoolean *) nil_chk(cfg->defaultContextMenu_)) spot_valueWasSet]) {
    textMenus = YES;
  }
  if (![self isDesignMode] && [((SPOTPrintableString *) nil_chk(cfg->scriptURL_)) spot_valueWasSet]) {
    @try {
      RAREUTObjectHolder *h = nil;
      link = [RAREActionLink getActionLinkWithRAREiWidget:self withSPOTPrintableString:cfg->scriptURL_ withInt:0];
      if ([[cfg->scriptURL_ spot_getLinkedData] isKindOfClass:[RAREUTObjectHolder class]]) {
        h = (RAREUTObjectHolder *) check_class_cast([cfg->scriptURL_ spot_getLinkedData], [RAREUTObjectHolder class]);
        (void) [cfg->scriptURL_ spot_setLinkedDataWithId:nil];
      }
      else {
        h = [RAREDataParser loadScriptURLWithRAREiWidget:self withRARESPOTViewer:cfg withJavaNetURL:[((RAREActionLink *) nil_chk(link)) getURLWithRAREiWidget:self]];
      }
      if ([((RAREUTObjectHolder *) nil_chk(h))->value_ isKindOfClass:[JavaLangException class]]) {
        [self handleExceptionWithJavaLangThrowable:(JavaLangException *) check_class_cast(h->value_, [JavaLangException class])];
      }
      else if (h->value_ != nil) {
        NSString *type = (NSString *) check_class_cast(h->type_, [NSString class]);
        NSString *code = (NSString *) check_class_cast(h->value_, [NSString class]);
        NSString *location;
        JavaNetURL *url;
        if (code != nil) {
          NSString *name = [((SPOTPrintableString *) nil_chk(cfg->name_)) getValue];
          if ([((RAREActionLink *) nil_chk(link)) isInlineURL]) {
            location = ((name == nil) ? [RAREUtils makeWidgetNameWithRARESPOTWidget:cfg withRAREiWidget:self] : name);
            url = [self getContextURL];
            if (url != nil) {
              location = [NSString stringWithFormat:@"[%@]%@", [((RAREaAppContext *) check_class_cast([self getAppContext], [RAREaAppContext class])) getApplicationRelativeLocationWithJavaNetURL:url], location];
            }
          }
          else {
            url = [link getURLWithRAREiWidget:self];
            location = [((RAREaAppContext *) check_class_cast([self getAppContext], [RAREaAppContext class])) getApplicationRelativeLocationWithJavaNetURL:url];
          }
          id<RAREiScriptHandler> sh = [self getScriptHandler];
          BOOL shared = YES;
          if ([@"false" equalsIgnoreCase:[cfg->scriptURL_ spot_getAttributeWithNSString:@"shared"]]) {
            shared = NO;
          }
          (void) [((id<RAREiScriptHandler>) nil_chk(sh)) setScriptingContextWithRAREiViewer:self withNSString:type withNSString:location withNSString:code withBoolean:shared];
        }
      }
    }
    @catch (JavaLangException *e) {
      [self handleExceptionWithJavaLangThrowable:e];
    }
  }
  else {
    NSString *type = [cfg spot_getAttributeWithNSString:@"language"];
    if ((type != nil) && ([type sequenceLength] > 0) && ![type isEqual:[((id<RAREiPlatformAppContext>) nil_chk(app)) getDefaultScrptingLanguage]]) {
      id<RAREiScriptHandler> sh = [self getScriptHandler];
      (void) [((id<RAREiScriptHandler>) nil_chk(sh)) setScriptingContextWithRAREiViewer:self withNSString:type withNSString:[RAREUtils makeWidgetNameWithRARESPOTWidget:cfg withRAREiWidget:self] withNSString:nil withBoolean:NO];
    }
  }
  [self fireConfigureEventWithRARESPOTWidget:cfg withNSString:[RAREiConstants EVENT_CREATED]];
  disableBehavior_ = [RAREiViewer_DisableBehaviorEnum valueOfWithNSString:[((NSString *) nil_chk([((RARESPOTViewer_CDisableBehavior *) nil_chk(cfg->disableBehavior_)) stringValue])) uppercaseStringWithJRELocale:[JavaUtilLocale US]]];
  unloadFired_ = NO;
  loadFired_ = NO;
  collapsedTitle_ = [((SPOTPrintableString *) nil_chk(cfg->collapsedTitle_)) getValue];
  if ([((SPOTBoolean *) nil_chk(cfg->local_)) spot_valueWasSet]) {
    local_ = [cfg->local_ booleanValue];
  }
  else {
    local_ = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) areViewersLocalByDefault];
  }
  if ([((SPOTPrintableString *) nil_chk(cfg->icon_)) spot_hasValue]) {
    displayIcon_ = [self getIconWithSPOTPrintableString:cfg->icon_];
  }
  s = [((SPOTPrintableString *) nil_chk(cfg->name_)) getValue];
  if ((s != nil) && ([s sequenceLength] == 0)) {
    s = nil;
  }
  if (s == nil) {
    s = [[cfg getClass] getName];
    int n = [((NSString *) nil_chk(s)) lastIndexOf:'.'];
    if (n != -1) {
      s = [s substring:n + 1];
    }
    s = [NSString stringWithFormat:@"a%@_%@", s, [JavaLangInteger toHexStringWithInt:(int) [self hash]]];
  }
  widgetName_ = s;
  [super configureWithRARESPOTWidget:cfg withBoolean:border withBoolean:textMenus withBoolean:margin withBoolean:NO];
}

- (RAREaViewer_ViewerListener *)createViewerListener {
  return [[RAREaViewer_ViewerListener alloc] init];
}

- (void)fireLoadEventWithBoolean:(BOOL)loaded {
  RAREaWidgetListener *l = [self getWidgetListener];
  if (l == nil) {
    return;
  }
  NSString *event = loaded ? [RAREiConstants EVENT_LOAD] : [RAREiConstants EVENT_UNLOAD];
  if (![((RAREaWidgetListener *) nil_chk(l)) isEnabledWithNSString:event]) {
    return;
  }
  JavaUtilEventObject *e = [[RAREEventBase alloc] initWithId:self];
  @try {
    if (loaded) {
      [((RAREaWidgetListener *) nil_chk([self getWidgetListener])) loadEventWithJavaUtilEventObject:e];
    }
    else {
      [((RAREaWidgetListener *) nil_chk([self getWidgetListener])) unloadEventWithJavaUtilEventObject:e];
    }
  }
  @catch (JavaLangException *ex) {
    [((id<RAREiExceptionHandler>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getDefaultExceptionHandler])) handleScriptExceptionWithJavaLangThrowable:ex];
  }
}

- (NSString *)generateTargetName {
  return [NSString stringWithFormat:@"_target.%@", [JavaLangInteger toHexStringWithInt:[JavaLangSystem identityHashCodeWithId:self]]];
}

- (NSString *)generateTargetNameWithNSString:(NSString *)prefix {
  return [NSString stringWithFormat:@"_target.%@%@", prefix, [JavaLangInteger toHexStringWithInt:[JavaLangSystem identityHashCodeWithId:self]]];
}

- (NSString *)generateViewerName {
  return [NSString stringWithFormat:@"_viewer.%@", [JavaLangInteger toHexStringWithInt:[JavaLangSystem identityHashCodeWithId:self]]];
}

- (NSString *)generateViewerNameWithNSString:(NSString *)prefix {
  return [NSString stringWithFormat:@"_viewer.%@%@", prefix, [JavaLangInteger toHexStringWithInt:[JavaLangSystem identityHashCodeWithId:self]]];
}

- (void)handleItemHasCollapsedWithRAREExpansionEvent:(RAREExpansionEvent *)event {
  id<RAREiPlatformComponent> c = (id<RAREiPlatformComponent>) check_protocol_cast([((RAREExpansionEvent *) nil_chk(event)) getSource], @protocol(RAREiPlatformComponent));
  if ((collapsedTitle_ != nil) && ([(id) c conformsToProtocol: @protocol(RAREiCollapsible)])) {
    id<RAREiCollapsible> pane = (id<RAREiCollapsible>) check_protocol_cast(c, @protocol(RAREiCollapsible));
    [((id<RAREiCollapsible>) nil_chk(pane)) setTitleTextWithJavaLangCharSequence:[self expandStringWithNSString:collapsedTitle_ withBoolean:NO]];
  }
}

- (void)handleItemHasExpandedWithRAREExpansionEvent:(RAREExpansionEvent *)event {
  id<RAREiPlatformComponent> c = (id<RAREiPlatformComponent>) check_protocol_cast([((RAREExpansionEvent *) nil_chk(event)) getSource], @protocol(RAREiPlatformComponent));
  if ([(id) c conformsToProtocol: @protocol(RAREiCollapsible)]) {
    id<RAREiCollapsible> pane = (id<RAREiCollapsible>) check_protocol_cast(c, @protocol(RAREiCollapsible));
    id<JavaLangCharSequence> s = [((id<RAREiCollapsible>) nil_chk(pane)) getTitle];
    if ((s == nil) || ([s sequenceLength] == 0) || (collapsedTitle_ != nil)) {
      [pane setTitleTextWithJavaLangCharSequence:[self expandStringWithNSString:widgetTitle_ withBoolean:NO]];
    }
  }
}

- (void)handleViewerConfigurationChangedWithBoolean:(BOOL)reset {
  if (([self getWidgetListener] != nil) && [((RAREaWidgetListener *) nil_chk([self getWidgetListener])) isPropertyChangeEventEnabled]) {
    [((RAREaWidgetListener *) nil_chk([self getWidgetListener])) propertyChangeWithJavaBeansPropertyChangeEvent:[[JavaBeansPropertyChangeEvent alloc] initWithId:self withNSString:[RAREiConfigurationListener CONFIGURATION_CHANGED_PROPERTY] withId:nil withId:nil]];
  }
  else if (reset) {
    [self reset];
  }
}

- (void)handleViewerConfigurationWillChangeWithId:(id)newConfig {
  if (([self getWidgetListener] != nil) && [((RAREaWidgetListener *) nil_chk([self getWidgetListener])) isPropertyChangeEventEnabled]) {
    [((RAREaWidgetListener *) nil_chk([self getWidgetListener])) propertyChangeWithJavaBeansPropertyChangeEvent:[[JavaBeansPropertyChangeEvent alloc] initWithId:self withNSString:[RAREiConfigurationListener CONFIGURATION_WILLCHANGE_PROPERTY] withId:[RAREPlatformHelper getDeviceConfiguration] withId:newConfig]];
  }
}

- (BOOL)importURLWithJavaUtilList:(id<JavaUtilList>)urls
          withRAREDropInformation:(RAREDropInformation *)drop {
  if ((urls != nil) && ([urls size] > 0)) {
    [self setDataURLWithJavaNetURL:[urls getWithInt:0]];
    return YES;
  }
  return NO;
}

- (void)loaded {
  if (!loadFired_) {
    unloadFired_ = NO;
    loadFired_ = YES;
    [self fireLoadEventWithBoolean:YES];
  }
}

- (RAREWindowViewer *)showAsWindowOrDialogWithJavaUtilMap:(id<JavaUtilMap>)winoptions
                                              withBoolean:(BOOL)dialog {
  id<RAREiWindowManager> wm = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowManager];
  id<RAREiWindow> win;
  if (winoptions == nil) {
    winoptions = [[JavaUtilHashMap alloc] initWithInt:1];
    (void) [winoptions putWithId:@"modal" withId:[JavaLangBoolean valueOfWithBoolean:dialog]];
  }
  if (dialog) {
    win = [((id<RAREiWindowManager>) nil_chk(wm)) createDialogWithRAREiWidget:self withJavaUtilMap:winoptions];
  }
  else {
    win = [((id<RAREiWindowManager>) nil_chk(wm)) createWindowWithRAREiWidget:self withJavaUtilMap:winoptions];
  }
  id<RAREiContainer> winviewer = [((id<RAREiWindow>) nil_chk(win)) getViewer];
  [((id<RAREiContainer>) nil_chk(winviewer)) setContextURLWithJavaNetURL:contextURL_];
  [self setParentWithRAREiContainer:winviewer];
  (void) [((id<RAREiWindowManager>) nil_chk(wm)) setViewerExWithNSString:[win getTargetName] withRAREiWidget:[self getContainerViewer] withRAREiViewer:self];
  id show = (winoptions == nil) ? nil : [winoptions getWithId:@"visible"];
  if ([show isKindOfClass:[JavaLangBoolean class]]) {
    if ([((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:show]) {
      [win showWindow];
    }
  }
  else if ([show isKindOfClass:[NSString class]]) {
    if ([@"true" isEqual:show]) {
      [win showWindow];
    }
  }
  else {
    [win showWindow];
  }
  return (RAREWindowViewer *) check_class_cast(winviewer, [RAREWindowViewer class]);
}

- (void)unloaded {
  if (!unloadFired_) {
    unloadFired_ = YES;
    loadFired_ = NO;
    [self fireLoadEventWithBoolean:NO];
  }
}

- (id)getAttributeExWithChar:(unichar)firstChar
                withNSString:(NSString *)key {
  id o;
  int n;
  if (firstChar == '/') {
    n = [((NSString *) nil_chk(key)) indexOf:'/' fromIndex:1];
    id<RAREiViewer> v;
    if (n == -1) {
      n = [key lastIndexOf:'?'];
      if (n == -1) {
        v = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getViewerWithNSString:[key substring:1]];
        return (v == nil) ? nil : [v getValueAsString];
      }
      else {
        v = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getViewerWithNSString:[key substring:1 endIndex:n]];
        return (v == nil) ? nil : [v getAttributeWithNSString:[key substring:n + 1]];
      }
    }
    v = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getViewerWithNSString:[key substring:1 endIndex:n]];
    if (v != nil) {
      return [v getAttributeWithNSString:[key substring:n + 1]];
    }
    return nil;
  }
  n = [((NSString *) nil_chk(key)) indexOf:'/'];
  if (n != -1) {
    int p = [key lastIndexOf:'/'];
    if (p == n) {
      id<RAREiWidget> w = [self isContainer] ? [((id<RAREiContainer>) check_protocol_cast(self, @protocol(RAREiContainer))) getWidgetWithNSString:[key substring:0 endIndex:n]] : nil;
      if (w != nil) {
        return [w getAttributeWithNSString:[key substring:n + 1]];
      }
    }
  }
  NSString *prop = nil;
  n = [key lastIndexOf:'?'];
  if (n != -1) {
    prop = [key substring:n + 1];
    key = [key substring:0 endIndex:n];
  }
  id<RAREiWidget> w = [self isContainer] ? [((id<RAREiContainer>) check_protocol_cast(self, @protocol(RAREiContainer))) getWidgetWithNSString:key] : nil;
  if (w != nil) {
    o = (prop == nil) ? [w getHTTPFormValue] : [w getAttributeWithNSString:prop];
  }
  else {
    o = [super getAttributeExWithChar:firstChar withNSString:key];
  }
  return o;
}

- (BOOL)isContainer {
  return [self conformsToProtocol: @protocol(RAREiContainer)];
}

- (id<RAREiPopup>)createPopupWithInt:(int)width
                             withInt:(int)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)getProposedPopupBoundsWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)owner
                                     withRAREUIDimension:(RAREUIDimension *)contentSize
                                     withRAREUIRectangle:(RAREUIRectangle *)outBounds
                                             withBoolean:(BOOL)adjustBallonBorder {
  id<RAREiPlatformBorder> b = adjustBallonBorder ? [self getBorder] : nil;
  if (contentSize == nil) {
    contentSize = [((id<RAREiPlatformComponent>) nil_chk(formComponent_)) getPreferredSize];
  }
  RAREUIBalloonBorder *balloonBorder = (RAREUIBalloonBorder *) check_class_cast((([(id) b isKindOfClass:[RAREUIBalloonBorder class]]) ? b : nil), [RAREUIBalloonBorder class]);
  [RAREUtils getProposedPopupBoundsWithRAREUIRectangle:outBounds withRAREiPlatformComponent:owner withRAREUIDimension:contentSize withFloat:0 withRARERenderableDataItem_HorizontalAlignEnum:[RARERenderableDataItem_HorizontalAlignEnum AUTO] withRAREiPlatformBorder:b withBoolean:NO];
  if ((balloonBorder != nil) && [balloonBorder isAutoLocatePeak]) {
    int mc = [balloonBorder getModCount];
    [balloonBorder autoLocatePeakForProposedBoundsWithRAREiPlatformComponent:owner withRAREUIRectangle:outBounds];
    if (mc != [balloonBorder getModCount]) {
      [self setBorderWithRAREiPlatformBorder:balloonBorder];
    }
  }
}

- (id<RAREiCollapsible>)getCollapsible {
  id<RAREiCollapsible> c = [self getCollapsiblePane];
  if (c == nil) {
    @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"No collapsible"];
  }
  return c;
}

- (id<RAREiScrollerSupport>)getScrollerSupport {
  if ([(id) dataComponent_ conformsToProtocol: @protocol(RAREiScrollerSupport)]) {
    return (id<RAREiScrollerSupport>) check_protocol_cast(dataComponent_, @protocol(RAREiScrollerSupport));
  }
  if ([(id) formComponent_ conformsToProtocol: @protocol(RAREiScrollerSupport)]) {
    return (id<RAREiScrollerSupport>) check_protocol_cast(formComponent_, @protocol(RAREiScrollerSupport));
  }
  return nil;
}

- (id<RAREiPageSetup>)createPageSetup {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (void)initialize {
  if (self == [RAREaViewer class]) {
    RAREaViewer_viewerListener_ = [[RAREaViewer_ViewerListener alloc] init];
  }
}

- (void)copyAllFieldsTo:(RAREaViewer *)other {
  [super copyAllFieldsTo:other];
  other->appContext_ = appContext_;
  other->autoDispose_ = autoDispose_;
  other->autoUnregister_ = autoUnregister_;
  other->collapsedTitle_ = collapsedTitle_;
  other->contextURL_ = contextURL_;
  other->disableBehavior_ = disableBehavior_;
  other->disposable_ = disposable_;
  other->loadFired_ = loadFired_;
  other->local_ = local_;
  other->myTarget_ = myTarget_;
  other->nameMap_ = nameMap_;
  other->orphanWidgets_ = orphanWidgets_;
  other->registered_ = registered_;
  other->registeredName_ = registeredName_;
  other->renderType_ = renderType_;
  other->unloadFired_ = unloadFired_;
  other->viewerActionLink_ = viewerActionLink_;
  other->wasReset_ = wasReset_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "canPrint", NULL, "Z", 0x1, NULL },
    { "canSave", NULL, "Z", 0x1, NULL },
    { "configureWithRARESPOTViewer:", NULL, "V", 0x401, NULL },
    { "containsNamedItemWithNSString:", NULL, "Z", 0x1, NULL },
    { "registerNamedItemWithNSString:withId:", NULL, "LNSObject", 0x1, NULL },
    { "showAsDialogWithJavaUtilMap:", NULL, "LRAREWindowViewer", 0x1, NULL },
    { "showAsDialogWithNSString:withBoolean:", NULL, "LRAREWindowViewer", 0x1, NULL },
    { "showAsPopupWithRAREiPlatformComponent:withJavaUtilMap:", NULL, "LRAREiPopup", 0x1, NULL },
    { "showAsPopupWithRAREiPlatformComponent:withFloat:withFloat:withRAREiPlatformAnimator:withJavaUtilMap:", NULL, "LRAREiPopup", 0x1, NULL },
    { "showAsWindowWithJavaUtilMap:", NULL, "LRAREWindowViewer", 0x1, NULL },
    { "showAsWindowWithNSString:", NULL, "LRAREWindowViewer", 0x1, NULL },
    { "unregisterNamedItemWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getAppContext", NULL, "LRAREiPlatformAppContext", 0x1, NULL },
    { "getBaseURL", NULL, "LJavaNetURL", 0x1, NULL },
    { "getCollapsedTitle", NULL, "LNSString", 0x1, NULL },
    { "getCollapsiblePane", NULL, "LRAREiCollapsible", 0x1, NULL },
    { "getContainerViewer", NULL, "LRAREiContainer", 0x1, NULL },
    { "getContextURL", NULL, "LJavaNetURL", 0x1, NULL },
    { "getDataComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getDisableBehavior", NULL, "LRAREiViewer_DisableBehaviorEnum", 0x1, NULL },
    { "getExpandedListener", NULL, "LRAREiExpandedListener", 0x1, NULL },
    { "getItemDataWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getItemDataStringWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "getItemValueWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getNamedItemWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getNamedItemExWithNSString:", NULL, "LNSObject", 0x1, "JavaUtilNoSuchElementException" },
    { "getNames", NULL, "LJavaUtilList", 0x1, NULL },
    { "getParentTarget", NULL, "LRAREiTarget", 0x1, NULL },
    { "getPrintComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getRenderType", NULL, "LRARERenderTypeEnum", 0x1, NULL },
    { "getScrollPaneWidgetWithNSString:", NULL, "LRAREiWidget", 0x1, NULL },
    { "getSelection", NULL, "LNSObject", 0x1, NULL },
    { "getSourceURL", NULL, "LJavaNetURL", 0x1, NULL },
    { "getTarget", NULL, "LRAREiTarget", 0x1, NULL },
    { "getTitle", NULL, "LNSString", 0x1, NULL },
    { "getViewer", NULL, "LRAREiViewer", 0x1, NULL },
    { "getViewerActionLink", NULL, "LRAREActionLink", 0x1, NULL },
    { "getViewerURL", NULL, "LJavaNetURL", 0x1, NULL },
    { "hasSelection", NULL, "Z", 0x1, NULL },
    { "isAutoDispose", NULL, "Z", 0x1, NULL },
    { "isAutoUnregister", NULL, "Z", 0x1, NULL },
    { "isBackPressedHandled", NULL, "Z", 0x1, NULL },
    { "isDisposable", NULL, "Z", 0x1, NULL },
    { "isExternalViewer", NULL, "Z", 0x1, NULL },
    { "isItemEnabledWithNSString:", NULL, "Z", 0x1, NULL },
    { "isItemSelectedWithNSString:", NULL, "Z", 0x1, NULL },
    { "isItemVisibleWithNSString:", NULL, "Z", 0x1, NULL },
    { "isRegistered", NULL, "Z", 0x1, NULL },
    { "isTabPaneViewer", NULL, "Z", 0x1, NULL },
    { "isViewer", NULL, "Z", 0x1, NULL },
    { "isWindowOnlyViewer", NULL, "Z", 0x1, NULL },
    { "addPopupMenuListenerWithRAREiPopup:withJavaUtilMap:", NULL, "V", 0x4, NULL },
    { "clearConfigurationWithBoolean:", NULL, "V", 0x4, NULL },
    { "clearNameMap", NULL, "V", 0x4, NULL },
    { "configureExWithRARESPOTViewer:withBoolean:withBoolean:withBoolean:", NULL, "V", 0x4, NULL },
    { "createViewerListener", NULL, "LRAREaViewer_ViewerListener", 0x4, NULL },
    { "fireLoadEventWithBoolean:", NULL, "V", 0x4, NULL },
    { "generateTargetName", NULL, "LNSString", 0x4, NULL },
    { "generateTargetNameWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "generateViewerName", NULL, "LNSString", 0x4, NULL },
    { "generateViewerNameWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "handleItemHasCollapsedWithRAREExpansionEvent:", NULL, "V", 0x4, NULL },
    { "handleItemHasExpandedWithRAREExpansionEvent:", NULL, "V", 0x4, NULL },
    { "handleViewerConfigurationChangedWithBoolean:", NULL, "V", 0x4, NULL },
    { "handleViewerConfigurationWillChangeWithId:", NULL, "V", 0x4, NULL },
    { "importURLWithJavaUtilList:withRAREDropInformation:", NULL, "Z", 0x4, NULL },
    { "loaded", NULL, "V", 0x4, NULL },
    { "showAsWindowOrDialogWithJavaUtilMap:withBoolean:", NULL, "LRAREWindowViewer", 0x4, NULL },
    { "unloaded", NULL, "V", 0x4, NULL },
    { "getAttributeExWithChar:withNSString:", NULL, "LNSObject", 0x4, NULL },
    { "isContainer", NULL, "Z", 0x4, NULL },
    { "createPopupWithInt:withInt:", NULL, "LRAREiPopup", 0x404, NULL },
    { "getProposedPopupBoundsWithRAREiPlatformComponent:withRAREUIDimension:withRAREUIRectangle:withBoolean:", NULL, "V", 0x4, NULL },
    { "getCollapsible", NULL, "LRAREiCollapsible", 0x2, NULL },
    { "getScrollerSupport", NULL, "LRAREiScrollerSupport", 0x4, NULL },
    { "createPageSetup", NULL, "LRAREiPageSetup", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "viewerListener_", NULL, 0x1c, "LRAREaViewer_ViewerListener" },
    { "appContext_", NULL, 0x4, "LRAREiPlatformAppContext" },
    { "contextURL_", NULL, 0x4, "LJavaNetURL" },
    { "local_", NULL, 0x4, "Z" },
    { "registeredName_", NULL, 0x4, "LNSString" },
    { "viewerActionLink_", NULL, 0x4, "LRAREActionLink" },
    { "wasReset_", NULL, 0x4, "Z" },
    { "disableBehavior_", NULL, 0x4, "LRAREiViewer_DisableBehaviorEnum" },
    { "autoDispose_", NULL, 0x4, "Z" },
    { "collapsedTitle_", NULL, 0x4, "LNSString" },
    { "loadFired_", NULL, 0x4, "Z" },
    { "myTarget_", NULL, 0x4, "LRAREiTarget" },
    { "nameMap_", NULL, 0x4, "LJavaUtilHashMap" },
    { "orphanWidgets_", NULL, 0x4, "LRAREUTIdentityArrayList" },
    { "registered_", NULL, 0x4, "Z" },
    { "renderType_", NULL, 0x4, "LRARERenderTypeEnum" },
    { "unloadFired_", NULL, 0x4, "Z" },
  };
  static J2ObjcClassInfo _RAREaViewer = { "aViewer", "com.appnativa.rare.viewer", NULL, 0x401, 77, methods, 17, fields, 0, NULL};
  return &_RAREaViewer;
}

@end
@implementation RAREaViewer_ViewerListener

- (void)itemHasCollapsedWithRAREExpansionEvent:(RAREExpansionEvent *)event {
  RAREaPlatformViewer *v = [self getViewerWithId:[((RAREExpansionEvent *) nil_chk(event)) getItem]];
  if (v != nil) {
    [v handleItemHasCollapsedWithRAREExpansionEvent:event];
  }
}

- (void)itemHasExpandedWithRAREExpansionEvent:(RAREExpansionEvent *)event {
  RAREaPlatformViewer *v = [self getViewerWithId:[((RAREExpansionEvent *) nil_chk(event)) getItem]];
  if (v != nil) {
    [v handleItemHasExpandedWithRAREExpansionEvent:event];
  }
}

- (NSString *)getCollapsedTitleWithRAREiCollapsible:(id<RAREiCollapsible>)pane
                         withRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  RAREaPlatformViewer *v = [self getViewerWithId:c];
  if (v != nil) {
    NSString *s = [v getCollapsedTitle];
    if (s == nil) {
      s = [v getTitle];
    }
    return ((s != nil) && ([s sequenceLength] == 0)) ? nil : s;
  }
  return nil;
}

- (NSString *)getExpandedTitleWithRAREiCollapsible:(id<RAREiCollapsible>)pane
                        withRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  RAREaPlatformViewer *v = [self getViewerWithId:c];
  if (v != nil) {
    NSString *s = [v getTitle];
    return ((s != nil) && ([s sequenceLength] == 0)) ? nil : s;
  }
  return nil;
}

- (RAREaPlatformViewer *)getViewerWithId:(id)o {
  if ([o conformsToProtocol: @protocol(RAREiPlatformComponent)]) {
    id<RAREiWidget> w = [((id<RAREiPlatformComponent>) check_protocol_cast(o, @protocol(RAREiPlatformComponent))) getWidget];
    return (RAREaPlatformViewer *) check_class_cast(((w == nil) ? nil : [w getViewer]), [RAREaPlatformViewer class]);
  }
  return nil;
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getCollapsedTitleWithRAREiCollapsible:withRAREiPlatformComponent:", NULL, "LNSString", 0x1, NULL },
    { "getExpandedTitleWithRAREiCollapsible:withRAREiPlatformComponent:", NULL, "LNSString", 0x1, NULL },
    { "getViewerWithId:", NULL, "LRAREaPlatformViewer", 0x2, NULL },
  };
  static J2ObjcClassInfo _RAREaViewer_ViewerListener = { "ViewerListener", "com.appnativa.rare.viewer", "aViewer", 0xc, 3, methods, 0, NULL, 0, NULL};
  return &_RAREaViewer_ViewerListener;
}

@end
@implementation RAREaViewer_$1

- (void)popupMenuWillBecomeVisibleWithRAREExpansionEvent:(RAREExpansionEvent *)e {
  if (val$expand_ != nil) {
    (void) [((RAREWindowViewer *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([this$0_ getAppContext])) getWindowViewer])) evalWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ val$expand_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  }
}

- (void)popupMenuWillBecomeInvisibleWithRAREExpansionEvent:(RAREExpansionEvent *)e {
  if (val$collapse_ != nil) {
    (void) [((RAREWindowViewer *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([this$0_ getAppContext])) getWindowViewer])) evalWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ val$collapse_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  [((id<RAREiPopup>) nil_chk(val$popup_)) dispose];
}

- (void)popupMenuCanceledWithRAREExpansionEvent:(RAREExpansionEvent *)e {
}

- (id)initWithRAREaViewer:(RAREaViewer *)outer$
                   withId:(id)capture$0
                   withId:(id)capture$1
           withRAREiPopup:(id<RAREiPopup>)capture$2 {
  this$0_ = outer$;
  val$expand_ = capture$0;
  val$collapse_ = capture$1;
  val$popup_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaViewer" },
    { "val$expand_", NULL, 0x1012, "LNSObject" },
    { "val$collapse_", NULL, 0x1012, "LNSObject" },
    { "val$popup_", NULL, 0x1012, "LRAREiPopup" },
  };
  static J2ObjcClassInfo _RAREaViewer_$1 = { "$1", "com.appnativa.rare.viewer", "aViewer", 0x8000, 0, NULL, 4, fields, 0, NULL};
  return &_RAREaViewer_$1;
}

@end
