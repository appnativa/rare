//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/viewer/aWebBrowser.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iCancelableFuture.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/JavaURLConnection.h"
#include "com/appnativa/rare/spot/Browser.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/WaitCursorHandler.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/viewer/aWebBrowser.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URL.h"
#include "java/util/Map.h"

@implementation RAREaWebBrowser

- (id)init {
  return [self initRAREaWebBrowserWithRAREiContainer:nil];
}

- (id)initRAREaWebBrowserWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    generateBrowserExceptions_ = YES;
    handleWaitCursor_ = YES;
    widgetType_ = [RAREiWidget_WidgetTypeEnum WebBrowser];
  }
  return self;
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  return [self initRAREaWebBrowserWithRAREiContainer:parent];
}

- (void)clearContents {
  if (theBrowser_ != nil) {
    [theBrowser_ clearContents];
  }
}

- (void)configureWithRARESPOTViewer:(RARESPOTViewer *)vcfg {
  [self configureExWithRARESPOTBrowser:(RARESPOTBrowser *) check_class_cast(vcfg, [RARESPOTBrowser class])];
  [self fireConfigureEventWithRARESPOTWidget:vcfg withNSString:[RAREiConstants EVENT_CONFIGURE]];
  [self handleDataURLWithRARESPOTWidget:vcfg withBoolean:YES];
}

- (void)handleActionLinkWithRAREActionLink:(RAREActionLink *)link
                               withBoolean:(BOOL)deferred {
  @try {
    [self setURLWithJavaNetURL:[((RAREActionLink *) nil_chk(link)) getURLWithRAREiWidget:self]];
  }
  @catch (JavaIoIOException *ex) {
    [self handleExceptionWithJavaLangThrowable:ex];
  }
}

- (void)hideWaitCursorIfShowing {
  if (handleWaitCursor_ && startedWaitcursor_) {
    startedWaitcursor_ = NO;
    [RAREWaitCursorHandler stopWaitCursorWithRAREiPlatformComponent:[self getDataComponent]];
  }
}

- (void)reloadWithBoolean:(BOOL)context {
  if (theBrowser_ != nil) {
    [theBrowser_ reload];
  }
}

- (void)stopLoading {
  if (theBrowser_ != nil) {
    [theBrowser_ stopLoading];
  }
}

- (id<RAREiCancelableFuture>)setDataLinkWithRAREActionLink:(RAREActionLink *)link
                                               withBoolean:(BOOL)defer {
  if (link != nil) {
    @try {
      [self setURLWithNSString:[RAREJavaURLConnection toExternalFormWithJavaNetURL:[link getURLWithRAREiWidget:self]]];
    }
    @catch (JavaNetMalformedURLException *e) {
      @throw [[RAREApplicationException alloc] initWithJavaLangThrowable:e];
    }
  }
  return nil;
}

- (void)setDataURLWithJavaNetURL:(JavaNetURL *)url {
  [self setURLWithNSString:[RAREJavaURLConnection toExternalFormWithJavaNetURL:url]];
}

- (void)setGenerateBrowserExceptionsWithBoolean:(BOOL)generate {
  self->generateBrowserExceptions_ = generate;
}

- (void)setHTMLWithNSString:(NSString *)html {
  [self checkConfigure];
  [self loadContentWithNSString:html withNSString:@"text/html" withNSString:nil];
}

- (void)setHTMLWithNSString:(NSString *)baseHref
               withNSString:(NSString *)html {
  [self checkConfigure];
  [self loadContentWithNSString:html withNSString:@"text/html" withNSString:baseHref];
}

- (void)setHandleWaitCursorWithBoolean:(BOOL)handleWaitCursor {
  self->handleWaitCursor_ = handleWaitCursor;
}

- (void)setPlainTextWithNSString:(NSString *)text {
  [self checkConfigure];
  [self loadContentWithNSString:text withNSString:@"text/plain" withNSString:nil];
}

- (void)setScaleToFitWithBoolean:(BOOL)scaleToFit {
}

- (void)setURLWithNSString:(NSString *)url {
  [self checkConfigure];
  if ([RAREPlatform isUIThread]) {
    [self setURLExWithNSString:url];
  }
  else {
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREaWebBrowser_$1 alloc] initWithRAREaWebBrowser:self withNSString:url]];
  }
}

- (void)setURLWithJavaNetURL:(JavaNetURL *)url {
  [self setURLWithNSString:[((JavaNetURL *) nil_chk(url)) toExternalForm]];
}

- (void)setValueWithId:(id)value {
  @try {
    if ([value isKindOfClass:[JavaNetURL class]]) {
      [self setURLWithJavaNetURL:(JavaNetURL *) check_class_cast(value, [JavaNetURL class])];
    }
    else if (value == nil) {
      [self clearContents];
    }
    else {
      [self setHTMLWithNSString:[value description]];
    }
  }
  @catch (JavaIoIOException *ex) {
    [self handleExceptionWithJavaLangThrowable:ex];
  }
}

- (BOOL)getGenerateBrowserExceptions {
  return generateBrowserExceptions_;
}

- (NSString *)getLocation {
  return [((id<RAREaWebBrowser_iBrowser>) nil_chk(theBrowser_)) getLocation];
}

- (id)getSelection {
  return [self isDesignMode] ? nil : [self getLocation];
}

- (JavaNetURL *)getURL {
  NSString *s = [self getLocation];
  return ((s == nil) || ([s sequenceLength] == 0)) ? nil : [[JavaNetURL alloc] initWithNSString:s];
}

- (BOOL)hasValue {
  NSString *s = [self getLocation];
  return (s != nil) && ([s sequenceLength] != 0) && ![s isEqual:@"about:blank"];
}

- (void)handleCustomPropertiesWithRARESPOTWidget:(RARESPOTWidget *)cfg
                                 withJavaUtilMap:(id<JavaUtilMap>)properties {
  [super handleCustomPropertiesWithRARESPOTWidget:cfg withJavaUtilMap:properties];
  id o = [((id<JavaUtilMap>) nil_chk(properties)) getWithId:@"scaleToFit"];
  if ([o isKindOfClass:[NSString class]]) {
    [self setScaleToFitWithBoolean:[@"true" isEqual:o]];
  }
  else if ([o isKindOfClass:[JavaLangBoolean class]]) {
    [self setScaleToFitWithBoolean:[((JavaLangBoolean *) check_class_cast(o, [JavaLangBoolean class])) booleanValue]];
  }
  o = [properties getWithId:@"autoInsertMetaContent"];
  if ([o isKindOfClass:[NSString class]]) {
    autoInsertMetaContent_ = [@"true" isEqual:o];
  }
  else if ([o isKindOfClass:[JavaLangBoolean class]]) {
    autoInsertMetaContent_ = [((JavaLangBoolean *) check_class_cast(o, [JavaLangBoolean class])) booleanValue];
  }
}

- (BOOL)isHandleWaitCursor {
  return handleWaitCursor_;
}

- (void)checkConfigure {
  if (theBrowser_ == nil) {
    theBrowser_ = [self createWebViewWithRARESPOTBrowser:[[RARESPOTBrowser alloc] init]];
    dataComponent_ = formComponent_ = [((id<RAREaWebBrowser_iBrowser>) nil_chk(theBrowser_)) getComponent];
  }
}

- (void)clearConfigurationWithBoolean:(BOOL)dispose {
  [super clearConfigurationWithBoolean:dispose];
  if (dispose) {
    [self hideWaitCursorIfShowing];
    if (theBrowser_ != nil) {
      [theBrowser_ dispose];
    }
    theBrowser_ = nil;
  }
  else {
    [self clearContents];
  }
}

- (void)configureExWithRARESPOTBrowser:(RARESPOTBrowser *)cfg {
  theBrowser_ = [self createWebViewWithRARESPOTBrowser:cfg];
  dataComponent_ = formComponent_ = [((id<RAREaWebBrowser_iBrowser>) nil_chk(theBrowser_)) getComponent];
  [self configureExWithRARESPOTViewer:cfg withBoolean:YES withBoolean:NO withBoolean:YES];
}

- (id<RAREaWebBrowser_iBrowser>)createWebViewWithRARESPOTBrowser:(RARESPOTBrowser *)cfg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)loadContentWithNSString:(NSString *)content
                   withNSString:(NSString *)contentType
                   withNSString:(NSString *)baseHref {
  if (autoInsertMetaContent_) {
    int width = [self getWidth];
    if ((width < 50) && ([self getParent] != nil)) {
      width = [((id<RAREiContainer>) nil_chk([self getParent])) getWidth];
    }
    if (width < 50) {
      RAREUIDimension *size = [RAREUIScreen getUsableSize];
      if (((RAREUIDimension *) nil_chk(size))->width_ < size->height_) {
        width = (int) size->width_;
      }
      else {
        width = (int) size->width_;
        int pwidth = (int) [RAREUIScreen fromPlatformPixelsWithFloat:width];
        if (pwidth > 800) {
          width = width / 2;
        }
      }
    }
    int n = [((NSString *) nil_chk(content)) indexOfString:@"<head>"];
    if (n == -1) {
      NSString *meta = [NSString stringWithFormat:@"<head><meta name=\"viewport\" content=\"width=%d\"/></head>", [self getWidth]];
      n = [content indexOfString:@"<body>"];
      if (n != -1) {
        content = [NSString stringWithFormat:@"%@%@%@", [content substring:0 endIndex:n], meta, [content substring:n]];
      }
    }
    else {
      if (n != -1) {
        NSString *meta = [NSString stringWithFormat:@"<meta name=\"viewport\" content=\"width=%d\"/>", [self getWidth]];
        content = [NSString stringWithFormat:@"%@%@%@", [content substring:0 endIndex:n + 6], meta, [content substring:n + 6]];
      }
    }
  }
  if ([RAREPlatform isUIThread]) {
    [((id<RAREaWebBrowser_iBrowser>) nil_chk(theBrowser_)) loadContentWithNSString:content withNSString:contentType withNSString:baseHref];
  }
  else {
    NSString *s = content;
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREaWebBrowser_$2 alloc] initWithRAREaWebBrowser:self withNSString:s withNSString:contentType withNSString:baseHref]];
  }
}

- (void)startWaitCursor {
  if (handleWaitCursor_) {
    startedWaitcursor_ = YES;
    [RAREWaitCursorHandler startWaitCursorWithRAREiPlatformComponent:nil withRAREUTiCancelable:nil];
  }
}

- (void)setURLExWithNSString:(NSString *)url {
  if ([self isDesignMode]) {
    return;
  }
  [((id<RAREaWebBrowser_iBrowser>) nil_chk(theBrowser_)) load__WithNSString:url];
}

- (BOOL)isAutoInsertMetaContent {
  return autoInsertMetaContent_;
}

- (void)setAutoInsertMetaContentWithBoolean:(BOOL)autoInsertMetaContent {
  self->autoInsertMetaContent_ = autoInsertMetaContent;
}

- (void)copyAllFieldsTo:(RAREaWebBrowser *)other {
  [super copyAllFieldsTo:other];
  other->autoInsertMetaContent_ = autoInsertMetaContent_;
  other->generateBrowserExceptions_ = generateBrowserExceptions_;
  other->handleWaitCursor_ = handleWaitCursor_;
  other->startedWaitcursor_ = startedWaitcursor_;
  other->theBrowser_ = theBrowser_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "setDataLinkWithRAREActionLink:withBoolean:", NULL, "LRAREiCancelableFuture", 0x1, NULL },
    { "setURLWithJavaNetURL:", NULL, "V", 0x1, "JavaIoIOException" },
    { "getGenerateBrowserExceptions", NULL, "Z", 0x1, NULL },
    { "getLocation", NULL, "LNSString", 0x1, NULL },
    { "getSelection", NULL, "LNSObject", 0x1, NULL },
    { "getURL", NULL, "LJavaNetURL", 0x1, "JavaNetMalformedURLException" },
    { "hasValue", NULL, "Z", 0x1, NULL },
    { "handleCustomPropertiesWithRARESPOTWidget:withJavaUtilMap:", NULL, "V", 0x4, NULL },
    { "isHandleWaitCursor", NULL, "Z", 0x1, NULL },
    { "checkConfigure", NULL, "V", 0x4, NULL },
    { "clearConfigurationWithBoolean:", NULL, "V", 0x4, NULL },
    { "configureExWithRARESPOTBrowser:", NULL, "V", 0x4, NULL },
    { "createWebViewWithRARESPOTBrowser:", NULL, "LRAREaWebBrowser_iBrowser", 0x404, NULL },
    { "loadContentWithNSString:withNSString:withNSString:", NULL, "V", 0x4, NULL },
    { "startWaitCursor", NULL, "V", 0x4, NULL },
    { "setURLExWithNSString:", NULL, "V", 0x4, NULL },
    { "isAutoInsertMetaContent", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "generateBrowserExceptions_", NULL, 0x4, "Z" },
    { "handleWaitCursor_", NULL, 0x4, "Z" },
    { "startedWaitcursor_", NULL, 0x4, "Z" },
    { "theBrowser_", NULL, 0x4, "LRAREaWebBrowser_iBrowser" },
  };
  static J2ObjcClassInfo _RAREaWebBrowser = { "aWebBrowser", "com.appnativa.rare.viewer", NULL, 0x401, 17, methods, 4, fields, 0, NULL};
  return &_RAREaWebBrowser;
}

@end

@interface RAREaWebBrowser_iBrowser : NSObject
@end

@implementation RAREaWebBrowser_iBrowser

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "clearContents", NULL, "V", 0x401, NULL },
    { "dispose", NULL, "V", 0x401, NULL },
    { "load__WithNSString:", NULL, "V", 0x401, NULL },
    { "loadContentWithNSString:withNSString:withNSString:", NULL, "V", 0x401, NULL },
    { "reload", NULL, "V", 0x401, NULL },
    { "stopLoading", NULL, "V", 0x401, NULL },
    { "getComponent", NULL, "LRAREiPlatformComponent", 0x401, NULL },
    { "getLocation", NULL, "LNSString", 0x401, NULL },
  };
  static J2ObjcClassInfo _RAREaWebBrowser_iBrowser = { "iBrowser", "com.appnativa.rare.viewer", "aWebBrowser", 0x201, 8, methods, 0, NULL, 0, NULL};
  return &_RAREaWebBrowser_iBrowser;
}

@end
@implementation RAREaWebBrowser_$1

- (void)run {
  [this$0_ setURLExWithNSString:val$url_];
}

- (id)initWithRAREaWebBrowser:(RAREaWebBrowser *)outer$
                 withNSString:(NSString *)capture$0 {
  this$0_ = outer$;
  val$url_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWebBrowser" },
    { "val$url_", NULL, 0x1012, "LNSString" },
  };
  static J2ObjcClassInfo _RAREaWebBrowser_$1 = { "$1", "com.appnativa.rare.viewer", "aWebBrowser", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_RAREaWebBrowser_$1;
}

@end
@implementation RAREaWebBrowser_$2

- (void)run {
  [((id<RAREaWebBrowser_iBrowser>) nil_chk(this$0_->theBrowser_)) loadContentWithNSString:val$s_ withNSString:val$contentType_ withNSString:val$baseHref_];
}

- (id)initWithRAREaWebBrowser:(RAREaWebBrowser *)outer$
                 withNSString:(NSString *)capture$0
                 withNSString:(NSString *)capture$1
                 withNSString:(NSString *)capture$2 {
  this$0_ = outer$;
  val$s_ = capture$0;
  val$contentType_ = capture$1;
  val$baseHref_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWebBrowser" },
    { "val$s_", NULL, 0x1012, "LNSString" },
    { "val$contentType_", NULL, 0x1012, "LNSString" },
    { "val$baseHref_", NULL, 0x1012, "LNSString" },
  };
  static J2ObjcClassInfo _RAREaWebBrowser_$2 = { "$2", "com.appnativa.rare.viewer", "aWebBrowser", 0x8000, 0, NULL, 4, fields, 0, NULL};
  return &_RAREaWebBrowser_$2;
}

@end
