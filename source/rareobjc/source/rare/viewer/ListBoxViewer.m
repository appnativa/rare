//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/viewer/ListBoxViewer.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSIntArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/platform/apple/ui/DataItemListModel.h"
#include "com/appnativa/rare/platform/apple/ui/EditableListBoxListHandler.h"
#include "com/appnativa/rare/platform/apple/ui/util/AppleHelper.h"
#include "com/appnativa/rare/platform/apple/ui/view/ListView.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/spot/ListBox.h"
#include "com/appnativa/rare/spot/ScrollPane.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/ListComponent.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/iListHandler.h"
#include "com/appnativa/rare/ui/iListView.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformComponentFactory.h"
#include "com/appnativa/rare/ui/iPlatformListDataModel.h"
#include "com/appnativa/rare/ui/iToolBar.h"
#include "com/appnativa/rare/ui/renderer/ListItemRenderer.h"
#include "com/appnativa/rare/viewer/ListBoxViewer.h"
#include "com/appnativa/rare/viewer/aListViewer.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/widget/aPlatformWidget.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/util/CharacterIndex.h"
#include "com/appnativa/util/FilterableList.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@implementation RAREListBoxViewer

- (id)init {
  return [self initRAREListBoxViewerWithRAREiContainer:nil];
}

- (id)initRAREListBoxViewerWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    widgetType_ = [RAREiWidget_WidgetTypeEnum ListBox];
    initiallySelectedIndex_ = -1;
  }
  return self;
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  return [self initRAREListBoxViewerWithRAREiContainer:parent];
}

- (void)configureWithRARESPOTViewer:(RARESPOTViewer *)vcfg {
  [self configureExWithRARESPOTListBox:(RARESPOTListBox *) check_class_cast(vcfg, [RARESPOTListBox class])];
  [self handleDataURLWithRARESPOTWidget:vcfg];
  [self fireConfigureEventWithRARESPOTWidget:vcfg withNSString:[RAREiConstants EVENT_CONFIGURE]];
}

- (void)dispose {
  if (![self isDisposable]) {
    return;
  }
  [super dispose];
  if (listModel_ != nil) {
    [listModel_ dispose];
  }
  listModel_ = nil;
}

- (void)rowChangedWithInt:(int)index {
  if (listModel_ != nil) {
    [listModel_ rowChangedWithInt:index];
  }
}

- (void)rowChangedWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  if (listModel_ != nil) {
    [listModel_ rowChangedWithRARERenderableDataItem:item];
  }
}

- (void)rowsChangedWithInt:(int)firstRow
                   withInt:(int)lastRow {
  [((id<RAREiPlatformListDataModel>) nil_chk(listModel_)) rowsChangedWithInt:firstRow withInt:lastRow];
}

- (void)setAutoSizeRowsToFitWithBoolean:(BOOL)autoSize {
  [((RAREListView *) check_class_cast([self getDataView], [RAREListView class])) setAutoSizeRowsWithBoolean:autoSize];
}

- (void)setSelectionModeWithRAREiListHandler_SelectionModeEnum:(RAREiListHandler_SelectionModeEnum *)selectionMode {
  [super setSelectionModeWithRAREiListHandler_SelectionModeEnum:selectionMode];
  RAREListView *v = (RAREListView *) check_class_cast([self getDataView], [RAREListView class]);
  [((RAREListView *) nil_chk(v)) setSelectionModeWithRAREiListHandler_SelectionModeEnum:selectionMode];
  if ((selectionMode == [RAREiListHandler_SelectionModeEnum NONE]) || (selectionMode == [RAREiListHandler_SelectionModeEnum INVISIBLE])) {
    [((RAREListItemRenderer *) nil_chk([v getItemRenderer])) setSelectionPaintedWithBoolean:NO];
  }
}

- (void)setShowLastDividerWithBoolean:(BOOL)show {
  [((RAREListView *) check_class_cast([self getDataView], [RAREListView class])) setShowLastDividerWithBoolean:show];
}

- (RARERenderableDataItem *)createDefaultSectionProrotype {
  if ([RAREPlatform isIOS]) {
    return nil;
  }
  return [super createDefaultSectionProrotype];
}

- (void)createModelAndComponentsWithRARESPOTViewer:(RARESPOTViewer *)vcfg {
  RARESPOTListBox *cfg = (RARESPOTListBox *) check_class_cast(vcfg, [RARESPOTListBox class]);
  listModel_ = [[RAREDataItemListModel alloc] init];
  RAREListView *list = [((id<RAREiPlatformComponentFactory>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getComponentCreator])) getListWithRAREiWidget:self withRARESPOTListBox:cfg];
  dataComponent_ = formComponent_ = [[RAREListComponent alloc] initWithRAREListView:list];
  formComponent_ = [RAREAppleHelper configureScrollPaneWithRAREiWidget:self withRAREiPlatformComponent:formComponent_ withRAREView:list withRARESPOTScrollPane:[((RARESPOTListBox *) nil_chk(cfg)) getScrollPane]];
  RAREListItemRenderer *lr = [[RAREListItemRenderer alloc] init];
  [((RAREListView *) nil_chk(list)) setItemRendererWithRAREListItemRenderer:lr];
  listComponent_ = [[RAREEditableListBoxListHandler alloc] initWithRAREListView:list withRAREiPlatformListDataModel:listModel_];
  [list setListModelWithRAREiPlatformListDataModel:listModel_];
  id<RAREiToolBar> tb = [self createEditingToolbarIfNecessaryWithRARESPOTListBox:cfg];
  if (tb != nil) {
    [((id<RAREiPlatformComponent>) nil_chk([tb getComponent])) setBackgroundWithRAREUIColor:[RAREColorUtils getBackground]];
    [list setEditModeToolBarWithRAREiToolBar:tb];
  }
}

- (void)handleCustomPropertiesWithRARESPOTWidget:(RARESPOTWidget *)cfg
                                 withJavaUtilMap:(id<JavaUtilMap>)properties {
  [super handleCustomPropertiesWithRARESPOTWidget:cfg withJavaUtilMap:properties];
  [RAREListBoxViewer handleCustomPropertiesWithRAREListView:(RAREListView *) check_class_cast([self getDataView], [RAREListView class]) withRARESPOTWidget:cfg withJavaUtilMap:properties];
}

- (void)handleViewerConfigurationChangedWithBoolean:(BOOL)reset {
  IOSIntArray *n = [self getSelectedIndexes];
  if ((n == nil) || ((int) [n count] == 0)) {
    if ((selectedIndexes_ != nil) && ((int) [selectedIndexes_ count] > 0)) {
      BOOL enabled = [self isChangeEventsEnabled];
      [self setChangeEventsEnabledWithBoolean:NO];
      [self setSelectedIndexesWithIntArray:selectedIndexes_];
      [self setChangeEventsEnabledWithBoolean:enabled];
    }
  }
  selectedIndexes_ = nil;
  [super handleViewerConfigurationChangedWithBoolean:reset];
}

- (void)handleViewerConfigurationWillChangeWithId:(id)newConfig {
  selectedIndexes_ = [self getSelectedIndexes];
  [super handleViewerConfigurationWillChangeWithId:newConfig];
  if ([((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getBooleanWithNSString:@"Rare.Table.repaintOnRotation" withBoolean:YES]) {
    [((RAREListView *) check_class_cast([self getDataView], [RAREListView class])) repaintVisibleRows];
  }
}

- (void)setEditingModeWithRAREiListView_EditingModeEnum:(RAREiListView_EditingModeEnum *)mode
                                            withBoolean:(BOOL)autoEnd
                                            withBoolean:(BOOL)allowSwiping {
  RAREListView *v = (RAREListView *) check_class_cast([self getDataView], [RAREListView class]);
  [((RAREListView *) nil_chk(v)) setEditingModeWithRAREiListView_EditingModeEnum:mode];
  [v setAutoEndEditingWithBoolean:autoEnd];
  [v setEditingSwipingAllowedWithBoolean:allowSwiping];
}

- (void)setFlingThresholdWithInt:(int)threshold {
  [((RAREListView *) check_class_cast([self getDataView], [RAREListView class])) setFlingThresholdWithInt:threshold];
}

- (void)setSelectFlingedWithBoolean:(BOOL)select {
  [((RAREListView *) check_class_cast([self getDataView], [RAREListView class])) setSelectFlingedWithBoolean:select];
}

- (void)setWholeViewFlingWithBoolean:(BOOL)wholeViewFling {
  [((RAREListView *) check_class_cast([self getDataView], [RAREListView class])) setWholeViewFlingWithBoolean:wholeViewFling];
}

- (id<JavaUtilList>)updateListWithFilteringIndexWithRAREUTFilterableList:(RAREUTFilterableList *)list {
  if ([RAREPlatform isIOS]) {
    [((RAREListView *) check_class_cast([self getDataView], [RAREListView class])) setSectionIndexWithRAREUTCharacterIndex:[((RAREUTFilterableList *) nil_chk(list)) getFilteringIndex] withInt:[list size] withRARERenderableDataItem:prototypeSectionItem_];
    return list;
  }
  return [super updateListWithFilteringIndexWithRAREUTFilterableList:list];
}

+ (void)handleCustomPropertiesWithRAREListView:(RAREListView *)v
                            withRARESPOTWidget:(RARESPOTWidget *)cfg
                               withJavaUtilMap:(id<JavaUtilMap>)properties {
  NSString *s = (NSString *) check_class_cast([((id<JavaUtilMap>) nil_chk(properties)) getWithId:@"cellStyle"], [NSString class]);
  if (s != nil) {
    [((RAREListView *) nil_chk(v)) setCellStyleWithNSString:s];
  }
  s = (NSString *) check_class_cast([properties getWithId:@"accessoryType"], [NSString class]);
  if (s != nil) {
    [((RAREListView *) nil_chk(v)) setAccessoryTypeWithNSString:s withBoolean:NO];
  }
  s = (NSString *) check_class_cast([properties getWithId:@"separatorStyle"], [NSString class]);
  if (s != nil) {
    [((RAREListView *) nil_chk(v)) setSeparatorStyleWithNSString:s];
  }
  s = (NSString *) check_class_cast([properties getWithId:@"editingAccessoryType"], [NSString class]);
  if (s != nil) {
    [((RAREListView *) nil_chk(v)) setAccessoryTypeWithNSString:s withBoolean:YES];
  }
  s = (NSString *) check_class_cast([properties getWithId:@"allowsSelectionDuringEditing"], [NSString class]);
  if ((s != nil) && [s isEqual:@"true"]) {
    [((RAREListView *) nil_chk(v)) setAllowsSelectionDuringEditingWithBoolean:YES];
  }
}

- (void)copyAllFieldsTo:(RAREListBoxViewer *)other {
  [super copyAllFieldsTo:other];
  other->selectedIndexes_ = selectedIndexes_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "createDefaultSectionProrotype", NULL, "LRARERenderableDataItem", 0x4, NULL },
    { "createModelAndComponentsWithRARESPOTViewer:", NULL, "V", 0x4, NULL },
    { "handleCustomPropertiesWithRARESPOTWidget:withJavaUtilMap:", NULL, "V", 0x4, NULL },
    { "handleViewerConfigurationChangedWithBoolean:", NULL, "V", 0x4, NULL },
    { "handleViewerConfigurationWillChangeWithId:", NULL, "V", 0x4, NULL },
    { "setEditingModeWithRAREiListView_EditingModeEnum:withBoolean:withBoolean:", NULL, "V", 0x4, NULL },
    { "setFlingThresholdWithInt:", NULL, "V", 0x4, NULL },
    { "setSelectFlingedWithBoolean:", NULL, "V", 0x4, NULL },
    { "setWholeViewFlingWithBoolean:", NULL, "V", 0x4, NULL },
    { "updateListWithFilteringIndexWithRAREUTFilterableList:", NULL, "LJavaUtilList", 0x4, NULL },
    { "handleCustomPropertiesWithRAREListView:withRARESPOTWidget:withJavaUtilMap:", NULL, "V", 0x8, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "selectedIndexes_", NULL, 0x0, "LIOSIntArray" },
  };
  static J2ObjcClassInfo _RAREListBoxViewer = { "ListBoxViewer", "com.appnativa.rare.viewer", NULL, 0x1, 11, methods, 1, fields, 0, NULL};
  return &_RAREListBoxViewer;
}

@end
