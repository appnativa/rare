//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/viewer/aWindowViewer.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/ErrorInformation.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/TemplateHandler.h"
#include "com/appnativa/rare/converters/DateContext.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iCancelableFuture.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iDataCollection.h"
#include "com/appnativa/rare/iDataCollectionHandler.h"
#include "com/appnativa/rare/iExceptionHandler.h"
#include "com/appnativa/rare/iFunctionCallback.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/iTimer.h"
#include "com/appnativa/rare/iWorkerTask.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/InlineURLConnection.h"
#include "com/appnativa/rare/net/JavaURLConnection.h"
#include "com/appnativa/rare/net/iURLConnection.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/scripting/Functions.h"
#include "com/appnativa/rare/scripting/ScriptingEvent.h"
#include "com/appnativa/rare/scripting/WidgetContext.h"
#include "com/appnativa/rare/scripting/iScriptHandler.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/spot/WidgetPane.h"
#include "com/appnativa/rare/ui/ActionBar.h"
#include "com/appnativa/rare/ui/AlertPanel.h"
#include "com/appnativa/rare/ui/Frame.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UICursor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIFontHelper.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIImageHelper.h"
#include "com/appnativa/rare/ui/UIImageIcon.h"
#include "com/appnativa/rare/ui/UIPopupMenu.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/UISoundHelper.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/ViewerCreator.h"
#include "com/appnativa/rare/ui/WaitCursorHandler.h"
#include "com/appnativa/rare/ui/aUIImageIcon.h"
#include "com/appnativa/rare/ui/effects/iPlatformAnimator.h"
#include "com/appnativa/rare/ui/event/ActionEvent.h"
#include "com/appnativa/rare/ui/event/DataEvent.h"
#include "com/appnativa/rare/ui/event/iActionListener.h"
#include "com/appnativa/rare/ui/event/iWindowListener.h"
#include "com/appnativa/rare/ui/iFrame.h"
#include "com/appnativa/rare/ui/iMenuBarComponent.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/iPlatformMenuBar.h"
#include "com/appnativa/rare/ui/iPlatformWindowManager.h"
#include "com/appnativa/rare/ui/iStatusBar.h"
#include "com/appnativa/rare/ui/iToolBar.h"
#include "com/appnativa/rare/ui/iToolBarHolder.h"
#include "com/appnativa/rare/ui/iWindow.h"
#include "com/appnativa/rare/ui/iWindowManager.h"
#include "com/appnativa/rare/ui/painter/UIImagePainter.h"
#include "com/appnativa/rare/ui/painter/iImagePainter.h"
#include "com/appnativa/rare/util/DataItemParserHandler.h"
#include "com/appnativa/rare/util/DataParser.h"
#include "com/appnativa/rare/viewer/WidgetPaneViewer.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/aContainer.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/viewer/aWindowViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/viewer/iTarget.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/BeanWidget.h"
#include "com/appnativa/rare/widget/PushButtonWidget.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTSequence.h"
#include "com/appnativa/spot/iSPOTConstants.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/CharScanner.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "com/appnativa/util/SimpleDateFormatEx.h"
#include "com/appnativa/util/iCancelable.h"
#include "java/io/File.h"
#include "java/io/IOException.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Exception.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Runnable.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URL.h"
#include "java/text/DateFormat.h"
#include "java/util/Date.h"
#include "java/util/EventObject.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/concurrent/Callable.h"

@implementation RAREaWindowViewer

static RAREaWindowViewer_WindowLocation * RAREaWindowViewer__location_;
static RAREaWindowViewer_BrowserNavigator * RAREaWindowViewer__navigator_;

+ (RAREaWindowViewer_WindowLocation *)_location {
  return RAREaWindowViewer__location_;
}

+ (void)set_location:(RAREaWindowViewer_WindowLocation *)_location {
  RAREaWindowViewer__location_ = _location;
}

+ (RAREaWindowViewer_BrowserNavigator *)_navigator {
  return RAREaWindowViewer__navigator_;
}

+ (void)set_navigator:(RAREaWindowViewer_BrowserNavigator *)_navigator {
  RAREaWindowViewer__navigator_ = _navigator;
}

- (id)initWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)ctx
                         withNSString:(NSString *)name
                      withRAREiWindow:(id<RAREiWindow>)win
                withRAREaWindowViewer:(RAREaWindowViewer *)parent
               withRAREiScriptHandler:(id<RAREiScriptHandler>)sh {
  if (self = [super initWithRAREiContainer:nil]) {
    canClose_ = YES;
    actAsFormViewer_ = YES;
    appContext_ = ctx;
    scriptHandler_ = sh;
    widgetType_ = [RAREiWidget_WidgetTypeEnum Window];
    widgetName_ = name;
    windowParent_ = parent;
    windowManager_ = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowManager];
    droppingAllowed_ = YES;
    theWindow_ = win;
    theEvent_ = [[RAREScriptingEvent alloc] initWithRAREiScriptHandler:sh withNSString:[RAREiConstants ATTRIBUTE_ON_CONFIGURE] withJavaUtilEventObject:[[JavaUtilEventObject alloc] initWithId:win] withId:win withId:nil];
  }
  return self;
}

- (void)activateViewerWithRAREActionLink:(RAREActionLink *)link {
  [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) asyncActivateViewerWithRAREActionLink:link];
}

- (void)activateViewerWithRAREiViewer:(id<RAREiViewer>)viewer
                         withNSString:(NSString *)target {
  [self activateViewerWithRAREiWidget:self withRAREiViewer:viewer withNSString:target];
}

- (void)activateViewerWithId:(id)href
                withNSString:(NSString *)target {
  RAREActionLink *link = [self createActionLinkWithId:href];
  [((RAREActionLink *) nil_chk(link)) setTargetNameWithNSString:target];
  ;
  [self activateViewerWithRAREActionLink:link];
}

- (void)activateViewerWithRAREiWidget:(id<RAREiWidget>)context
                      withRAREiViewer:(id<RAREiViewer>)viewer
                         withNSString:(NSString *)target {
  target = [RAREUtils fixTargetWithNSString:target];
  if (viewer == nil) {
    [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) clearTargetWithNSString:target];
    return;
  }
  id<RAREiTarget> t = [((id<RAREiViewer>) nil_chk(viewer)) getTarget];
  if ((t != nil) && (t == [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getTargetWithNSString:target])) {
    return;
  }
  id<RAREiViewer> parent = (context == nil) ? ((id) [viewer getContainerViewer]) : ((id) [context getViewer]);
  id<RAREiViewer> ov = [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) setViewerWithNSString:target withRAREiWidget:parent withRAREiViewer:viewer withJavaUtilMap:nil];
  if ((ov != nil) && [ov isAutoDispose]) {
    [ov dispose];
  }
}

- (void)activateViewerWithRAREiWidget:(id<RAREiWidget>)context
                               withId:(id)href
                         withNSString:(NSString *)target {
  RAREActionLink *link = [self createActionLinkWithRAREiWidget:context withId:href];
  [((RAREActionLink *) nil_chk(link)) setTargetNameWithNSString:target];
  ;
  [self activateViewerWithRAREActionLink:link];
}

- (void)addOverlayWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  if ([(id) theWindow_ isKindOfClass:[RAREFrame class]]) {
    [((RAREFrame *) check_class_cast(theWindow_, [RAREFrame class])) addOverlayWithRAREiPlatformComponent:c];
  }
  else {
    @throw [[JavaLangUnsupportedOperationException alloc] init];
  }
}

- (void)addOverlayWithRAREiWidget:(id<RAREiWidget>)w {
  [self addOverlayWithRAREiPlatformComponent:[((id<RAREiWidget>) nil_chk(w)) getContainerComponent]];
}

- (void)addManagedOverlayWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  if ([(id) theWindow_ isKindOfClass:[RAREFrame class]]) {
    [((RAREFrame *) check_class_cast(theWindow_, [RAREFrame class])) addManagedOverlayWithRAREiPlatformComponent:c];
  }
  else {
    @throw [[JavaLangUnsupportedOperationException alloc] init];
  }
}

- (void)addManagedOverlayWithRAREiWidget:(id<RAREiWidget>)w {
  [self addManagedOverlayWithRAREiPlatformComponent:[((id<RAREiWidget>) nil_chk(w)) getContainerComponent]];
}

- (void)addWindowDraggerWithRAREiWidget:(id<RAREiWidget>)widget {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)addWindowListenerWithRAREiWindowListener:(id<RAREiWindowListener>)l {
  [((id<RAREiWindow>) nil_chk(theWindow_)) addWindowListenerWithRAREiWindowListener:l];
}

- (void)alertWithId:(id)message {
  [self alertWithNSString:[self getTitle] withId:message withRAREiFunctionCallback:nil];
}

- (void)alertWithId:(id)message
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self alertWithNSString:[self getTitle] withId:message withRAREiFunctionCallback:cb];
}

- (void)alertWithNSString:(NSString *)title
                   withId:(id)message
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  message = [self expandStringWithNSString:[nil_chk(message) description] withBoolean:NO];
  RAREAlertPanel *d = [RAREAlertPanel okWithRAREiWidget:self withNSString:title withId:message withRAREiPlatformIcon:nil];
  [((RAREAlertPanel *) nil_chk(d)) showDialogWithRAREiFunctionCallback:cb];
}

- (void)beep {
  [RAREUISoundHelper beep];
}

- (void)blur {
}

- (BOOL)browseWithNSString:(NSString *)url {
  return [self browseWithJavaNetURL:[((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getURLWithNSString:url]];
}

- (BOOL)browseWithJavaNetURL:(JavaNetURL *)url {
  return [RAREPlatform browseURLWithJavaNetURL:url];
}

- (BOOL)canDrop {
  return [self getImportableDataFlavors] != nil;
}

- (void)center {
  [((id<RAREiWindow>) nil_chk(theWindow_)) center];
}

- (void)centerWithRAREWindowViewer:(RAREWindowViewer *)win {
  if (win == nil) {
    [self center];
  }
  else {
    [RAREScreenUtils centerOnWindowWithRAREiWindow:theWindow_ withRAREiWindow:[win getWindow]];
  }
}

- (void)clearContents {
}

- (void)clearForm {
}

- (void)clearInstance {
}

- (void)clearIntervalWithRAREUTiCancelable:(id<RAREUTiCancelable>)task {
  if (task != nil) {
    [task cancelWithBoolean:YES];
  }
}

- (void)clearSessionCookies {
  [RAREPlatform clearSessionCookies];
}

- (void)clearTargetWithNSString:(NSString *)target {
  target = [RAREUtils fixTargetWithNSString:target];
  if (target != nil) {
    [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) clearTargetWithNSString:target];
  }
}

- (void)clearTimeoutWithRAREUTiCancelable:(id<RAREUTiCancelable>)task {
  if (task != nil) {
    [task cancelWithBoolean:YES];
  }
}

- (void)close {
  if (theWindow_ != nil) {
    id<JavaLangRunnable> r = [[RAREaWindowViewer_$1 alloc] initWithRAREaWindowViewer:self];
    if ([RAREPlatform isUIThread]) {
      [r run];
    }
    else {
      [RAREPlatform invokeLaterWithJavaLangRunnable:r];
    }
  }
}

- (void)closePopupWindowsWithBoolean:(BOOL)all {
  [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) closePopupWindowsWithBoolean:all];
}

- (void)configureWithRARESPOTViewer:(RARESPOTViewer *)vcfg {
}

- (void)confirmWithId:(id)message
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self confirmWithId:nil withId:message withNSString:nil withNSString:nil withRAREiFunctionCallback:cb];
}

- (void)confirmWithId:(id)title
               withId:(id)message
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self confirmWithId:title withId:message withNSString:nil withNSString:nil withRAREiFunctionCallback:cb];
}

- (void)confirmWithId:(id)title
               withId:(id)message
         withNSString:(NSString *)ok
         withNSString:(NSString *)cancel
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  title = (title == nil) ? [self getTitle] : [self expandStringWithNSString:[title description] withBoolean:NO];
  message = [self expandStringWithNSString:[nil_chk(message) description] withBoolean:NO];
  RAREAlertPanel *d = [RAREAlertPanel yesNoWithRAREiWidget:self withNSString:[title description] withId:message withRAREiPlatformIcon:nil withNSString:ok withNSString:cancel withBoolean:YES];
  [((RAREAlertPanel *) nil_chk(d)) showDialogWithRAREiFunctionCallback:cb];
}

- (void)copyToClipboardWithNSString:(NSString *)value {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (RAREActionLink *)createActionLinkWithId:(id)url {
  return [self createActionLinkWithRAREiWidget:self withId:url];
}

- (RAREActionLink *)createActionLinkWithRAREiWidget:(id<RAREiWidget>)context
                                             withId:(id)url {
  if ([url isKindOfClass:[RAREActionLink class]]) {
    return (RAREActionLink *) check_class_cast(url, [RAREActionLink class]);
  }
  if (context == nil) {
    context = self;
  }
  if ([url isKindOfClass:[NSString class]]) {
    return [[RAREActionLink alloc] initWithRAREiWidget:context withJavaNetURL:[((id<RAREiWidget>) nil_chk(context)) getURLWithNSString:(NSString *) check_class_cast(url, [NSString class])]];
  }
  if ([url isKindOfClass:[JavaNetURL class]]) {
    return [[RAREActionLink alloc] initWithRAREiWidget:context withJavaNetURL:(JavaNetURL *) check_class_cast(url, [JavaNetURL class])];
  }
  if ([url isKindOfClass:[JavaIoFile class]]) {
    return [[RAREActionLink alloc] initWithRAREiWidget:context withJavaNetURL:[RAREaPlatformHelper fileToURLWithJavaIoFile:(JavaIoFile *) check_class_cast(url, [JavaIoFile class])]];
  }
  return [[RAREActionLink alloc] initWithRAREiWidget:context withJavaNetURL:[((id<RAREiWidget>) nil_chk(context)) getURLWithNSString:[nil_chk(url) description]]];
}

- (id<RAREiPlatformAnimator>)createAnimatorWithNSString:(NSString *)animation {
  if ([((NSString *) nil_chk(animation)) contains:@"Rare.anim."]) {
    return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceAsAnimatorWithNSString:animation];
  }
  int n = [animation indexOf:'.'];
  if (n == -1) {
    return (id<RAREiPlatformAnimator>) check_protocol_cast([RAREPlatform createObjectWithNSString:[NSString stringWithFormat:@"com.appnativa.rare.ui.effects.%@", animation]], @protocol(RAREiPlatformAnimator));
  }
  id o = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getWithNSString:animation];
  if ([o conformsToProtocol: @protocol(RAREiPlatformAnimator)]) {
    return (id<RAREiPlatformAnimator>) check_protocol_cast(o, @protocol(RAREiPlatformAnimator));
  }
  else if ([o isKindOfClass:[IOSClass class]]) {
    @try {
      return (id<RAREiPlatformAnimator>) check_protocol_cast([((IOSClass *) check_class_cast(o, [IOSClass class])) newInstance], @protocol(RAREiPlatformAnimator));
    }
    @catch (JavaLangException *e) {
      [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
    }
  }
  else if ((o == nil) && ([animation indexOf:'.'] != -1)) {
    return (id<RAREiPlatformAnimator>) check_protocol_cast([RAREPlatform createObjectWithNSString:animation], @protocol(RAREiPlatformAnimator));
  }
  return nil;
}

- (id<RAREiScriptHandler_iScriptRunnable>)createCancelableRunnerWithId:(id)code
                                                                withId:(id)cancelCode
                                                          withNSString:(NSString *)lang {
  id<RAREiScriptHandler_iScriptRunnable> r = [self createRunnerWithNSString:nil withId:code withNSString:lang];
  if (cancelCode != nil) {
    [((id<RAREiScriptHandler_iScriptRunnable>) nil_chk(r)) setCancelRunnerWithId:[self createRunnerWithNSString:nil withId:cancelCode withNSString:lang] withBoolean:YES];
  }
  return r;
}

- (id<iSPOTElement>)createConfigurationObjectWithRAREActionLink:(RAREActionLink *)link {
  if (link == nil) {
    return nil;
  }
  @try {
    id<RAREiWidget> ctx = [((RAREActionLink *) nil_chk(link)) getContext];
    if (ctx == nil) {
      ctx = self;
    }
    return [RAREDataParser loadSPOTObjectWithRAREiWidget:ctx withRAREiURLConnection:[link getConnection] withISPOTElement:nil];
  }
  @finally {
    [((RAREActionLink *) nil_chk(link)) close];
  }
}

- (id<iSPOTElement>)createConfigurationObjectWithNSString:(NSString *)name {
  return [self createConfigurationObjectWithNSString:name withNSString:nil];
}

- (id<RAREUTiCancelable>)createConfigurationObjectWithRAREActionLink:(RAREActionLink *)link
                                           withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if (link == nil) {
    return nil;
  }
  id<RAREiWidget> ctx = [((RAREActionLink *) nil_chk(link)) getContext];
  if (ctx == nil) {
    ctx = self;
  }
  return [RAREViewerCreator createConfigurationWithRAREiWidget:ctx withRAREActionLink:link withRAREiFunctionCallback:cb];
}

- (id<iSPOTElement>)createConfigurationObjectWithNSString:(NSString *)name
                                             withNSString:(NSString *)templateName {
  name = [((NSString *) nil_chk(name)) replace:':' withChar:'.'];
  if ([((NSString *) nil_chk(name)) hasPrefix:@"SPOT"]) {
    name = [NSString stringWithFormat:@"%@.%@", [iSPOTConstants SPOT_PACKAGE_NAME], name];
  }
  else if ([name indexOf:'.'] == -1) {
    name = [NSString stringWithFormat:@"%@.%@", [RAREPlatform RARE_SPOT_PACKAGE_NAME], name];
  }
  @try {
    IOSClass *cls = [RAREaPlatformHelper loadClassWithNSString:name];
    id<iSPOTElement> e = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk(cls)) newInstance], @protocol(iSPOTElement));
    RARETemplateHandler *th = [RARETemplateHandler getInstanceWithRAREiPlatformAppContext:appContext_];
    if (th != nil) {
      [th applyTemplateWithSPOTSequence:(SPOTSequence *) check_class_cast(e, [SPOTSequence class]) withNSString:templateName];
    }
    return e;
  }
  @catch (JavaLangException *e) {
    [RAREPlatform ignoreExceptionWithNSString:[NSString stringWithFormat:@"failed to creating object:%@", name] withJavaLangThrowable:e];
    return nil;
  }
}

- (id<RAREiDataCollection>)createDataCollectionWithRAREActionLink:(RAREActionLink *)link
                                        withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) createCollectionWithNSString:nil withNSString:nil withRAREActionLink:link withJavaUtilMap:nil withBoolean:YES withRAREiFunctionCallback:cb];
}

- (id<RAREiDataCollection>)createDataCollectionWithRAREiWidget:(id<RAREiWidget>)context
                                              withJavaUtilList:(id<JavaUtilList>)list {
  return [[RAREDataItemParserHandler alloc] initWithRAREiWidget:context withJavaUtilList:list];
}

- (id<RAREiDataCollection>)createDataCollectionWithRAREActionLink:(RAREActionLink *)link
                                                      withBoolean:(BOOL)tabular
                                        withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) createCollectionWithNSString:nil withNSString:nil withRAREActionLink:link withJavaUtilMap:nil withBoolean:tabular withRAREiFunctionCallback:cb];
}

- (id<RAREiDataCollection>)createDataCollectionWithNSString:(NSString *)name
                                         withRAREActionLink:(RAREActionLink *)link
                                                withBoolean:(BOOL)tabular
                                  withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) createCollectionWithNSString:nil withNSString:name withRAREActionLink:link withJavaUtilMap:nil withBoolean:tabular withRAREiFunctionCallback:cb];
}

- (id<RAREiDataCollection>)createDataCollectionWithNSString:(NSString *)handler
                                               withNSString:(NSString *)name
                                         withRAREActionLink:(RAREActionLink *)link
                                            withJavaUtilMap:(id<JavaUtilMap>)attributes
                                                withBoolean:(BOOL)tabular
                                  withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) createCollectionWithNSString:handler withNSString:name withRAREActionLink:link withJavaUtilMap:attributes withBoolean:tabular withRAREiFunctionCallback:cb];
}

- (id<RAREiImagePainter>)createImagePainterWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiImagePainter>)createImagePainterWithRAREUIImage:(RAREUIImage *)image {
  return [[RAREUIImagePainter alloc] initWithRAREUIImage:image];
}

- (RAREActionLink *)createInlineActionLinkWithNSString:(NSString *)data
                                          withNSString:(NSString *)mimeType {
  return [[RAREActionLink alloc] initWithNSString:data withNSString:mimeType];
}

- (JavaNetURL *)createInlineURLWithNSString:(NSString *)data
                               withNSString:(NSString *)mimeType {
  return [RAREInlineURLConnection createURLWithNSString:data withNSString:mimeType withNSString:nil];
}

- (RAREUIPopupMenu *)createPopupMenuWithRAREiWidget:(id<RAREiWidget>)context {
  RAREUIPopupMenu *p = [[RAREUIPopupMenu alloc] init];
  [p setContextWidgetWithRAREiWidget:context];
  return p;
}

- (RAREUIPopupMenu *)createPopupMenuWithRAREiWidget:(id<RAREiWidget>)context
                                       withNSString:(NSString *)url {
  id<RAREiViewer> parent = (context == nil) ? self : ((id) [context getViewer]);
  JavaNetURL *u = [parent getURLWithNSString:url];
  return [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) createPopupMenuWithRAREiWidget:parent withJavaNetURL:u withBoolean:NO];
}

- (RAREUIPopupMenu *)createPopupMenuWithRAREiWidget:(id<RAREiWidget>)context
                                       withNSString:(NSString *)url
                                        withBoolean:(BOOL)addDefaultItems {
  id<RAREiViewer> parent = (context == nil) ? self : ((id) [context getViewer]);
  JavaNetURL *u = [parent getURLWithNSString:url];
  return [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) createPopupMenuWithRAREiWidget:parent withJavaNetURL:u withBoolean:addDefaultItems];
}

- (id<RAREiScriptHandler_iScriptRunnable>)createRunnableWithNSObjectArray:(IOSObjectArray *)args {
  id<RAREiScriptHandler_iScriptRunnable> r = [self createRunnerWithNSString:nil withId:IOSObjectArray_Get(nil_chk(args), 0) withNSString:((int) [args count] > 1) ? (NSString *) check_class_cast(IOSObjectArray_Get(args, 1), [NSString class]) : nil];
  return r;
}

- (id<RAREiViewer>)createViewerWithRAREActionLink:(RAREActionLink *)link {
  return [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) createViewerWithRAREActionLink:link];
}

- (id<RAREiViewer>)createViewerWithNSString:(NSString *)url {
  return [self createViewerWithRAREiWidget:self withNSString:url];
}

- (id<RAREUTiCancelable>)createViewerWithRAREActionLink:(RAREActionLink *)link
                              withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  id<RAREiWidget> context = [((RAREActionLink *) nil_chk(link)) getContext];
  if (context == nil) {
    context = self;
  }
  return [RAREViewerCreator createViewerWithRAREiWidget:context withRAREActionLink:link withRAREiFunctionCallback:cb];
}

- (id<RAREiViewer>)createViewerWithRAREiWidget:(id<RAREiWidget>)context
                    withRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp {
  if (context == nil) {
    context = self;
  }
  return [[RAREWidgetPaneViewer alloc] initWithRAREiPlatformComponent:comp];
}

- (id<RAREiViewer>)createViewerWithRAREiWidget:(id<RAREiWidget>)context
                                  withNSString:(NSString *)url {
  if (context == nil) {
    context = self;
  }
  return [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) createViewerWithRAREiWidget:context withRAREActionLink:[self createActionLinkWithRAREiWidget:context withId:url]];
}

- (id<RAREiViewer>)createViewerWithRAREiWidget:(id<RAREiWidget>)parent
                            withRARESPOTWidget:(RARESPOTWidget *)cfg {
  return [self createViewerWithRAREiWidget:parent withRARESPOTWidget:cfg withJavaNetURL:nil];
}

- (id<RAREUTiCancelable>)createViewerWithNSString:(NSString *)url
                        withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  return [RAREViewerCreator createViewerWithRAREiWidget:self withRAREActionLink:[self createActionLinkWithRAREiWidget:self withId:url] withRAREiFunctionCallback:cb];
}

- (id<RAREUTiCancelable>)createViewerWithRAREiWidget:(id<RAREiWidget>)context
                                        withNSString:(NSString *)url
                           withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if (context == nil) {
    context = self;
  }
  return [RAREViewerCreator createViewerWithRAREiWidget:context withRAREActionLink:[self createActionLinkWithRAREiWidget:context withId:url] withRAREiFunctionCallback:cb];
}

- (id<RAREiViewer>)createViewerWithRAREiWidget:(id<RAREiWidget>)parent
                            withRARESPOTWidget:(RARESPOTWidget *)cfg
                                withJavaNetURL:(JavaNetURL *)context {
  if (parent == nil) {
    parent = self;
  }
  if (!([cfg isKindOfClass:[RARESPOTViewer class]])) {
    cfg = [[RARESPOTWidgetPane alloc] initWithRARESPOTWidget:cfg];
  }
  return [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) createViewerWithRAREiWidget:parent withNSString:nil withRARESPOTViewer:(RARESPOTViewer *) check_class_cast(cfg, [RARESPOTViewer class]) withJavaNetURL:context];
}

- (id<RAREiWidget>)createWidgetWithRAREiWidget:(id<RAREiWidget>)context
                    withRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp {
  if (context == nil) {
    context = self;
  }
  RAREBeanWidget *w = [[RAREBeanWidget alloc] initWithRAREiContainer:[((id<RAREiWidget>) nil_chk(context)) getContainerViewer] withRAREiPlatformComponent:comp];
  [w setParentWithRAREiContainer:[context getContainerViewer]];
  return w;
}

- (id<RAREiWidget>)createWidgetWithRAREiWidget:(id<RAREiWidget>)context
                                  withNSString:(NSString *)type {
  if (context == nil) {
    context = self;
  }
  RARESPOTWidget *cfg = (RARESPOTWidget *) check_class_cast([self createConfigurationObjectWithNSString:type], [RARESPOTWidget class]);
  return [RAREaContainer createWidgetWithRAREiContainer:[((id<RAREiWidget>) nil_chk(context)) getContainerViewer] withRARESPOTWidget:cfg];
}

- (id<RAREiWidget>)createWidgetWithRAREiWidget:(id<RAREiWidget>)context
                            withRARESPOTWidget:(RARESPOTWidget *)cfg {
  if (context == nil) {
    context = self;
  }
  return [RAREaContainer createWidgetWithRAREiContainer:[((id<RAREiWidget>) nil_chk(context)) getContainerViewer] withRARESPOTWidget:cfg];
}

- (void)deiconify {
}

- (void)dispose {
  if (![self isDisposable]) {
    return;
  }
  if ([self isDisposed]) {
    return;
  }
  if (theWindow_ != nil) {
    @try {
      [theWindow_ dispose];
    }
    @catch (JavaLangException *ignore) {
    }
  }
  if (windowTimer_ != nil) {
    @try {
      [windowTimer_ cancel];
    }
    @catch (JavaLangException *ignore) {
    }
  }
  if (clearStatusTimer_ != nil) {
    @try {
      [clearStatusTimer_ cancel];
    }
    @catch (JavaLangException *ignore) {
    }
  }
  if (theEvent_ != nil) {
    [theEvent_ dispose];
  }
  @try {
    [super dispose];
  }
  @finally {
    theEvent_ = nil;
    timerEvent_ = nil;
    windowManager_ = nil;
    windowParent_ = nil;
    windowSize_ = nil;
    windowTimer_ = nil;
    scriptHandler_ = nil;
    clearStatusTimer_ = nil;
    theWindow_ = nil;
    scriptHandler_ = nil;
  }
}

- (void)disposeOfWindow {
  [self dispose];
}

- (void)errorWithId:(id)message {
  [self errorWithNSString:nil withId:message withRAREiFunctionCallback:nil];
}

- (void)errorWithId:(id)message
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self errorWithNSString:nil withId:message withRAREiFunctionCallback:cb];
}

- (void)errorWithNSString:(NSString *)title
                   withId:(id)message
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if (title == nil) {
    title = [RAREPlatform getResourceAsStringWithNSString:@"Rare.runtime.text.errorTitle"];
  }
  RAREErrorInformation *ei = [self getErrorInformationWithId:message withNSString:title];
  RAREAlertPanel *d = [RAREAlertPanel errorWithRAREiWidget:self withRAREErrorInformation:ei];
  [((RAREAlertPanel *) nil_chk(d)) showDialogWithRAREiFunctionCallback:cb];
}

- (void)errorFeedback {
  [RAREUISoundHelper errorSound];
}

- (id)evalWithNSObjectArray:(IOSObjectArray *)args {
  id<RAREiScriptHandler_iScriptRunnable> r = [self createRunnerWithNSString:nil withId:IOSObjectArray_Get(nil_chk(args), 0) withNSString:((int) [args count] > 1) ? (NSString *) check_class_cast(IOSObjectArray_Get(args, 1), [NSString class]) : nil];
  [((id<RAREiScriptHandler_iScriptRunnable>) nil_chk(r)) setHandleExceptionWithBoolean:NO];
  [r run];
  return [r getResult];
}

- (void)executeActionWithNSString:(NSString *)actionName {
  RAREUIAction *a = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getActionWithNSString:actionName];
  if (a == nil) {
    NSString *s = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceAsStringWithNSString:@"Rare.runtime.text.undefinedAction"];
    @throw [[RAREApplicationException alloc] initWithNSString:[RAREUTHelper expandStringWithNSString:s withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ actionName } count:1 type:[IOSClass classWithClass:[NSString class]]]]];
  }
  if ([((RAREUIAction *) nil_chk(a)) isEnabled]) {
    RAREActionEvent *ae = [[RAREActionEvent alloc] initWithId:[self getDataComponent]];
    [a actionPerformedWithRAREActionEvent:ae];
  }
}

+ (NSString *)fileToURLStringWithJavaIoFile:(JavaIoFile *)file {
  if (file == nil) {
    return nil;
  }
  return [RAREJavaURLConnection toExternalFormWithJavaNetURL:[RAREaPlatformHelper fileToURLWithJavaIoFile:file]];
}

- (NSString *)formatDateWithJavaUtilDate:(JavaUtilDate *)date
                             withBoolean:(BOOL)time {
  if (time) {
    return [((JavaTextDateFormat *) nil_chk([((RAREDateContext *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getDefaultDateTimeContext])) getDisplayFormat])) formatWithJavaUtilDate:date];
  }
  else {
    return [((JavaTextDateFormat *) nil_chk([((RAREDateContext *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getDefaultDateContext])) getDisplayFormat])) formatWithJavaUtilDate:date];
  }
}

- (NSString *)formatDateWithJavaUtilDate:(JavaUtilDate *)date
                            withNSString:(NSString *)format {
  RAREUTSimpleDateFormatEx *df = [[RAREUTSimpleDateFormatEx alloc] initWithNSString:format];
  return [df formatWithJavaUtilDate:date];
}

- (void)handleExceptionWithJavaLangThrowable:(JavaLangThrowable *)e {
  if (!inExceptionHandler_ && ![self isDisposed]) {
    @try {
      inExceptionHandler_ = YES;
      if ([self isEventEnabledWithNSString:[RAREiConstants EVENT_ERROR]]) {
        RAREDataEvent *de = [[RAREDataEvent alloc] initWithId:[self getContainerComponent] withId:e];
        [self executeEventWithNSString:[RAREiConstants EVENT_ERROR] withJavaUtilEventObject:de];
        if ([de isConsumed]) {
          return;
        }
      }
    }
    @finally {
      inExceptionHandler_ = NO;
    }
  }
  [((id<RAREiExceptionHandler>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getDefaultExceptionHandler])) handleExceptionWithJavaLangThrowable:e];
}

- (void)hideProgressPopup {
  [RAREWaitCursorHandler hideProgressPopupWithRAREiPlatformComponent:[self getComponent] withBoolean:NO];
}

- (void)hideProgressPopupWithBoolean:(BOOL)force {
  [RAREWaitCursorHandler hideProgressPopupWithRAREiPlatformComponent:[self getComponent] withBoolean:force];
}

- (void)hideVirtualKeyboard {
  id<RAREiPlatformComponent> c = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getFocusOwner];
  if (c == nil) {
    c = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getPermanentFocusOwner];
  }
  if (c == nil) {
    c = [self getDataComponent];
  }
  [RAREPlatformHelper hideVirtualKeyboardWithRAREiPlatformComponent:c];
}

- (void)hideWaitCursor {
  [self hideWaitCursorWithBoolean:NO];
}

- (void)hideWaitCursorWithBoolean:(BOOL)force {
  [RAREWaitCursorHandler stopWaitCursorWithRAREiPlatformComponent:[self getComponent] withBoolean:force];
}

- (void)hideWindow {
  if (theWindow_ != nil) {
    [theWindow_ hideWindow];
  }
}

- (void)iconify {
}

- (void)invokeLaterWithId:(id)code {
  if ([code conformsToProtocol: @protocol(JavaLangRunnable)]) {
    [RAREPlatform invokeLaterWithJavaLangRunnable:(id<JavaLangRunnable>) check_protocol_cast(code, @protocol(JavaLangRunnable))];
    return;
  }
  [self invokeLaterWithId:code withId:nil];
}

- (void)invokeLaterWithId:(id)code
                   withId:(id)data {
  [self invokeLaterWithRAREiWidget:nil withId:code withId:data];
}

- (void)invokeLaterWithRAREiWidget:(id<RAREiWidget>)context
                            withId:(id)code
                            withId:(id)data {
  id<RAREiScriptHandler> sh = (context == nil) ? [((RAREScriptingEvent *) nil_chk(theEvent_)) getScriptHandler] : [context getScriptHandler];
  if (sh == nil) {
    sh = [self getScriptHandler];
  }
  if ([((id<RAREiScriptHandler>) nil_chk(sh)) getWindowViewer] != self) {
    sh = [self getScriptHandler];
    context = self;
  }
  RAREScriptingEvent *e = [((RAREWindowViewer *) check_class_cast([((id<RAREiScriptHandler>) nil_chk(sh)) getWindowViewer], [RAREWindowViewer class])) getEvent];
  RAREWidgetContext *wc = (context == nil) ? [((RAREScriptingEvent *) nil_chk(e)) getSourceContext] : [context getScriptingContext];
  if (wc == nil) {
    wc = [self getScriptingContext];
  }
  if (data == nil) {
    e = (RAREScriptingEvent *) check_class_cast([((RAREScriptingEvent *) nil_chk(e)) clone], [RAREScriptingEvent class]);
  }
  else {
    e = [[RAREScriptingEvent alloc] initWithRAREiScriptHandler:sh withNSString:[RAREiConstants EVENT_INVOKE_LATER] withJavaUtilEventObject:[[RAREDataEvent alloc] initWithId:[((RAREWidgetContext *) nil_chk(wc)) getWidget] withId:data] withId:[((RAREScriptingEvent *) nil_chk(e)) getSource] withId:[e getRelatedTarget]];
  }
  [((RAREScriptingEvent *) nil_chk(e)) setInvokeLaterWithBoolean:YES];
  [RAREPlatform invokeLaterWithJavaLangRunnable:[sh createRunnerWithRAREWidgetContext:wc withId:code withRAREScriptingEvent:e]];
}

- (void)loadScriptWithRAREActionLink:(RAREActionLink *)link {
  [self loadScriptExWithRAREActionLink:link withBoolean:NO withBoolean:NO withBoolean:NO];
}

- (void)loadScriptWithNSString:(NSString *)url {
  [self loadScriptExWithNSString:url withBoolean:NO withBoolean:YES withBoolean:YES];
}

- (void)loadScriptWithRAREActionLink:(RAREActionLink *)link
                         withBoolean:(BOOL)strict
                         withBoolean:(BOOL)optimized {
  [self loadScriptExWithRAREActionLink:link withBoolean:YES withBoolean:strict withBoolean:optimized];
}

- (void)loadScriptWithNSString:(NSString *)url
                   withBoolean:(BOOL)strict
                   withBoolean:(BOOL)optimized {
  [self loadScriptExWithNSString:url withBoolean:YES withBoolean:strict withBoolean:optimized];
}

- (BOOL)mailToWithNSString:(NSString *)uri {
  return [RAREPlatform mailToWithNSString:uri];
}

- (BOOL)mailToWithNSString:(NSString *)address
              withNSString:(NSString *)subject
              withNSString:(NSString *)body {
  return [RAREPlatform mailToWithNSString:address withNSString:subject withNSString:body];
}

- (void)maximize {
}

- (void)minimize {
}

- (void)moveByWithFloat:(float)x
              withFloat:(float)y {
  [((id<RAREiWindow>) nil_chk(theWindow_)) moveByWithFloat:x withFloat:y];
}

- (void)moveToWithFloat:(float)x
              withFloat:(float)y {
  [((id<RAREiWindow>) nil_chk(theWindow_)) moveToWithFloat:x withFloat:y];
}

- (long long int)nanoTime {
  return [JavaLangSystem nanoTime];
}

- (void)normal {
}

- (JavaUtilDate *)now {
  return [[JavaUtilDate alloc] init];
}

- (void)okCancelWithId:(id)message
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self okCancelWithNSString:nil withId:message withRAREiFunctionCallback:cb];
}

- (void)okCancelWithNSString:(NSString *)title
                      withId:(id)message
   withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  title = (title == nil) ? [self getTitle] : [self expandStringWithNSString:title withBoolean:NO];
  if ([message isKindOfClass:[NSString class]]) {
    message = [self expandStringWithNSString:(NSString *) check_class_cast(message, [NSString class]) withBoolean:NO];
  }
  RAREAlertPanel *d = [RAREAlertPanel okCancelWithRAREiWidget:self withNSString:title withId:message withRAREUIImageIcon:nil];
  [((RAREAlertPanel *) nil_chk(d)) showDialogWithRAREiFunctionCallback:cb];
}

- (RAREWindowViewer *)openWithNSString:(NSString *)url {
  return [self openWithNSString:url withNSString:nil withId:nil];
}

- (RAREWindowViewer *)openWithRARESPOTViewer:(RARESPOTViewer *)cfg
                                withNSString:(NSString *)winoptions {
  RAREActionLink *link = [[RAREActionLink alloc] init];
  [link setViewerConfigurationWithRARESPOTViewer:cfg];
  return [self openWithRAREActionLink:link withNSString:winoptions withId:nil];
}

- (RAREWindowViewer *)openWithRAREActionLink:(RAREActionLink *)link
                             withJavaUtilMap:(id<JavaUtilMap>)options
                                      withId:(id)viewerValue {
  id<RAREiWidget> w = self;
  id o = [((RAREScriptingEvent *) nil_chk(theEvent_)) getRelatedTarget];
  if ([o conformsToProtocol: @protocol(RAREiViewer)]) {
    id<RAREiViewer> ww = (id<RAREiViewer>) check_protocol_cast(o, @protocol(RAREiViewer));
    if ([((id<RAREiViewer>) nil_chk(ww)) getWindow] != nil) {
      w = ww;
    }
  }
  link = (RAREActionLink *) check_class_cast([((RAREActionLink *) nil_chk(link)) clone], [RAREActionLink class]);
  [link setURLWithJavaNetURL:[((RAREActionLink *) nil_chk(link)) getURLWithRAREiWidget:self]];
  [link setContextWithRAREiWidget:w];
  [link setWindowOptionsWithJavaUtilMap:options];
  id<RAREiViewer> v = [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) openViewerWindowWithRAREActionLink:link withId:viewerValue];
  if ([(id) v isKindOfClass:[RAREWindowViewer class]]) {
    return (RAREWindowViewer *) check_class_cast(v, [RAREWindowViewer class]);
  }
  return (v == nil) ? nil : [v getWindow];
}

- (RAREWindowViewer *)openWithRAREActionLink:(RAREActionLink *)link
                                withNSString:(NSString *)winoptions
                                      withId:(id)viewerValue {
  id<JavaUtilMap> options = [RAREUTCharScanner parseOptionStringExWithNSString:winoptions withChar:','];
  return [self openWithRAREActionLink:link withJavaUtilMap:options withId:viewerValue];
}

- (RAREWindowViewer *)openWithNSString:(NSString *)url
                          withNSString:(NSString *)winoptions
                                withId:(id)viewerValue {
  return [self openWithRAREActionLink:[[RAREActionLink alloc] initWithRAREiWidget:nil withNSString:url withNSString:nil] withNSString:winoptions withId:viewerValue];
}

- (RAREWindowViewer *)openDialogWithRAREiViewer:(id<RAREiViewer>)v {
  return [((id<RAREiViewer>) nil_chk(v)) showAsDialogWithNSString:nil withBoolean:YES];
}

- (RAREWindowViewer *)openDialogWithNSString:(NSString *)url {
  return [self openWithNSString:url withNSString:@"windowtype=dialog,modal=true" withId:nil];
}

- (RAREWindowViewer *)openDialogWithRAREActionLink:(RAREActionLink *)link
                                      withNSString:(NSString *)title
                                            withId:(id)viewerValue {
  if (title == nil) {
    return [self openWithRAREActionLink:link withNSString:@"windowtype=dialog,modal=true" withId:viewerValue];
  }
  else {
    return [self openWithRAREActionLink:link withNSString:[NSString stringWithFormat:@"windowtype=dialog,modal=true,title='%@'", title] withId:viewerValue];
  }
}

- (RAREWindowViewer *)openDialogWithNSString:(NSString *)url
                                withNSString:(NSString *)title
                                      withId:(id)viewerValue {
  if (title == nil) {
    return [self openWithNSString:url withNSString:@"windowtype=dialog,modal=true" withId:viewerValue];
  }
  else {
    return [self openWithNSString:url withNSString:[NSString stringWithFormat:@"windowtype=dialog,modal=true,title='%@'", title] withId:viewerValue];
  }
}

- (void)pack {
  [((id<RAREiWindow>) nil_chk(theWindow_)) pack];
}

- (void)promptWithNSString:(NSString *)prompt
 withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self promptWithNSString:nil withNSString:prompt withId:nil withRAREiFunctionCallback:cb];
}

- (void)promptWithNSString:(NSString *)prompt
                    withId:(id)value
 withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self promptWithNSString:nil withNSString:prompt withId:value withRAREiFunctionCallback:cb];
}

- (void)promptWithNSString:(NSString *)title
              withNSString:(NSString *)prompt
                    withId:(id)value
 withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if (cb == nil) {
    @throw [[JavaLangNullPointerException alloc] initWithNSString:@"callback cannot be null"];
  }
  title = (title == nil) ? [self getTitle] : [self expandStringWithNSString:[title description] withBoolean:NO];
  prompt = [self expandStringWithNSString:[((NSString *) nil_chk(prompt)) description] withBoolean:NO];
  [self toFront];
  if (title == nil) {
    title = [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getTitle];
  }
  if (value == nil) {
    value = @"";
  }
  RAREAlertPanel *d = [RAREAlertPanel promptWithRAREiWidget:self withNSString:title withNSString:prompt withId:value withRAREiPlatformIcon:nil];
  [((RAREAlertPanel *) nil_chk(d)) showDialogWithRAREiFunctionCallback:cb];
}

- (void)registerCollectionHandlerWithNSString:(NSString *)name
               withRAREiDataCollectionHandler:(id<RAREiDataCollectionHandler>)ch {
  [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) registerCollectionHandlerWithNSString:name withRAREiDataCollectionHandler:ch];
}

- (void)reloadForm {
}

- (void)removeOverlayWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  if ([(id) theWindow_ isKindOfClass:[RAREFrame class]]) {
    [((RAREFrame *) check_class_cast(theWindow_, [RAREFrame class])) removeOverlayWithRAREiPlatformComponent:c];
  }
}

- (void)removeOverlayWithRAREiWidget:(id<RAREiWidget>)w {
  if (w != nil) {
    [self removeOverlayWithRAREiPlatformComponent:[w getContainerComponent]];
  }
}

- (void)removeWindowDraggerWithRAREiWidget:(id<RAREiWidget>)widget {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)removeWindowListenerWithRAREiWindowListener:(id<RAREiWindowListener>)l {
  [((id<RAREiWindow>) nil_chk(theWindow_)) removeWindowListenerWithRAREiWindowListener:l];
}

- (void)resizeByWithInt:(int)width
                withInt:(int)height {
  RAREUIDimension *d = [((id<RAREiWindow>) nil_chk(theWindow_)) getSize];
  height += ((RAREUIDimension *) nil_chk(d))->height_;
  width += d->width_;
  [theWindow_ setSizeWithFloat:width withFloat:height];
}

- (void)resizeToWithInt:(int)width
                withInt:(int)height {
  [((id<RAREiWindow>) nil_chk(theWindow_)) setSizeWithFloat:width withFloat:height];
}

- (id<RAREUTiCancelable>)sendFormDataWithRAREiWidget:(id<RAREiWidget>)context
                                  withRAREActionLink:(RAREActionLink *)link
                                     withJavaUtilMap:(id<JavaUtilMap>)data
                                         withBoolean:(BOOL)multipart
               withRAREActionLink_ReturnDataTypeEnum:(RAREActionLink_ReturnDataTypeEnum *)returnType
                           withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  return [RAREPlatform sendFormDataWithRAREiWidget:context withRAREActionLink:link withJavaUtilMap:data withBoolean:multipart withRAREActionLink_ReturnDataTypeEnum:returnType withRAREiFunctionCallback:cb];
}

- (void)showProgressPopupWithJavaLangCharSequence:(id<JavaLangCharSequence>)message {
  [self showProgressPopupWithJavaLangCharSequence:message withRAREUTiCancelable:nil];
}

- (void)showProgressPopupWithJavaLangCharSequence:(id<JavaLangCharSequence>)message
                            withRAREUTiCancelable:(id<RAREUTiCancelable>)cancelable {
  [RAREWaitCursorHandler showProgressPopupWithRAREiPlatformComponent:[self getComponent] withJavaLangCharSequence:message withRAREUTiCancelable:cancelable];
}

- (void)showWaitCursor {
  [self showWaitCursorWithRAREUTiCancelable:nil];
}

- (void)showWaitCursorWithRAREUTiCancelable:(id<RAREUTiCancelable>)cancelable {
  [RAREWaitCursorHandler startWaitCursorWithRAREiPlatformComponent:[self getComponent] withRAREUTiCancelable:cancelable];
}

- (void)showWindow {
  [((id<RAREiWindow>) nil_chk(theWindow_)) showWindow];
}

- (void)showWindowWithInt:(int)x
                  withInt:(int)y {
  [self moveToWithFloat:x withFloat:y];
  [self showWindow];
}

- (id<RAREiCancelableFuture>)spawnWithNSObjectArray:(IOSObjectArray *)args {
  if ([IOSObjectArray_Get(nil_chk(args), 0) conformsToProtocol: @protocol(JavaLangRunnable)]) {
    return [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) executeBackgroundTaskWithJavaLangRunnable:(id<JavaLangRunnable>) check_protocol_cast(IOSObjectArray_Get(args, 0), @protocol(JavaLangRunnable))];
  }
  else if ([IOSObjectArray_Get(args, 0) conformsToProtocol: @protocol(JavaUtilConcurrentCallable)]) {
    return [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) executeBackgroundTaskWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>) check_protocol_cast(IOSObjectArray_Get(args, 0), @protocol(JavaUtilConcurrentCallable))];
  }
  else if ([IOSObjectArray_Get(args, 0) conformsToProtocol: @protocol(RAREiWorkerTask)]) {
    return [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) executeWorkerTaskWithRAREiWorkerTask:(id<RAREiWorkerTask>) check_protocol_cast(IOSObjectArray_Get(args, 0), @protocol(RAREiWorkerTask))];
  }
  else {
    return [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) executeBackgroundTaskWithJavaLangRunnable:[self createRunnerWithNSString:nil withId:IOSObjectArray_Get(args, 0) withNSString:((int) [args count] > 1) ? (NSString *) check_class_cast(IOSObjectArray_Get(args, 1), [NSString class]) : nil]];
  }
}

- (void)submitForm {
}

- (void)systemAlertWithId:(id)message {
  [self systemAlertWithId:message withRAREiPlatformIcon:nil withRAREiActionListener:nil];
}

- (void)systemAlertWithId:(id)message
    withRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon
  withRAREiActionListener:(id<RAREiActionListener>)listener {
  [RAREPlatformHelper systemAlertWithRAREiWidget:self withId:message withRAREiPlatformIcon:icon withRAREiActionListener:listener];
}

- (void)toBack {
  [((id<RAREiWindow>) nil_chk(theWindow_)) toBack];
}

- (void)toFront {
  [((id<RAREiWindow>) nil_chk(theWindow_)) toFront];
}

- (void)updateProgressPopupWithJavaLangCharSequence:(id<JavaLangCharSequence>)message {
  [RAREWaitCursorHandler updateProgressPopupWithRAREiPlatformComponent:[self getComponent] withJavaLangCharSequence:message];
}

- (id<RAREUTiCancelable>)uploadDataWithRAREiWidget:(id<RAREiWidget>)context
                                withRAREActionLink:(RAREActionLink *)link
                                            withId:(id)data
                                      withNSString:(NSString *)name
                                      withNSString:(NSString *)mimeType
                                      withNSString:(NSString *)fileName
             withRAREActionLink_ReturnDataTypeEnum:(RAREActionLink_ReturnDataTypeEnum *)returnType
                         withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  return [RAREPlatform uploadDataWithRAREiWidget:context withRAREActionLink:link withId:data withNSString:name withNSString:mimeType withNSString:fileName withRAREActionLink_ReturnDataTypeEnum:returnType withRAREiFunctionCallback:cb];
}

- (void)yesNoWithId:(id)message
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self yesNoWithNSString:nil withId:message withNSString:nil withNSString:nil withRAREiFunctionCallback:cb];
}

- (void)yesNoWithNSString:(NSString *)title
                   withId:(id)message
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self yesNoWithNSString:title withId:message withNSString:nil withNSString:nil withRAREiFunctionCallback:cb];
}

- (void)yesNoWithNSString:(NSString *)title
                   withId:(id)message
             withNSString:(NSString *)yes
             withNSString:(NSString *)no
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if (cb == nil) {
    @throw [[JavaLangNullPointerException alloc] initWithNSString:@"callback cannot be null"];
  }
  title = (title == nil) ? [self getTitle] : [self expandStringWithNSString:title withBoolean:NO];
  if ([message isKindOfClass:[NSString class]]) {
    message = [self expandStringWithNSString:(NSString *) check_class_cast(message, [NSString class]) withBoolean:NO];
  }
  RAREAlertPanel *d = [RAREAlertPanel yesNoWithRAREiWidget:self withNSString:title withId:message withRAREiPlatformIcon:nil withNSString:yes withNSString:no withBoolean:NO];
  [((RAREAlertPanel *) nil_chk(d)) showDialogWithRAREiFunctionCallback:cb];
}

- (void)yesNoCancelWithId:(id)message
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self yesNoCancelWithNSString:nil withId:message withNSString:nil withNSString:nil withRAREiFunctionCallback:cb];
}

- (void)yesNoCancelWithNSString:(NSString *)title
                         withId:(id)message
      withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self yesNoCancelWithNSString:title withId:message withNSString:nil withNSString:nil withNSString:nil withRAREiFunctionCallback:cb];
}

- (void)yesNoCancelWithNSString:(NSString *)title
                         withId:(id)message
                   withNSString:(NSString *)yes
                   withNSString:(NSString *)no
      withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self yesNoCancelWithNSString:title withId:message withNSString:yes withNSString:no withNSString:nil withRAREiFunctionCallback:cb];
}

- (void)yesNoCancelWithNSString:(NSString *)title
                         withId:(id)message
                   withNSString:(NSString *)yes
                   withNSString:(NSString *)no
                   withNSString:(NSString *)cancel
      withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  title = (title == nil) ? [self getTitle] : [self expandStringWithNSString:title withBoolean:NO];
  if ([message isKindOfClass:[NSString class]]) {
    message = [self expandStringWithNSString:(NSString *) check_class_cast(message, [NSString class]) withBoolean:NO];
  }
  RAREAlertPanel *d = [RAREAlertPanel yesNoCancelWithRAREiWidget:self withNSString:title withId:message withRAREiPlatformIcon:nil withNSString:yes withNSString:no withNSString:cancel];
  [((RAREAlertPanel *) nil_chk(d)) showDialogWithRAREiFunctionCallback:cb];
}

- (void)setBoundsWithFloat:(float)x
                 withFloat:(float)y
                 withFloat:(float)width
                 withFloat:(float)height {
  [((id<RAREiWindow>) nil_chk(theWindow_)) setBoundsWithFloat:x withFloat:y withFloat:width withFloat:height];
}

- (void)setCanCloseWithBoolean:(BOOL)can {
  canClose_ = can;
}

- (void)setCookie2ValueWithJavaNetURL:(JavaNetURL *)url
                         withNSString:(NSString *)value {
  [RAREPlatform setCookie2ValueWithJavaNetURL:url withNSString:value];
}

- (void)setCookieValueWithJavaNetURL:(JavaNetURL *)url
                        withNSString:(NSString *)value {
  [RAREPlatform setCookieValueWithJavaNetURL:url withNSString:value];
}

- (void)setDefaultButtonWithRAREPushButtonWidget:(RAREPushButtonWidget *)widget {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setEventExWithRAREScriptingEvent:(RAREScriptingEvent *)e {
  theEvent_ = e;
}

- (void)setFrameTitleAndIconWithNSString:(NSString *)frame
                            withNSString:(NSString *)title
                   withRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  id<RAREiFrame> f = [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getFrameWithNSString:frame];
  [((id<RAREiFrame>) nil_chk(f)) setTitleAndIconWithNSString:title withRAREiPlatformIcon:icon];
}

- (void)setInsertOverwriteWithBoolean:(BOOL)overwrite {
  id<RAREiStatusBar> sb = [((id<RAREiWindow>) nil_chk(theWindow_)) getStatusBar];
  if (sb != nil) {
    [sb setInsertOverwriteWithBoolean:overwrite];
  }
}

- (id<RAREUTiCancelable>)setIntervalWithId:(id)code
                                  withLong:(long long int)interval {
  return [self scheduleTaskWithNSString:@"setInterval" withId:code withLong:interval withBoolean:YES];
}

- (void)setLocationWithFloat:(float)x
                   withFloat:(float)y {
  [((id<RAREiWindow>) nil_chk(theWindow_)) setLocationWithFloat:x withFloat:y];
}

- (id<RAREiPlatformMenuBar>)setMenuBarWithRAREiPlatformMenuBar:(id<RAREiPlatformMenuBar>)mb {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) setMenuBarWithRAREiPlatformMenuBar:mb];
}

- (void)setRelativeFontSizeWithFloat:(float)size {
  id<RAREiPlatformAppContext> app = [self getAppContext];
  if (app != nil) {
    id<RAREiWindowManager> wm = [app getWindowManager];
    [((id<RAREiWindowManager>) nil_chk(wm)) setRelativeFontSizeWithFloat:size];
  }
}

- (void)setResizableWithBoolean:(BOOL)resizable {
  [((id<RAREiWindow>) nil_chk(theWindow_)) setResizableWithBoolean:resizable];
}

- (void)setStatusWithNSString:(NSString *)status {
  if (clearStatusTimer_ != nil) {
    @try {
      [clearStatusTimer_ cancel];
    }
    @catch (JavaLangException *e) {
    }
    clearStatusTimer_ = nil;
  }
  id<RAREiStatusBar> sb = [((id<RAREiWindow>) nil_chk(theWindow_)) getStatusBar];
  if (sb != nil) {
    [sb showMessageWithNSString:status];
  }
}

- (id<RAREiStatusBar>)setStatusBarWithRAREiStatusBar:(id<RAREiStatusBar>)sb {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) setStatusBarWithRAREiStatusBar:sb];
}

- (void)setStatusItemWithNSString:(NSString *)item
                     withNSString:(NSString *)value {
  id<RAREiStatusBar> sb = [((id<RAREiWindow>) nil_chk(theWindow_)) getStatusBar];
  if (sb != nil) {
    [sb setItemValueWithNSString:item withId:value];
  }
}

- (void)setStatusItemEnabledWithNSString:(NSString *)item
                             withBoolean:(BOOL)enabled {
  id<RAREiStatusBar> sb = [((id<RAREiWindow>) nil_chk(theWindow_)) getStatusBar];
  if (sb != nil) {
    [sb setItemEnabledWithNSString:item withBoolean:enabled];
  }
}

- (void)setThenClearStatusWithNSString:(NSString *)status
                               withInt:(int)seconds {
  id<RAREiStatusBar> sb = [((id<RAREiWindow>) nil_chk(theWindow_)) getStatusBar];
  if (sb == nil) {
    return;
  }
  if (clearStatusTimer_ != nil) {
    @try {
      [clearStatusTimer_ cancel];
    }
    @catch (JavaLangException *e) {
    }
    clearStatusTimer_ = nil;
  }
  [((id<RAREiStatusBar>) nil_chk(sb)) showMessageWithNSString:status];
  id<JavaLangRunnable> r = [[RAREaWindowViewer_$2 alloc] initWithRAREaWindowViewer:self withRAREiStatusBar:sb withNSString:status];
  if (seconds == -1) {
    seconds = 15;
  }
  if (seconds > 0) {
    id<RAREiTimer> t = [RAREPlatform createTimerWithNSString:@"clearStatusTimer"];
    (void) [((id<RAREiTimer>) nil_chk(t)) scheduleWithJavaLangRunnable:[[RAREaWindowViewer_$3 alloc] initWithJavaLangRunnable:r] withLong:seconds * 1000];
    clearStatusTimer_ = t;
  }
}

- (id<RAREUTiCancelable>)setTimeoutWithId:(id)code
                                 withLong:(long long int)timeout {
  return [self scheduleTaskWithNSString:@"setTimeout" withId:code withLong:timeout withBoolean:NO];
}

- (void)setTitleWithNSString:(NSString *)title {
  [((id<RAREiWindow>) nil_chk(theWindow_)) setTitleWithNSString:title];
}

- (id<RAREiToolBarHolder>)setToolBarHolderWithRAREiToolBarHolder:(id<RAREiToolBarHolder>)tbh {
  return nil;
}

- (id)getWithNSString:(NSString *)name {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getViewerWithNSString:name];
}

- (RAREUIAction *)getActionWithNSString:(NSString *)name {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getActionWithNSString:name];
}

- (RAREActionBar *)getActionBar {
  id<RAREiPlatformMenuBar> mb = [self getMenuBar];
  if ((mb != nil) && ([(id) [mb getMenuBarComponent] isKindOfClass:[RAREActionBar class]])) {
    return (RAREActionBar *) check_class_cast([mb getMenuBarComponent], [RAREActionBar class]);
  }
  return nil;
}

- (id<JavaUtilMap>)getActions {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getActions];
}

- (JavaNetURL *)getApplicationURL {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getApplicationURL];
}

- (RAREUIRectangle *)getBounds {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) getBounds];
}

- (NSString *)getClipboardContents {
  return nil;
}

- (JavaNetURL *)getCodeBase {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getCodeBase];
}

- (id<RAREiPlatformComponent>)getComponent {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) getComponent];
}

- (id<RAREUTiCancelable>)getContentWithRAREiWidget:(id<RAREiWidget>)context
                                            withId:(id)url
                                            withId:(id)returnType
                         withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  RAREActionLink_ReturnDataTypeEnum *type = nil;
  if ([returnType isKindOfClass:[RAREActionLink_ReturnDataTypeEnum class]]) {
    type = (RAREActionLink_ReturnDataTypeEnum *) returnType;
  }
  else {
    type = [RAREActionLink_ReturnDataTypeEnum valueOfWithNSString:[((NSString *) nil_chk([nil_chk(returnType) description])) uppercaseStringWithJRELocale:[JavaUtilLocale US]]];
  }
  return [RAREPlatform getContentWithRAREiWidget:(context == nil) ? nil : self withRAREActionLink:[self createActionLinkWithId:url] withRAREActionLink_ReturnDataTypeEnum:type withRAREiFunctionCallback:cb];
}

- (id<RAREUTiCancelable>)getContentAsJSONWithId:(id)url
                      withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  return [RAREPlatform getContentWithRAREiWidget:self withRAREActionLink:[self createActionLinkWithId:url] withRAREActionLink_ReturnDataTypeEnum:[RAREActionLink_ReturnDataTypeEnum JSON] withRAREiFunctionCallback:cb];
}

- (id<RAREUTiCancelable>)getContentAsListWithRAREiWidget:(id<RAREiWidget>)context
                                                  withId:(id)url
                                             withBoolean:(BOOL)tabular
                               withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  RAREActionLink_ReturnDataTypeEnum *type = tabular ? [RAREActionLink_ReturnDataTypeEnum TABLE] : [RAREActionLink_ReturnDataTypeEnum LIST];
  return [RAREPlatform getContentWithRAREiWidget:(context == nil) ? self : ((id) context) withRAREActionLink:[self createActionLinkWithRAREiWidget:context withId:url] withRAREActionLink_ReturnDataTypeEnum:type withRAREiFunctionCallback:cb];
}

- (id<RAREUTiCancelable>)getContentAsStringWithId:(id)url
                        withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  return [RAREPlatform getContentWithRAREiWidget:self withRAREActionLink:[self createActionLinkWithId:url] withRAREActionLink_ReturnDataTypeEnum:[RAREActionLink_ReturnDataTypeEnum STRING] withRAREiFunctionCallback:cb];
}

- (JavaNetURL *)getContextURL {
  return contextURL_;
}

- (id<JavaUtilList>)getCookieList {
  return [RAREPlatform getCookieList];
}

- (NSString *)getCookies {
  return [RAREPlatform getCookies];
}

- (RAREUICursor *)getCursorWithNSString:(NSString *)name {
  return [RAREUICursor getCursorWithNSString:name];
}

- (id<RAREiDataCollection>)getDataCollectionWithNSString:(NSString *)name {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getDataCollectionWithNSString:name];
}

- (RAREUIImageIcon *)getDelayedIconWithJavaNetURL:(JavaNetURL *)url
                             withRAREaUIImageIcon:(RAREaUIImageIcon *)delayedIcon
                                          withInt:(int)constraints
                                      withBoolean:(BOOL)startLoading {
  RAREUIImageIcon *icon = [[RAREUIImageIcon alloc] initWithJavaNetURL:url withNSString:[RAREJavaURLConnection toExternalFormWithJavaNetURL:url] withRAREaUIImageIcon:delayedIcon withInt:constraints];
  if (startLoading) {
    [RAREaPlatformHelper loadIconWithRAREiPlatformAppContext:[self getAppContext] withRAREUIImageIcon:icon];
  }
  return icon;
}

- (RAREUIImageIcon *)getDelayedIconWithJavaNetURL:(JavaNetURL *)url
                             withRAREaUIImageIcon:(RAREaUIImageIcon *)delayedIcon
                                  withRAREUIColor:(RAREUIColor *)bg
                                      withBoolean:(BOOL)startLoading {
  RAREUIImageIcon *icon = [[RAREUIImageIcon alloc] initWithJavaNetURL:url withNSString:[RAREJavaURLConnection toExternalFormWithJavaNetURL:url] withRAREaUIImageIcon:delayedIcon withRAREUIColor:bg];
  if (startLoading) {
    [RAREaPlatformHelper loadIconWithRAREiPlatformAppContext:[self getAppContext] withRAREUIImageIcon:icon];
  }
  return icon;
}

- (RAREUIImage *)getDelayedImageWithJavaNetURL:(JavaNetURL *)url {
  return [RAREUIImageHelper createImageWithJavaNetURL:url withBoolean:YES withFloat:0];
}

- (RAREUIImage *)getDelayedImageWithJavaNetURL:(JavaNetURL *)url
                                       withInt:(int)size
                                       withInt:(int)constraints
         withRAREiImagePainter_ScalingTypeEnum:(RAREiImagePainter_ScalingTypeEnum *)st
                               withRAREUIColor:(RAREUIColor *)bg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (float)getDevicePixelRatio {
  return [RAREScreenUtils getPixelMultiplier];
}

- (RAREErrorInformation *)getErrorInformationWithId:(id)error {
  return [((id<RAREiScriptHandler>) nil_chk([self getScriptHandler])) getErrorInformationWithRAREiPlatformAppContext:appContext_ withId:error];
}

- (RAREErrorInformation *)getErrorInformationWithId:(id)error
                                       withNSString:(NSString *)title {
  RAREErrorInformation *ei;
  if ([error isKindOfClass:[RAREErrorInformation class]]) {
    ei = (RAREErrorInformation *) check_class_cast(error, [RAREErrorInformation class]);
    if ((title != nil) && ([title sequenceLength] > 0)) {
      ei = (RAREErrorInformation *) check_class_cast([((RAREErrorInformation *) nil_chk(ei)) clone], [RAREErrorInformation class]);
      [((RAREErrorInformation *) nil_chk(ei)) setTitleWithNSString:title];
    }
  }
  else if ([error isKindOfClass:[NSString class]]) {
    ei = [[RAREErrorInformation alloc] initWithNSString:title withNSString:(NSString *) check_class_cast(error, [NSString class])];
  }
  else if ([error isKindOfClass:[JavaLangThrowable class]]) {
    ei = [[RAREErrorInformation alloc] initWithNSString:title withJavaLangThrowable:(JavaLangThrowable *) check_class_cast(error, [JavaLangThrowable class])];
  }
  else {
    ei = [((id<RAREiScriptHandler>) nil_chk([self getScriptHandler])) getErrorInformationWithRAREiPlatformAppContext:appContext_ withId:error];
    if (title != nil) {
      [((RAREErrorInformation *) nil_chk(ei)) setTitleWithNSString:title];
    }
  }
  return ei;
}

- (RAREScriptingEvent *)getEvent {
  return theEvent_;
}

- (id<RAREiPlatformComponent>)getFocusOwner {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getPermanentFocusOwner];
}

- (id<RAREiWidget>)getFocusedWidget {
  id<RAREiWidget> w = [RAREPlatform findWidgetForComponentWithId:[self getFocusOwner]];
  if (w == nil) {
    w = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getRootViewer];
    if ([((id<RAREiViewer>) nil_chk([((id<RAREiWidget>) nil_chk(w)) getViewer])) getUIWindow] != theWindow_) {
      return self;
    }
  }
  return w;
}

- (id<RAREiFormViewer>)getFormViewer {
  return self;
}

- (id<RAREiFrame>)getFrameWithNSString:(NSString *)name {
  return [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getFrameWithNSString:name];
}

- (IOSObjectArray *)getFrames {
  return [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getFrames];
}

- (id<JavaUtilMap>)getIcons {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceIcons];
}

- (RAREUIDimension *)getInnerSizeWithRAREUIDimension:(RAREUIDimension *)size {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) getInnerSizeWithRAREUIDimension:size];
}

- (int)getInnerHeight {
  return [((RAREUIDimension *) nil_chk([((id<RAREiWindow>) nil_chk(theWindow_)) getInnerSizeWithRAREUIDimension:[[RAREUIDimension alloc] init]])) intHeight];
}

- (int)getInnerWidth {
  return [((RAREUIDimension *) nil_chk([((id<RAREiWindow>) nil_chk(theWindow_)) getInnerSizeWithRAREUIDimension:[[RAREUIDimension alloc] init]])) intWidth];
}

- (RAREaWindowViewer_WindowLocation *)getLocation {
  if (RAREaWindowViewer__location_ == nil) {
    RAREaWindowViewer__location_ = [[RAREaWindowViewer_WindowLocation alloc] initWithRAREaWindowViewer:self];
  }
  return RAREaWindowViewer__location_;
}

- (id<RAREiPlatformMenuBar>)getMenuBar {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) getMenuBar];
}

- (id)getNamedItemWithNSString:(NSString *)name {
  id o = [super getNamedItemWithNSString:name];
  return (o == nil) ? ((id) [self getViewerWithNSString:name]) : o;
}

- (JavaUtilEventObject *)getNativeEvent {
  return [((RAREScriptingEvent *) nil_chk(theEvent_)) getUIEvent];
}

- (RAREaWindowViewer_BrowserNavigator *)getNavigator {
  if (RAREaWindowViewer__navigator_ == nil) {
    RAREaWindowViewer__navigator_ = [[RAREaWindowViewer_BrowserNavigator alloc] init];
  }
  return RAREaWindowViewer__navigator_;
}

- (id<RAREiContainer>)getParent {
  return windowParent_;
}

- (RARERenderableDataItem *)getParentItem {
  return windowParent_;
}

- (id<RAREiPlatformComponent>)getPermanentFocusOwner {
  return [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getPermanentFocusOwner];
}

- (id<RAREiWidget>)getPermanentFocusedWidget {
  id<RAREiWidget> w = [RAREPlatform findWidgetForComponentWithId:[self getPermanentFocusOwner]];
  if (w == nil) {
    w = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getRootViewer];
    if ([((id<RAREiViewer>) nil_chk([((id<RAREiWidget>) nil_chk(w)) getViewer])) getUIWindow] != theWindow_) {
      return self;
    }
  }
  return w;
}

- (float)getRelativeFontSize {
  return [RAREUIFontHelper getRelativeFontSize];
}

- (RAREUIImageIcon *)getResourceIconWithNSString:(NSString *)name {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceAsIconWithNSString:name];
}

- (id<RAREiTarget>)getRootTarget {
  if ([((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getRootViewer] == self) {
    return [windowManager_ getTarget];
  }
  return [((id<RAREiWindow>) nil_chk(theWindow_)) getTarget];
}

- (id<RAREiViewer>)getRootViewer {
  id<RAREiTarget> t = [self getRootTarget];
  return (t == nil) ? nil : [t getViewer];
}

- (double)getRuntimeVersion {
  return RAREiConstants_APPLICATION_VERSION;
}

- (int)getScreenX {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) getScreenX];
}

- (int)getScreenY {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) getScreenY];
}

- (id<RAREiScriptHandler>)getScriptHandler {
  return (scriptHandler_ == nil) ? [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getScriptingManager] : scriptHandler_;
}

- (id)getSelection {
  return [self getTitle];
}

- (RAREaWindowViewer *)getSelf {
  return self;
}

- (RAREUIDimension *)getSize {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) getSize];
}

- (JavaNetURL *)getSourceURL {
  if (sourceURL_ != nil) {
    return sourceURL_;
  }
  id<RAREiTarget> t = [((RAREWindowViewer *) nil_chk([self getWindow])) getTarget];
  id<RAREiViewer> v = (t == nil) ? nil : [t getViewer];
  return (v == nil) ? nil : [v getSourceURL];
}

- (NSString *)getStatus {
  id<RAREiStatusBar> sb = [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getStatusBar];
  return (sb == nil) ? @"" : [sb getMessage];
}

- (id<RAREiStatusBar>)getStatusBar {
  return [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getStatusBar];
}

- (NSString *)getStringWithNSString:(NSString *)name {
  return [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) getResourceAsStringWithNSString:name];
}

- (NSString *)getStringWithNSString:(NSString *)name
                  withNSObjectArray:(IOSObjectArray *)args {
  name = [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) getResourceAsStringWithNSString:name];
  return ((name == nil) || (args == nil)) ? name : [RAREaPlatformHelper formatWithNSString:name withNSObjectArray:args];
}

- (NSString *)getStringExWithNSString:(NSString *)name
                    withNSStringArray:(IOSObjectArray *)args {
  name = [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) getResourceAsStringWithNSString:name];
  return ((name == nil) || (args == nil)) ? name : [RAREUTHelper expandStringWithNSString:name withNSStringArray:args];
}

- (id<JavaUtilMap>)getStrings {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceStrings];
}

- (id<RAREiTarget>)getTargetWithNSString:(NSString *)name {
  return [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getTargetWithNSString:name];
}

- (NSString *)getTargetName {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) getTargetName];
}

- (IOSObjectArray *)getTargets {
  return [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getTargets];
}

- (NSString *)getTitle {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) getTitle];
}

- (id<RAREiToolBarHolder>)getToolBarHolder {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) getToolBarHolder];
}

- (RAREaWindowViewer *)getTop {
  id<RAREiViewer> v = [((id<RAREiPlatformWindowManager>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowManager])) getRootViewer];
  if ([(id) v isKindOfClass:[RAREaWindowViewer class]]) {
    return (RAREaWindowViewer *) check_class_cast(v, [RAREaWindowViewer class]);
  }
  RAREaWindowViewer *top = windowParent_;
  RAREaWindowViewer *p = windowParent_;
  while (p != nil) {
    p = (RAREaWindowViewer *) check_class_cast([((RAREaWindowViewer *) nil_chk(p)) getParentItem], [RAREaWindowViewer class]);
    if (p != nil) {
      top = p;
    }
  }
  return top;
}

- (id)getUIWindow {
  return [((id<RAREiWindow>) nil_chk(theWindow_)) getUIWindow];
}

- (id<RAREiViewer>)getViewerWithNSString:(NSString *)name {
  if ((windowManager_ == nil) || (name == nil)) {
    return nil;
  }
  id<RAREiViewer> v = [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getViewerWithNSString:name];
  return v;
}

- (IOSObjectArray *)getViewers {
  return [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getViewers];
}

- (id<RAREiWidget>)getWidgetWithNSString:(NSString *)name {
  if ((windowManager_ == nil) || (name == nil)) {
    return nil;
  }
  int n = [((NSString *) nil_chk(name)) indexOf:'/'];
  if (n != -1) {
    NSString *s = [name substring:0 endIndex:n];
    id<RAREiViewer> v = [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getViewerWithNSString:s];
    if (!([(id) v conformsToProtocol: @protocol(RAREiContainer)])) {
      return nil;
    }
    return [((id<RAREiContainer>) check_protocol_cast(v, @protocol(RAREiContainer))) getWidgetFromPathWithNSString:[name substring:n + 1]];
  }
  id<RAREiViewer> v = [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getViewerWithNSString:name];
  if (v != nil) {
    return v;
  }
  return [super getWidgetWithNSString:name];
}

- (int)getWidgetCount {
  int count = 0;
  if ([((id<RAREiTarget>) nil_chk([((id<RAREiWindow>) nil_chk(theWindow_)) getTarget])) getViewer] != nil) {
    count++;
  }
  if ([self getMenuBar] != nil) {
    count++;
  }
  if ([self getStatusBar] != nil) {
    count++;
  }
  if ([self getToolBarHolder] != nil) {
    count++;
  }
  return count;
}

- (id<RAREiWidget>)getWidgetExWithNSStringArray:(IOSObjectArray *)name {
  if ((windowManager_ == nil) || (name == nil) || ((int) [name count] == 0)) {
    return nil;
  }
  int len = (int) [((IOSObjectArray *) nil_chk(name)) count];
  if (len == 1) {
    return [self getWidgetWithNSString:IOSObjectArray_Get(name, 0)];
  }
  id<RAREiViewer> v = [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) getViewerWithNSString:IOSObjectArray_Get(name, 0)];
  for (int i = 1; i < len - 1; i++) {
    if (!([(id) v conformsToProtocol: @protocol(RAREiContainer)])) {
      break;
    }
    id<RAREiWidget> w = [((id<RAREiContainer>) check_protocol_cast(v, @protocol(RAREiContainer))) getWidgetWithNSString:IOSObjectArray_Get(name, i)];
    v = ([(id) w conformsToProtocol: @protocol(RAREiViewer)]) ? (id<RAREiViewer>) check_protocol_cast(w, @protocol(RAREiViewer)) : nil;
  }
  return ([(id) v conformsToProtocol: @protocol(RAREiContainer)]) ? [((id<RAREiContainer>) check_protocol_cast(v, @protocol(RAREiContainer))) getWidgetWithNSString:IOSObjectArray_Get(name, len - 1)] : nil;
}

- (RAREWindowViewer *)getWindow {
  id<RAREiContainer> p = [self getParent];
  return (p == nil) ? [RAREPlatform getWindowViewer] : [p getWindow];
}

- (BOOL)isApplet {
  return NO;
}

- (BOOL)isClosingAllowed {
  BOOL can = canClose_;
  canClose_ = YES;
  return can;
}

- (BOOL)isMaximized {
  return ([self getWidth] == [RAREUIScreen getWidth]) && ([self getHeight] == [RAREUIScreen getHeight]);
}

- (BOOL)isRetainInitialWidgetValues {
  return NO;
}

- (BOOL)isWebStart {
  return NO;
}

- (RAREScriptingEvent *)getTimerEvent {
  if (timerEvent_ == nil) {
    timerEvent_ = [[RAREScriptingEvent alloc] initWithRAREiScriptHandler:[self getScriptHandler] withNSString:[RAREiConstants ATTRIBUTE_TIMER] withJavaUtilEventObject:[[JavaUtilEventObject alloc] initWithId:theWindow_] withId:theWindow_ withId:nil];
  }
  return timerEvent_;
}

- (id<JavaUtilList>)getWidgetListEx {
  [((RAREUTIdentityArrayList *) nil_chk(widgetList_)) clear];
  id<RAREiPlatformMenuBar> mb = [self getMenuBar];
  if (mb != nil) {
    [widgetList_ addWithId:[((id<RAREiPlatformComponent>) nil_chk([mb getContainerComponent])) getWidget]];
  }
  id<RAREiToolBarHolder> tb = [self getToolBarHolder];
  if (tb != nil) {
    [widgetList_ addWithId:[((id<RAREiPlatformComponent>) nil_chk([((id<RAREiToolBar>) nil_chk([tb getToolBar])) getComponent])) getWidget]];
  }
  id<RAREiViewer> v = ((theWindow_ == nil) || ([theWindow_ getTarget] == nil)) ? nil : [((id<RAREiTarget>) nil_chk([theWindow_ getTarget])) getViewer];
  if (v != nil) {
    [widgetList_ addWithId:v];
  }
  id<RAREiStatusBar> sb = [self getStatusBar];
  if (sb != nil) {
    [widgetList_ addWithId:[((id<RAREiPlatformComponent>) nil_chk([sb getComponent])) getWidget]];
  }
  return widgetList_;
}

- (id<RAREiScriptHandler_iScriptRunnable>)createRunnerWithNSString:(NSString *)name
                                                            withId:(id)code
                                                      withNSString:(NSString *)language {
  id<RAREiScriptHandler> sh = [self getScriptHandler];
  id<RAREiScriptHandler_iScriptRunnable> r;
  id script;
  if (language == nil) {
    if ([code isKindOfClass:[NSString class]]) {
      script = [((id<RAREiScriptHandler>) nil_chk(sh)) compileWithRAREWidgetContext:[self getScriptingContext] withNSString:name withNSString:(NSString *) check_class_cast(code, [NSString class])];
    }
    else {
      script = code;
    }
    r = [((id<RAREiScriptHandler>) nil_chk(sh)) createRunnerWithRAREWidgetContext:[self getScriptingContext] withId:script withRAREScriptingEvent:nil];
  }
  else {
    r = [((id<RAREiScriptHandler>) nil_chk(sh)) createRunnerWithRAREWidgetContext:[self getScriptingContext] withNSString:(NSString *) check_class_cast(code, [NSString class]) withNSString:language withRAREScriptingEvent:nil];
  }
  return r;
}

- (void)loadScriptExWithRAREActionLink:(RAREActionLink *)link
                           withBoolean:(BOOL)use
                           withBoolean:(BOOL)strict
                           withBoolean:(BOOL)optimized {
  NSString *language = [((RAREActionLink *) nil_chk(link)) getMimeType];
  NSString *s = [link getContentAsString];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    NSString *location = @"";
    if ([link isInlineURL]) {
      location = @"inline";
    }
    else {
      @try {
        JavaNetURL *url = [link getURLWithRAREiWidget:self];
        location = [((JavaNetURL *) nil_chk(url)) toExternalForm];
      }
      @catch (JavaIoIOException *e) {
        [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
      }
    }
    if (use) {
      BOOL oo = [RAREFunctions isOptimizationEnabled];
      BOOL st = [RAREFunctions isStrictScriptingMode];
      @try {
        [RAREFunctions setOptimizationEnabledWithBoolean:optimized];
        [RAREFunctions setStrictScriptingModeWithBoolean:strict];
        [((id<RAREiScriptHandler>) nil_chk([self getScriptHandler])) loadScriptWithNSString:location withNSString:s withNSString:language];
      }
      @finally {
        [RAREFunctions setOptimizationEnabledWithBoolean:oo];
        [RAREFunctions setStrictScriptingModeWithBoolean:st];
      }
    }
    else {
      [((id<RAREiScriptHandler>) nil_chk([self getScriptHandler])) loadScriptWithNSString:location withNSString:s withNSString:language];
    }
  }
}

- (void)loadScriptExWithNSString:(NSString *)url
                     withBoolean:(BOOL)use
                     withBoolean:(BOOL)strict
                     withBoolean:(BOOL)optimized {
  JavaNetURL *u = nil;
  @try {
    NSString *name = [((id<RAREiScriptHandler>) nil_chk([self getScriptHandler])) getScriptingName];
    if (![((NSString *) nil_chk(url)) hasPrefix:@"/"] && (name != nil) && ([name hasPrefix:@"http"] || [name hasPrefix:@"file:"] || [name hasPrefix:@"jar:"])) {
      if ([url indexOf:':'] == -1) {
        u = [self getURLWithNSString:name];
        if (u != nil) {
          u = [[JavaNetURL alloc] initWithJavaNetURL:u withNSString:url];
        }
      }
    }
  }
  @catch (JavaLangException *e) {
    u = nil;
  }
  if (u == nil) {
    u = [self getURLWithNSString:url];
  }
  [self loadScriptExWithRAREActionLink:[[RAREActionLink alloc] initWithRAREiWidget:self withJavaNetURL:u] withBoolean:use withBoolean:strict withBoolean:optimized];
}

- (id<RAREUTiCancelable>)scheduleTaskWithNSString:(NSString *)name
                                           withId:(id)code
                                         withLong:(long long int)timeout
                                      withBoolean:(BOOL)repeats {
  if ((appContext_ == nil) || [appContext_ isShuttingDown]) {
    return nil;
  }
  id<RAREiScriptHandler_iScriptRunnable> r = [self createRunnerWithNSString:name withId:code withNSString:nil];
  if (windowTimer_ == nil) {
    windowTimer_ = [RAREPlatform createTimerWithNSString:@"windowTimer"];
  }
  id<JavaLangRunnable> task = [[RAREaWindowViewer_$4 alloc] initWithRAREaWindowViewer:self withRAREiScriptHandler_iScriptRunnable:r];
  if (repeats) {
    return [((id<RAREiTimer>) nil_chk(windowTimer_)) scheduleWithJavaLangRunnable:task withLong:timeout withLong:timeout];
  }
  else {
    return [((id<RAREiTimer>) nil_chk(windowTimer_)) scheduleWithJavaLangRunnable:task withLong:timeout];
  }
}

- (void)copyAllFieldsTo:(RAREaWindowViewer *)other {
  [super copyAllFieldsTo:other];
  other->canClose_ = canClose_;
  other->clearStatusTimer_ = clearStatusTimer_;
  other->scriptHandler_ = scriptHandler_;
  other->theEvent_ = theEvent_;
  other->theWindow_ = theWindow_;
  other->timerEvent_ = timerEvent_;
  other->windowManager_ = windowManager_;
  other->windowParent_ = windowParent_;
  other->windowSize_ = windowSize_;
  other->windowTimer_ = windowTimer_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "activateViewerWithRAREActionLink:", NULL, "V", 0x1, "JavaIoIOException" },
    { "activateViewerWithId:withNSString:", NULL, "V", 0x1, "JavaIoIOException" },
    { "activateViewerWithRAREiWidget:withId:withNSString:", NULL, "V", 0x1, "JavaIoIOException" },
    { "addWindowDraggerWithRAREiWidget:", NULL, "V", 0x401, NULL },
    { "browseWithNSString:", NULL, "Z", 0x1, "JavaNetMalformedURLException" },
    { "browseWithJavaNetURL:", NULL, "Z", 0x1, NULL },
    { "canDrop", NULL, "Z", 0x1, NULL },
    { "createActionLinkWithId:", NULL, "LRAREActionLink", 0x1, "JavaNetMalformedURLException" },
    { "createActionLinkWithRAREiWidget:withId:", NULL, "LRAREActionLink", 0x1, "JavaNetMalformedURLException" },
    { "createAnimatorWithNSString:", NULL, "LRAREiPlatformAnimator", 0x1, NULL },
    { "createCancelableRunnerWithId:withId:withNSString:", NULL, "LRAREiScriptHandler_iScriptRunnable", 0x1, NULL },
    { "createConfigurationObjectWithRAREActionLink:", NULL, "LiSPOTElement", 0x1, "JavaLangException" },
    { "createConfigurationObjectWithNSString:", NULL, "LiSPOTElement", 0x1, NULL },
    { "createConfigurationObjectWithRAREActionLink:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, "JavaLangException" },
    { "createConfigurationObjectWithNSString:withNSString:", NULL, "LiSPOTElement", 0x1, NULL },
    { "createDataCollectionWithRAREActionLink:withRAREiFunctionCallback:", NULL, "LRAREiDataCollection", 0x1, NULL },
    { "createDataCollectionWithRAREiWidget:withJavaUtilList:", NULL, "LRAREiDataCollection", 0x1, NULL },
    { "createDataCollectionWithRAREActionLink:withBoolean:withRAREiFunctionCallback:", NULL, "LRAREiDataCollection", 0x1, NULL },
    { "createDataCollectionWithNSString:withRAREActionLink:withBoolean:withRAREiFunctionCallback:", NULL, "LRAREiDataCollection", 0x1, NULL },
    { "createDataCollectionWithNSString:withNSString:withRAREActionLink:withJavaUtilMap:withBoolean:withRAREiFunctionCallback:", NULL, "LRAREiDataCollection", 0x1, NULL },
    { "createImagePainterWithRAREiPlatformIcon:", NULL, "LRAREiImagePainter", 0x401, NULL },
    { "createImagePainterWithRAREUIImage:", NULL, "LRAREiImagePainter", 0x1, NULL },
    { "createInlineActionLinkWithNSString:withNSString:", NULL, "LRAREActionLink", 0x1, NULL },
    { "createInlineURLWithNSString:withNSString:", NULL, "LJavaNetURL", 0x1, "JavaNetMalformedURLException" },
    { "createPopupMenuWithRAREiWidget:", NULL, "LRAREUIPopupMenu", 0x1, NULL },
    { "createPopupMenuWithRAREiWidget:withNSString:", NULL, "LRAREUIPopupMenu", 0x1, "JavaLangException" },
    { "createPopupMenuWithRAREiWidget:withNSString:withBoolean:", NULL, "LRAREUIPopupMenu", 0x1, "JavaLangException" },
    { "createRunnableWithNSObjectArray:", NULL, "LRAREiScriptHandler_iScriptRunnable", 0x81, NULL },
    { "createViewerWithRAREActionLink:", NULL, "LRAREiViewer", 0x1, NULL },
    { "createViewerWithNSString:", NULL, "LRAREiViewer", 0x1, "JavaNetMalformedURLException" },
    { "createViewerWithRAREActionLink:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, "JavaNetMalformedURLException" },
    { "createViewerWithRAREiWidget:withRAREiPlatformComponent:", NULL, "LRAREiViewer", 0x1, NULL },
    { "createViewerWithRAREiWidget:withNSString:", NULL, "LRAREiViewer", 0x1, "JavaNetMalformedURLException" },
    { "createViewerWithRAREiWidget:withRARESPOTWidget:", NULL, "LRAREiViewer", 0x1, NULL },
    { "createViewerWithNSString:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, "JavaNetMalformedURLException" },
    { "createViewerWithRAREiWidget:withNSString:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, "JavaNetMalformedURLException" },
    { "createViewerWithRAREiWidget:withRARESPOTWidget:withJavaNetURL:", NULL, "LRAREiViewer", 0x1, NULL },
    { "createWidgetWithRAREiWidget:withRAREiPlatformComponent:", NULL, "LRAREiWidget", 0x1, NULL },
    { "createWidgetWithRAREiWidget:withNSString:", NULL, "LRAREiWidget", 0x1, NULL },
    { "createWidgetWithRAREiWidget:withRARESPOTWidget:", NULL, "LRAREiWidget", 0x1, NULL },
    { "evalWithNSObjectArray:", NULL, "LNSObject", 0x81, NULL },
    { "fileToURLStringWithJavaIoFile:", NULL, "LNSString", 0x9, "JavaNetMalformedURLException" },
    { "formatDateWithJavaUtilDate:withBoolean:", NULL, "LNSString", 0x1, NULL },
    { "formatDateWithJavaUtilDate:withNSString:", NULL, "LNSString", 0x1, NULL },
    { "loadScriptWithRAREActionLink:", NULL, "V", 0x1, "JavaIoIOException" },
    { "loadScriptWithNSString:", NULL, "V", 0x1, "JavaIoIOException" },
    { "loadScriptWithRAREActionLink:withBoolean:withBoolean:", NULL, "V", 0x1, "JavaIoIOException" },
    { "loadScriptWithNSString:withBoolean:withBoolean:", NULL, "V", 0x1, "JavaIoIOException" },
    { "mailToWithNSString:", NULL, "Z", 0x1, NULL },
    { "mailToWithNSString:withNSString:withNSString:", NULL, "Z", 0x1, NULL },
    { "now", NULL, "LJavaUtilDate", 0x1, NULL },
    { "openWithNSString:", NULL, "LRAREWindowViewer", 0x1, "JavaIoIOException" },
    { "openWithRARESPOTViewer:withNSString:", NULL, "LRAREWindowViewer", 0x1, "JavaIoIOException" },
    { "openWithRAREActionLink:withJavaUtilMap:withId:", NULL, "LRAREWindowViewer", 0x1, "JavaIoIOException" },
    { "openWithRAREActionLink:withNSString:withId:", NULL, "LRAREWindowViewer", 0x1, "JavaIoIOException" },
    { "openWithNSString:withNSString:withId:", NULL, "LRAREWindowViewer", 0x1, "JavaIoIOException" },
    { "openDialogWithRAREiViewer:", NULL, "LRAREWindowViewer", 0x1, NULL },
    { "openDialogWithNSString:", NULL, "LRAREWindowViewer", 0x1, "JavaIoIOException" },
    { "openDialogWithRAREActionLink:withNSString:withId:", NULL, "LRAREWindowViewer", 0x1, "JavaIoIOException" },
    { "openDialogWithNSString:withNSString:withId:", NULL, "LRAREWindowViewer", 0x1, "JavaIoIOException" },
    { "removeWindowDraggerWithRAREiWidget:", NULL, "V", 0x401, NULL },
    { "sendFormDataWithRAREiWidget:withRAREActionLink:withJavaUtilMap:withBoolean:withRAREActionLink_ReturnDataTypeEnum:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, NULL },
    { "spawnWithNSObjectArray:", NULL, "LRAREiCancelableFuture", 0x81, NULL },
    { "uploadDataWithRAREiWidget:withRAREActionLink:withId:withNSString:withNSString:withNSString:withRAREActionLink_ReturnDataTypeEnum:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, NULL },
    { "setDefaultButtonWithRAREPushButtonWidget:", NULL, "V", 0x401, NULL },
    { "setIntervalWithId:withLong:", NULL, "LRAREUTiCancelable", 0x1, NULL },
    { "setMenuBarWithRAREiPlatformMenuBar:", NULL, "LRAREiPlatformMenuBar", 0x1, NULL },
    { "setStatusBarWithRAREiStatusBar:", NULL, "LRAREiStatusBar", 0x1, NULL },
    { "setTimeoutWithId:withLong:", NULL, "LRAREUTiCancelable", 0x1, NULL },
    { "setToolBarHolderWithRAREiToolBarHolder:", NULL, "LRAREiToolBarHolder", 0x1, NULL },
    { "getWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getActionWithNSString:", NULL, "LRAREUIAction", 0x1, NULL },
    { "getActionBar", NULL, "LRAREActionBar", 0x1, NULL },
    { "getActions", NULL, "LJavaUtilMap", 0x1, NULL },
    { "getApplicationURL", NULL, "LJavaNetURL", 0x1, NULL },
    { "getBounds", NULL, "LRAREUIRectangle", 0x1, NULL },
    { "getClipboardContents", NULL, "LNSString", 0x1, NULL },
    { "getCodeBase", NULL, "LJavaNetURL", 0x1, NULL },
    { "getComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getContentWithRAREiWidget:withId:withId:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, "JavaNetMalformedURLException" },
    { "getContentAsJSONWithId:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, "JavaNetMalformedURLException" },
    { "getContentAsListWithRAREiWidget:withId:withBoolean:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, "JavaNetMalformedURLException" },
    { "getContentAsStringWithId:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, "JavaNetMalformedURLException" },
    { "getContextURL", NULL, "LJavaNetURL", 0x1, NULL },
    { "getCookieList", NULL, "LJavaUtilList", 0x1, NULL },
    { "getCookies", NULL, "LNSString", 0x1, NULL },
    { "getCursorWithNSString:", NULL, "LRAREUICursor", 0x1, NULL },
    { "getDataCollectionWithNSString:", NULL, "LRAREiDataCollection", 0x1, NULL },
    { "getDelayedIconWithJavaNetURL:withRAREaUIImageIcon:withInt:withBoolean:", NULL, "LRAREUIImageIcon", 0x1, NULL },
    { "getDelayedIconWithJavaNetURL:withRAREaUIImageIcon:withRAREUIColor:withBoolean:", NULL, "LRAREUIImageIcon", 0x1, NULL },
    { "getDelayedImageWithJavaNetURL:", NULL, "LRAREUIImage", 0x1, "JavaIoIOException" },
    { "getDelayedImageWithJavaNetURL:withInt:withInt:withRAREiImagePainter_ScalingTypeEnum:withRAREUIColor:", NULL, "LRAREUIImage", 0x401, "JavaIoIOException" },
    { "getErrorInformationWithId:", NULL, "LRAREErrorInformation", 0x1, NULL },
    { "getErrorInformationWithId:withNSString:", NULL, "LRAREErrorInformation", 0x1, NULL },
    { "getEvent", NULL, "LRAREScriptingEvent", 0x1, NULL },
    { "getFocusOwner", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getFocusedWidget", NULL, "LRAREiWidget", 0x1, NULL },
    { "getFormViewer", NULL, "LRAREiFormViewer", 0x1, NULL },
    { "getFrameWithNSString:", NULL, "LRAREiFrame", 0x1, NULL },
    { "getFrames", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getIcons", NULL, "LJavaUtilMap", 0x1, NULL },
    { "getInnerSizeWithRAREUIDimension:", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getLocation", NULL, "LRAREaWindowViewer_WindowLocation", 0x1, NULL },
    { "getMenuBar", NULL, "LRAREiPlatformMenuBar", 0x1, NULL },
    { "getNamedItemWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getNativeEvent", NULL, "LJavaUtilEventObject", 0x1, NULL },
    { "getNavigator", NULL, "LRAREaWindowViewer_BrowserNavigator", 0x1, NULL },
    { "getParent", NULL, "LRAREiContainer", 0x1, NULL },
    { "getParentItem", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getPermanentFocusOwner", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getPermanentFocusedWidget", NULL, "LRAREiWidget", 0x1, NULL },
    { "getResourceIconWithNSString:", NULL, "LRAREUIImageIcon", 0x1, NULL },
    { "getRootTarget", NULL, "LRAREiTarget", 0x1, NULL },
    { "getRootViewer", NULL, "LRAREiViewer", 0x1, NULL },
    { "getScriptHandler", NULL, "LRAREiScriptHandler", 0x1, NULL },
    { "getSelection", NULL, "LNSObject", 0x1, NULL },
    { "getSelf", NULL, "LRAREaWindowViewer", 0x1, NULL },
    { "getSize", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getSourceURL", NULL, "LJavaNetURL", 0x1, NULL },
    { "getStatus", NULL, "LNSString", 0x1, NULL },
    { "getStatusBar", NULL, "LRAREiStatusBar", 0x1, NULL },
    { "getStringWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "getStringWithNSString:withNSObjectArray:", NULL, "LNSString", 0x81, NULL },
    { "getStringExWithNSString:withNSStringArray:", NULL, "LNSString", 0x81, NULL },
    { "getStrings", NULL, "LJavaUtilMap", 0x1, NULL },
    { "getTargetWithNSString:", NULL, "LRAREiTarget", 0x1, NULL },
    { "getTargetName", NULL, "LNSString", 0x1, NULL },
    { "getTargets", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getTitle", NULL, "LNSString", 0x1, NULL },
    { "getToolBarHolder", NULL, "LRAREiToolBarHolder", 0x1, NULL },
    { "getTop", NULL, "LRAREaWindowViewer", 0x1, NULL },
    { "getUIWindow", NULL, "LNSObject", 0x1, NULL },
    { "getViewerWithNSString:", NULL, "LRAREiViewer", 0x1, NULL },
    { "getViewers", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getWidgetWithNSString:", NULL, "LRAREiWidget", 0x1, NULL },
    { "getWidgetExWithNSStringArray:", NULL, "LRAREiWidget", 0x81, NULL },
    { "getWindow", NULL, "LRAREWindowViewer", 0x1, NULL },
    { "isApplet", NULL, "Z", 0x1, NULL },
    { "isClosingAllowed", NULL, "Z", 0x1, NULL },
    { "isMaximized", NULL, "Z", 0x1, NULL },
    { "isRetainInitialWidgetValues", NULL, "Z", 0x1, NULL },
    { "isWebStart", NULL, "Z", 0x1, NULL },
    { "getTimerEvent", NULL, "LRAREScriptingEvent", 0x4, NULL },
    { "getWidgetListEx", NULL, "LJavaUtilList", 0x4, NULL },
    { "createRunnerWithNSString:withId:withNSString:", NULL, "LRAREiScriptHandler_iScriptRunnable", 0x2, NULL },
    { "loadScriptExWithRAREActionLink:withBoolean:withBoolean:withBoolean:", NULL, "V", 0x2, "JavaIoIOException" },
    { "loadScriptExWithNSString:withBoolean:withBoolean:withBoolean:", NULL, "V", 0x2, "JavaIoIOException" },
    { "scheduleTaskWithNSString:withId:withLong:withBoolean:", NULL, "LRAREUTiCancelable", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "_location_", NULL, 0xa, "LRAREaWindowViewer_WindowLocation" },
    { "_navigator_", NULL, 0xa, "LRAREaWindowViewer_BrowserNavigator" },
    { "canClose_", NULL, 0x4, "Z" },
    { "clearStatusTimer_", NULL, 0x4, "LRAREiTimer" },
    { "scriptHandler_", NULL, 0x4, "LRAREiScriptHandler" },
    { "theEvent_", NULL, 0x4, "LRAREScriptingEvent" },
    { "theWindow_", NULL, 0x4, "LRAREiWindow" },
    { "timerEvent_", NULL, 0x4, "LRAREScriptingEvent" },
    { "windowManager_", NULL, 0x4, "LRAREiPlatformWindowManager" },
    { "windowParent_", NULL, 0x4, "LRAREaWindowViewer" },
    { "windowSize_", NULL, 0x4, "LRAREUIDimension" },
    { "windowTimer_", NULL, 0x4, "LRAREiTimer" },
  };
  static J2ObjcClassInfo _RAREaWindowViewer = { "aWindowViewer", "com.appnativa.rare.viewer", NULL, 0x401, 148, methods, 12, fields, 0, NULL};
  return &_RAREaWindowViewer;
}

@end
@implementation RAREaWindowViewer_WindowLocation

- (NSString *)description {
  return [self getHref];
}

- (void)setHrefWithNSString:(NSString *)url {
  id<RAREiWindow> win = this$0_->theWindow_;
  if (url == nil) {
    id<RAREiViewer> v = [((id<RAREiTarget>) nil_chk([((id<RAREiWindow>) nil_chk(win)) getTarget])) removeViewer];
    if (v != nil) {
      @try {
        [v dispose];
      }
      @catch (JavaLangException *e) {
        [RAREPlatform ignoreExceptionWithNSString:@"Failure on viewer dispose" withJavaLangThrowable:e];
      }
    }
  }
  else {
    @try {
      RAREActionLink *link = [this$0_ createActionLinkWithRAREiWidget:this$0_ withId:url];
      [((RAREActionLink *) nil_chk(link)) setTargetNameWithNSString:[((id<RAREiWindow>) nil_chk(win)) getTargetName]];
      id<RAREiWindowManager> wm = [((id<RAREiPlatformAppContext>) nil_chk([this$0_ getAppContext])) getWindowManager];
      [((id<RAREiWindowManager>) nil_chk(wm)) asyncActivateViewerWithRAREActionLink:link];
    }
    @catch (JavaNetMalformedURLException *shouldNotHappen) {
    }
  }
}

- (NSString *)getHash {
  JavaNetURL *url = [this$0_ getContextURL];
  return (url == nil) ? @"" : [url getRef];
}

- (NSString *)getHost {
  JavaNetURL *url = [this$0_ getContextURL];
  if (url == nil) {
    return @"";
  }
  NSString *s = [((JavaNetURL *) nil_chk(url)) getHost];
  int port = [url getPort];
  return (port == -1) ? s : [NSString stringWithFormat:@"%@:%d", s, port];
}

- (NSString *)getHostname {
  JavaNetURL *url = [this$0_ getContextURL];
  return (url == nil) ? @"" : [url getHost];
}

- (NSString *)getHref {
  JavaNetURL *url = [this$0_ getContextURL];
  return (url == nil) ? @"" : [RAREJavaURLConnection toExternalFormWithJavaNetURL:url];
}

- (NSString *)getPathname {
  JavaNetURL *url = [this$0_ getContextURL];
  return (url == nil) ? @"" : [url getPath];
}

- (int)getPort {
  JavaNetURL *url = [this$0_ getContextURL];
  return (url == nil) ? -1 : [url getDefaultPort];
}

- (NSString *)getProtocol {
  JavaNetURL *url = [this$0_ getContextURL];
  return (url == nil) ? @"" : [url getProtocol];
}

- (NSString *)getSearch {
  JavaNetURL *url = [this$0_ getContextURL];
  return (url == nil) ? @"" : [url getQuery];
}

- (JavaNetURL *)getUrl {
  return [this$0_ getContextURL];
}

- (id)initWithRAREaWindowViewer:(RAREaWindowViewer *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getHash", NULL, "LNSString", 0x1, NULL },
    { "getHost", NULL, "LNSString", 0x1, NULL },
    { "getHostname", NULL, "LNSString", 0x1, NULL },
    { "getHref", NULL, "LNSString", 0x1, NULL },
    { "getPathname", NULL, "LNSString", 0x1, NULL },
    { "getProtocol", NULL, "LNSString", 0x1, NULL },
    { "getSearch", NULL, "LNSString", 0x1, NULL },
    { "getUrl", NULL, "LJavaNetURL", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWindowViewer" },
  };
  static J2ObjcClassInfo _RAREaWindowViewer_WindowLocation = { "WindowLocation", "com.appnativa.rare.viewer", "aWindowViewer", 0x1, 8, methods, 1, fields, 0, NULL};
  return &_RAREaWindowViewer_WindowLocation;
}

@end
@implementation RAREaWindowViewer_BrowserNavigator

- (NSString *)getAppCodeName {
  return [RAREiConstants APPLICATION_NAME_STRING];
}

- (NSString *)getAppName {
  return [RAREiConstants APPLICATION_NAME_STRING];
}

- (NSString *)getAppVersion {
  NSString *version_ = [RAREiConstants APPLICATION_VERSION_STRING];
  @try {
    version_ = [NSString stringWithFormat:@"%@%@", version_, [NSString stringWithFormat:@" (%@; %@)", [self getPlatform], [self getLanguage]]];
  }
  @catch (JavaLangException *ignore) {
  }
  return version_;
}

- (BOOL)getCookieEnabled {
  return YES;
}

- (NSString *)getLanguage {
  return [((JavaUtilLocale *) nil_chk([JavaUtilLocale getDefault])) description];
}

- (NSString *)getPlatform {
  if ([RAREPlatform isAndroid]) {
    return @"android";
  }
  if ([RAREPlatform isWindows]) {
    return @"Win32";
  }
  if ([RAREPlatform isLinux]) {
    return @"Linux i686";
  }
  if ([RAREPlatform isMac]) {
    return @"MacIntel";
  }
  return @"Java";
}

- (NSString *)getUserAgent {
  return [RAREPlatform getUserAgent];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getAppCodeName", NULL, "LNSString", 0x1, NULL },
    { "getAppName", NULL, "LNSString", 0x1, NULL },
    { "getAppVersion", NULL, "LNSString", 0x1, NULL },
    { "getCookieEnabled", NULL, "Z", 0x1, NULL },
    { "getLanguage", NULL, "LNSString", 0x1, NULL },
    { "getPlatform", NULL, "LNSString", 0x1, NULL },
    { "getUserAgent", NULL, "LNSString", 0x1, NULL },
  };
  static J2ObjcClassInfo _RAREaWindowViewer_BrowserNavigator = { "BrowserNavigator", "com.appnativa.rare.viewer", "aWindowViewer", 0x8, 7, methods, 0, NULL, 0, NULL};
  return &_RAREaWindowViewer_BrowserNavigator;
}

@end
@implementation RAREaWindowViewer_$1

- (void)run {
  if (this$0_->theWindow_ != nil) {
    [this$0_ dispose];
  }
}

- (id)initWithRAREaWindowViewer:(RAREaWindowViewer *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWindowViewer" },
  };
  static J2ObjcClassInfo _RAREaWindowViewer_$1 = { "$1", "com.appnativa.rare.viewer", "aWindowViewer", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaWindowViewer_$1;
}

@end
@implementation RAREaWindowViewer_$2

- (void)run {
  if ((this$0_->clearStatusTimer_ != nil) && ([((id<RAREiStatusBar>) nil_chk(val$sb_)) getComponent] != nil) && [((NSString *) nil_chk(val$status_)) isEqual:[val$sb_ getMessage]]) {
    [val$sb_ showMessageWithNSString:nil];
    this$0_->clearStatusTimer_ = nil;
  }
}

- (id)initWithRAREaWindowViewer:(RAREaWindowViewer *)outer$
             withRAREiStatusBar:(id<RAREiStatusBar>)capture$0
                   withNSString:(NSString *)capture$1 {
  this$0_ = outer$;
  val$sb_ = capture$0;
  val$status_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWindowViewer" },
    { "val$sb_", NULL, 0x1012, "LRAREiStatusBar" },
    { "val$status_", NULL, 0x1012, "LNSString" },
  };
  static J2ObjcClassInfo _RAREaWindowViewer_$2 = { "$2", "com.appnativa.rare.viewer", "aWindowViewer", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_RAREaWindowViewer_$2;
}

@end
@implementation RAREaWindowViewer_$3

- (void)run {
  [RAREPlatform invokeLaterWithJavaLangRunnable:val$r_];
}

- (id)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0 {
  val$r_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$r_", NULL, 0x1012, "LJavaLangRunnable" },
  };
  static J2ObjcClassInfo _RAREaWindowViewer_$3 = { "$3", "com.appnativa.rare.viewer", "aWindowViewer", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaWindowViewer_$3;
}

@end
@implementation RAREaWindowViewer_$4

- (void)run {
  id w = this$0_->theWindow_;
  if ((this$0_->appContext_ == nil) || [this$0_->appContext_ isShuttingDown]) {
    if (this$0_->windowTimer_ != nil) {
      [this$0_->windowTimer_ cancel];
    }
    return;
  }
  if ((w != nil)) {
    if ([RAREPlatform isUIThread]) {
      [((id<RAREiScriptHandler_iScriptRunnable>) nil_chk(val$r_)) run];
    }
    else {
      [RAREPlatform invokeLaterWithJavaLangRunnable:val$r_];
    }
  }
  else {
    id<RAREiTimer> t = this$0_->windowTimer_;
    if (t != nil) {
      [t cancel];
    }
    this$0_->windowTimer_ = nil;
  }
}

- (id)initWithRAREaWindowViewer:(RAREaWindowViewer *)outer$
withRAREiScriptHandler_iScriptRunnable:(id<RAREiScriptHandler_iScriptRunnable>)capture$0 {
  this$0_ = outer$;
  val$r_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWindowViewer" },
    { "val$r_", NULL, 0x1012, "LRAREiScriptHandler_iScriptRunnable" },
  };
  static J2ObjcClassInfo _RAREaWindowViewer_$4 = { "$4", "com.appnativa.rare.viewer", "aWindowViewer", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_RAREaWindowViewer_$4;
}

@end
