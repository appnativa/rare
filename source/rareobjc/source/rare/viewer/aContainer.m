//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/viewer/aContainer.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iFunctionCallback.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/iURLConnection.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIPoint.h"
#include "com/appnativa/rare/ui/UISelectionModelGroup.h"
#include "com/appnativa/rare/ui/iListHandler.h"
#include "com/appnativa/rare/ui/iParentComponent.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformWindowManager.h"
#include "com/appnativa/rare/util/DataParser.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/aContainer.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/FilterableList.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Short.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/net/URL.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@implementation RAREaContainer

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    _enabled_ = YES;
    sortedFormWidgetsDirty_ = YES;
    widgetList_ = [[RAREUTIdentityArrayList alloc] init];
  }
  return self;
}

- (BOOL)addWithId:(RARERenderableDataItem *)item {
  if ([item conformsToProtocol: @protocol(RAREiWidget)]) {
    [self addWidgetWithRAREiWidget:(id<RAREiWidget>) check_protocol_cast(item, @protocol(RAREiWidget)) withId:nil withInt:-1];
    return YES;
  }
  else {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Not a widget"];
  }
}

- (void)addWidgetWithRAREiWidget:(id<RAREiWidget>)widget {
  [self addWidgetWithRAREiWidget:widget withId:nil withInt:-1];
}

- (void)addWithInt:(int)index
            withId:(RARERenderableDataItem *)item {
  if ([item conformsToProtocol: @protocol(RAREiWidget)]) {
    [self addWidgetWithRAREiWidget:(id<RAREiWidget>) check_protocol_cast(item, @protocol(RAREiWidget)) withId:nil withInt:index];
    id<JavaUtilList> list = [self getWidgetListEx];
    if ((index > -1) && (index < [((id<JavaUtilList>) nil_chk(list)) size])) {
      int n = [list indexOfWithId:item];
      if ((n != -1) && (n != index)) {
        (void) [list removeWithInt:n];
        [list addWithInt:index withId:(id<RAREiWidget>) check_protocol_cast(item, @protocol(RAREiWidget))];
      }
    }
  }
  else {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Not a widget"];
  }
}

- (RAREUISelectionModelGroup *)addToSelectionGroupWithNSString:(NSString *)name
                                          withRAREiListHandler:(id<RAREiListHandler>)comp
                                                        withId:(id)model
                                                       withInt:(int)position {
  if (selectionGroupMap_ == nil) {
    selectionGroupMap_ = [[JavaUtilHashMap alloc] init];
  }
  RAREUISelectionModelGroup *g = [((JavaUtilHashMap *) nil_chk(selectionGroupMap_)) getWithId:name];
  if (g == nil) {
    g = [[RAREUISelectionModelGroup alloc] init];
    (void) [selectionGroupMap_ putWithId:name withId:g];
  }
  [((RAREUISelectionModelGroup *) nil_chk(g)) addWithRAREiListHandler:comp withId:model withInt:position];
  return g;
}

- (id<RAREiWidget>)addWidgetWithRARESPOTWidget:(RARESPOTWidget *)cfg {
  id<RAREiWidget> w = [RAREaContainer createWidgetWithRAREiContainer:self withRARESPOTWidget:cfg];
  [self addWidgetWithRAREiWidget:w withId:[self createConstraintsWithRAREiParentComponent:(id<RAREiParentComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiParentComponent)) withRARESPOTWidget:cfg] withInt:-1];
  return w;
}

- (id<RAREiWidget>)addWidgetWithRAREiParentComponent:(id<RAREiParentComponent>)panel
                                  withRARESPOTWidget:(RARESPOTWidget *)cfg
                       withRAREiContainer_LayoutEnum:(RAREiContainer_LayoutEnum *)fm {
  id<RAREiWidget> a = [self addWidgetExWithRAREiParentComponent:panel withRARESPOTWidget:cfg withRAREiContainer_LayoutEnum:fm];
  if (a == nil) {
    @throw [RAREDataParser invalidConfigurationExceptionWithRAREiPlatformAppContext:[self getAppContext] withJavaNetURL:sourceURL_ withNSString:[((RARESPOTWidget *) nil_chk(cfg)) description]];
  }
  [self registerWidgetWithRAREiWidget:a];
  return a;
}

- (void)addWidgetWithRAREiWidget:(id<RAREiWidget>)widget
                          withId:(id)constraints
                         withInt:(int)position {
  [((id<RAREiParentComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiParentComponent))) addWithRAREiPlatformComponent:[((id<RAREiWidget>) nil_chk(widget)) getContainerComponent] withId:constraints withInt:position];
  [widget setParentWithRAREiContainer:self];
  [self registerWidgetWithRAREiWidget:widget];
  if ([self isRegistered] && ([(id) widget conformsToProtocol: @protocol(RAREiViewer)])) {
    id<RAREiViewer> v = (id<RAREiViewer>) check_protocol_cast(widget, @protocol(RAREiViewer));
    if (![v isRegistered]) {
      [v register__];
    }
  }
}

- (void)clearContents {
  [super clearContents];
  id<JavaUtilList> list = [self getWidgetListEx];
  int len = [((id<JavaUtilList>) nil_chk(list)) size];
  for (int i = 0; i < len; i++) {
    [((id<RAREiWidget>) nil_chk([list getWithInt:i])) clearContents];
  }
}

- (void)removeAllWidgets {
  id<JavaUtilList> list = [self getWidgetListEx];
  int len = [((id<JavaUtilList>) nil_chk(list)) size];
  if (len > 0) {
    IOSObjectArray *a = [list toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:len type:[IOSClass classWithProtocol:@protocol(RAREiWidget)]]];
    {
      IOSObjectArray *a__ = a;
      id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      id const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id<RAREiWidget> w = (*b__++);
        [self removeWidgetWithRAREiWidget:w];
      }
    }
  }
}

- (void)clearForm {
  [self clearContents];
}

- (id<RAREiWidget>)createWidgetWithRARESPOTWidget:(RARESPOTWidget *)cfg {
  return [RAREaContainer createWidgetWithRAREiContainer:self withRARESPOTWidget:cfg];
}

+ (id<RAREiWidget>)createWidgetWithRAREiContainer:(id<RAREiContainer>)parent
                               withRAREActionLink:(RAREActionLink *)link {
  @try {
    id<RAREiWidget> ctx = [((RAREActionLink *) nil_chk(link)) getContext];
    if (ctx == nil) {
      ctx = parent;
    }
    RARESPOTWidget *cfg = (RARESPOTWidget *) check_class_cast([RAREDataParser loadSPOTObjectWithRAREiWidget:parent withRAREiURLConnection:[link getConnection] withISPOTElement:nil], [RARESPOTWidget class]);
    id<RAREiWidget> w = [RAREaContainer createWidgetWithRAREiContainer:parent withRARESPOTWidget:cfg withJavaNetURL:[link getURLWithRAREiWidget:parent]];
    if ([(id) w conformsToProtocol: @protocol(RAREiViewer)]) {
      [((id<RAREiViewer>) check_protocol_cast(w, @protocol(RAREiViewer))) setViewerActionLinkWithRAREActionLink:link];
    }
    return w;
  }
  @catch (JavaLangException *ex) {
    @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:ex];
  }
  @finally {
    [((RAREActionLink *) nil_chk(link)) close];
  }
}

+ (id<RAREiWidget>)createWidgetWithRAREiContainer:(id<RAREiContainer>)parent
                               withRARESPOTWidget:(RARESPOTWidget *)cfg {
  return [RAREaContainer createWidgetWithRAREiContainer:parent withRARESPOTWidget:cfg withJavaNetURL:nil];
}

+ (id<RAREiWidget>)createWidgetWithRAREiContainer:(id<RAREiContainer>)parent
                               withRARESPOTWidget:(RARESPOTWidget *)cfg
                                   withJavaNetURL:(JavaNetURL *)context {
  if (cfg == nil) {
    return nil;
  }
  id<RAREiPlatformAppContext> app = [RAREPlatform getAppContext];
  if (parent == nil) {
    parent = [((id<RAREiPlatformAppContext>) nil_chk(app)) getWindowViewer];
  }
  if ([cfg isKindOfClass:[RARESPOTViewer class]]) {
    return [((id<RAREiPlatformWindowManager>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk(app)) getWindowManager])) createViewerWithRAREiWidget:parent withRARESPOTViewer:(RARESPOTViewer *) check_class_cast(cfg, [RARESPOTViewer class]) withJavaNetURL:context];
  }
  NSString *name = [RAREPlatform getSPOTNameWithIOSClass:[((RARESPOTWidget *) nil_chk(cfg)) getClass]];
  IOSClass *cls = [((id<RAREiPlatformAppContext>) nil_chk(app)) getWidgetHandlerWithNSString:name];
  if (cls == nil) {
    cls = [app getWidgetHandlerWithNSString:name];
  }
  if (cls == nil) {
    @throw [[RAREApplicationException alloc] initWithNSString:[NSString stringWithFormat:@"Unknown object:%@", name]];
  }
  @try {
    id<RAREiWidget> w = [RAREaPlatformHelper createWidgetWithIOSClass:cls withRAREiContainer:parent];
    [((id<RAREiWidget>) nil_chk(w)) setParentWithRAREiContainer:parent];
    [w configureWithRARESPOTWidget:cfg];
    return w;
  }
  @catch (JavaLangException *ex) {
    @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:ex];
  }
}

- (BOOL)handleFocusWithRAREiWidget:(id<RAREiWidget>)from
                       withBoolean:(BOOL)next {
  id<JavaUtilList> list = [self getSortedFormWidgetList];
  if (list == nil) {
    list = [self getWidgetListEx];
  }
  int n = (from == nil) ? -1 : [((id<JavaUtilList>) nil_chk(list)) indexOfWithId:from];
  if ((n < 1) && !next) {
    return NO;
  }
  int inc;
  int len;
  if (next) {
    len = [((id<JavaUtilList>) nil_chk(list)) size] - (n + 1);
    inc = 1;
  }
  else {
    len = n;
    inc = -1;
  }
  for (int i = 0; i < len; i++) {
    n += inc;
    RAREaWidget *w = (RAREaWidget *) check_class_cast([((id<JavaUtilList>) nil_chk(list)) getWithInt:n], [RAREaWidget class]);
    if ([w conformsToProtocol: @protocol(RAREiContainer)]) {
      if (!hogFocus_ && [((RAREaWidget *) nil_chk(w)) isEnabled] && [w isVisible] && [((id<RAREiContainer>) check_protocol_cast(w, @protocol(RAREiContainer))) handleFocusWithRAREiWidget:nil withBoolean:next]) {
        return YES;
      }
    }
    else {
      if ([((RAREaWidget *) nil_chk(w)) isFocusableInCurrentState]) {
        [w focus];
        return YES;
      }
    }
  }
  return NO;
}

- (void)onConfigurationChangedWithBoolean:(BOOL)reset {
  if ([self isDisposed]) {
    return;
  }
  id<JavaUtilList> list = [self getWidgetListEx];
  int len = [((id<JavaUtilList>) nil_chk(list)) size];
  for (int i = 0; i < len; i++) {
    id<RAREiWidget> w = [list getWithInt:i];
    if ([(id) w conformsToProtocol: @protocol(RAREiViewer)]) {
      [((id<RAREiViewer>) check_protocol_cast(w, @protocol(RAREiViewer))) onConfigurationChangedWithBoolean:reset];
    }
  }
  [self handleViewerConfigurationChangedWithBoolean:reset];
}

- (void)onConfigurationWillChangeWithId:(id)newConfig {
  if ([self isDisposed]) {
    return;
  }
  id<JavaUtilList> list = [self getWidgetListEx];
  int len = [((id<JavaUtilList>) nil_chk(list)) size];
  for (int i = 0; i < len; i++) {
    id<RAREiWidget> w = [list getWithInt:i];
    if ([(id) w conformsToProtocol: @protocol(RAREiViewer)]) {
      [((id<RAREiViewer>) check_protocol_cast(w, @protocol(RAREiViewer))) onConfigurationWillChangeWithId:newConfig];
    }
  }
  [self handleViewerConfigurationWillChangeWithId:newConfig];
}

- (void)register__ {
  [super register__];
  [self registerWidgets];
  labelWdgets_ = nil;
}

- (id<RAREiWidget>)registerFormWidgetWithRAREiWidget:(id<RAREiWidget>)w {
  return [self registerFormWidgetWithNSString:[((id<RAREiWidget>) nil_chk(w)) getName] withRAREiWidget:w];
}

- (id<RAREiWidget>)registerFormWidgetWithNSString:(NSString *)name
                                  withRAREiWidget:(id<RAREiWidget>)w {
  if (w == self) {
    return nil;
  }
  sortedFormWidgetsDirty_ = YES;
  if (formWidgets_ == nil) {
    formWidgets_ = [[JavaUtilHashMap alloc] init];
  }
  if (labelWdgets_ != nil) {
    id l = [labelWdgets_ removeWithId:name];
    if (l != nil) {
      [RAREaPlatformHelper setLabelForComponentWithRAREiPlatformComponent:[((id<RAREiWidget>) nil_chk(w)) getDataComponent] withId:l];
    }
  }
  return [((JavaUtilHashMap *) nil_chk(formWidgets_)) putWithId:name withId:w];
}

- (void)registerLabelForWidgetWithId:(id)label
                        withNSString:(NSString *)widgetName {
  id<RAREiWidget> w = [self getWidgetWithNSString:widgetName];
  if (w != nil) {
    [RAREaPlatformHelper setLabelForComponentWithRAREiPlatformComponent:[w getDataComponent] withId:label];
  }
  else {
    if (labelWdgets_ == nil) {
      labelWdgets_ = [[JavaUtilHashMap alloc] init];
    }
    (void) [((JavaUtilHashMap *) nil_chk(labelWdgets_)) putWithId:widgetName withId:label];
  }
}

- (void)reloadWithBoolean:(BOOL)context {
  BOOL al = [self getViewerActionLink] != nil;
  [super reloadWithBoolean:NO];
  if (!al) {
    id<JavaUtilList> list = [self getWidgetListEx];
    int len = [((id<JavaUtilList>) nil_chk(list)) size];
    for (int i = 0; i < len; i++) {
      id<RAREiWidget> w = [list getWithInt:i];
      [((id<RAREiWidget>) nil_chk(w)) reloadWithBoolean:context];
    }
  }
}

- (void)reloadForm {
  [self reloadWithBoolean:NO];
}

- (RARERenderableDataItem *)removeWithInt:(int)index {
  id<JavaUtilList> list = [self getWidgetListEx];
  id<RAREiWidget> w = [((id<JavaUtilList>) nil_chk(list)) getWithInt:index];
  [self removeWidgetWithRAREiWidget:w];
  if ([(id) w isKindOfClass:[RARERenderableDataItem class]]) {
    return (RARERenderableDataItem *) check_class_cast(w, [RARERenderableDataItem class]);
  }
  return nil;
}

- (void)removeFromSelectionGroupWithNSString:(NSString *)name
                                      withId:(id)model {
  if (selectionGroupMap_ != nil) {
    RAREUISelectionModelGroup *g = [selectionGroupMap_ getWithId:name];
    if (g != nil) {
      [g removeWithId:model];
    }
  }
}

- (void)removeWidgetWithRAREiWidget:(id<RAREiWidget>)widget {
  [((RAREUTIdentityArrayList *) nil_chk(widgetList_)) removeWithId:widget];
  id<RAREiPlatformComponent> c = [((id<RAREiWidget>) nil_chk(widget)) getContainerComponent];
  id<RAREiPlatformComponent> p = (c == nil) ? nil : [c getParent];
  if (p != nil) {
    [((id<RAREiParentComponent>) check_protocol_cast(p, @protocol(RAREiParentComponent))) removeWithRAREiPlatformComponent:c];
  }
  [self unregisterWidgetWithRAREiWidget:widget];
  [widget setParentWithRAREiContainer:nil];
  if ([(id) widget conformsToProtocol: @protocol(RAREiViewer)]) {
    id<RAREiViewer> v = (id<RAREiViewer>) check_protocol_cast(widget, @protocol(RAREiViewer));
    if ([v isRegistered] && [v isAutoUnregister]) {
      [v unregisterWithBoolean:NO];
    }
  }
}

- (void)resetForm {
}

- (int)size {
  id<JavaUtilList> list = [self getWidgetListEx];
  return [((id<JavaUtilList>) nil_chk(list)) size];
}

- (void)submitFormWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
}

- (void)unregisterWithBoolean:(BOOL)disposing {
  [super unregisterWithBoolean:disposing];
  if ([self isDisposed]) {
    return;
  }
  [self unregisterWidgets];
}

- (void)unregisterFormWidgetWithRAREiWidget:(id<RAREiWidget>)widget {
  if (formWidgets_ != nil) {
    id<RAREiWidget> w = [formWidgets_ removeWithId:[((id<RAREiWidget>) nil_chk(widget)) getName]];
    if (w != nil) {
      sortedFormWidgetsDirty_ = YES;
    }
  }
}

- (id<RAREiWidget>)unregisterFormWidgetWithNSString:(NSString *)name {
  if (formWidgets_ != nil) {
    id<RAREiWidget> w = [formWidgets_ removeWithId:name];
    if (w != nil) {
      sortedFormWidgetsDirty_ = YES;
    }
    return w;
  }
  return nil;
}

- (RARERenderableDataItem *)setWithInt:(int)index
                                withId:(RARERenderableDataItem *)item {
  if ([item conformsToProtocol: @protocol(RAREiWidget)]) {
    RARERenderableDataItem *oitem = [self removeWithInt:index];
    [self addWithInt:index withId:item];
    return oitem;
  }
  else {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Not a widget"];
  }
}

- (void)setActAsFormViewerWithBoolean:(BOOL)act {
  self->actAsFormViewer_ = act;
}

- (void)setEnabledWithBoolean:(BOOL)enabled {
  _enabled_ = enabled;
  switch ([disableBehavior_ ordinal]) {
    case RAREiViewer_DisableBehavior_DISABLE_CONTAINER:
    [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) setEnabledWithBoolean:enabled];
    break;
    case RAREiViewer_DisableBehavior_DISABLE_WIDGETS:
    [self setWidgetsEnabledWithBoolean:enabled withBoolean:NO];
    break;
    case RAREiViewer_DisableBehavior_DISABLE_BOTH:
    [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) setEnabledWithBoolean:enabled];
    [self setWidgetsEnabledWithBoolean:enabled withBoolean:NO];
    break;
  }
}

- (void)setHogFocusWithBoolean:(BOOL)hogFocus {
  self->hogFocus_ = hogFocus;
}

- (void)setShowWaitCursorForChildCreationWithBoolean:(BOOL)show {
  self->showWaitCursorForChildCreation_ = show;
}

- (void)setSubmittAttributeWithNSString:(NSString *)name
                                 withId:(id)value {
  [RAREPlatform ignoreExceptionWithNSString:@"setSubmittAttribute" withJavaLangThrowable:[[JavaLangUnsupportedOperationException alloc] init]];
}

- (void)setWidgetsEnabledWithBoolean:(BOOL)enabled
                         withBoolean:(BOOL)all {
  id<JavaUtilList> list = [self getWidgetListEx];
  int len = [((id<JavaUtilList>) nil_chk(list)) size];
  for (int i = 0; i < len; i++) {
    id<RAREiWidget> w = [list getWithInt:i];
    if (all || [((id<RAREiWidget>) nil_chk(w)) isAllowContainerToDisable]) {
      [((id<RAREiWidget>) nil_chk(w)) setEnabledWithBoolean:enabled];
    }
  }
}

- (RARERenderableDataItem *)getWithInt:(int)index {
  id<JavaUtilList> list = [self getWidgetListEx];
  id<RAREiWidget> w = [((id<JavaUtilList>) nil_chk(list)) getWithInt:index];
  if ([(id) w isKindOfClass:[RARERenderableDataItem class]]) {
    return (RARERenderableDataItem *) check_class_cast(w, [RARERenderableDataItem class]);
  }
  return nil;
}

- (id<RAREiContainer>)getContainerViewer {
  return self;
}

- (id)getElementByIdWithNSString:(NSString *)name {
  return [self getNamedItemWithNSString:name];
}

- (id<RAREiFormViewer>)getFormViewer {
  if (actAsFormViewer_) {
    return self;
  }
  id<RAREiFormViewer> fv = [super getFormViewer];
  return (fv == nil) ? self : ((id) fv);
}

- (id<JavaUtilList>)getFormWidgets {
  if (formWidgets_ == nil) {
    return [JavaUtilCollections EMPTY_LIST];
  }
  JavaUtilArrayList *list = [[JavaUtilArrayList alloc] initWithInt:[((JavaUtilHashMap *) nil_chk(formWidgets_)) size]];
  [list addAllWithJavaUtilCollection:[formWidgets_ values]];
  return list;
}

- (JavaUtilHashMap *)getHTTPValuesHash {
  if ((formWidgets_ == nil) || ([formWidgets_ size] == 0)) {
    return nil;
  }
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] initWithInt:[((JavaUtilHashMap *) nil_chk(formWidgets_)) size]];
  id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([formWidgets_ values])) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id<RAREiWidget> w = [it next];
    if ((w != self) && (w != nil) && [w isSubmittable] && [w isValidForSubmissionWithBoolean:YES]) {
      (void) [map putWithId:[w getHTTPFormName] withId:[w getHTTPFormValue]];
    }
  }
  return map;
}

- (id)getSubmittAttributeWithNSString:(NSString *)name {
  return nil;
}

- (id<RAREiContainer>)getViewer {
  return self;
}

- (id<RAREiWidget>)getWidget {
  return self;
}

- (id<RAREiWidget>)getWidgetWithInt:(int)index {
  id<JavaUtilList> list = [self getWidgetListEx];
  return [((id<JavaUtilList>) nil_chk(list)) getWithInt:index];
}

- (id<RAREiWidget>)getWidgetWithNSString:(NSString *)name {
  if (disposed_) {
    return nil;
  }
  id o = [self getNamedItemWithNSString:name];
  if ([o conformsToProtocol: @protocol(RAREiWidget)]) {
    return (id<RAREiWidget>) check_protocol_cast(o, @protocol(RAREiWidget));
  }
  return (formWidgets_ == nil) ? nil : [formWidgets_ getWithId:name];
}

- (int)getWidgetCount {
  id<JavaUtilList> list = [self getWidgetListEx];
  return [((id<JavaUtilList>) nil_chk(list)) size];
}

- (id<RAREiWidget>)getWidgetFromPathWithNSString:(NSString *)path {
  if (path == nil) {
    return nil;
  }
  int n = [((NSString *) nil_chk(path)) indexOf:'/'];
  if (n == -1) {
    return [self getWidgetWithNSString:path];
  }
  int start = 0;
  if (n == 0) {
    n = [path indexOf:'/' fromIndex:1];
    start = 1;
  }
  if (n == -1) {
    return [self getWidgetWithNSString:[path substring:start]];
  }
  NSString *name = [path substring:n + 1];
  id<RAREiWidget> v = [self getWidgetWithNSString:[path substring:0 endIndex:n]];
  if (!([(id) v conformsToProtocol: @protocol(RAREiContainer)])) {
    return nil;
  }
  return [((id<RAREiContainer>) check_protocol_cast(v, @protocol(RAREiContainer))) getWidgetFromPathWithNSString:name];
}

- (id<JavaUtilList>)getWidgetList {
  id<JavaUtilList> list = [self getWidgetListEx];
  int len = [((id<JavaUtilList>) nil_chk(list)) size];
  if (len == 0) {
    return [JavaUtilCollections emptyList];
  }
  return [JavaUtilCollections unmodifiableListWithJavaUtilList:list];
}

- (id<JavaUtilList>)getWidgetNames {
  id<JavaUtilList> list = [self getWidgetListEx];
  int len = [((id<JavaUtilList>) nil_chk(list)) size];
  if (len == 0) {
    return [JavaUtilCollections emptyList];
  }
  RAREUTFilterableList *flist = [[RAREUTFilterableList alloc] initWithInt:len];
  for (int i = 0; i < len; i++) {
    id<RAREiWidget> w = [list getWithInt:i];
    [flist addWithId:[((id<RAREiWidget>) nil_chk(w)) getName]];
  }
  return flist;
}

- (id<JavaUtilMap>)getWidgets {
  id<JavaUtilList> list = [self getWidgetListEx];
  if ([((id<JavaUtilList>) nil_chk(list)) size] == 0) {
    return [JavaUtilCollections EMPTY_MAP];
  }
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  int len = [list size];
  for (int i = 0; i < len; i++) {
    id<RAREiWidget> w = [list getWithInt:i];
    (void) [map putWithId:[((id<RAREiWidget>) nil_chk(w)) getName] withId:w];
  }
  return map;
}

- (BOOL)isActAsFormViewer {
  return actAsFormViewer_;
}

- (BOOL)isAncestorOfWithRAREiWidget:(id<RAREiWidget>)w {
  id<RAREiContainer> p = [((id<RAREiWidget>) nil_chk(w)) getParent];
  while (p != nil) {
    if (p == self) {
      return YES;
    }
    p = [((id<RAREiContainer>) nil_chk(p)) getParent];
  }
  return NO;
}

- (BOOL)isBackPressedHandled {
  id<JavaUtilList> list = [self getWidgetListEx];
  int len = [((id<JavaUtilList>) nil_chk(list)) size];
  for (int i = 0; i < len; i++) {
    id<RAREiWidget> w = [list getWithInt:i];
    if (([(id) w conformsToProtocol: @protocol(RAREiViewer)]) && [((id<RAREiViewer>) check_protocol_cast(w, @protocol(RAREiViewer))) isBackPressedHandled]) {
      return YES;
    }
  }
  return [super isBackPressedHandled];
}

- (BOOL)isContainer {
  return YES;
}

- (BOOL)isContainerEnabled {
  return [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) isEnabled];
}

- (BOOL)isEnabled {
  return _enabled_;
}

- (BOOL)isFocusableInCurrentState {
  return NO;
}

- (BOOL)isHogFocus {
  return hogFocus_;
}

- (BOOL)isRetainInitialWidgetValues {
  return NO;
}

- (BOOL)isShowWaitCursorForChildCreation {
  return showWaitCursorForChildCreation_;
}

- (BOOL)isTextDirectionSet {
  return NO;
}

- (id<RAREiWidget>)addWidgetExWithRAREiParentComponent:(id<RAREiParentComponent>)panel
                                    withRARESPOTWidget:(RARESPOTWidget *)cfg
                         withRAREiContainer_LayoutEnum:(RAREiContainer_LayoutEnum *)layout {
  @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:[NSString stringWithFormat:@"Not supported for %@", [[self getClass] getName]]];
}

- (void)callaViewerRegister {
  [super register__];
}

- (void)callaViewerunRegisterWithBoolean:(BOOL)disposing {
  [super unregisterWithBoolean:disposing];
}

- (RARESPOTViewer *)checkForURLConfigWithRARESPOTViewer:(RARESPOTViewer *)vcfg {
  if ([((SPOTPrintableString *) nil_chk(((RARESPOTViewer *) nil_chk(vcfg))->dataURL_)) getValue] != nil) {
    @try {
      RAREActionLink *link = [RAREActionLink getActionLinkWithRAREiWidget:self withSPOTPrintableString:vcfg->dataURL_ withInt:0];
      self->viewerActionLink_ = link;
      vcfg = (RARESPOTViewer *) check_class_cast([RAREDataParser loadSPOTObjectWithRAREiWidget:self withRAREiURLConnection:[((RAREActionLink *) nil_chk(link)) getConnection] withISPOTElement:(RARESPOTViewer *) check_class_cast([vcfg clone], [RARESPOTViewer class])], [RARESPOTViewer class]);
    }
    @catch (JavaLangException *ex) {
      [self handleExceptionWithJavaLangThrowable:ex];
    }
  }
  return vcfg;
}

- (void)clearConfigurationWithBoolean:(BOOL)dispose {
  [super clearConfigurationWithBoolean:dispose];
  if (widgetList_ != nil) {
    id<JavaUtilList> list = [self getWidgetListEx];
    IOSObjectArray *a = [list toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(list)) size] type:[IOSClass classWithProtocol:@protocol(RAREiWidget)]]];
    int len = (int) [((IOSObjectArray *) nil_chk(a)) count];
    for (int i = 0; i < len; i++) {
      id<RAREiWidget> w = IOSObjectArray_Get(a, i);
      if (w != nil) {
        id<RAREiPlatformComponent> c = [w getContainerComponent];
        id<RAREiPlatformComponent> p = (c == nil) ? nil : [c getParent];
        if (p != nil) {
          [((id<RAREiParentComponent>) check_protocol_cast(p, @protocol(RAREiParentComponent))) removeWithRAREiPlatformComponent:c];
        }
        if ([(id) w conformsToProtocol: @protocol(RAREiViewer)]) {
          if (dispose || [((id<RAREiViewer>) check_protocol_cast(w, @protocol(RAREiViewer))) isAutoDispose]) {
            [w dispose];
          }
        }
        else {
          [w dispose];
        }
      }
    }
    [list clear];
  }
  if (labelWdgets_ != nil) {
    [labelWdgets_ clear];
  }
  if (formWidgets_ != nil) {
    [formWidgets_ clear];
  }
  if (sortedFormWidgetsList_ != nil) {
    [sortedFormWidgetsList_ clear];
  }
  if (selectionGroupMap_ != nil) {
    [selectionGroupMap_ clear];
  }
  if (dispose) {
    formWidgets_ = nil;
    widgetList_ = nil;
    labelWdgets_ = nil;
    selectionGroupMap_ = nil;
    sortedFormWidgetsList_ = nil;
  }
}

- (id)createConstraintsWithRAREiParentComponent:(id<RAREiParentComponent>)panel
                             withRARESPOTWidget:(RARESPOTWidget *)cfg {
  return nil;
}

- (id)getConsraintsWithRAREiWidget:(id<RAREiWidget>)widget {
  return [((id<RAREiPlatformComponent>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getContainerComponent])) getClientPropertyWithNSString:[RAREiConstants RARE_CONSTRAINTS_PROPERTY]];
}

- (void)registerWidgetWithRAREiWidget:(id<RAREiWidget>)w {
  NSString *name = [((id<RAREiWidget>) nil_chk(w)) getName];
  id<JavaUtilList> list = [self getWidgetListEx];
  if (name != nil) {
    (void) [self registerNamedItemWithNSString:name withId:w];
    (void) [((id<RAREiFormViewer>) nil_chk([self getFormViewer])) registerFormWidgetWithNSString:name withRAREiWidget:w];
  }
  if ([((id<JavaUtilList>) nil_chk(list)) indexOfWithId:w] == -1) {
    if (!_enabled_ && [w isEnabled] && [w isAllowContainerToDisable] && (disableBehavior_ != [RAREiViewer_DisableBehaviorEnum DISABLE_CONTAINER])) {
      if (([(id) w isKindOfClass:[RAREaContainer class]]) && ((RAREaContainer *) check_class_cast(w, [RAREaContainer class]))->disableBehavior_ == [RAREiViewer_DisableBehaviorEnum DISABLE_CONTAINER]) {
        [((RAREaContainer *) check_class_cast(w, [RAREaContainer class])) setWidgetsEnabledWithBoolean:YES withBoolean:NO];
        [w setEnabledWithBoolean:NO];
      }
      else {
        [w setEnabledWithBoolean:NO];
      }
    }
    [list addWithId:w];
  }
}

- (void)registerWidgets {
  id<JavaUtilList> list = [self getWidgetListEx];
  id<RAREiFormViewer> fv = [self getFormViewer];
  for (id<RAREiWidget> __strong w in nil_chk(list)) {
    if ([(id) w conformsToProtocol: @protocol(RAREiViewer)]) {
      [((id<RAREiViewer>) check_protocol_cast(w, @protocol(RAREiViewer))) register__];
    }
    if (fv != self) {
      id<RAREiWidget> ow = [((id<RAREiFormViewer>) nil_chk(fv)) registerFormWidgetWithNSString:[((id<RAREiWidget>) nil_chk(w)) getName] withRAREiWidget:w];
      if ((ow != nil) && (ow != w)) {
        NSString *s = [RAREUTHelper expandStringWithNSString:[((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceAsStringWithNSString:@"Rare.runtime.text.widgetExists"] withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [w getName] } count:1 type:[IOSClass classWithClass:[NSString class]]]];
        [RAREPlatform ignoreExceptionWithNSString:s withJavaLangThrowable:nil];
      }
    }
  }
}

- (void)unregisterWidgets {
  id<RAREiFormViewer> fv = [self getFormViewer];
  if (fv != nil) {
    id<JavaUtilList> list = [self getWidgetListEx];
    for (id<RAREiWidget> __strong w in nil_chk(list)) {
      if ([(id) w conformsToProtocol: @protocol(RAREiViewer)]) {
        [((id<RAREiViewer>) check_protocol_cast(w, @protocol(RAREiViewer))) unregisterWithBoolean:NO];
      }
      if (fv != self) {
        [fv unregisterFormWidgetWithRAREiWidget:w];
      }
    }
  }
}

- (void)unregisterWidgetWithRAREiWidget:(id<RAREiWidget>)w {
  NSString *name = [((id<RAREiWidget>) nil_chk(w)) getName];
  if (name != nil) {
    (void) [self unregisterNamedItemWithNSString:name];
    id<RAREiFormViewer> fv = [self getFormViewer];
    if (fv != nil) {
      (void) [((id<RAREiFormViewer>) nil_chk([self getFormViewer])) unregisterFormWidgetWithNSString:name];
    }
  }
  if (widgetList_ != nil) {
    [widgetList_ removeWithId:w];
  }
}

- (void)updateEx {
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) revalidate];
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) repaint];
}

- (id<JavaUtilList>)getSortedFormWidgetList {
  if ((formWidgets_ == nil) || [formWidgets_ isEmpty]) {
    return nil;
  }
  if (!sortedFormWidgetsDirty_) {
    return sortedFormWidgetsList_;
  }
  if (comparator_ == nil) {
    comparator_ = [[RAREaContainer_WidgetLocationComparator alloc] init];
  }
  sortedFormWidgetsList_ = [[RAREUTIdentityArrayList alloc] initWithJavaUtilCollection:[((JavaUtilHashMap *) nil_chk(formWidgets_)) values]];
  [JavaUtilCollections sortWithJavaUtilList:sortedFormWidgetsList_ withJavaUtilComparator:comparator_];
  return sortedFormWidgetsList_;
}

- (id<JavaUtilList>)getWidgetListEx {
  return widgetList_;
}

- (void)copyAllFieldsTo:(RAREaContainer *)other {
  [super copyAllFieldsTo:other];
  other->_enabled_ = _enabled_;
  other->actAsFormViewer_ = actAsFormViewer_;
  other->comparator_ = comparator_;
  other->formWidgets_ = formWidgets_;
  other->hogFocus_ = hogFocus_;
  other->labelWdgets_ = labelWdgets_;
  other->selectionGroupMap_ = selectionGroupMap_;
  other->showWaitCursorForChildCreation_ = showWaitCursorForChildCreation_;
  other->sortedFormWidgetsDirty_ = sortedFormWidgetsDirty_;
  other->sortedFormWidgetsList_ = sortedFormWidgetsList_;
  other->widgetList_ = widgetList_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addWithRARERenderableDataItem:", NULL, "Z", 0x1, NULL },
    { "addToSelectionGroupWithNSString:withRAREiListHandler:withId:withInt:", NULL, "LRAREUISelectionModelGroup", 0x1, NULL },
    { "addWidgetWithRARESPOTWidget:", NULL, "LRAREiWidget", 0x1, NULL },
    { "addWidgetWithRAREiParentComponent:withRARESPOTWidget:withRAREiContainer_LayoutEnum:", NULL, "LRAREiWidget", 0x1, NULL },
    { "createWidgetWithRARESPOTWidget:", NULL, "LRAREiWidget", 0x1, NULL },
    { "createWidgetWithRAREiContainer:withRAREActionLink:", NULL, "LRAREiWidget", 0x9, NULL },
    { "createWidgetWithRAREiContainer:withRARESPOTWidget:", NULL, "LRAREiWidget", 0x9, NULL },
    { "createWidgetWithRAREiContainer:withRARESPOTWidget:withJavaNetURL:", NULL, "LRAREiWidget", 0x9, NULL },
    { "handleFocusWithRAREiWidget:withBoolean:", NULL, "Z", 0x1, NULL },
    { "registerFormWidgetWithRAREiWidget:", NULL, "LRAREiWidget", 0x1, NULL },
    { "registerFormWidgetWithNSString:withRAREiWidget:", NULL, "LRAREiWidget", 0x1, NULL },
    { "removeWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "unregisterFormWidgetWithNSString:", NULL, "LRAREiWidget", 0x1, NULL },
    { "setWithInt:withRARERenderableDataItem:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getContainerViewer", NULL, "LRAREiContainer", 0x1, NULL },
    { "getElementByIdWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getFormViewer", NULL, "LRAREiFormViewer", 0x1, NULL },
    { "getFormWidgets", NULL, "LJavaUtilList", 0x1, NULL },
    { "getHTTPValuesHash", NULL, "LJavaUtilHashMap", 0x1, NULL },
    { "getSubmittAttributeWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getViewer", NULL, "LRAREiContainer", 0x1, NULL },
    { "getWidget", NULL, "LRAREiWidget", 0x1, NULL },
    { "getWidgetWithInt:", NULL, "LRAREiWidget", 0x1, NULL },
    { "getWidgetWithNSString:", NULL, "LRAREiWidget", 0x1, NULL },
    { "getWidgetFromPathWithNSString:", NULL, "LRAREiWidget", 0x1, NULL },
    { "getWidgetList", NULL, "LJavaUtilList", 0x1, NULL },
    { "getWidgetNames", NULL, "LJavaUtilList", 0x1, NULL },
    { "getWidgets", NULL, "LJavaUtilMap", 0x1, NULL },
    { "isActAsFormViewer", NULL, "Z", 0x1, NULL },
    { "isAncestorOfWithRAREiWidget:", NULL, "Z", 0x1, NULL },
    { "isBackPressedHandled", NULL, "Z", 0x1, NULL },
    { "isContainer", NULL, "Z", 0x1, NULL },
    { "isContainerEnabled", NULL, "Z", 0x1, NULL },
    { "isEnabled", NULL, "Z", 0x1, NULL },
    { "isFocusableInCurrentState", NULL, "Z", 0x1, NULL },
    { "isHogFocus", NULL, "Z", 0x1, NULL },
    { "isRetainInitialWidgetValues", NULL, "Z", 0x1, NULL },
    { "isShowWaitCursorForChildCreation", NULL, "Z", 0x1, NULL },
    { "isTextDirectionSet", NULL, "Z", 0x1, NULL },
    { "addWidgetExWithRAREiParentComponent:withRARESPOTWidget:withRAREiContainer_LayoutEnum:", NULL, "LRAREiWidget", 0x4, NULL },
    { "callaViewerRegister", NULL, "V", 0x4, NULL },
    { "callaViewerunRegisterWithBoolean:", NULL, "V", 0x4, NULL },
    { "checkForURLConfigWithRARESPOTViewer:", NULL, "LRARESPOTViewer", 0x4, NULL },
    { "clearConfigurationWithBoolean:", NULL, "V", 0x4, NULL },
    { "createConstraintsWithRAREiParentComponent:withRARESPOTWidget:", NULL, "LNSObject", 0x4, NULL },
    { "getConsraintsWithRAREiWidget:", NULL, "LNSObject", 0x1, NULL },
    { "registerWidgetWithRAREiWidget:", NULL, "V", 0x4, NULL },
    { "registerWidgets", NULL, "V", 0x4, NULL },
    { "unregisterWidgets", NULL, "V", 0x4, NULL },
    { "unregisterWidgetWithRAREiWidget:", NULL, "V", 0x4, NULL },
    { "updateEx", NULL, "V", 0x4, NULL },
    { "getSortedFormWidgetList", NULL, "LJavaUtilList", 0x4, NULL },
    { "getWidgetListEx", NULL, "LJavaUtilList", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "comparator_", NULL, 0x0, "LRAREaContainer_WidgetLocationComparator" },
    { "actAsFormViewer_", NULL, 0x4, "Z" },
    { "widgetList_", NULL, 0x4, "LRAREUTIdentityArrayList" },
  };
  static J2ObjcClassInfo _RAREaContainer = { "aContainer", "com.appnativa.rare.viewer", NULL, 0x401, 54, methods, 3, fields, 0, NULL};
  return &_RAREaContainer;
}

@end
@implementation RAREaContainer_WidgetLocationComparator

- (int)compareWithId:(id<RAREiWidget>)o1
              withId:(id<RAREiWidget>)o2 {
  if ((o1 == nil) || (o2 == nil)) {
    return 0;
  }
  int f1 = 0;
  int f2 = 0;
  (void) [((id<RAREiPlatformComponent>) nil_chk([((id<RAREiWidget>) nil_chk(o1)) getContainerComponent])) getLocationOnScreenWithRAREUIPoint:p_];
  f1 = (int) (((RAREUIPoint *) nil_chk(p_))->y_ * JavaLangShort_MAX_VALUE + p_->x_);
  (void) [((id<RAREiPlatformComponent>) nil_chk([((id<RAREiWidget>) nil_chk(o2)) getContainerComponent])) getLocationOnScreenWithRAREUIPoint:p_];
  f2 = (int) (p_->y_ * JavaLangShort_MAX_VALUE + p_->x_);
  return f1 - f2;
}

- (id)init {
  if (self = [super init]) {
    p_ = [[RAREUIPoint alloc] init];
  }
  return self;
}

- (void)copyAllFieldsTo:(RAREaContainer_WidgetLocationComparator *)other {
  [super copyAllFieldsTo:other];
  other->p_ = p_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "p_", NULL, 0x0, "LRAREUIPoint" },
  };
  static J2ObjcClassInfo _RAREaContainer_WidgetLocationComparator = { "WidgetLocationComparator", "com.appnativa.rare.viewer", "aContainer", 0x8, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaContainer_WidgetLocationComparator;
}

@end
