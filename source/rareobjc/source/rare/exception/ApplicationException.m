//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/exception/ApplicationException.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/util/Helper.h"
#include "java/io/PrintStream.h"
#include "java/io/PrintWriter.h"
#include "java/io/StringWriter.h"
#include "java/lang/Character.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"

@implementation RAREApplicationException

- (id)initWithNSString:(NSString *)msg {
  if (self = [super initWithNSString:msg]) {
    errorCode_ = 0;
  }
  return self;
}

- (id)initWithJavaLangThrowable:(JavaLangThrowable *)e {
  if (self = [super init]) {
    errorCode_ = 0;
    myCause_ = [RAREUTHelper pealExceptionWithJavaLangThrowable:e];
  }
  return self;
}

- (JavaLangThrowable *)getCauseEx {
  return myCause_;
}

- (id)initWithInt:(int)code
     withNSString:(NSString *)msg {
  if (self = [super initWithNSString:msg]) {
    errorCode_ = 0;
    errorCode_ = code;
  }
  return self;
}

- (id)initWithNSString:(NSString *)format
     withNSObjectArray:(IOSObjectArray *)args {
  if (self = [super initWithNSString:[RAREaPlatformHelper formatWithNSString:format withNSObjectArray:args]]) {
    errorCode_ = 0;
  }
  return self;
}

- (id)initWithNSString:(NSString *)msg
 withJavaLangThrowable:(JavaLangThrowable *)e {
  if (self = [super initWithNSString:msg]) {
    errorCode_ = 0;
    myCause_ = [RAREUTHelper pealExceptionWithJavaLangThrowable:e];
  }
  return self;
}

- (void)printStackTrace {
  if (myCause_ == nil) {
    [super printStackTrace];
  }
  else {
    [myCause_ printStackTrace];
  }
}

- (void)printStackTraceWithJavaIoPrintStream:(JavaIoPrintStream *)s {
  if (stackTrace_ != nil) {
    (void) [((JavaIoPrintStream *) nil_chk(s)) appendWithJavaLangCharSequence:stackTrace_];
    return;
  }
  if (myCause_ == nil) {
    [super printStackTraceWithJavaIoPrintStream:s];
  }
  else {
    [myCause_ printStackTraceWithJavaIoPrintStream:s];
  }
}

- (void)printStackTraceWithJavaIoPrintWriter:(JavaIoPrintWriter *)s {
  if (stackTrace_ != nil) {
    (void) [((JavaIoPrintWriter *) nil_chk(s)) appendWithJavaLangCharSequence:stackTrace_];
    return;
  }
  if (myCause_ == nil) {
    [super printStackTraceWithJavaIoPrintWriter:s];
  }
  else {
    [myCause_ printStackTraceWithJavaIoPrintWriter:s];
  }
}

+ (JavaLangRuntimeException *)runtimeExceptionWithJavaLangThrowable:(JavaLangThrowable *)e {
  if ([e isKindOfClass:[JavaLangRuntimeException class]]) {
    return (JavaLangRuntimeException *) check_class_cast(e, [JavaLangRuntimeException class]);
  }
  return [[RAREApplicationException alloc] initWithJavaLangThrowable:e];
}

- (NSString *)description {
  if (myCause_ == nil) {
    return [super description];
  }
  NSString *s = [super getMessage];
  if ((s == nil) || ([s sequenceLength] == 0)) {
    return [((JavaLangThrowable *) nil_chk(myCause_)) description];
  }
  return [NSString stringWithFormat:@"%@\x0d\n%@", s, [((JavaLangThrowable *) nil_chk(myCause_)) description]];
}

- (void)setErrorCodeWithInt:(int)errorCode {
  self->errorCode_ = errorCode;
}

- (void)setStackTraceWithNSString:(NSString *)stackTrace {
  self->stackTrace_ = stackTrace;
}

- (int)getErrorCode {
  return errorCode_;
}

- (NSString *)getMessage {
  if (myCause_ == nil) {
    return [super getMessage];
  }
  else {
    NSString *s = [super getMessage];
    if ((s == nil) || ([s sequenceLength] == 0)) {
      s = [myCause_ getMessage];
      if ((s == nil) || ([s sequenceLength] == 0)) {
        s = [[myCause_ getClass] getName];
      }
      return s;
    }
    else {
      NSString *s2 = [myCause_ getMessage];
      if (s2 != nil) {
        s = [NSString stringWithFormat:@"%@\x0d\n%@", s, s2];
      }
      return s;
    }
  }
}

+ (NSString *)getMessageExWithJavaLangThrowable:(JavaLangThrowable *)e {
  NSString *s;
  e = [RAREaPlatformHelper unwrapJavaScriptExceptionWithJavaLangThrowable:e];
  if (([e isKindOfClass:[RAREApplicationException class]]) && [((RAREApplicationException *) check_class_cast(e, [RAREApplicationException class])) getCauseEx] != nil) {
    e = [((RAREApplicationException *) check_class_cast(e, [RAREApplicationException class])) getCauseEx];
  }
  if (([e isKindOfClass:[RAREApplicationException class]])) {
    s = [((JavaLangThrowable *) nil_chk(e)) getMessage];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      return s;
    }
  }
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  s = [[((JavaLangThrowable *) nil_chk(e)) getClass] getName];
  (void) [sb appendWithNSString:s];
  int n = [((NSString *) nil_chk(s)) lastIndexOf:'.'];
  if (n != -1) {
    (void) [sb delete__WithInt:0 withInt:n + 1];
  }
  int len = [sb sequenceLength] - 1;
  BOOL lastup = NO;
  while (len > 0) {
    if ([JavaLangCharacter isUpperCaseWithChar:[sb charAtWithInt:len]]) {
      if (!lastup) {
        (void) [sb insertWithInt:len withChar:' '];
      }
      lastup = YES;
    }
    else {
      lastup = NO;
    }
    len--;
  }
  s = [e getMessage];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@": "])) appendWithNSString:s];
  }
  return [sb description];
}

- (IOSObjectArray *)getStackTrace {
  if (myCause_ == nil) {
    return [super getStackTrace];
  }
  else {
    return [myCause_ getStackTrace];
  }
}

+ (NSString *)getStackTraceWithJavaLangThrowable:(JavaLangThrowable *)t {
  if (t == nil) {
    return @"";
  }
  JavaIoStringWriter *sw = [[JavaIoStringWriter alloc] init];
  JavaIoPrintWriter *pw = [[JavaIoPrintWriter alloc] initWithJavaIoWriter:sw];
  [((JavaLangThrowable *) nil_chk(t)) printStackTraceWithJavaIoPrintWriter:pw];
  [pw flush];
  [sw flush];
  return [sw description];
}

- (JavaLangThrowable *)getUnderylingException {
  return (myCause_ != nil) ? myCause_ : [super getCause];
}

+ (JavaLangThrowable *)pealExceptionWithJavaLangThrowable:(JavaLangThrowable *)t {
  if ([t isKindOfClass:[RAREApplicationException class]]) {
    JavaLangThrowable *tt = [((RAREApplicationException *) check_class_cast(t, [RAREApplicationException class])) getUnderylingException];
    return (tt == nil) ? t : tt;
  }
  JavaLangThrowable *c;
  int cnt = 0;
  if (t != nil) {
    while ((c = [t getCause]) != nil) {
      if (cnt > 100) {
        break;
      }
      t = c;
      cnt++;
    }
  }
  return t;
}

- (void)copyAllFieldsTo:(RAREApplicationException *)other {
  [super copyAllFieldsTo:other];
  other->errorCode_ = errorCode_;
  other->myCause_ = myCause_;
  other->stackTrace_ = stackTrace_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getCauseEx", NULL, "LJavaLangThrowable", 0x1, NULL },
    { "initWithNSString:withNSObjectArray:", NULL, NULL, 0x81, NULL },
    { "runtimeExceptionWithJavaLangThrowable:", NULL, "LJavaLangRuntimeException", 0x9, NULL },
    { "getMessage", NULL, "LNSString", 0x1, NULL },
    { "getMessageExWithJavaLangThrowable:", NULL, "LNSString", 0x9, NULL },
    { "getStackTrace", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getStackTraceWithJavaLangThrowable:", NULL, "LNSString", 0x9, NULL },
    { "getUnderylingException", NULL, "LJavaLangThrowable", 0x1, NULL },
    { "pealExceptionWithJavaLangThrowable:", NULL, "LJavaLangThrowable", 0x9, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "myCause_", NULL, 0x4, "LJavaLangThrowable" },
  };
  static J2ObjcClassInfo _RAREApplicationException = { "ApplicationException", "com.appnativa.rare.exception", NULL, 0x1, 9, methods, 1, fields, 0, NULL};
  return &_RAREApplicationException;
}

@end
