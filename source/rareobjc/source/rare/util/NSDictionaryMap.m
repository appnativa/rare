//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/util/NSDictionaryMap.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/util/NSDictionaryMap.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/AbstractMap.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"

@implementation RARENSDictionaryMap

- (id)init {
  if (self = [super init]) {
    proxy_ = [RARENSDictionaryMap createDictionaryWithInt:10];
  }
  return self;
}

- (id)initWithInt:(int)initialCapacity {
  if (self = [super init]) {
    proxy_ = [RARENSDictionaryMap createDictionaryWithInt:initialCapacity];
  }
  return self;
}

- (id)initWithRARENSDictionaryMap:(RARENSDictionaryMap *)map {
  if (self = [super init]) {
    proxy_ = [RARENSDictionaryMap createDictionaryWithId:((RARENSDictionaryMap *) nil_chk(map))->proxy_];
  }
  return self;
}

- (id)initWithJavaUtilMap:(id<JavaUtilMap>)map {
  if (self = [super init]) {
    proxy_ = [RARENSDictionaryMap createDictionaryWithInt:[((id<JavaUtilMap>) nil_chk(map)) size]];
    [self putAllWithJavaUtilMap:map];
  }
  return self;
}

- (id)getWithId:(id)key {
  NSMutableDictionary* d=(NSMutableDictionary*)proxy_;
  return [d objectForKey: key];
}

- (id)initWithId:(id)nsdictionary {
  if (self = [super init]) {
    self->proxy_ = nsdictionary;
  }
  return self;
}

+ (RARENSDictionaryMap *)mapUsingBackingDictionaryWithId:(id)nsdictionary {
  return [[RARENSDictionaryMap alloc] initWithId:nsdictionary];
}

- (id)getProxy {
  return proxy_;
}

- (id<JavaUtilSet>)entrySet {
  return [[RARENSDictionaryMap_DictionarySet alloc] initWithRARENSDictionaryMap:self withRARENSDictionaryMap_IteratorTypeEnum:[RARENSDictionaryMap_IteratorTypeEnum ENTRY]];
}

- (id<JavaUtilSet>)keySet {
  return [[RARENSDictionaryMap_DictionarySet alloc] initWithRARENSDictionaryMap:self withRARENSDictionaryMap_IteratorTypeEnum:[RARENSDictionaryMap_IteratorTypeEnum KEY]];
}

- (id<JavaUtilCollection>)values {
  return [[RARENSDictionaryMap_DictionarySet alloc] initWithRARENSDictionaryMap:self withRARENSDictionaryMap_IteratorTypeEnum:[RARENSDictionaryMap_IteratorTypeEnum VALUE]];
}

- (id)putWithId:(id)key
         withId:(id)value {
  NSMutableDictionary* d=(NSMutableDictionary*)proxy_;
  NSObject* o=[d objectForKey: key];
  [d setObject:value forKey: key];
  return o;
}

- (id)removeWithId:(id)key {
  NSMutableDictionary* d=(NSMutableDictionary*)proxy_;
  NSObject* o=[d objectForKey: key];
  [d removeObjectForKey: key];
  return o;
}

+ (id)createEnumeratorWithId:(id)proxy {
  NSDictionary* d=(NSDictionary*)proxy;
  return [d keyEnumerator];
}

+ (id)createDictionaryWithId:(id)proxy {
  NSDictionary* d=(NSDictionary*)proxy;
  int size=(int)d.count;
  if(size<1) {
    size=10;
  }
  NSMutableDictionary* nd=[NSMutableDictionary dictionaryWithCapacity: size];
  [nd addEntriesFromDictionary: d];
  return nd;
}

+ (id)createDictionaryWithInt:(int)size {
  if(size<1) {
    size=10;
  }
  return [NSMutableDictionary dictionaryWithCapacity: size];
}

- (void)copyAllFieldsTo:(RARENSDictionaryMap *)other {
  [super copyAllFieldsTo:other];
  other->proxy_ = proxy_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getWithId:", NULL, "LNSObject", 0x101, NULL },
    { "initWithId:", NULL, NULL, 0x4, NULL },
    { "mapUsingBackingDictionaryWithId:", NULL, "LRARENSDictionaryMap", 0x9, NULL },
    { "getProxy", NULL, "LNSObject", 0x1, NULL },
    { "entrySet", NULL, "LJavaUtilSet", 0x1, NULL },
    { "keySet", NULL, "LJavaUtilSet", 0x1, NULL },
    { "values", NULL, "LJavaUtilCollection", 0x1, NULL },
    { "putWithId:withId:", NULL, "LNSObject", 0x101, NULL },
    { "removeWithId:", NULL, "LNSObject", 0x101, NULL },
    { "createEnumeratorWithId:", NULL, "LNSObject", 0x10a, NULL },
    { "createDictionaryWithId:", NULL, "LNSObject", 0x10a, NULL },
    { "createDictionaryWithInt:", NULL, "LNSObject", 0x10a, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "proxy_", NULL, 0x4, "LNSObject" },
  };
  static J2ObjcClassInfo _RARENSDictionaryMap = { "NSDictionaryMap", "com.appnativa.rare.util", NULL, 0x1, 12, methods, 1, fields, 0, NULL};
  return &_RARENSDictionaryMap;
}

@end

static RARENSDictionaryMap_IteratorTypeEnum *RARENSDictionaryMap_IteratorTypeEnum_KEY;
static RARENSDictionaryMap_IteratorTypeEnum *RARENSDictionaryMap_IteratorTypeEnum_VALUE;
static RARENSDictionaryMap_IteratorTypeEnum *RARENSDictionaryMap_IteratorTypeEnum_ENTRY;
IOSObjectArray *RARENSDictionaryMap_IteratorTypeEnum_values;

@implementation RARENSDictionaryMap_IteratorTypeEnum

+ (RARENSDictionaryMap_IteratorTypeEnum *)KEY {
  return RARENSDictionaryMap_IteratorTypeEnum_KEY;
}
+ (RARENSDictionaryMap_IteratorTypeEnum *)VALUE {
  return RARENSDictionaryMap_IteratorTypeEnum_VALUE;
}
+ (RARENSDictionaryMap_IteratorTypeEnum *)ENTRY {
  return RARENSDictionaryMap_IteratorTypeEnum_ENTRY;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [RARENSDictionaryMap_IteratorTypeEnum class]) {
    RARENSDictionaryMap_IteratorTypeEnum_KEY = [[RARENSDictionaryMap_IteratorTypeEnum alloc] initWithNSString:@"KEY" withInt:0];
    RARENSDictionaryMap_IteratorTypeEnum_VALUE = [[RARENSDictionaryMap_IteratorTypeEnum alloc] initWithNSString:@"VALUE" withInt:1];
    RARENSDictionaryMap_IteratorTypeEnum_ENTRY = [[RARENSDictionaryMap_IteratorTypeEnum alloc] initWithNSString:@"ENTRY" withInt:2];
    RARENSDictionaryMap_IteratorTypeEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ RARENSDictionaryMap_IteratorTypeEnum_KEY, RARENSDictionaryMap_IteratorTypeEnum_VALUE, RARENSDictionaryMap_IteratorTypeEnum_ENTRY, nil } count:3 type:[IOSClass classWithClass:[RARENSDictionaryMap_IteratorTypeEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:RARENSDictionaryMap_IteratorTypeEnum_values];
}

+ (RARENSDictionaryMap_IteratorTypeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [RARENSDictionaryMap_IteratorTypeEnum_values count]; i++) {
    RARENSDictionaryMap_IteratorTypeEnum *e = RARENSDictionaryMap_IteratorTypeEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LRARENSDictionaryMap_IteratorTypeEnum"};
  static J2ObjcClassInfo _RARENSDictionaryMap_IteratorTypeEnum = { "IteratorType", "com.appnativa.rare.util", "NSDictionaryMap", 0x4018, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_RARENSDictionaryMap_IteratorTypeEnum;
}

@end
@implementation RARENSDictionaryMap_DictionaryEntry

- (id)initWithRARENSDictionaryMap:(RARENSDictionaryMap *)map
                           withId:(id)key {
  if (self = [super init]) {
    self->map_ = map;
    self->key_ = key;
  }
  return self;
}

- (id)setValueWithId:(id)value {
  return [((RARENSDictionaryMap *) nil_chk(map_)) putWithId:key_ withId:value];
}

- (id)getKey {
  return key_;
}

- (id)getValue {
  return [((RARENSDictionaryMap *) nil_chk(map_)) getWithId:key_];
}

- (void)copyAllFieldsTo:(RARENSDictionaryMap_DictionaryEntry *)other {
  [super copyAllFieldsTo:other];
  other->key_ = key_;
  other->map_ = map_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "setValueWithId:", NULL, "LNSObject", 0x1, NULL },
    { "getKey", NULL, "LNSObject", 0x1, NULL },
    { "getValue", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "key_", NULL, 0x0, "LNSObject" },
    { "map_", NULL, 0x0, "LRARENSDictionaryMap" },
  };
  static J2ObjcClassInfo _RARENSDictionaryMap_DictionaryEntry = { "DictionaryEntry", "com.appnativa.rare.util", "NSDictionaryMap", 0x9, 3, methods, 2, fields, 0, NULL};
  return &_RARENSDictionaryMap_DictionaryEntry;
}

@end
@implementation RARENSDictionaryMap_DictionarySet

- (id)initWithRARENSDictionaryMap:(RARENSDictionaryMap *)map
withRARENSDictionaryMap_IteratorTypeEnum:(RARENSDictionaryMap_IteratorTypeEnum *)type {
  if (self = [super init]) {
    self->map_ = map;
    self->type_ = type;
  }
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return [[RARENSDictionaryMap_DictionaryIterator alloc] initWithRARENSDictionaryMap:map_ withRARENSDictionaryMap_IteratorTypeEnum:type_];
}

- (int)size {
  return [((RARENSDictionaryMap *) nil_chk(map_)) size];
}

- (void)copyAllFieldsTo:(RARENSDictionaryMap_DictionarySet *)other {
  [super copyAllFieldsTo:other];
  other->map_ = map_;
  other->type_ = type_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "iterator", NULL, "LJavaUtilIterator", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "map_", NULL, 0x0, "LRARENSDictionaryMap" },
    { "type_", NULL, 0x0, "LRARENSDictionaryMap_IteratorTypeEnum" },
  };
  static J2ObjcClassInfo _RARENSDictionaryMap_DictionarySet = { "DictionarySet", "com.appnativa.rare.util", "NSDictionaryMap", 0x9, 1, methods, 2, fields, 0, NULL};
  return &_RARENSDictionaryMap_DictionarySet;
}

@end
@implementation RARENSDictionaryMap_DictionaryIterator

- (id)initWithRARENSDictionaryMap:(RARENSDictionaryMap *)map
withRARENSDictionaryMap_IteratorTypeEnum:(RARENSDictionaryMap_IteratorTypeEnum *)type {
  if (self = [super init]) {
    self->map_ = map;
    self->enumerator_ = [RARENSDictionaryMap createEnumeratorWithId:((RARENSDictionaryMap *) nil_chk(map))->proxy_];
    self->type_ = type;
    next__ = [self getNext];
  }
  return self;
}

- (id)next {
  if (next__ == nil) {
    @throw [[JavaUtilNoSuchElementException alloc] init];
  }
  current_ = next__;
  next__ = [self getNext];
  switch ([type_ ordinal]) {
    case RARENSDictionaryMap_IteratorType_VALUE:
    return [((RARENSDictionaryMap *) nil_chk(map_)) getWithId:current_];
    case RARENSDictionaryMap_IteratorType_ENTRY:
    return [[RARENSDictionaryMap_DictionaryEntry alloc] initWithRARENSDictionaryMap:map_ withId:current_];
    default:
    return current_;
  }
}

- (void)remove {
  if (current_ == nil) {
    @throw [[JavaUtilNoSuchElementException alloc] init];
  }
  (void) [((RARENSDictionaryMap *) nil_chk(map_)) removeWithId:current_];
}

- (BOOL)hasNext {
  return next__ != nil;
}

- (id)getNext {
  return [((NSEnumerator*)enumerator_) nextObject];
}

- (void)copyAllFieldsTo:(RARENSDictionaryMap_DictionaryIterator *)other {
  [super copyAllFieldsTo:other];
  other->current_ = current_;
  other->enumerator_ = enumerator_;
  other->map_ = map_;
  other->next__ = next__;
  other->type_ = type_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "next", NULL, "LNSObject", 0x1, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL },
    { "getNext", NULL, "LNSObject", 0x102, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "current_", NULL, 0x0, "LNSObject" },
    { "enumerator_", NULL, 0x0, "LNSObject" },
    { "map_", NULL, 0x0, "LRARENSDictionaryMap" },
    { "next__", "next", 0x0, "LNSObject" },
    { "type_", NULL, 0x0, "LRARENSDictionaryMap_IteratorTypeEnum" },
  };
  static J2ObjcClassInfo _RARENSDictionaryMap_DictionaryIterator = { "DictionaryIterator", "com.appnativa.rare.util", "NSDictionaryMap", 0x8, 3, methods, 5, fields, 0, NULL};
  return &_RARENSDictionaryMap_DictionaryIterator;
}

@end
