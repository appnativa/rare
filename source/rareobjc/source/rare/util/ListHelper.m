//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/util/ListHelper.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/dnd/DnDConstants.h"
#include "com/appnativa/rare/ui/dnd/DropInformation.h"
#include "com/appnativa/rare/ui/dnd/RenderableDataItemTransferable.h"
#include "com/appnativa/rare/ui/dnd/TransferFlavor.h"
#include "com/appnativa/rare/ui/dnd/iTransferable.h"
#include "com/appnativa/rare/ui/event/FocusEvent.h"
#include "com/appnativa/rare/ui/iListHandler.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformItemRenderer.h"
#include "com/appnativa/rare/ui/listener/iHyperlinkListener.h"
#include "com/appnativa/rare/ui/renderer/aListItemRenderer.h"
#include "com/appnativa/rare/util/ListHelper.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/util/CharScanner.h"
#include "com/appnativa/util/IntList.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/StringCache.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Runnable.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"

@implementation RAREListHelper

static NSString * RAREListHelper_CALL_SUPER_METHOD_;
static NSString * RAREListHelper_HYPERLINK_LISTENER_KEY_ = @"__RARE.ListHelper.linkListener__";

+ (NSString *)CALL_SUPER_METHOD {
  return RAREListHelper_CALL_SUPER_METHOD_;
}

+ (NSString *)HYPERLINK_LISTENER_KEY {
  return RAREListHelper_HYPERLINK_LISTENER_KEY_;
}

+ (void)copySelectedItemsWithRAREiListHandler:(id<RAREiListHandler>)listComponent
                                      withInt:(int)index
                                  withBoolean:(BOOL)insertMode
                                  withBoolean:(BOOL)delete_ {
  if (index == [((id<RAREiListHandler>) nil_chk(listComponent)) getSelectedIndex]) {
    return;
  }
  BOOL end = (index == [listComponent size]) || (index == -1);
  if (end) {
    IOSObjectArray *a = (IOSObjectArray *) check_class_cast((delete_ ? [listComponent deleteSelectedDataWithBoolean:YES] : [listComponent getSelections]), [IOSObjectArray class]);
    if (a != nil) {
      if (!delete_) {
        a = [RARERenderableDataItem deepCopyWithRARERenderableDataItemArray:a];
      }
      [listComponent addAllWithJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:a]];
    }
    return;
  }
  RARERenderableDataItem *item = [listComponent getWithInt:index];
  IOSObjectArray *a = (IOSObjectArray *) check_class_cast((delete_ ? [listComponent deleteSelectedDataWithBoolean:YES] : [listComponent getSelections]), [IOSObjectArray class]);
  if (delete_) {
    index = [listComponent indexOfWithId:item];
    if (index == -1) {
      index = [listComponent size];
    }
  }
  else {
    a = [RARERenderableDataItem deepCopyWithRARERenderableDataItemArray:a];
  }
  [listComponent addAllWithInt:index withJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:a]];
}

+ (id)deleteItemsWithRAREiListHandler:(id<RAREiListHandler>)listComponent
                         withIntArray:(IOSIntArray *)sels
                          withBoolean:(BOOL)returnData {
  if (sels == nil) {
    return nil;
  }
  int len = (int) [((IOSIntArray *) nil_chk(sels)) count];
  IOSObjectArray *a = returnData ? [IOSObjectArray arrayWithLength:len type:[IOSClass classWithClass:[RARERenderableDataItem class]]] : nil;
  if (returnData) {
    for (int i = 0; i < len; i++) {
      (void) IOSObjectArray_Set(a, i, [((id<RAREiListHandler>) nil_chk(listComponent)) getWithInt:IOSIntArray_Get(sels, i)]);
    }
  }
  for (int i = len - 1; i >= 0; i--) {
    (void) [((id<RAREiListHandler>) nil_chk(listComponent)) removeWithInt:IOSIntArray_Get(sels, i)];
  }
  return a;
}

+ (BOOL)focusEventWithRAREiListHandler:(id<RAREiListHandler>)listComponent
                    withRAREFocusEvent:(RAREFocusEvent *)e
                           withBoolean:(BOOL)focusOwner {
  if ([((RAREFocusEvent *) nil_chk(e)) wasFocusGained]) {
    BOOL hs = [((id<RAREiListHandler>) nil_chk(listComponent)) hasSelection];
    if (!focusOwner && hs) {
      [((id<RAREiPlatformComponent>) nil_chk([listComponent getListComponent])) repaint];
    }
    else if ([listComponent isHandleFirstFocusSelection] && !hs && ([listComponent size] > 0)) {
      [listComponent setSelectedIndexWithInt:0];
    }
    focusOwner = YES;
  }
  else {
    id<RAREiPlatformComponent> fc = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getPermanentFocusOwner];
    if (fc == nil) {
      focusOwner = NO;
    }
    if (![e isTemporary] || ([e getOppositeComponent] == nil)) {
      focusOwner = NO;
    }
    if (!focusOwner && [((id<RAREiListHandler>) nil_chk(listComponent)) hasSelection]) {
      [((id<RAREiPlatformComponent>) nil_chk([listComponent getListComponent])) repaint];
    }
  }
  return focusOwner;
}

+ (BOOL)importDataWithRAREaWidget:(RAREaWidget *)widget
             withRAREiListHandler:(id<RAREiListHandler>)listComponent
            withRAREiTransferable:(id<RAREiTransferable>)t
          withRAREDropInformation:(RAREDropInformation *)drop {
  if ((drop == nil) || (t == nil)) {
    return NO;
  }
  BOOL delete_ = [((RAREDropInformation *) nil_chk(drop)) getDropAction] == RAREDnDConstants_ACTION_MOVE;
  id<JavaUtilList> items;
  id<RAREiWidget> w = [drop getSourceWidget];
  int index;
  if ([drop isInsertAtEnd]) {
    index = [((id<RAREiListHandler>) nil_chk(listComponent)) size];
  }
  else {
    index = [drop getDropIndex];
  }
  if ([(id) t isKindOfClass:[RARERenderableDataItemTransferable class]]) {
    items = [((RARERenderableDataItemTransferable *) check_class_cast(t, [RARERenderableDataItemTransferable class])) getItems];
  }
  else {
    if (w != nil) {
      BOOL text = ![((id<RAREiTransferable>) nil_chk(t)) isTransferFlavorSupportedWithRARETransferFlavor:[RARETransferFlavor itemFlavor]];
      items = [RAREaPlatformHelper getDropedItemsWithRAREaWidget:widget withRAREiWidget:w withBoolean:YES withBoolean:text];
    }
    else {
      @try {
        items = [RAREUtils getItemsWithId:[drop getText] withRAREaWidget:widget withBoolean:NO];
      }
      @catch (JavaLangException *ex) {
        return NO;
      }
    }
  }
  if (w == widget) {
    RARERenderableDataItem *mi = (index == -1) ? nil : [((id<RAREiListHandler>) nil_chk(listComponent)) getWithInt:index];
    if (delete_) {
      [((id<RAREiListHandler>) nil_chk(listComponent)) removeAllWithJavaUtilCollection:items];
      if (mi != nil) {
        int n = [listComponent indexOfWithId:mi];
        if (n < index) {
          index = n + 1;
        }
      }
    }
  }
  else if (delete_ && ([(id) w conformsToProtocol: @protocol(RAREiListHandler)])) {
    [((id<RAREiListHandler>) check_protocol_cast(w, @protocol(RAREiListHandler))) removeAllWithJavaUtilCollection:items];
  }
  if ([drop isInsertAtEnd]) {
    [((id<RAREiListHandler>) nil_chk(listComponent)) addAllWithJavaUtilCollection:items];
  }
  else {
    [((id<RAREiListHandler>) nil_chk(listComponent)) addAllWithInt:index withJavaUtilList:items withBoolean:[drop isInsertMode]];
  }
  return YES;
}

+ (void)installItemLinkListenerWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                               withRAREiHyperlinkListener:(id<RAREiHyperlinkListener>)l {
  if (c != nil) {
    [c putClientPropertyWithNSString:RAREListHelper_HYPERLINK_LISTENER_KEY_ withId:l];
  }
}

+ (void)flashHilightWithRAREiListHandler:(id<RAREiListHandler>)list
                                 withInt:(int)row
                             withBoolean:(BOOL)on
                                 withInt:(int)count
                    withJavaLangRunnable:(id<JavaLangRunnable>)runnable {
  RAREaListItemRenderer *r = (RAREaListItemRenderer *) check_class_cast([((id<RAREiListHandler>) nil_chk(list)) getItemRenderer], [RAREaListItemRenderer class]);
  [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREListHelper_$1 alloc] initWithRAREaListItemRenderer:r withBoolean:on withInt:row withRAREiListHandler:list withInt:count withJavaLangRunnable:runnable] withInt:50];
}

+ (void)runLaterWithRAREiListHandler:(id<RAREiListHandler>)listComponent
      withRAREListHelper_RunTypeEnum:(RAREListHelper_RunTypeEnum *)type {
  [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREListHelper_Runner alloc] initWithRAREiListHandler:listComponent withRAREListHelper_RunTypeEnum:type]];
}

+ (void)runOnEventThreadWithRAREiListHandler:(id<RAREiListHandler>)listComponent
              withRAREListHelper_RunTypeEnum:(RAREListHelper_RunTypeEnum *)type {
  if ([RAREPlatform isUIThread]) {
    [RAREListHelper runItWithRAREiListHandler:listComponent withRAREListHelper_RunTypeEnum:type];
  }
  else {
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREListHelper_Runner alloc] initWithRAREiListHandler:listComponent withRAREListHelper_RunTypeEnum:type]];
  }
}

+ (void)setSelectionsWithRAREiListHandler:(id<RAREiListHandler>)listComponent
                        withNSObjectArray:(IOSObjectArray *)a {
  int len = (a == nil) ? 0 : (int) [a count];
  if (len == 0) {
    return;
  }
  RAREUTIntList *list = [[RAREUTIntList alloc] initWithInt:len];
  int n;
  for (int i = 0; i < len; i++) {
    n = [((id<RAREiListHandler>) nil_chk(listComponent)) indexOfWithId:IOSObjectArray_Get(nil_chk(a), i)];
    if (n > -1) {
      [list addWithInt:n];
    }
  }
  if ([list size] > 0) {
    [((id<RAREiListHandler>) nil_chk(listComponent)) setSelectedIndexesWithIntArray:[list toArray]];
  }
}

+ (NSString *)getWidgetAttributeWithRAREaWidget:(RAREaWidget *)widget
                           withRAREiListHandler:(id<RAREiListHandler>)listComponent
                                   withNSString:(NSString *)name {
  int n = [((NSString *) nil_chk(name)) indexOf:'['];
  int row = -1;
  if (n != -1) {
    RAREUTCharScanner *sc = [[RAREUTCharScanner alloc] initWithNSString:name];
    (void) [sc trim];
    [sc chopWithInt:1];
    name = [sc nextTokenWithChar:'[' withBoolean:YES];
    (void) [sc trim];
    row = [RAREUTSNumber intValueWithNSString:[((RAREaWidget *) nil_chk(widget)) resolvePotentialVariableOrFunctionWithNSString:[sc getLeftOver]]];
  }
  if (row != -1) {
    RARERenderableDataItem *di = [((id<RAREiListHandler>) nil_chk(listComponent)) getWithInt:row];
    if ([((NSString *) nil_chk(name)) isEqual:[RAREiConstants WIDGET_ATT_VALUE]]) {
      return (di == nil) ? nil : [di description];
    }
    if ([name isEqual:[RAREiConstants WIDGET_ATT_DATA]]) {
      if (di != nil) {
        id o = [di getLinkedData];
        return (o == nil) ? nil : [o description];
      }
    }
    return nil;
  }
  else {
    if ([((NSString *) nil_chk(name)) isEqual:[RAREiConstants WIDGET_ATT_SELECTION_ROW]]) {
      return [RAREUTStringCache valueOfWithInt:[((id<RAREiListHandler>) nil_chk(listComponent)) getSelectedIndex]];
    }
    if ([name isEqual:[RAREiConstants WIDGET_ATT_CTXMENU_ROW]]) {
      return [RAREUTStringCache valueOfWithInt:[((id<RAREiListHandler>) nil_chk(listComponent)) getContextMenuIndex]];
    }
    if ([name isEqual:[RAREiConstants WIDGET_ATT_SELECTION_ROWS]]) {
      IOSIntArray *rows = [((id<RAREiListHandler>) nil_chk(listComponent)) getSelectedIndexes];
      return (rows == nil) ? @"" : [JavaUtilArrays toStringWithIntArray:rows];
    }
    if ([name isEqual:[RAREiConstants WIDGET_ATT_ROW_COUNT]]) {
      return [RAREUTStringCache valueOfWithInt:[((id<RAREiListHandler>) nil_chk(listComponent)) size]];
    }
    return RAREListHelper_CALL_SUPER_METHOD_;
  }
}

+ (void)runItWithRAREiListHandler:(id<RAREiListHandler>)listComponent
   withRAREListHelper_RunTypeEnum:(RAREListHelper_RunTypeEnum *)type {
  if (listComponent == nil) {
    return;
  }
  switch ([type ordinal]) {
    case RAREListHelper_RunType_REFRESH:
    [((id<RAREiListHandler>) nil_chk(listComponent)) refreshItems];
    break;
    case RAREListHelper_RunType_CLEAR:
    [((id<RAREiListHandler>) nil_chk(listComponent)) clear];
    break;
    default:
    break;
  }
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [RAREListHelper class]) {
    RAREListHelper_CALL_SUPER_METHOD_ = [NSString string];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "deleteItemsWithRAREiListHandler:withIntArray:withBoolean:", NULL, "LNSObject", 0x9, NULL },
    { "focusEventWithRAREiListHandler:withRAREFocusEvent:withBoolean:", NULL, "Z", 0x9, NULL },
    { "importDataWithRAREaWidget:withRAREiListHandler:withRAREiTransferable:withRAREDropInformation:", NULL, "Z", 0x9, NULL },
    { "getWidgetAttributeWithRAREaWidget:withRAREiListHandler:withNSString:", NULL, "LNSString", 0x9, NULL },
    { "runItWithRAREiListHandler:withRAREListHelper_RunTypeEnum:", NULL, "V", 0xa, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "CALL_SUPER_METHOD_", NULL, 0x19, "LNSString" },
    { "HYPERLINK_LISTENER_KEY_", NULL, 0x1a, "LNSString" },
  };
  static J2ObjcClassInfo _RAREListHelper = { "ListHelper", "com.appnativa.rare.util", NULL, 0x1, 5, methods, 2, fields, 0, NULL};
  return &_RAREListHelper;
}

@end

static RAREListHelper_RunTypeEnum *RAREListHelper_RunTypeEnum_REFRESH;
static RAREListHelper_RunTypeEnum *RAREListHelper_RunTypeEnum_CLEAR;
IOSObjectArray *RAREListHelper_RunTypeEnum_values;

@implementation RAREListHelper_RunTypeEnum

+ (RAREListHelper_RunTypeEnum *)REFRESH {
  return RAREListHelper_RunTypeEnum_REFRESH;
}
+ (RAREListHelper_RunTypeEnum *)CLEAR {
  return RAREListHelper_RunTypeEnum_CLEAR;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [RAREListHelper_RunTypeEnum class]) {
    RAREListHelper_RunTypeEnum_REFRESH = [[RAREListHelper_RunTypeEnum alloc] initWithNSString:@"REFRESH" withInt:0];
    RAREListHelper_RunTypeEnum_CLEAR = [[RAREListHelper_RunTypeEnum alloc] initWithNSString:@"CLEAR" withInt:1];
    RAREListHelper_RunTypeEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ RAREListHelper_RunTypeEnum_REFRESH, RAREListHelper_RunTypeEnum_CLEAR, nil } count:2 type:[IOSClass classWithClass:[RAREListHelper_RunTypeEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:RAREListHelper_RunTypeEnum_values];
}

+ (RAREListHelper_RunTypeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [RAREListHelper_RunTypeEnum_values count]; i++) {
    RAREListHelper_RunTypeEnum *e = RAREListHelper_RunTypeEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LRAREListHelper_RunTypeEnum"};
  static J2ObjcClassInfo _RAREListHelper_RunTypeEnum = { "RunType", "com.appnativa.rare.util", "ListHelper", 0x4019, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_RAREListHelper_RunTypeEnum;
}

@end
@implementation RAREListHelper_Runner

- (id)initWithRAREiListHandler:(id<RAREiListHandler>)listComponent
withRAREListHelper_RunTypeEnum:(RAREListHelper_RunTypeEnum *)type {
  if (self = [super init]) {
    self->listComponent_ = listComponent;
    self->type_ = type;
  }
  return self;
}

- (void)run {
  [RAREListHelper runItWithRAREiListHandler:listComponent_ withRAREListHelper_RunTypeEnum:type_];
}

- (void)copyAllFieldsTo:(RAREListHelper_Runner *)other {
  [super copyAllFieldsTo:other];
  other->listComponent_ = listComponent_;
  other->type_ = type_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithRAREiListHandler:withRAREListHelper_RunTypeEnum:", NULL, NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "listComponent_", NULL, 0x0, "LRAREiListHandler" },
    { "type_", NULL, 0x0, "LRAREListHelper_RunTypeEnum" },
  };
  static J2ObjcClassInfo _RAREListHelper_Runner = { "Runner", "com.appnativa.rare.util", "ListHelper", 0xc, 1, methods, 2, fields, 0, NULL};
  return &_RAREListHelper_Runner;
}

@end
@implementation RAREListHelper_$1

- (void)run {
  [((RAREaListItemRenderer *) nil_chk(val$r_)) setHilightIndexWithInt:val$on_ ? val$row_ : -1];
  [((id<RAREiListHandler>) nil_chk(val$list_)) repaintRowWithInt:val$row_];
  if (val$count_ == 0) {
    if (val$runnable_ != nil) {
      [RAREPlatform invokeLaterWithJavaLangRunnable:val$runnable_ withInt:50];
    }
  }
  else {
    [RAREListHelper flashHilightWithRAREiListHandler:val$list_ withInt:val$row_ withBoolean:!val$on_ withInt:val$count_ - 1 withJavaLangRunnable:val$runnable_];
  }
}

- (id)initWithRAREaListItemRenderer:(RAREaListItemRenderer *)capture$0
                        withBoolean:(BOOL)capture$1
                            withInt:(int)capture$2
               withRAREiListHandler:(id<RAREiListHandler>)capture$3
                            withInt:(int)capture$4
               withJavaLangRunnable:(id<JavaLangRunnable>)capture$5 {
  val$r_ = capture$0;
  val$on_ = capture$1;
  val$row_ = capture$2;
  val$list_ = capture$3;
  val$count_ = capture$4;
  val$runnable_ = capture$5;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$r_", NULL, 0x1012, "LRAREaListItemRenderer" },
    { "val$on_", NULL, 0x1012, "Z" },
    { "val$row_", NULL, 0x1012, "I" },
    { "val$list_", NULL, 0x1012, "LRAREiListHandler" },
    { "val$count_", NULL, 0x1012, "I" },
    { "val$runnable_", NULL, 0x1012, "LJavaLangRunnable" },
  };
  static J2ObjcClassInfo _RAREListHelper_$1 = { "$1", "com.appnativa.rare.util", "ListHelper", 0x8000, 0, NULL, 6, fields, 0, NULL};
  return &_RAREListHelper_$1;
}

@end
