//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/util/SubItemComparator.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/converters/iDataConverter.h"
#include "com/appnativa/rare/ui/Column.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/iTableModel.h"
#include "com/appnativa/rare/util/SubItemComparator.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Comparable.h"
#include "java/util/Comparator.h"

@implementation RARESubItemComparator

static RARESubItemComparator * RARESubItemComparator__reverseSorter_;

+ (RARESubItemComparator *)_reverseSorter {
  return RARESubItemComparator__reverseSorter_;
}

+ (void)set_reverseSorter:(RARESubItemComparator *)_reverseSorter {
  RARESubItemComparator__reverseSorter_ = _reverseSorter;
}

- (id)init {
  if (self = [super init]) {
    compareColumn_ = -1;
    descending_ = NO;
  }
  return self;
}

- (id)initWithJavaUtilComparator:(id<JavaUtilComparator>)c {
  if (self = [super init]) {
    compareColumn_ = -1;
    descending_ = NO;
    comparator_ = c;
  }
  return self;
}

- (id)initWithRAREiTableModel:(id<RAREiTableModel>)th {
  if (self = [super init]) {
    compareColumn_ = -1;
    descending_ = NO;
    tableHandler_ = th;
  }
  return self;
}

- (id)initWithRAREiTableModel:(id<RAREiTableModel>)th
                  withBoolean:(BOOL)descending {
  if (self = [super init]) {
    compareColumn_ = -1;
    descending_ = NO;
    tableHandler_ = th;
    self->descending_ = descending;
  }
  return self;
}

- (int)compareWithId:(id)o1
              withId:(id)o2 {
  int n = (compareColumn_ == -1) ? [self rowCompareExWithRARERenderableDataItem:(RARERenderableDataItem *) check_class_cast(o1, [RARERenderableDataItem class]) withRARERenderableDataItem:(RARERenderableDataItem *) check_class_cast(o2, [RARERenderableDataItem class])] : [self compareExWithId:o1 withId:o2];
  return descending_ ? -n : n;
}

- (int)compareWithRARERenderableDataItem:(RARERenderableDataItem *)o1
              withRARERenderableDataItem:(RARERenderableDataItem *)o2 {
  int n = (compareColumn_ == -1) ? [self rowCompareExWithRARERenderableDataItem:o1 withRARERenderableDataItem:o2] : [self compareExWithId:o1 withId:o2];
  return descending_ ? -n : n;
}

+ (int)compareWithRARERenderableDataItem:(RARERenderableDataItem *)item1
              withRARERenderableDataItem:(RARERenderableDataItem *)item2
                  withJavaUtilComparator:(id<JavaUtilComparator>)c
                             withBoolean:(BOOL)useLinkedData {
  if (item1 == item2) {
    return 0;
  }
  if ((item1 == nil) || (item2 == nil)) {
    return (item1 == nil) ? -1 : 1;
  }
  id v1 = useLinkedData ? [((RARERenderableDataItem *) nil_chk(item1)) getLinkedData] : [((RARERenderableDataItem *) nil_chk(item1)) getValue];
  id v2 = useLinkedData ? [((RARERenderableDataItem *) nil_chk(item2)) getLinkedData] : [((RARERenderableDataItem *) nil_chk(item2)) getValue];
  if (v1 == v2) {
    if (v1 == nil) {
      id<RAREiPlatformIcon> ic1 = [((RARERenderableDataItem *) nil_chk(item1)) getIcon];
      id<RAREiPlatformIcon> ic2 = [((RARERenderableDataItem *) nil_chk(item2)) getIcon];
      if (ic1 == nil) {
        return (ic2 == nil) ? 0 : -1;
      }
      if (ic2 == nil) {
        return 1;
      }
    }
    return 0;
  }
  if ((v1 == nil) || (v2 == nil)) {
    return (v1 == nil) ? -1 : 1;
  }
  if (c != nil) {
    return [c compareWithId:v1 withId:v2];
  }
  if (!([v1 conformsToProtocol: @protocol(JavaLangComparable)])) {
    return [((NSString *) nil_chk([v1 description])) compareToWithId:[v2 description]];
  }
  if (![[v1 getClass] isInstance:v2]) {
    return 0;
  }
  @try {
    return [((id<JavaLangComparable>) check_protocol_cast(v1, @protocol(JavaLangComparable))) compareToWithId:v2];
  }
  @catch (JavaLangClassCastException *e) {
    return 0;
  }
}

+ (int)compareObjectsWithId:(id)v1
                     withId:(id)v2 {
  if (v1 == v2) {
    return 0;
  }
  if ((v1 == nil) || (v2 == nil)) {
    return (v1 == nil) ? -1 : 1;
  }
  if (!([v1 conformsToProtocol: @protocol(JavaLangComparable)])) {
    return 0;
  }
  if (![[nil_chk(v1) getClass] isInstance:v2]) {
    return 0;
  }
  @try {
    return [((id<JavaLangComparable>) check_protocol_cast(v1, @protocol(JavaLangComparable))) compareToWithId:v2];
  }
  @catch (JavaLangClassCastException *e) {
    return 0;
  }
}

- (void)setColumnWithInt:(int)col {
  compareColumn_ = col;
}

- (void)setComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)c {
  comparator_ = c;
}

- (void)setOptionsWithInt:(int)col
              withBoolean:(BOOL)desc {
  compareColumn_ = col;
  descending_ = desc;
}

- (void)setOptionsWithJavaUtilComparator:(id<JavaUtilComparator>)c
                                 withInt:(int)col
                             withBoolean:(BOOL)desc {
  comparator_ = c;
  compareColumn_ = col;
  descending_ = desc;
}

- (void)setUseLinkedDataWithBoolean:(BOOL)useLinkedData {
  self->useLinkedData_ = useLinkedData;
}

+ (id<JavaUtilComparator>)getReverseOrderComparatorInstance {
  if (RARESubItemComparator__reverseSorter_ == nil) {
    RARESubItemComparator__reverseSorter_ = [[RARESubItemComparator alloc] initWithRAREiTableModel:nil withBoolean:YES];
  }
  return RARESubItemComparator__reverseSorter_;
}

- (int)getSortColumn {
  return compareColumn_;
}

- (BOOL)isSortDescending {
  return descending_;
}

- (BOOL)isUseLinkedData {
  return useLinkedData_;
}

- (int)rowCompareExWithRARERenderableDataItem:(RARERenderableDataItem *)item1
                   withRARERenderableDataItem:(RARERenderableDataItem *)item2 {
  if (item1 == item2) {
    return 0;
  }
  if ((item1 == nil) || (item2 == nil)) {
    return (item1 == nil) ? -1 : 1;
  }
  return [RARESubItemComparator compareWithRARERenderableDataItem:item1 withRARERenderableDataItem:item2 withJavaUtilComparator:comparator_ withBoolean:useLinkedData_];
}

- (int)compareExWithId:(id)o1
                withId:(id)o2 {
  RARERenderableDataItem *item1 = (RARERenderableDataItem *) check_class_cast(o1, [RARERenderableDataItem class]);
  RARERenderableDataItem *item2 = (RARERenderableDataItem *) check_class_cast(o2, [RARERenderableDataItem class]);
  if (item1 == item2) {
    return 0;
  }
  if ((item1 == nil) || (item2 == nil)) {
    return (item1 == nil) ? -1 : 1;
  }
  item1 = [((RARERenderableDataItem *) nil_chk(item1)) getItemExWithInt:compareColumn_];
  item2 = [((RARERenderableDataItem *) nil_chk(item2)) getItemExWithInt:compareColumn_];
  if (item1 == item2) {
    return 0;
  }
  if ((item1 == nil) || (item2 == nil)) {
    return (item1 == nil) ? -1 : 1;
  }
  if (tableHandler_ != nil) {
    if (![((RARERenderableDataItem *) nil_chk(item1)) isConverted]) {
      [self convertWithRARERenderableDataItem:item1 withInt:compareColumn_];
    }
    if (![((RARERenderableDataItem *) nil_chk(item2)) isConverted]) {
      [self convertWithRARERenderableDataItem:item2 withInt:compareColumn_];
    }
  }
  return [RARESubItemComparator compareWithRARERenderableDataItem:item1 withRARERenderableDataItem:item2 withJavaUtilComparator:comparator_ withBoolean:useLinkedData_];
}

- (void)convertWithRARERenderableDataItem:(RARERenderableDataItem *)di
                                  withInt:(int)col {
  RAREColumn *c = [((id<RAREiTableModel>) nil_chk(tableHandler_)) getColumnWithInt:col];
  id<RAREiDataConverter> cvt = [((RAREColumn *) nil_chk(c)) getDataConverter];
  if (cvt != nil) {
    (void) [((RARERenderableDataItem *) nil_chk(di)) convertWithRAREiWidget:[((id<RAREiWidget>) nil_chk([tableHandler_ getWidget])) getViewer] withInt:[c getType] withRAREiDataConverter:cvt withId:[c getValueContext]];
  }
}

- (void)copyAllFieldsTo:(RARESubItemComparator *)other {
  [super copyAllFieldsTo:other];
  other->comparator_ = comparator_;
  other->compareColumn_ = compareColumn_;
  other->descending_ = descending_;
  other->tableHandler_ = tableHandler_;
  other->useLinkedData_ = useLinkedData_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getReverseOrderComparatorInstance", NULL, "LJavaUtilComparator", 0x9, NULL },
    { "isSortDescending", NULL, "Z", 0x1, NULL },
    { "isUseLinkedData", NULL, "Z", 0x1, NULL },
    { "rowCompareExWithRARERenderableDataItem:withRARERenderableDataItem:", NULL, "I", 0x4, NULL },
    { "compareExWithId:withId:", NULL, "I", 0x2, NULL },
    { "convertWithRARERenderableDataItem:withInt:", NULL, "V", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "_reverseSorter_", NULL, 0xa, "LRARESubItemComparator" },
    { "tableHandler_", NULL, 0x0, "LRAREiTableModel" },
    { "compareColumn_", NULL, 0x4, "I" },
  };
  static J2ObjcClassInfo _RARESubItemComparator = { "SubItemComparator", "com.appnativa.rare.util", NULL, 0x1, 6, methods, 3, fields, 0, NULL};
  return &_RARESubItemComparator;
}

@end
