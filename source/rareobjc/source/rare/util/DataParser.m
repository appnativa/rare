//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/util/DataParser.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/TemplateHandler.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/exception/InvalidConfigurationException.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/iURLConnection.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/spot/ComboBox.h"
#include "com/appnativa/rare/spot/GridPane.h"
#include "com/appnativa/rare/spot/GroupBox.h"
#include "com/appnativa/rare/spot/MainWindow.h"
#include "com/appnativa/rare/spot/MenuBar.h"
#include "com/appnativa/rare/spot/PushButton.h"
#include "com/appnativa/rare/spot/Region.h"
#include "com/appnativa/rare/spot/SplitPane.h"
#include "com/appnativa/rare/spot/StackPane.h"
#include "com/appnativa/rare/spot/StatusBar.h"
#include "com/appnativa/rare/spot/TabPane.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/spot/WidgetPane.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/painter/iImagePainter.h"
#include "com/appnativa/rare/util/DataParser.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SDFNode.h"
#include "com/appnativa/spot/SPOTAny.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTInteger.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSequence.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/CharScanner.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/ObjectHolder.h"
#include "com/appnativa/util/Streams.h"
#include "com/appnativa/util/UtilityMap.h"
#include "com/appnativa/util/iURLResolver.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "java/io/Reader.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/net/URL.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@implementation RAREDataParser

static BOOL RAREDataParser__validate_;
static BOOL RAREDataParser_INLINE_SELECTED_STACKPANE_VIEWER_URLS_ = YES;
static BOOL RAREDataParser_INLINE_REGION_VIEWER_URLS_ = NO;
static BOOL RAREDataParser_DISABLE_ALL_INLINING_OF_URLS_ = NO;

+ (BOOL)_validate {
  return RAREDataParser__validate_;
}

+ (BOOL)INLINE_SELECTED_STACKPANE_VIEWER_URLS {
  return RAREDataParser_INLINE_SELECTED_STACKPANE_VIEWER_URLS_;
}

+ (BOOL *)INLINE_SELECTED_STACKPANE_VIEWER_URLSRef {
  return &RAREDataParser_INLINE_SELECTED_STACKPANE_VIEWER_URLS_;
}

+ (BOOL)INLINE_REGION_VIEWER_URLS {
  return RAREDataParser_INLINE_REGION_VIEWER_URLS_;
}

+ (BOOL *)INLINE_REGION_VIEWER_URLSRef {
  return &RAREDataParser_INLINE_REGION_VIEWER_URLS_;
}

+ (BOOL)DISABLE_ALL_INLINING_OF_URLS {
  return RAREDataParser_DISABLE_ALL_INLINING_OF_URLS_;
}

+ (BOOL *)DISABLE_ALL_INLINING_OF_URLSRef {
  return &RAREDataParser_DISABLE_ALL_INLINING_OF_URLS_;
}

+ (RARESPOTViewer *)checkAndInstantiateViewerWithRAREiWidget:(id<RAREiWidget>)context
                                                withNSString:(NSString *)mimeType
                                      withRAREiURLConnection:(id<RAREiURLConnection>)conn {
  if (mimeType == nil) {
    mimeType = [((id<RAREiURLConnection>) nil_chk(conn)) getContentType];
  }
  if ([((NSString *) nil_chk(mimeType)) hasPrefix:[RAREiConstants RML_MIME_TYPE]] || [mimeType hasPrefix:[RAREiConstants TEXT_MIME_TYPE]] || [mimeType hasPrefix:[RAREiConstants SDF_MIME_TYPE]]) {
    return [RAREUtils getViewerConfigurationWithRARESPOTWidget:(RARESPOTWidget *) check_class_cast([RAREDataParser loadSPOTObjectSDFWithRAREiWidget:context withJavaIoReader:[((id<RAREiURLConnection>) nil_chk(conn)) getReader] withISPOTElement:nil withNSString:mimeType withJavaNetURL:[conn getURL]], [RARESPOTWidget class])];
  }
  else if ([mimeType hasPrefix:[RAREiConstants XML_MIME_TYPE]]) {
    @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"XML format not supported"];
  }
  else {
    return nil;
  }
}

+ (void)checkForImagesWithRAREiWidget:(id<RAREiWidget>)context
                   withRARESPOTWidget:(RARESPOTWidget *)cfg
                       withJavaNetURL:(JavaNetURL *)contextURL {
  BOOL loadBackground = NO;
  BOOL loadOverlay = NO;
  while ([((SPOTPrintableString *) nil_chk(((RARESPOTWidget *) nil_chk(cfg))->bgImageURL_)) getValue] != nil) {
    if ([@"true" isEqual:[cfg->bgImageURL_ spot_getAttributeWithNSString:@"waitForLoad"]]) {
      loadBackground = YES;
      break;
    }
    if ([@"false" isEqual:[cfg->bgImageURL_ spot_getAttributeWithNSString:@"deferred"]]) {
      loadBackground = YES;
      break;
    }
    break;
  }
  while ([((SPOTPrintableString *) nil_chk(cfg->overlayImageURL_)) getValue] != nil) {
    if ([@"true" isEqual:[cfg->overlayImageURL_ spot_getAttributeWithNSString:@"waitForLoad"]]) {
      loadOverlay = YES;
      break;
    }
    if ([@"false" isEqual:[cfg->overlayImageURL_ spot_getAttributeWithNSString:@"deferred"]]) {
      loadOverlay = YES;
      break;
    }
    break;
  }
  if (loadBackground) {
    id<RAREiImagePainter> p = [RAREUtils configureImageWithRAREiWidget:context withRAREiImagePainter:nil withSPOTPrintableString:cfg->bgImageURL_ withBoolean:NO];
    (void) [cfg->bgImageURL_ spot_setLinkedDataWithId:[[RAREUTObjectHolder alloc] initWithId:p]];
  }
  if (loadOverlay) {
    id<RAREiImagePainter> p = [RAREUtils configureImageWithRAREiWidget:context withRAREiImagePainter:nil withSPOTPrintableString:cfg->overlayImageURL_ withBoolean:NO];
    (void) [cfg->overlayImageURL_ spot_setLinkedDataWithId:[[RAREUTObjectHolder alloc] initWithId:p]];
  }
}

+ (RARESPOTViewer *)instantiateViewerWithRAREiWidget:(id<RAREiWidget>)ctx
                                         withSDFNode:(SDFNode *)node {
  RARESPOTViewer *v = nil;
  id<RAREiPlatformAppContext> app = [((id<RAREiWidget>) nil_chk(ctx)) getAppContext];
  if (node != nil) {
    NSString *type = [node getNodeName];
    if ([((NSString *) nil_chk(type)) indexOf:'.'] == -1) {
      type = [NSString stringWithFormat:@"%@.%@", [RAREPlatform RARE_SPOT_PACKAGE_NAME], type];
    }
    IOSClass *cls = [RAREaPlatformHelper loadClassWithNSString:type];
    RARESPOTWidget *element = (RARESPOTWidget *) check_class_cast([((IOSClass *) nil_chk(cls)) newInstance], [RARESPOTWidget class]);
    RARETemplateHandler *th = [RARETemplateHandler getInstanceWithRAREiWidget:ctx withJavaNetURL:nil];
    if (th != nil) {
      [((RARESPOTWidget *) nil_chk(element)) spot_setTemplateHandlerWithISPOTTemplateHandler:th];
    }
    if (![((RARESPOTWidget *) nil_chk(element)) fromSDFWithSDFNode:node]) {
      NSString *s = [((id<RAREiPlatformAppContext>) nil_chk(app)) getResourceAsStringWithNSString:@"Rare.runtime.text.invalidConfigurationEx"];
      @throw [[RAREApplicationException alloc] initWithNSString:[RAREUTHelper expandStringWithNSString:s withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [element description] } count:1 type:[IOSClass classWithClass:[NSString class]]]]];
    }
    if ([element isKindOfClass:[RARESPOTViewer class]]) {
      v = (RARESPOTViewer *) check_class_cast(element, [RARESPOTViewer class]);
    }
    else {
      v = [[RARESPOTWidgetPane alloc] initWithRARESPOTWidget:element];
    }
  }
  return v;
}

+ (RARESPOTViewer *)instantiateViewerWithRAREiWidget:(id<RAREiWidget>)context
                                        withNSString:(NSString *)mimeType
                                    withJavaIoReader:(JavaIoReader *)r
                                      withJavaNetURL:(JavaNetURL *)contextURL {
  if ([((NSString *) nil_chk([RAREiConstants XML_MIME_TYPE])) equalsIgnoreCase:mimeType]) {
    @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"XML format not supported"];
  }
  else {
    return [RAREUtils getViewerConfigurationWithRARESPOTWidget:(RARESPOTWidget *) check_class_cast([RAREDataParser loadSPOTObjectSDFWithRAREiWidget:context withJavaIoReader:r withISPOTElement:nil withNSString:mimeType withJavaNetURL:contextURL], [RARESPOTWidget class])];
  }
}

+ (JavaLangRuntimeException *)invalidConfigurationExceptionWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                                                 withJavaLangThrowable:(JavaLangThrowable *)e {
  return [RAREDataParser invalidConfigurationExceptionWithRAREiPlatformAppContext:app withJavaLangThrowable:e withNSString:(NSString *) check_class_cast(nil, [NSString class])];
}

+ (JavaLangRuntimeException *)invalidConfigurationExceptionWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                                                        withJavaNetURL:(JavaNetURL *)sourceURL {
  NSString *s = [((id<RAREiPlatformAppContext>) nil_chk(app)) getResourceAsStringWithNSString:@"Rare.runtime.text.invalidConfiguration"];
  s = [RAREUTHelper expandStringWithNSString:s withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ (sourceURL == nil) ? [app getResourceAsStringWithNSString:@"Rare.runtime.text.unknown"] : [sourceURL toExternalForm] } count:1 type:[IOSClass classWithClass:[NSString class]]]];
  return [[RAREInvalidConfigurationException alloc] initWithNSString:s];
}

+ (JavaLangRuntimeException *)invalidConfigurationExceptionWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                                                    withRARESPOTWidget:(RARESPOTWidget *)cfg {
  NSString *s = [((id<RAREiPlatformAppContext>) nil_chk(app)) getResourceAsStringWithNSString:@"Rare.runtime.text.invalidConfiguration"];
  s = [RAREUTHelper expandStringWithNSString:s withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [app getResourceAsStringWithNSString:@"Rare.runtime.text.unknown"] } count:1 type:[IOSClass classWithClass:[NSString class]]]];
  s = [NSString stringWithFormat:@"%@%@", s, [NSString stringWithFormat:@"\x0d\n%@", [((RARESPOTWidget *) nil_chk(cfg)) description]]];
  return [[RAREInvalidConfigurationException alloc] initWithNSString:s];
}

+ (JavaLangRuntimeException *)invalidConfigurationExceptionWithNSString:(NSString *)spec
                                                           withNSString:(NSString *)value {
  return [[RAREInvalidConfigurationException alloc] initWithNSString:[RAREUTHelper expandStringWithNSString:spec withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ value } count:1 type:[IOSClass classWithClass:[NSString class]]]]];
}

+ (JavaLangRuntimeException *)invalidConfigurationExceptionWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                                                 withJavaLangThrowable:(JavaLangThrowable *)e
                                                                    withRAREActionLink:(RAREActionLink *)link {
  NSString *s = nil;
  if (link != nil) {
    @try {
      JavaNetURL *u = [link getURLWithRAREiWidget:nil];
      if (u != nil) {
        s = [u description];
      }
      else {
        RARESPOTWidget *w = [link getViewerConfiguration];
        if (w != nil) {
          return [RAREDataParser invalidConfigurationExceptionWithRAREiPlatformAppContext:app withJavaLangThrowable:e withRARESPOTWidget:w];
        }
      }
    }
    @catch (JavaLangException *ignored) {
    }
  }
  return [RAREDataParser invalidConfigurationExceptionWithRAREiPlatformAppContext:app withJavaLangThrowable:e withNSString:s];
}

+ (JavaLangRuntimeException *)invalidConfigurationExceptionWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                                                 withJavaLangThrowable:(JavaLangThrowable *)e
                                                                          withNSString:(NSString *)url {
  NSString *s = [((id<RAREiPlatformAppContext>) nil_chk(app)) getResourceAsStringWithNSString:@"Rare.runtime.text.invalidConfiguration"];
  if (url == nil) {
    s = [RAREUTHelper expandStringWithNSString:s withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [app getResourceAsStringWithNSString:@"Rare.runtime.text.unknown"] } count:1 type:[IOSClass classWithClass:[NSString class]]]];
  }
  else {
    s = [RAREUTHelper expandStringWithNSString:s withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ url } count:1 type:[IOSClass classWithClass:[NSString class]]]];
  }
  NSString *em = [RAREUTHelper exceptionStringWithJavaLangThrowable:e];
  return [[RAREInvalidConfigurationException alloc] initWithNSString:[NSString stringWithFormat:@"%@\x0d\n%@", s, em] withJavaLangThrowable:e];
}

+ (JavaLangRuntimeException *)invalidConfigurationExceptionWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                                                 withJavaLangThrowable:(JavaLangThrowable *)e
                                                                    withRARESPOTWidget:(RARESPOTWidget *)cfg {
  NSString *s = [((id<RAREiPlatformAppContext>) nil_chk(app)) getResourceAsStringWithNSString:@"Rare.runtime.text.invalidConfiguration"];
  s = [RAREUTHelper expandStringWithNSString:s withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [app getResourceAsStringWithNSString:@"Rare.runtime.text.unknown"] } count:1 type:[IOSClass classWithClass:[NSString class]]]];
  s = [NSString stringWithFormat:@"%@%@", s, [NSString stringWithFormat:@"\x0d\n%@", [RAREApplicationException getMessageExWithJavaLangThrowable:e]]];
  s = [NSString stringWithFormat:@"%@%@", s, [NSString stringWithFormat:@"\x0d\n%@", [((RARESPOTWidget *) nil_chk(cfg)) description]]];
  return [[RAREInvalidConfigurationException alloc] initWithNSString:s withJavaLangThrowable:e];
}

+ (JavaLangRuntimeException *)invalidConfigurationExceptionWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                                                        withJavaNetURL:(JavaNetURL *)sourceURL
                                                                          withNSString:(NSString *)msg {
  NSString *s = [((id<RAREiPlatformAppContext>) nil_chk(app)) getResourceAsStringWithNSString:@"Rare.runtime.text.invalidConfiguration"];
  s = [RAREUTHelper expandStringWithNSString:s withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ (sourceURL == nil) ? [app getResourceAsStringWithNSString:@"Rare.runtime.text.unknown"] : [sourceURL toExternalForm] } count:1 type:[IOSClass classWithClass:[NSString class]]]];
  s = [NSString stringWithFormat:@"%@%@", s, [NSString stringWithFormat:@"\x0d\n%@", msg]];
  return [[RAREInvalidConfigurationException alloc] initWithNSString:s];
}

+ (JavaLangRuntimeException *)invalidConfigurationExceptionWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                                                        withJavaNetURL:(JavaNetURL *)url
                                                                    withRARESPOTWidget:(RARESPOTWidget *)cfg {
  NSString *s = [((id<RAREiPlatformAppContext>) nil_chk(app)) getResourceAsStringWithNSString:@"Rare.runtime.text.invalidConfiguration"];
  NSString *ctx = (url == nil) ? [app getResourceAsStringWithNSString:@"Rare.runtime.text.unknown"] : [url description];
  s = [RAREUTHelper expandStringWithNSString:s withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ ctx } count:1 type:[IOSClass classWithClass:[NSString class]]]];
  s = [NSString stringWithFormat:@"%@%@", s, [NSString stringWithFormat:@"\x0d\n%@", [((RARESPOTWidget *) nil_chk(cfg)) description]]];
  return [[RAREInvalidConfigurationException alloc] initWithNSString:s];
}

+ (id<iSPOTElement>)loadSPOTObjectWithRAREiWidget:(id<RAREiWidget>)ctx
                           withRAREiURLConnection:(id<RAREiURLConnection>)conn
                                 withISPOTElement:(id<iSPOTElement>)element {
  NSString *mime = [((id<RAREiURLConnection>) nil_chk(conn)) getContentType];
  id<iSPOTElement> e;
  JavaIoReader *r = [conn getReader];
  JavaNetURL *url = [conn getURL];
  if (![RAREUtils isValidBaseURLWithJavaNetURL:url]) {
    url = [((id<RAREiViewer>) nil_chk([((id<RAREiWidget>) nil_chk(ctx)) getViewer])) getContextURL];
  }
  if ((mime != nil) && [mime hasPrefix:[RAREiConstants XML_MIME_TYPE]]) {
    @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"XML format not supported"];
  }
  else {
    e = [RAREDataParser loadSPOTObjectSDFWithRAREiWidget:ctx withJavaIoReader:r withISPOTElement:element withNSString:mime withJavaNetURL:url];
  }
  return e;
}

+ (id<iSPOTElement>)loadSPOTObjectSDFWithRAREiWidget:(id<RAREiWidget>)context
                                    withJavaIoReader:(JavaIoReader *)reader
                                    withISPOTElement:(id<iSPOTElement>)element
                                        withNSString:(NSString *)mime
                                      withJavaNetURL:(JavaNetURL *)contextURL {
  id<RAREiPlatformAppContext> app = [((id<RAREiWidget>) nil_chk(context)) getAppContext];
  id<RAREUTiURLResolver> ur = (id<RAREUTiURLResolver>) check_protocol_cast(context, @protocol(RAREUTiURLResolver));
  BOOL dm = [context isDesignMode];
  SDFNode *root;
  NSString *s;
  @try {
    if (RAREDataParser_DISABLE_ALL_INLINING_OF_URLS_ || dm) {
      root = [SDFNode parseForReformatWithJavaIoReader:reader withRAREUTiFileResolver:ur withNSString:(contextURL == nil) ? nil : [contextURL description]];
    }
    else {
      root = [SDFNode parseWithJavaIoReader:reader withRAREUTiFileResolver:ur withNSString:(contextURL == nil) ? nil : [contextURL description] withBoolean:dm];
    }
  }
  @catch (JavaLangException *ex) {
    s = (contextURL == nil) ? nil : [contextURL description];
    @throw [RAREDataParser invalidConfigurationExceptionWithRAREiPlatformAppContext:app withJavaLangThrowable:ex withNSString:s];
  }
  SDFNode *node = [((SDFNode *) nil_chk(root)) getFirstBlockNode];
  if (node == nil) {
    s = [((id<RAREiPlatformAppContext>) nil_chk(app)) getResourceAsStringWithNSString:@"Rare.runtime.text.invalidConfigurationEx"];
    @throw [[RAREApplicationException alloc] initWithNSString:[RAREUTHelper expandStringWithNSString:s withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [((JavaNetURL *) nil_chk(contextURL)) description] } count:1 type:[IOSClass classWithClass:[NSString class]]]]];
  }
  if (element == nil) {
    NSString *type = [((SDFNode *) nil_chk(node)) getNodeName];
    BOOL isset = NO;
    if ([((NSString *) nil_chk(type)) isEqual:@"Set"] && [node hasAttributes]) {
      s = (NSString *) check_class_cast([((id<JavaUtilMap>) nil_chk([node getNodeAttributes])) getWithId:@"type"], [NSString class]);
      if (s != nil) {
        type = s;
        isset = YES;
      }
    }
    if ([type indexOf:'.'] == -1) {
      type = [NSString stringWithFormat:@"%@.%@", [RAREPlatform RARE_SPOT_PACKAGE_NAME], type];
    }
    IOSClass *cls = [RAREaPlatformHelper loadClassWithNSString:type];
    element = (id<iSPOTElement>) check_protocol_cast([((IOSClass *) nil_chk(cls)) newInstance], @protocol(iSPOTElement));
    if (isset) {
      SPOTSet *set = [[SPOTSet alloc] initWithNSString:@"Set" withISPOTElement:element withInt:-1 withInt:-1 withBoolean:YES];
      [set spot_setNameWithNSString:@"Set"];
      element = set;
    }
  }
  RARETemplateHandler *th = [RARETemplateHandler getInstanceWithRAREiWidget:context withJavaNetURL:contextURL];
  if (([(id) element isKindOfClass:[SPOTSequence class]]) && (th != nil)) {
    [((SPOTSequence *) check_class_cast(element, [SPOTSequence class])) spot_setTemplateHandlerWithISPOTTemplateHandler:th];
  }
  if (![((id<iSPOTElement>) nil_chk(element)) fromSDFWithSDFNode:node]) {
    s = [((id<RAREiPlatformAppContext>) nil_chk(app)) getResourceAsStringWithNSString:@"Rare.runtime.text.invalidConfigurationEx"];
    @throw [[RAREApplicationException alloc] initWithNSString:[RAREUTHelper expandStringWithNSString:s withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [element description] } count:1 type:[IOSClass classWithClass:[NSString class]]]]];
  }
  SDFNode *first = [root getFirstNode];
  if ((first != node) && [((SDFNode *) nil_chk(first)) isComment]) {
    JavaUtilArrayList *comments = nil;
    NSString *comment = [first getComment];
    int len = [root getChildCount];
    for (int i = 1; i < len; i++) {
      first = [root getChildNodeWithInt:i];
      if (first == node) {
        break;
      }
      if ([((SDFNode *) nil_chk(first)) isComment]) {
        if (comments == nil) {
          comments = [[JavaUtilArrayList alloc] initWithInt:2];
          [comments addWithId:comment];
        }
        [((JavaUtilArrayList *) nil_chk(comments)) addWithId:[first getComment]];
      }
    }
    if (comments != nil) {
      [element spot_setHeaderCommentsWithNSStringArray:[comments toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[comments size] type:[IOSClass classWithClass:[NSString class]]]]];
    }
    else {
      [element spot_setHeaderCommentsWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ comment } count:1 type:[IOSClass classWithClass:[NSString class]]]];
    }
  }
  s = [RAREUTStreams readerToStringWithJavaIoReader:reader];
  if (s != nil) {
    s = [s trim];
  }
  if ((s != nil) && ([s sequenceLength] > 0)) {
    (void) [element spot_setLinkedDataWithId:s];
  }
  if (RAREDataParser__validate_) {
    s = [element spot_checkRangeValidityStr];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      [RAREPlatform ignoreExceptionWithNSString:s withJavaLangThrowable:nil];
    }
  }
  if (!dm && ([(id) element isKindOfClass:[RARESPOTViewer class]])) {
    element = [RAREDataParser checkElementWithRAREiWidget:context withISPOTElement:element withJavaNetURL:contextURL];
  }
  return element;
}

+ (SPOTSet *)loadSPOTSetWithRAREiWidget:(id<RAREiWidget>)ctx
                     withRAREActionLink:(RAREActionLink *)link
                           withIOSClass:(IOSClass *)cls {
  SPOTSet *set = [[SPOTSet alloc] initWithNSString:@"Set" withIOSClass:cls];
  @try {
    return (SPOTSet *) check_class_cast([RAREDataParser loadSPOTObjectWithRAREiWidget:ctx withRAREiURLConnection:[((RAREActionLink *) nil_chk(link)) getConnection] withISPOTElement:set], [SPOTSet class]);
  }
  @finally {
    [((RAREActionLink *) nil_chk(link)) close];
  }
}

+ (SPOTSet *)loadSPOTSetWithRAREiWidget:(id<RAREiWidget>)ctx
                 withRAREiURLConnection:(id<RAREiURLConnection>)conn
                           withIOSClass:(IOSClass *)cls {
  SPOTSet *set = [[SPOTSet alloc] initWithNSString:@"Set" withIOSClass:cls];
  return (SPOTSet *) check_class_cast([RAREDataParser loadSPOTObjectWithRAREiWidget:ctx withRAREiURLConnection:conn withISPOTElement:set], [SPOTSet class]);
}

+ (SPOTSet *)loadSPOTSetWithRAREiWidget:(id<RAREiWidget>)ctx
                withSPOTPrintableString:(SPOTPrintableString *)url
                           withIOSClass:(IOSClass *)cls {
  if ((url == nil) || ([url getValue] == nil)) {
    return nil;
  }
  RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:ctx withSPOTPrintableString:url];
  SPOTSet *set = [[SPOTSet alloc] initWithNSString:@"Set" withIOSClass:cls];
  @try {
    return (SPOTSet *) check_class_cast([RAREDataParser loadSPOTObjectWithRAREiWidget:ctx withRAREiURLConnection:[link getConnection] withISPOTElement:set], [SPOTSet class]);
  }
  @finally {
    [link close];
  }
}

+ (RAREUTObjectHolder *)loadScriptURLWithRAREiWidget:(id<RAREiWidget>)context
                                  withRARESPOTViewer:(RARESPOTViewer *)cfg
                                      withJavaNetURL:(JavaNetURL *)contextURL {
  RAREUTObjectHolder *h = nil;
  if ([((SPOTPrintableString *) nil_chk(((RARESPOTViewer *) nil_chk(cfg))->scriptURL_)) getValue] != nil) {
    h = [[RAREUTObjectHolder alloc] initWithRAREUTObjectHolder:nil];
    (void) [cfg->scriptURL_ spot_setLinkedDataWithId:h];
    id<RAREiPlatformAppContext> app = [((id<RAREiWidget>) nil_chk(context)) getAppContext];
    RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:context withSPOTPrintableString:cfg->scriptURL_];
    [link setContextURLWithJavaNetURL:contextURL];
    @try {
      BOOL runonce = [@"true" equalsIgnoreCase:[cfg->scriptURL_ spot_getAttributeWithNSString:@"runOnce"]];
      NSString *type = [link getContentType];
      NSString *code = [((id<RAREiPlatformAppContext>) nil_chk(app)) loadScriptCodeWithRAREActionLink:link withBoolean:runonce];
      if (code != nil) {
        if ([link isInlineURL]) {
          if (![link isMimeTypeSet] || [@"text/plain" isEqual:type]) {
            type = [app getDefaultScrptingLanguage];
          }
        }
        else {
          type = [app getScriptTypeWithRAREActionLink:link];
        }
        [h setWithId:type withId:code];
      }
      (void) [cfg->scriptURL_ spot_setLinkedDataWithId:h];
    }
    @catch (JavaLangException *e) {
      h->value_ = e;
      [((id<RAREiPlatformAppContext>) nil_chk(app)) resetRunOnceWithRAREActionLink:link];
    }
  }
  return h;
}

+ (id<JavaUtilMap>)parseNameValuePairsWithSPOTPrintableString:(SPOTPrintableString *)data {
  NSString *type = [((SPOTPrintableString *) nil_chk(data)) spot_getAttributeWithNSString:@"mimeType"];
  if ((type == nil) || ([type sequenceLength] == 0) || (![type isEqual:@"json"] && ![type isEqual:@"application/json"])) {
    NSString *delim = [data spot_getAttributeWithNSString:@"delimiter"];
    unichar c = ((delim != nil) && ([delim sequenceLength] > 0)) ? [delim charAtWithInt:0] : ';';
    return [RAREUTCharScanner parseOptionStringWithNSString:[data getValue] withChar:c];
  }
  NSString *s = [data getValue];
  s = [((NSString *) nil_chk(s)) trim];
  if (![((NSString *) nil_chk(s)) hasPrefix:@"{"] && ![s hasSuffix:@"}"]) {
    s = [NSString stringWithFormat:@"{%@}", s];
  }
  RAREUTJSONObject *o = [[RAREUTJSONObject alloc] initWithNSString:s];
  return [o getObjectMap];
}

+ (SPOTSequence *)resolveReferenceWithRAREiWidget:(id<RAREiWidget>)context
                                 withSPOTSequence:(SPOTSequence *)seq {
  if (context == nil) {
    context = [RAREPlatform getContextRootViewer];
  }
  NSString *s = [((SPOTSequence *) nil_chk(seq)) spot_getAttributeWithNSString:@"url"];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    @try {
      (void) [RAREDataParser loadSPOTObjectWithRAREiWidget:context withRAREiURLConnection:[((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getAppContext])) openConnectionWithJavaNetURL:[context getURLWithNSString:s]] withISPOTElement:seq];
    }
    @catch (JavaLangException *ex) {
      [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:ex];
    }
  }
  return seq;
}

+ (SPOTSet *)resolveSetWithRAREiWidget:(id<RAREiWidget>)context
                           withSPOTSet:(SPOTSet *)set
                          withIOSClass:(IOSClass *)cls {
  if (context == nil) {
    context = [RAREPlatform getContextRootViewer];
  }
  if ((set == nil) || ([set size] > 0)) {
    return set;
  }
  NSString *s = [((SPOTSet *) nil_chk(set)) spot_getAttributeWithNSString:@"url"];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    @try {
      set = [RAREDataParser loadSPOTSetWithRAREiWidget:context withRAREiURLConnection:[((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getAppContext])) openConnectionWithJavaNetURL:[context getURLWithNSString:s]] withIOSClass:cls];
    }
    @catch (JavaLangException *ex) {
      [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:ex];
    }
  }
  return set;
}

+ (id<JavaUtilMap>)getConfigStructWithJavaUtilMap:(id<JavaUtilMap>)options {
  id o = [((id<JavaUtilMap>) nil_chk(options)) getWithId:@"config"];
  if ([o conformsToProtocol: @protocol(JavaUtilMap)]) {
    return (id<JavaUtilMap>) check_protocol_cast(o, @protocol(JavaUtilMap));
  }
  id<JavaUtilMap> config = [[JavaUtilHashMap alloc] init];
  id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([options entrySet])) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id<JavaUtilMap_Entry> e = [it next];
    NSString *s = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
    if ([((NSString *) nil_chk(s)) hasPrefix:@"config."]) {
      (void) [config putWithId:[s substring:7] withId:[e getValue]];
      [it remove];
    }
  }
  return config;
}

+ (RAREUTUtilityMap *)getOptionsMapFromCustomPropertiesWithJavaUtilMap:(id<JavaUtilMap>)options {
  id o = [((id<JavaUtilMap>) nil_chk(options)) getWithId:@"config"];
  if ([o conformsToProtocol: @protocol(JavaUtilMap)]) {
    return [[RAREUTUtilityMap alloc] initWithJavaUtilMap:(id<JavaUtilMap>) check_protocol_cast(o, @protocol(JavaUtilMap))];
  }
  return [[RAREUTUtilityMap alloc] initWithJavaUtilMap:options withNSString:@"config."];
}

+ (id<iSPOTElement>)checkForConfigURLWithRAREiWidget:(id<RAREiWidget>)context
                                withRARESPOTGroupBox:(RARESPOTGroupBox *)vcfg
                                      withJavaNetURL:(JavaNetURL *)contextURL {
  if ([((SPOTPrintableString *) nil_chk(((RARESPOTGroupBox *) nil_chk(vcfg))->dataURL_)) getValue] != nil) {
    RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:context withSPOTPrintableString:vcfg->dataURL_];
    @try {
      [link setContextURLWithJavaNetURL:contextURL];
      [vcfg->dataURL_ spot_clear];
      RARESPOTGroupBox *cfg = [[vcfg getClass] newInstance];
      (void) [RAREDataParser loadSPOTObjectWithRAREiWidget:context withRAREiURLConnection:[link getConnection] withISPOTElement:cfg];
      [((RARESPOTGroupBox *) nil_chk(cfg)) spot_copySharedMemberValuesExWithSPOTSequence:vcfg];
      vcfg = cfg;
    }
    @catch (JavaLangException *e) {
      return vcfg;
    }
    @finally {
      [link closeEx];
    }
  }
  SPOTSet *set = vcfg->widgets_;
  int len = [((SPOTSet *) nil_chk(set)) size];
  id<iSPOTElement> e;
  for (int i = 0; i < len; i++) {
    id cfg = [set getExWithInt:i];
    if ([cfg isKindOfClass:[RARESPOTViewer class]]) {
      e = [RAREDataParser checkElementWithRAREiWidget:context withISPOTElement:(RARESPOTViewer *) check_class_cast(cfg, [RARESPOTViewer class]) withJavaNetURL:contextURL];
      if (cfg != e) {
        [((SPOTAny *) check_class_cast([set getWithInt:i], [SPOTAny class])) setValueWithISPOTElement:e];
      }
    }
  }
  return vcfg;
}

+ (void)checkForConfigURLWithRAREiWidget:(id<RAREiWidget>)context
                             withSPOTSet:(SPOTSet *)set
                          withJavaNetURL:(JavaNetURL *)contextURL {
  int len = [((SPOTSet *) nil_chk(set)) size];
  BOOL inline_ = RAREDataParser_INLINE_REGION_VIEWER_URLS_;
  for (int i = 0; i < len; i++) {
    RARESPOTRegion *r = (RARESPOTRegion *) check_class_cast([set getWithInt:i], [RARESPOTRegion class]);
    id cfg = [((SPOTAny *) nil_chk(((RARESPOTRegion *) nil_chk(r))->viewer_)) getValue];
    if ([cfg isKindOfClass:[RARESPOTGroupBox class]]) {
      (void) [RAREDataParser checkForConfigURLWithRAREiWidget:context withRARESPOTGroupBox:(RARESPOTGroupBox *) check_class_cast(cfg, [RARESPOTGroupBox class]) withJavaNetURL:contextURL];
    }
    else if ([cfg isKindOfClass:[RARESPOTStackPane class]]) {
      (void) [RAREDataParser checkForConfigURLWithRAREiWidget:context withRARESPOTStackPane:(RARESPOTStackPane *) check_class_cast(cfg, [RARESPOTStackPane class]) withJavaNetURL:contextURL];
    }
    else if ([cfg isKindOfClass:[RARESPOTWidgetPane class]]) {
      (void) [RAREDataParser checkForConfigURLWithRAREiWidget:context withRARESPOTWidgetPane:(RARESPOTWidgetPane *) check_class_cast(cfg, [RARESPOTWidgetPane class]) withJavaNetURL:contextURL];
    }
    else if ([cfg isKindOfClass:[RARESPOTGridPane class]]) {
      [RAREDataParser checkForConfigURLWithRAREiWidget:context withSPOTSet:((RARESPOTGridPane *) nil_chk(cfg))->regions_ withJavaNetURL:contextURL];
    }
    else if ([((SPOTPrintableString *) nil_chk(r->dataURL_)) getValue] != nil) {
      if ([@"false" isEqual:[r->dataURL_ spot_getAttributeWithNSString:@"deferred"]] || inline_) {
        RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:context withSPOTPrintableString:r->dataURL_];
        @try {
          [link setContextURLWithJavaNetURL:contextURL];
          [r->viewer_ setValueWithISPOTElement:[RAREDataParser loadSPOTObjectWithRAREiWidget:context withRAREiURLConnection:[link getConnection] withISPOTElement:nil]];
        }
        @finally {
          [link closeEx];
        }
      }
    }
    if ([cfg isKindOfClass:[RARESPOTWidget class]]) {
      [RAREDataParser checkForImagesWithRAREiWidget:context withRARESPOTWidget:(RARESPOTWidget *) check_class_cast(cfg, [RARESPOTWidget class]) withJavaNetURL:contextURL];
    }
  }
}

+ (id<iSPOTElement>)checkForConfigURLWithRAREiWidget:(id<RAREiWidget>)context
                               withRARESPOTStackPane:(RARESPOTStackPane *)vcfg
                                      withJavaNetURL:(JavaNetURL *)contextURL {
  SPOTSet *set = [((RARESPOTStackPane *) nil_chk(vcfg)) getViewerURLsReference];
  int n = [((SPOTInteger *) nil_chk(vcfg->selectedIndex_)) intValue];
  if (!RAREDataParser_INLINE_SELECTED_STACKPANE_VIEWER_URLS_) {
    n = -1;
  }
  BOOL loadall = ![((SPOTBoolean *) nil_chk(vcfg->loadOnActivation_)) booleanValue];
  int len = [((SPOTSet *) nil_chk(set)) size];
  @try {
    for (int i = 0; i < len; i++) {
      SPOTPrintableString *ps = (SPOTPrintableString *) check_class_cast([set getWithInt:i], [SPOTPrintableString class]);
      if (!loadall) {
        NSString *s = [((SPOTPrintableString *) nil_chk(ps)) spot_getAttributeWithNSString:@"deferred"];
        if ([@"true" isEqual:s]) {
          continue;
        }
        if ((i != n) && ![@"false" isEqual:s]) {
          continue;
        }
      }
      RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:context withSPOTPrintableString:ps];
      @try {
        [link setContextURLWithJavaNetURL:contextURL];
        RARESPOTViewer *cfg = (RARESPOTViewer *) check_class_cast([RAREDataParser loadSPOTObjectWithRAREiWidget:context withRAREiURLConnection:[link getConnection] withISPOTElement:nil], [RARESPOTViewer class]);
        (void) [((SPOTPrintableString *) nil_chk(ps)) spot_setLinkedDataWithId:cfg];
      }
      @finally {
        [link closeEx];
      }
    }
    set = [vcfg getViewers];
    len = (set == nil) ? 0 : [set size];
    for (int i = 0; i < len; i++) {
      SPOTAny *any = (SPOTAny *) check_class_cast([((SPOTSet *) nil_chk(set)) getWithInt:i], [SPOTAny class]);
      id cfg = [((SPOTAny *) nil_chk(any)) getValue];
      if ([cfg isKindOfClass:[RARESPOTGroupBox class]]) {
        [any setValueWithISPOTElement:[RAREDataParser checkForConfigURLWithRAREiWidget:context withRARESPOTGroupBox:(RARESPOTGroupBox *) check_class_cast(cfg, [RARESPOTGroupBox class]) withJavaNetURL:contextURL]];
      }
      else if (([cfg isKindOfClass:[RARESPOTStackPane class]])) {
        [any setValueWithISPOTElement:[RAREDataParser checkForConfigURLWithRAREiWidget:context withRARESPOTStackPane:(RARESPOTStackPane *) check_class_cast(cfg, [RARESPOTStackPane class]) withJavaNetURL:contextURL]];
      }
      else if (([cfg isKindOfClass:[RARESPOTWidgetPane class]])) {
        [any setValueWithISPOTElement:[RAREDataParser checkForConfigURLWithRAREiWidget:context withRARESPOTWidgetPane:(RARESPOTWidgetPane *) check_class_cast(cfg, [RARESPOTWidgetPane class]) withJavaNetURL:contextURL]];
      }
      else if (([cfg isKindOfClass:[RARESPOTTabPane class]])) {
        [any setValueWithISPOTElement:[RAREDataParser checkForConfigURLWithRAREiWidget:context withRARESPOTTabPane:(RARESPOTTabPane *) check_class_cast(cfg, [RARESPOTTabPane class]) withJavaNetURL:contextURL]];
      }
      if ([cfg isKindOfClass:[RARESPOTWidget class]]) {
        [RAREDataParser checkForImagesWithRAREiWidget:context withRARESPOTWidget:(RARESPOTWidget *) check_class_cast(cfg, [RARESPOTWidget class]) withJavaNetURL:contextURL];
      }
    }
  }
  @catch (JavaLangException *ignore) {
  }
  return vcfg;
}

+ (id<iSPOTElement>)checkForConfigURLWithRAREiWidget:(id<RAREiWidget>)context
                                 withRARESPOTTabPane:(RARESPOTTabPane *)vcfg
                                      withJavaNetURL:(JavaNetURL *)contextURL {
  SPOTSet *set = ((RARESPOTTabPane *) nil_chk(vcfg))->tabs_;
  int n = [((SPOTInteger *) nil_chk(vcfg->selectedIndex_)) intValue];
  int len = (set == nil) ? 0 : [set size];
  for (int i = 0; i < len; i++) {
    RARESPOTRegion *r = (RARESPOTRegion *) check_class_cast([((SPOTSet *) nil_chk(set)) getWithInt:i], [RARESPOTRegion class]);
    if ([((SPOTAny *) nil_chk(((RARESPOTRegion *) nil_chk(r))->viewer_)) getValue] != nil) {
      (void) [RAREDataParser checkElementWithRAREiWidget:context withISPOTElement:[r->viewer_ getValue] withJavaNetURL:contextURL];
    }
    else if (i == n) {
      if ([((SPOTPrintableString *) nil_chk(r->dataURL_)) getValue] != nil) {
        if ([@"false" isEqual:[r->dataURL_ spot_getAttributeWithNSString:@"deferred"]]) {
          RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:context withSPOTPrintableString:r->dataURL_];
          @try {
            [link setContextURLWithJavaNetURL:contextURL];
            [r->viewer_ setValueWithISPOTElement:[RAREDataParser loadSPOTObjectWithRAREiWidget:context withRAREiURLConnection:[link getConnection] withISPOTElement:nil]];
          }
          @finally {
            [link closeEx];
          }
        }
      }
    }
  }
  return vcfg;
}

+ (id<iSPOTElement>)checkForConfigURLWithRAREiWidget:(id<RAREiWidget>)context
                              withRARESPOTWidgetPane:(RARESPOTWidgetPane *)vcfg
                                      withJavaNetURL:(JavaNetURL *)contextURL {
  @try {
    if ([((SPOTPrintableString *) nil_chk(((RARESPOTWidgetPane *) nil_chk(vcfg))->dataURL_)) getValue] == nil) {
      if ([((SPOTAny *) nil_chk(vcfg->widget_)) getValue] != nil) {
        (void) [RAREDataParser checkElementWithRAREiWidget:context withISPOTElement:[vcfg->widget_ getValue] withJavaNetURL:contextURL];
      }
      return vcfg;
    }
    NSString *s = [vcfg->dataURL_ spot_getAttributeWithNSString:@"deferred"];
    if ([@"true" isEqual:s]) {
      return vcfg;
    }
    RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:context withSPOTPrintableString:vcfg->dataURL_];
    @try {
      [link setContextURLWithJavaNetURL:contextURL];
      RARESPOTViewer *cfg = (RARESPOTViewer *) check_class_cast([RAREDataParser loadSPOTObjectWithRAREiWidget:context withRAREiURLConnection:[link getConnection] withISPOTElement:nil], [RARESPOTViewer class]);
      (void) [vcfg->dataURL_ spot_setLinkedDataWithId:cfg];
    }
    @finally {
      [link closeEx];
    }
  }
  @catch (JavaLangException *ignore) {
  }
  return vcfg;
}

+ (id<iSPOTElement>)loadElementWithRAREiWidget:(id<RAREiWidget>)context
                                withJavaNetURL:(JavaNetURL *)contextURL
                                  withNSString:(NSString *)url {
  @try {
    RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:context withNSString:url withNSString:nil];
    @try {
      [link setContextURLWithJavaNetURL:contextURL];
      return [RAREDataParser loadSPOTObjectWithRAREiWidget:context withRAREiURLConnection:[link getConnection] withISPOTElement:nil];
    }
    @finally {
      [link closeEx];
    }
  }
  @catch (JavaLangException *ignore) {
    return nil;
  }
}

+ (id<iSPOTElement>)checkElementWithRAREiWidget:(id<RAREiWidget>)context
                               withISPOTElement:(id<iSPOTElement>)element
                                 withJavaNetURL:(JavaNetURL *)contextURL {
  if (!RAREDataParser_DISABLE_ALL_INLINING_OF_URLS_ && ![((id<RAREiWidget>) nil_chk(context)) isDesignMode]) {
    if ([(id) element isKindOfClass:[RARESPOTViewer class]]) {
      RARESPOTViewer *viewer = (RARESPOTViewer *) check_class_cast(element, [RARESPOTViewer class]);
      if ([((SPOTPrintableString *) nil_chk(((RARESPOTViewer *) nil_chk(viewer))->scriptURL_)) spot_hasValue]) {
        NSString *s = [viewer->scriptURL_ spot_getAttributeWithNSString:@"inline"];
        if (![@"true" isEqual:s]) {
          (void) [RAREDataParser loadScriptURLWithRAREiWidget:context withRARESPOTViewer:viewer withJavaNetURL:contextURL];
        }
      }
    }
    if ([(id) element isKindOfClass:[RARESPOTGridPane class]]) {
      [RAREDataParser checkForConfigURLWithRAREiWidget:context withSPOTSet:((RARESPOTGridPane *) nil_chk(element))->regions_ withJavaNetURL:contextURL];
    }
    else if ([(id) element isKindOfClass:[RARESPOTSplitPane class]]) {
      [RAREDataParser checkForConfigURLWithRAREiWidget:context withSPOTSet:((RARESPOTSplitPane *) nil_chk(element))->regions_ withJavaNetURL:contextURL];
    }
    else if ([(id) element isKindOfClass:[RARESPOTTabPane class]]) {
      [RAREDataParser checkForConfigURLWithRAREiWidget:context withSPOTSet:((RARESPOTTabPane *) nil_chk(element))->tabs_ withJavaNetURL:contextURL];
      (void) [RAREDataParser checkForConfigURLWithRAREiWidget:context withRARESPOTTabPane:((RARESPOTTabPane *) check_class_cast(element, [RARESPOTTabPane class])) withJavaNetURL:contextURL];
    }
    else if ([(id) element isKindOfClass:[RARESPOTGroupBox class]]) {
      element = [RAREDataParser checkForConfigURLWithRAREiWidget:context withRARESPOTGroupBox:((RARESPOTGroupBox *) check_class_cast(element, [RARESPOTGroupBox class])) withJavaNetURL:contextURL];
    }
    else if ([(id) element isKindOfClass:[RARESPOTStackPane class]]) {
      (void) [RAREDataParser checkForConfigURLWithRAREiWidget:context withRARESPOTStackPane:((RARESPOTStackPane *) check_class_cast(element, [RARESPOTStackPane class])) withJavaNetURL:contextURL];
    }
    else if ([(id) element isKindOfClass:[RARESPOTWidgetPane class]]) {
      (void) [RAREDataParser checkForConfigURLWithRAREiWidget:context withRARESPOTWidgetPane:((RARESPOTWidgetPane *) check_class_cast(element, [RARESPOTWidgetPane class])) withJavaNetURL:contextURL];
    }
    else if ([(id) element isKindOfClass:[RARESPOTComboBox class]]) {
      RARESPOTComboBox *cb = (RARESPOTComboBox *) check_class_cast(element, [RARESPOTComboBox class]);
      if (([((RARESPOTComboBox_CComponentType *) nil_chk(((RARESPOTComboBox *) nil_chk(cb))->componentType_)) getValue] == RARESPOTComboBox_CComponentType_widget) && ([((SPOTAny *) nil_chk(cb->popupWidget_)) getValue] == nil)) {
        NSString *url = [cb->popupWidget_ spot_getAttributeWithNSString:@"url"];
        if (url != nil) {
          (void) [cb->popupWidget_ spot_setLinkedDataWithId:[RAREDataParser loadElementWithRAREiWidget:context withJavaNetURL:contextURL withNSString:url]];
        }
      }
    }
    else if ([(id) element isKindOfClass:[RARESPOTPushButton class]]) {
      RARESPOTPushButton *pb = (RARESPOTPushButton *) check_class_cast(element, [RARESPOTPushButton class]);
      if ([((SPOTAny *) nil_chk(((RARESPOTPushButton *) nil_chk(pb))->popupWidget_)) getValue] == nil) {
        NSString *url = [pb->popupWidget_ spot_getAttributeWithNSString:@"url"];
        if ((url != nil) && ![@"false" equalsIgnoreCase:[pb->popupWidget_ spot_getAttributeWithNSString:@"deferred"]]) {
          (void) [pb->popupWidget_ spot_setLinkedDataWithId:[RAREDataParser loadElementWithRAREiWidget:context withJavaNetURL:contextURL withNSString:url]];
        }
      }
    }
    else if ([(id) element isKindOfClass:[RARESPOTMainWindow class]]) {
      RARESPOTMainWindow *mw = (RARESPOTMainWindow *) check_class_cast(element, [RARESPOTMainWindow class]);
      id<iSPOTElement> e = [((RARESPOTMainWindow *) nil_chk(mw)) getMenuBar];
      if (e != nil) {
        (void) [RAREDataParser checkElementWithRAREiWidget:context withISPOTElement:e withJavaNetURL:contextURL];
      }
      e = [mw getStatusBar];
      if (e != nil) {
        (void) [RAREDataParser checkElementWithRAREiWidget:context withISPOTElement:e withJavaNetURL:contextURL];
      }
      e = [((SPOTAny *) nil_chk(mw->viewer_)) getValue];
      if (e != nil) {
        (void) [RAREDataParser checkElementWithRAREiWidget:context withISPOTElement:e withJavaNetURL:contextURL];
      }
      SPOTSet *set = [mw getToolbars];
      if (set != nil) {
        [RAREDataParser checkForConfigURLWithRAREiWidget:context withSPOTSet:set withJavaNetURL:contextURL];
      }
    }
    else if ([(id) element isKindOfClass:[RARESPOTWidget class]]) {
      [RAREDataParser checkForImagesWithRAREiWidget:context withRARESPOTWidget:(RARESPOTWidget *) check_class_cast(element, [RARESPOTWidget class]) withJavaNetURL:contextURL];
    }
  }
  return element;
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [RAREDataParser class]) {
    RAREDataParser__validate_ = [RAREPlatform isDebugEnabled];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "checkAndInstantiateViewerWithRAREiWidget:withNSString:withRAREiURLConnection:", NULL, "LRARESPOTViewer", 0x9, "JavaLangException" },
    { "checkForImagesWithRAREiWidget:withRARESPOTWidget:withJavaNetURL:", NULL, "V", 0x9, "JavaLangException" },
    { "instantiateViewerWithRAREiWidget:withSDFNode:", NULL, "LRARESPOTViewer", 0x9, "JavaLangException" },
    { "instantiateViewerWithRAREiWidget:withNSString:withJavaIoReader:withJavaNetURL:", NULL, "LRARESPOTViewer", 0x9, "JavaLangException" },
    { "invalidConfigurationExceptionWithRAREiPlatformAppContext:withJavaLangThrowable:", NULL, "LJavaLangRuntimeException", 0x9, NULL },
    { "invalidConfigurationExceptionWithRAREiPlatformAppContext:withJavaNetURL:", NULL, "LJavaLangRuntimeException", 0x9, NULL },
    { "invalidConfigurationExceptionWithRAREiPlatformAppContext:withRARESPOTWidget:", NULL, "LJavaLangRuntimeException", 0x9, NULL },
    { "invalidConfigurationExceptionWithNSString:withNSString:", NULL, "LJavaLangRuntimeException", 0x9, NULL },
    { "invalidConfigurationExceptionWithRAREiPlatformAppContext:withJavaLangThrowable:withRAREActionLink:", NULL, "LJavaLangRuntimeException", 0x9, NULL },
    { "invalidConfigurationExceptionWithRAREiPlatformAppContext:withJavaLangThrowable:withNSString:", NULL, "LJavaLangRuntimeException", 0x9, NULL },
    { "invalidConfigurationExceptionWithRAREiPlatformAppContext:withJavaLangThrowable:withRARESPOTWidget:", NULL, "LJavaLangRuntimeException", 0x9, NULL },
    { "invalidConfigurationExceptionWithRAREiPlatformAppContext:withJavaNetURL:withNSString:", NULL, "LJavaLangRuntimeException", 0x9, NULL },
    { "invalidConfigurationExceptionWithRAREiPlatformAppContext:withJavaNetURL:withRARESPOTWidget:", NULL, "LJavaLangRuntimeException", 0x9, NULL },
    { "loadSPOTObjectWithRAREiWidget:withRAREiURLConnection:withISPOTElement:", NULL, "LiSPOTElement", 0x9, "JavaLangException" },
    { "loadSPOTObjectSDFWithRAREiWidget:withJavaIoReader:withISPOTElement:withNSString:withJavaNetURL:", NULL, "LiSPOTElement", 0x9, "JavaLangException" },
    { "loadSPOTSetWithRAREiWidget:withRAREActionLink:withIOSClass:", NULL, "LSPOTSet", 0x9, "JavaLangException" },
    { "loadSPOTSetWithRAREiWidget:withRAREiURLConnection:withIOSClass:", NULL, "LSPOTSet", 0x9, "JavaLangException" },
    { "loadSPOTSetWithRAREiWidget:withSPOTPrintableString:withIOSClass:", NULL, "LSPOTSet", 0x9, "JavaLangException" },
    { "loadScriptURLWithRAREiWidget:withRARESPOTViewer:withJavaNetURL:", NULL, "LRAREUTObjectHolder", 0x9, "JavaLangException" },
    { "parseNameValuePairsWithSPOTPrintableString:", NULL, "LJavaUtilMap", 0x9, NULL },
    { "resolveReferenceWithRAREiWidget:withSPOTSequence:", NULL, "LSPOTSequence", 0x9, NULL },
    { "resolveSetWithRAREiWidget:withSPOTSet:withIOSClass:", NULL, "LSPOTSet", 0x9, NULL },
    { "getConfigStructWithJavaUtilMap:", NULL, "LJavaUtilMap", 0x9, NULL },
    { "getOptionsMapFromCustomPropertiesWithJavaUtilMap:", NULL, "LRAREUTUtilityMap", 0x9, NULL },
    { "checkForConfigURLWithRAREiWidget:withRARESPOTGroupBox:withJavaNetURL:", NULL, "LiSPOTElement", 0x8, "JavaLangException" },
    { "checkForConfigURLWithRAREiWidget:withSPOTSet:withJavaNetURL:", NULL, "V", 0x8, "JavaLangException" },
    { "checkForConfigURLWithRAREiWidget:withRARESPOTStackPane:withJavaNetURL:", NULL, "LiSPOTElement", 0x8, NULL },
    { "checkForConfigURLWithRAREiWidget:withRARESPOTTabPane:withJavaNetURL:", NULL, "LiSPOTElement", 0x8, "JavaLangException" },
    { "checkForConfigURLWithRAREiWidget:withRARESPOTWidgetPane:withJavaNetURL:", NULL, "LiSPOTElement", 0x8, NULL },
    { "loadElementWithRAREiWidget:withJavaNetURL:withNSString:", NULL, "LiSPOTElement", 0x8, NULL },
    { "checkElementWithRAREiWidget:withISPOTElement:withJavaNetURL:", NULL, "LiSPOTElement", 0x9, "JavaLangException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "_validate_", NULL, 0x1a, "Z" },
    { "INLINE_SELECTED_STACKPANE_VIEWER_URLS_", NULL, 0x9, "Z" },
    { "INLINE_REGION_VIEWER_URLS_", NULL, 0x9, "Z" },
    { "DISABLE_ALL_INLINING_OF_URLS_", NULL, 0x9, "Z" },
  };
  static J2ObjcClassInfo _RAREDataParser = { "DataParser", "com.appnativa.rare.util", NULL, 0x1, 31, methods, 4, fields, 0, NULL};
  return &_RAREDataParser;
}

@end
