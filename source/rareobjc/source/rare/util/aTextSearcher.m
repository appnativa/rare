//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/util/aTextSearcher.java
//
//  Created by decoteaud on 12/8/15.
//

#include "com/appnativa/rare/util/aTextSearcher.h"
#include "com/appnativa/rare/util/iTextSearcher.h"
#include "com/appnativa/util/RegularExpressionFilter.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@implementation RAREaTextSearcher

+ (int)POSITION_BOTTOM {
  return RAREaTextSearcher_POSITION_BOTTOM;
}

+ (int)POSITION_CURRENT {
  return RAREaTextSearcher_POSITION_CURRENT;
}

+ (int)POSITION_TOP {
  return RAREaTextSearcher_POSITION_TOP;
}

- (void)clear {
  patternMatcher_ = nil;
  selectionOnly_ = NO;
  oldSelectionOnly_ = NO;
  searchFromBegining_ = YES;
  oldSearchFromBegining_ = YES;
  oldSearchFilter_ = nil;
  hasAllMatches_ = NO;
}

- (BOOL)findAndSelectNext {
  return [self findAndSelectNextWithNSString:searchString_];
}

- (BOOL)findAndSelectPrevious {
  return [self findAndSelectPreviousWithNSString:searchString_];
}

- (void)removeAllHighlights {
}

- (void)replaceWithNSString:(NSString *)newvalue {
}

- (int)replaceAllWithNSString:(NSString *)oldValue
                 withNSString:(NSString *)newvalue {
  if (![self wasFound]) {
    if (![self findAndSelectNextWithNSString:oldValue]) {
      [self reset];
      return 0;
    }
  }
  int count = 1;
  [self replaceWithNSString:newvalue];
  BOOL ob = searchFromBegining_;
  @try {
    searchFromBegining_ = NO;
    while ([self findAndSelectNextWithNSString:oldValue]) {
      count++;
      [self replaceWithNSString:newvalue];
    }
    searchFromBegining_ = YES;
    if ([self findAndSelectNextWithNSString:oldValue]) {
      searchFromBegining_ = NO;
      [self replaceWithNSString:newvalue];
      count++;
      while ([self findAndSelectNextWithNSString:oldValue]) {
        count++;
        [self replaceWithNSString:newvalue];
      }
    }
    [self reset];
    return count;
  }
  @finally {
    searchFromBegining_ = ob;
  }
}

- (void)reset {
  patternMatcher_ = nil;
  wholeWordsOnly_ = NO;
  oldMatchCase_ = NO;
  useRegularExpression_ = NO;
  selectionOnly_ = NO;
  oldSelectionOnly_ = NO;
  searchFromBegining_ = YES;
  oldSearchFromBegining_ = YES;
  oldSearchFilter_ = nil;
  hasAllMatches_ = NO;
}

- (BOOL)wasSearchPerformed {
  return oldSearchFilter_ != nil;
}

- (void)setCaseSensitiveWithBoolean:(BOOL)on {
  if (matchCase_ != on) {
    matchCase_ = on;
    [self flagChanged];
  }
}

- (void)setHighlightAllWithBoolean:(BOOL)on {
}

- (void)setMatchWholeWordsWithBoolean:(BOOL)on {
  if (wholeWordsOnly_ != on) {
    wholeWordsOnly_ = on;
    [self flagChanged];
  }
}

- (void)setSearchFromBeginingWithBoolean:(BOOL)on {
  searchFromBegining_ = on;
}

- (void)setSearchSelectionWithBoolean:(BOOL)on {
  if (selectionOnly_ != on) {
    selectionOnly_ = on;
    [self clear];
    [self flagChanged];
  }
}

- (NSString *)setSearchStringWithNSString:(NSString *)text {
  NSString *s = searchString_;
  searchString_ = text;
  return s;
}

- (void)setUseRegularExpressionsWithBoolean:(BOOL)on {
  if (useRegularExpression_ != on) {
    useRegularExpression_ = on;
    [self flagChanged];
  }
}

- (void)setWildcardEnabledWithBoolean:(BOOL)on {
  if (useWildcards_ != on) {
    useWildcards_ = on;
    [self flagChanged];
  }
}

- (void)setWrapSearchesWithBoolean:(BOOL)wrapSearches {
  self->wrapSearches_ = wrapSearches;
}

- (NSString *)getSearchString {
  return searchString_;
}

- (BOOL)isCaseSensitive {
  return matchCase_;
}

- (BOOL)isHighlightAll {
  return NO;
}

- (BOOL)isHighlightAllSupported {
  return NO;
}

- (BOOL)isMatchWholeWords {
  return wholeWordsOnly_;
}

- (BOOL)isSearchFromBegining {
  return searchFromBegining_;
}

- (BOOL)isSearchSelection {
  return selectionOnly_;
}

- (BOOL)isUseRegularExpressions {
  return useRegularExpression_;
}

- (BOOL)isWildcardEnabled {
  return useWildcards_;
}

- (BOOL)isWrapSearches {
  return wrapSearches_;
}

- (BOOL)caseChanged {
  return oldMatchCase_ != [self isCaseSensitive];
}

- (NSString *)createFilterWithNSString:(NSString *)s {
  NSString *filter;
  if ([self isWildcardEnabled]) {
    filter = [RAREUTRegularExpressionFilter parseWildcardFilterWithNSString:s];
    if (wholeWordsOnly_) {
      filter = [NSString stringWithFormat:@"\\b%@\\b", filter];
    }
  }
  else if (useRegularExpression_) {
    filter = s;
  }
  else {
    filter = [RAREUTRegularExpressionFilter parseStringFilterWithNSString:s withBoolean:wholeWordsOnly_];
  }
  return filter;
}

- (void)flagChanged {
  if (searchPattern_ != nil) {
    oldSearchFilter_ = nil;
    searchPattern_ = nil;
    if (hasAllMatches_) {
      hasAllMatches_ = NO;
      if ([self isHighlightAll]) {
        [self highlightAll];
      }
    }
  }
}

- (void)highlightAll {
}

- (BOOL)selectionChanged {
  return self->selectionOnly_ != [self isSearchSelection];
}

- (BOOL)findAndSelectNextWithNSString:(NSString *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)findAndSelectPreviousWithNSString:(NSString *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)wasFound {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)init {
  if (self = [super init]) {
    oldSearchFilter_ = nil;
    wholeWordsOnly_ = NO;
    useWildcards_ = NO;
    useRegularExpression_ = NO;
    selectionOnly_ = NO;
    searchFromBegining_ = YES;
    oldSelectionOnly_ = NO;
    oldSearchFromBegining_ = YES;
    oldMatchCase_ = NO;
    matchCase_ = NO;
    hasAllMatches_ = NO;
    wrapSearches_ = YES;
  }
  return self;
}

- (void)copyAllFieldsTo:(RAREaTextSearcher *)other {
  [super copyAllFieldsTo:other];
  other->hasAllMatches_ = hasAllMatches_;
  other->matchCase_ = matchCase_;
  other->oldMatchCase_ = oldMatchCase_;
  other->oldSearchFilter_ = oldSearchFilter_;
  other->oldSearchFromBegining_ = oldSearchFromBegining_;
  other->oldSelectionOnly_ = oldSelectionOnly_;
  other->patternMatcher_ = patternMatcher_;
  other->searchFromBegining_ = searchFromBegining_;
  other->searchPattern_ = searchPattern_;
  other->searchString_ = searchString_;
  other->selectionOnly_ = selectionOnly_;
  other->useRegularExpression_ = useRegularExpression_;
  other->useWildcards_ = useWildcards_;
  other->wholeWordsOnly_ = wholeWordsOnly_;
  other->wrapSearches_ = wrapSearches_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "findAndSelectNext", NULL, "Z", 0x1, NULL },
    { "findAndSelectPrevious", NULL, "Z", 0x1, NULL },
    { "wasSearchPerformed", NULL, "Z", 0x1, NULL },
    { "setSearchStringWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "getSearchString", NULL, "LNSString", 0x1, NULL },
    { "isCaseSensitive", NULL, "Z", 0x1, NULL },
    { "isHighlightAll", NULL, "Z", 0x1, NULL },
    { "isHighlightAllSupported", NULL, "Z", 0x1, NULL },
    { "isMatchWholeWords", NULL, "Z", 0x1, NULL },
    { "isSearchFromBegining", NULL, "Z", 0x1, NULL },
    { "isSearchSelection", NULL, "Z", 0x1, NULL },
    { "isUseRegularExpressions", NULL, "Z", 0x1, NULL },
    { "isWildcardEnabled", NULL, "Z", 0x1, NULL },
    { "isWrapSearches", NULL, "Z", 0x1, NULL },
    { "caseChanged", NULL, "Z", 0x4, NULL },
    { "createFilterWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "flagChanged", NULL, "V", 0x4, NULL },
    { "highlightAll", NULL, "V", 0x4, NULL },
    { "selectionChanged", NULL, "Z", 0x4, NULL },
    { "findAndSelectNextWithNSString:", NULL, "Z", 0x401, NULL },
    { "findAndSelectPreviousWithNSString:", NULL, "Z", 0x401, NULL },
    { "wasFound", NULL, "Z", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "POSITION_BOTTOM_", NULL, 0x1c, "I" },
    { "POSITION_CURRENT_", NULL, 0x1c, "I" },
    { "POSITION_TOP_", NULL, 0x1c, "I" },
    { "oldSearchFilter_", NULL, 0x4, "LNSString" },
    { "wholeWordsOnly_", NULL, 0x4, "Z" },
    { "useWildcards_", NULL, 0x4, "Z" },
    { "useRegularExpression_", NULL, 0x4, "Z" },
    { "selectionOnly_", NULL, 0x4, "Z" },
    { "searchFromBegining_", NULL, 0x4, "Z" },
    { "oldSelectionOnly_", NULL, 0x4, "Z" },
    { "oldSearchFromBegining_", NULL, 0x4, "Z" },
    { "oldMatchCase_", NULL, 0x4, "Z" },
    { "matchCase_", NULL, 0x4, "Z" },
    { "hasAllMatches_", NULL, 0x4, "Z" },
    { "wrapSearches_", NULL, 0x4, "Z" },
    { "patternMatcher_", NULL, 0x4, "LJavaUtilRegexMatcher" },
    { "searchPattern_", NULL, 0x4, "LJavaUtilRegexPattern" },
    { "searchString_", NULL, 0x4, "LNSString" },
  };
  static J2ObjcClassInfo _RAREaTextSearcher = { "aTextSearcher", "com.appnativa.rare.util", NULL, 0x401, 22, methods, 18, fields, 0, NULL};
  return &_RAREaTextSearcher;
}

@end
