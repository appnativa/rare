//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/CancelableWorker.java
//
//  Created by decoteaud on 7/29/15.
//

#include "com/appnativa/rare/CancelableWorker.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iWorkerTask.h"

@implementation RARECancelableWorker

- (id)initWithRAREiWorkerTask:(id<RAREiWorkerTask>)task {
  if (self = [super init]) {
    result_ = nil;
    self->task_ = task;
  }
  return self;
}

- (void)cancelWithBoolean:(BOOL)canInterrupt {
  canceled_ = YES;
  [((id<RAREiWorkerTask>) nil_chk(task_)) cancelWithBoolean:canInterrupt];
  task_ = nil;
  result_ = nil;
}

- (void)run {
  if (!canceled_ && !done_) {
    @try {
      result_ = [((id<RAREiWorkerTask>) nil_chk(task_)) compute];
    }
    @finally {
      done_ = YES;
    }
  }
  if (!canceled_ && done_ && (task_ != nil)) {
    if ([RAREPlatform isUIThread]) {
      [task_ finishWithId:result_];
      task_ = nil;
      result_ = nil;
    }
    else {
      [RAREPlatform invokeLaterWithJavaLangRunnable:self];
    }
  }
  else {
    task_ = nil;
    result_ = nil;
  }
}

- (BOOL)isCanceled {
  return canceled_;
}

- (BOOL)isDone {
  return done_ || canceled_;
}

- (void)copyAllFieldsTo:(RARECancelableWorker *)other {
  [super copyAllFieldsTo:other];
  other->canceled_ = canceled_;
  other->done_ = done_;
  other->result_ = result_;
  other->task_ = task_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "isCanceled", NULL, "Z", 0x1, NULL },
    { "isDone", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "canceled_", NULL, 0x40, "Z" },
    { "done_", NULL, 0x40, "Z" },
    { "task_", NULL, 0x0, "LRAREiWorkerTask" },
  };
  static J2ObjcClassInfo _RARECancelableWorker = { "CancelableWorker", "com.appnativa.rare", NULL, 0x1, 2, methods, 3, fields, 0, NULL};
  return &_RARECancelableWorker;
}

@end
