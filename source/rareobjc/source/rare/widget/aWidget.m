//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/widget/aWidget.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSCharArray.h"
#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/TemplateHandler.h"
#include "com/appnativa/rare/converters/iDataConverter.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iAsyncLoadStatusHandler.h"
#include "com/appnativa/rare/iCancelableFuture.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iFunctionCallback.h"
#include "com/appnativa/rare/iFunctionHandler.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/iWidgetCustomizer.h"
#include "com/appnativa/rare/iWorkerTask.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/CollectionURLConnection.h"
#include "com/appnativa/rare/net/FormHelper.h"
#include "com/appnativa/rare/net/JavaURLConnection.h"
#include "com/appnativa/rare/net/URLEncoder.h"
#include "com/appnativa/rare/net/iURLConnection.h"
#include "com/appnativa/rare/platform/ActionHelper.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/scripting/Functions.h"
#include "com/appnativa/rare/scripting/WidgetContext.h"
#include "com/appnativa/rare/scripting/iScriptHandler.h"
#include "com/appnativa/rare/spot/DataItem.h"
#include "com/appnativa/rare/spot/Font.h"
#include "com/appnativa/rare/spot/GridCell.h"
#include "com/appnativa/rare/spot/ItemDescription.h"
#include "com/appnativa/rare/spot/Link.h"
#include "com/appnativa/rare/spot/Margin.h"
#include "com/appnativa/rare/spot/Rectangle.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/ui/BorderUtils.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/Column.h"
#include "com/appnativa/rare/ui/FontUtils.h"
#include "com/appnativa/rare/ui/RenderType.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIColorHelper.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIFontHelper.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIImageHelper.h"
#include "com/appnativa/rare/ui/UIImageIcon.h"
#include "com/appnativa/rare/ui/UIPoint.h"
#include "com/appnativa/rare/ui/UIPopupMenu.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/WidgetListener.h"
#include "com/appnativa/rare/ui/aWidgetListener.h"
#include "com/appnativa/rare/ui/border/UIEmptyBorder.h"
#include "com/appnativa/rare/ui/dnd/DragEvent.h"
#include "com/appnativa/rare/ui/dnd/DropInformation.h"
#include "com/appnativa/rare/ui/dnd/TransferFlavor.h"
#include "com/appnativa/rare/ui/dnd/iTransferable.h"
#include "com/appnativa/rare/ui/effects/iPlatformAnimator.h"
#include "com/appnativa/rare/ui/event/ActionEvent.h"
#include "com/appnativa/rare/ui/event/DataEvent.h"
#include "com/appnativa/rare/ui/event/FocusEvent.h"
#include "com/appnativa/rare/ui/event/KeyEvent.h"
#include "com/appnativa/rare/ui/event/MouseEvent.h"
#include "com/appnativa/rare/ui/event/ScriptActionListener.h"
#include "com/appnativa/rare/ui/event/iActionListener.h"
#include "com/appnativa/rare/ui/iActionComponent.h"
#include "com/appnativa/rare/ui/iActionable.h"
#include "com/appnativa/rare/ui/iChangeable.h"
#include "com/appnativa/rare/ui/iListHandler.h"
#include "com/appnativa/rare/ui/iParentComponent.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/iPlatformRenderingComponent.h"
#include "com/appnativa/rare/ui/iPopup.h"
#include "com/appnativa/rare/ui/iTabDocument.h"
#include "com/appnativa/rare/ui/iTreeHandler.h"
#include "com/appnativa/rare/ui/painter/PaintBucket.h"
#include "com/appnativa/rare/ui/painter/UIComponentPainter.h"
#include "com/appnativa/rare/ui/painter/UIImagePainter.h"
#include "com/appnativa/rare/ui/painter/iBackgroundPainter.h"
#include "com/appnativa/rare/ui/painter/iImagePainter.h"
#include "com/appnativa/rare/ui/painter/iPainterSupport.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformPainter.h"
#include "com/appnativa/rare/util/DataItemCSVParser.h"
#include "com/appnativa/rare/util/DataItemParserHandler.h"
#include "com/appnativa/rare/util/DataParser.h"
#include "com/appnativa/rare/util/JSONHelper.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/viewer/iTabPaneViewer.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/aPlatformWidget.h"
#include "com/appnativa/rare/widget/aTextFieldWidget.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTInteger.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/util/CharScanner.h"
#include "com/appnativa/util/FilterableList.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/ObjectHolder.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/iCancelable.h"
#include "com/appnativa/util/iURLResolver.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/Reader.h"
#include "java/io/StringWriter.h"
#include "java/io/Writer.h"
#include "java/lang/CharSequence.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/ThreadLocal.h"
#include "java/lang/Throwable.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"
#include "java/text/ParseException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/EventObject.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"

@implementation RAREaWidget

static JavaLangThreadLocal * RAREaWidget_perThreadScanner_;
static JavaLangThreadLocal * RAREaWidget_perThreadParser_;

+ (JavaLangThreadLocal *)perThreadScanner {
  return RAREaWidget_perThreadScanner_;
}

+ (void)setPerThreadScanner:(JavaLangThreadLocal *)perThreadScanner {
  RAREaWidget_perThreadScanner_ = perThreadScanner;
}

+ (JavaLangThreadLocal *)perThreadParser {
  return RAREaWidget_perThreadParser_;
}

+ (void)setPerThreadParser:(JavaLangThreadLocal *)perThreadParser {
  RAREaWidget_perThreadParser_ = perThreadParser;
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent
  withRAREiPlatformComponent:(id<RAREiPlatformComponent>)fcomp
  withRAREiPlatformComponent:(id<RAREiPlatformComponent>)dcomp {
  if (self = [self initRAREaWidgetWithRAREiContainer:parent]) {
    formComponent_ = fcomp;
    dataComponent_ = dcomp;
  }
  return self;
}

- (id)initRAREaWidgetWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super init]) {
    columnCount_ = 0;
    copyingAllowed_ = YES;
    isSubmittable__ = YES;
    widgetType_ = [RAREiWidget_WidgetTypeEnum Bean];
    allowContainerToDisable_ = YES;
    parentContainer_ = parent;
    setParentOnAdd_ = NO;
  }
  return self;
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  return [self initRAREaWidgetWithRAREiContainer:parent];
}

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  if (actionListener_ != nil) {
    [actionListener_ actionPerformedWithRAREActionEvent:e];
  }
  if (([self getWidgetListener] != nil) && [((RAREaWidgetListener *) nil_chk([self getWidgetListener])) isActionEventEnabled]) {
    [((RAREaWidgetListener *) nil_chk([self getWidgetListener])) actionPerformedWithRAREActionEvent:e];
  }
}

- (void)addDataWithJavaUtilMap:(id<JavaUtilMap>)map {
  if (map == nil) {
    [self setCustomPropertiesWithJavaUtilMap:nil];
  }
  else {
    if ([self getCustomProperties] == nil) {
      [self setCustomPropertiesWithJavaUtilMap:[[JavaUtilHashMap alloc] initWithJavaUtilMap:map]];
    }
    else {
      [((id<JavaUtilMap>) nil_chk([self getCustomProperties])) putAllWithJavaUtilMap:map];
    }
  }
}

- (void)addEventListenerWithNSString:(NSString *)event
                              withId:(id)code
                         withBoolean:(BOOL)bubbling {
  [self setEventHandlerWithNSString:event withId:code withBoolean:YES];
}

- (void)addObjectWithId:(id)item {
  [self addWithId:[self createItemWithId:item]];
}

- (void)addObjectWithInt:(int)index
                  withId:(id)item {
  [self addWithInt:index withId:[self createItemWithId:item]];
}

- (void)addObjectsWithJavaUtilList:(id<JavaUtilList>)list {
  if (list != nil) {
    id<JavaUtilIterator> it = [list iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      [self addObjectWithId:[it next]];
    }
  }
}

- (void)addObjectsWithNSObjectArray:(IOSObjectArray *)items {
  [self addObjectsWithNSObjectArray:items withInt:0 withInt:(items == nil) ? 0 : (int) [items count]];
}

- (void)addObjectsWithInt:(int)index
         withJavaUtilList:(id<JavaUtilList>)list {
  if (list != nil) {
    id<JavaUtilIterator> it = [list iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      [self addObjectWithInt:index++ withId:[it next]];
    }
  }
}

- (void)addObjectsWithNSObjectArray:(IOSObjectArray *)items
                            withInt:(int)pos
                            withInt:(int)len {
  len += pos;
  while (pos < len) {
    [self addObjectWithId:IOSObjectArray_Get(nil_chk(items), pos++)];
  }
}

- (void)addParsedRowWithRARERenderableDataItem:(RARERenderableDataItem *)row {
  [self addWithId:row];
}

- (void)addToDataMapWithNSString:(NSString *)options
                        withChar:(unichar)token {
  id<JavaUtilMap> map = [self getCustomProperties];
  if (map == nil) {
    map = [[JavaUtilHashMap alloc] init];
    [self setCustomPropertiesWithJavaUtilMap:map];
  }
  (void) [RAREUTCharScanner parseOptionStringWithNSString:options withJavaUtilMap:map withChar:token withBoolean:YES];
}

- (void)animateWithNSString:(NSString *)animation
  withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  id<RAREiPlatformAnimator> pa = [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) createAnimatorWithNSString:animation];
  if (pa != nil) {
    [pa addListenerWithRAREiAnimatorListener:[[RAREaWidget_$3 alloc] initWithRAREiPlatformAnimator:pa]];
    [self animateWithRAREiPlatformAnimator:pa withRAREiFunctionCallback:cb];
  }
  else {
    [RAREPlatform debugLogWithNSString:[NSString stringWithFormat:@"Unknown annimation:%@", animation]];
  }
}

- (void)animateWithRAREiPlatformAnimator:(id<RAREiPlatformAnimator>)animator
               withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [((id<RAREiPlatformAnimator>) nil_chk(animator)) animateWithRAREiPlatformComponent:[self getContainerComponent] withId:cb];
}

- (void)attachEventWithNSString:(NSString *)event
                         withId:(id)code {
  [self setEventHandlerWithNSString:event withId:code withBoolean:YES];
}

- (void)buzz {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (BOOL)canCopy {
  return copyingAllowed_;
}

- (BOOL)canCut {
  return copyingAllowed_ && deletingAllowed_;
}

- (BOOL)canDelete {
  return self->deletingAllowed_;
}

- (BOOL)canDragWithRAREDragEvent:(RAREDragEvent *)ge {
  if (!draggingAllowed_) {
    return NO;
  }
  id o = [self getSelection];
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    if (![((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) isDraggingAllowed]) {
      return NO;
    }
  }
  RAREaWidgetListener *wl = [self getWidgetListener];
  if ((wl != nil) && [wl isEnabledWithNSString:[RAREiConstants EVENT_DRAGSTART]]) {
    RAREDataEvent *e = [[RAREDataEvent alloc] initWithId:self withId:ge];
    @try {
      (void) [wl evaluateWithNSString:[RAREiConstants EVENT_DRAGSTART] withJavaUtilEventObject:e withBoolean:NO];
      return ![e isConsumed];
    }
    @catch (JavaLangException *ex) {
      return NO;
    }
  }
  return YES;
}

- (BOOL)canDrop {
  return droppingAllowed_;
}

- (BOOL)canExportWithRARETransferFlavor:(RARETransferFlavor *)flavor {
  IOSObjectArray *eflavors = nil;
  id o = [self getSelection];
  if (o != nil) {
    if ([o isKindOfClass:[RARERenderableDataItem class]]) {
      if (![((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) isDraggingAllowed]) {
        return NO;
      }
      eflavors = [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) getExportableDataFlavors];
    }
  }
  if (eflavors == nil) {
    eflavors = exportDataFlavors_;
  }
  if ((flavor == nil) || (eflavors == nil)) {
    return NO;
  }
  return [RARETransferFlavor isDataFlavorSupportedWithNSStringArray:eflavors withRARETransferFlavor:flavor];
}

- (BOOL)canImportWithRARETransferFlavorArray:(IOSObjectArray *)flavors
                     withRAREDropInformation:(RAREDropInformation *)drop {
  if (!droppingAllowed_ && !pastingAllowed_) {
    return NO;
  }
  id o = [self getDropTargetWithRAREDropInformation:drop];
  IOSObjectArray *iflavors = nil;
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    iflavors = [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) getImportableDataFlavors];
    if ((iflavors == nil) && (!explicitItemImport_ || [((RAREDropInformation *) nil_chk(drop)) isInsertMode])) {
      iflavors = importDataFlavors_;
    }
  }
  else {
    iflavors = importDataFlavors_;
  }
  if ((flavors == nil) || (iflavors == nil)) {
    return NO;
  }
  int len = (int) [((IOSObjectArray *) nil_chk(flavors)) count];
  for (int i = 0; i < len; i++) {
    if ([RARETransferFlavor isDataFlavorSupportedWithNSStringArray:iflavors withRARETransferFlavor:IOSObjectArray_Get(flavors, i)]) {
      return YES;
    }
  }
  return NO;
}

- (BOOL)canMove {
  return copyingAllowed_ && deletingAllowed_;
}

- (BOOL)canPaste {
  return self->pastingAllowed_;
}

- (BOOL)canRedo {
  return NO;
}

- (BOOL)canSelectAll {
  return selectAllAllowed_;
}

- (BOOL)canUndo {
  return NO;
}

- (BOOL)canUndoOrRedo {
  return NO;
}

- (void)clear {
  [self clearContents];
}

- (void)clearContents {
  theValue_ = nil;
}

- (void)clearContextData {
  if ([self getCustomProperties] != nil) {
    [((id<JavaUtilMap>) nil_chk([self getCustomProperties])) clear];
  }
}

- (void)configureWithRARESPOTWidget:(RARESPOTWidget *)cfg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)convertWithRARERenderableDataItem:(RARERenderableDataItem *)item {
}

- (RAREColumn *)createColumnWithRARESPOTItemDescription:(RARESPOTItemDescription *)id_ {
  NSString *s;
  id<RAREiPlatformIcon> icon = [((SPOTPrintableString *) nil_chk(((RARESPOTItemDescription *) nil_chk(id_))->icon_)) spot_hasValue] ? [self getIconWithSPOTPrintableString:id_->icon_] : nil;
  int type = [RAREColumn fromSPOTTypeWithInt:[((RARESPOTItemDescription_CValueType *) nil_chk(id_->valueType_)) intValue]];
  s = [((SPOTPrintableString *) nil_chk(id_->title_)) getValue];
  if ((s == nil) && (icon == nil)) {
    s = @"";
  }
  s = [self expandStringWithNSString:s withBoolean:NO];
  RAREColumn *di = [self createColumnWithNSString:s withId:[((SPOTPrintableString *) nil_chk(id_->value_)) getValue] withInt:type withId:[((SPOTPrintableString *) nil_chk(id_->linkedData_)) getValue] withRAREiPlatformIcon:icon];
  s = [id_ spot_getAttributeWithNSString:@"onAction"];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    [((RAREColumn *) nil_chk(di)) setHeaderActionListenerWithRAREiActionListener:[[RAREScriptActionListener alloc] initWithRAREiWidget:self withId:di withNSString:s]];
  }
  if ([((SPOTBoolean *) nil_chk(id_->editable_)) spot_hasValue]) {
    [((RAREColumn *) nil_chk(di)) setEditableWithBoolean:[id_->editable_ booleanValue]];
  }
  switch ([((RARESPOTItemDescription_CRenderType *) nil_chk(id_->renderType_)) intValue]) {
    case RARESPOTItemDescription_CRenderType_header:
    [((RAREColumn *) nil_chk(di)) setRenderTypeWithInt:RAREColumn_HEADER];
    break;
    case RARESPOTItemDescription_CRenderType_header_index:
    [((RAREColumn *) nil_chk(di)) setRenderTypeWithInt:RAREColumn_HEADER_INDEX];
    break;
    case RARESPOTItemDescription_CRenderType_normal_index:
    [((RAREColumn *) nil_chk(di)) setRenderTypeWithInt:RAREColumn_INDEX_NORMAL];
    break;
    case RARESPOTItemDescription_CRenderType_footer:
    [((RAREColumn *) nil_chk(di)) setRenderTypeWithInt:RAREColumn_FOOTER];
    break;
    case RARESPOTItemDescription_CRenderType_footer_index:
    [((RAREColumn *) nil_chk(di)) setRenderTypeWithInt:RAREColumn_FOOTER_INDEX];
    break;
    case RARESPOTItemDescription_CRenderType_header_normal:
    [((RAREColumn *) nil_chk(di)) setRenderTypeWithInt:RAREColumn_HEADER_NORMAL];
    break;
    case RARESPOTItemDescription_CRenderType_footer_normal:
    [((RAREColumn *) nil_chk(di)) setRenderTypeWithInt:RAREColumn_FOOTER_NORMAL];
    break;
    case RARESPOTItemDescription_CRenderType_header_index_normal:
    [((RAREColumn *) nil_chk(di)) setRenderTypeWithInt:RAREColumn_HEADER_INDEX_NORMAL];
    break;
    case RARESPOTItemDescription_CRenderType_footer_index_normal:
    [((RAREColumn *) nil_chk(di)) setRenderTypeWithInt:RAREColumn_FOOTER_INDEX_NORMAL];
    break;
    default:
    [((RAREColumn *) nil_chk(di)) setRenderTypeWithInt:RAREColumn_NORMAL];
    break;
  }
  ((RAREColumn *) nil_chk(di))->sortable_ = [((SPOTBoolean *) nil_chk(id_->sortable_)) booleanValue];
  di->hideable_ = [((SPOTBoolean *) nil_chk(id_->hideable_)) booleanValue];
  di->showable_ = [((SPOTBoolean *) nil_chk(id_->showable_)) booleanValue];
  di->wordWrap_ = [((SPOTBoolean *) nil_chk(id_->wordWrap_)) booleanValue];
  di->headerWordWrap_ = [((SPOTBoolean *) nil_chk(id_->headerWordWrap_)) booleanValue];
  di->moveable_ = [((SPOTBoolean *) nil_chk(id_->moveable_)) booleanValue];
  if (!di->showable_ || ![((SPOTBoolean *) nil_chk(id_->visible_)) booleanValue]) {
    [di setVisibleWithBoolean:NO];
  }
  @try {
    s = [((SPOTPrintableString *) nil_chk(id_->customTypeClass_)) getValue];
    if (s != nil) {
      [di setJavaClassWithIOSClass:[RAREPlatform loadClassWithNSString:s]];
    }
    s = [((SPOTPrintableString *) nil_chk(id_->rendererClass_)) getValue];
    if (s != nil) {
      id<RAREiPlatformRenderingComponent> rc = [RAREaPlatformHelper createRendererWithNSString:s withRAREiWidget:self];
      s = [id_->rendererClass_ spot_getAttributeWithNSString:@"options"];
      if (s != nil) {
        [((id<RAREiPlatformRenderingComponent>) nil_chk(rc)) setOptionsWithJavaUtilMap:[RAREUTCharScanner parseOptionStringWithNSString:s withChar:',']];
      }
      [di setCellRendererWithRAREiPlatformRenderingComponent:rc];
    }
    [di setupConverterWithRAREiWidget:self withNSString:[((SPOTPrintableString *) nil_chk(id_->converterClass_)) getValue] withSPOTPrintableString:id_->valueContext_];
    s = [((SPOTPrintableString *) nil_chk(id_->linkedDataconverterClass_)) getValue];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      id<RAREiDataConverter> cvt = [RAREPlatform getDataConverterWithIOSClass:[RAREPlatform getDataConverterClassWithNSString:s]];
      if (cvt != nil) {
        [di setLinkedDataConverterWithRAREiDataConverter:cvt];
        s = [((SPOTPrintableString *) nil_chk(id_->linkedDataContext_)) getValue];
        if (s != nil) {
          [di setLinkedDataContextWithId:[cvt createContextWithRAREiWidget:self withNSString:s]];
        }
      }
    }
  }
  @catch (JavaLangException *ex) {
    [self handleExceptionWithJavaLangThrowable:ex];
  }
  s = [((SPOTPrintableString *) nil_chk(id_->description__)) getValue];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    [di setTooltipWithJavaLangCharSequence:s];
  }
  if ([((SPOTBoolean *) nil_chk(id_->scaleIcon_)) booleanValue]) {
    float f = [RAREUTSNumber floatValueWithNSString:[id_->scaleIcon_ spot_getAttributeWithNSString:@"percent"]];
    if (f > 1) {
      f = f / 100;
    }
    if (f <= 0) {
      f = 1;
    }
    [di setScaleIconWithBoolean:YES withFloat:f];
  }
  if ([((SPOTBoolean *) nil_chk(id_->headerScaleIcon_)) booleanValue]) {
    float f = [RAREUTSNumber floatValueWithNSString:[id_->headerScaleIcon_ spot_getAttributeWithNSString:@"percent"]];
    if (f > 1) {
      f = f / 100;
    }
    if (f <= 0) {
      f = 1;
    }
    [di setScaleHeaderIconWithBoolean:YES withFloat:f];
  }
  switch ([((RARESPOTItemDescription_CRenderDetail *) nil_chk(id_->renderDetail_)) intValue]) {
    case RARESPOTItemDescription_CRenderDetail_icon_only:
    [di setRenderDetailWithRAREColumn_RenderDetailEnum:[RAREColumn_RenderDetailEnum ICON_ONLY]];
    break;
    case RARESPOTItemDescription_CRenderDetail_text_only:
    [di setRenderDetailWithRAREColumn_RenderDetailEnum:[RAREColumn_RenderDetailEnum TEXT_ONLY]];
    break;
    default:
    break;
  }
  switch ([((RARESPOTItemDescription_COrientation *) nil_chk(id_->orientation_)) intValue]) {
    case RARESPOTItemDescription_COrientation_horizontal:
    [di setOrientationWithRARERenderableDataItem_OrientationEnum:[RARERenderableDataItem_OrientationEnum HORIZONTAL]];
    break;
    case RARESPOTItemDescription_COrientation_vertical_up:
    [di setOrientationWithRARERenderableDataItem_OrientationEnum:[RARERenderableDataItem_OrientationEnum VERTICAL_DOWN]];
    break;
    case RARESPOTItemDescription_COrientation_vertical_down:
    [di setOrientationWithRARERenderableDataItem_OrientationEnum:[RARERenderableDataItem_OrientationEnum VERTICAL_DOWN]];
    break;
  }
  if ([((SPOTPrintableString *) nil_chk(id_->headerIcon_)) spot_hasValue]) {
    [di setHeaderIconWithRAREiPlatformIcon:[self getIconWithSPOTPrintableString:id_->headerIcon_]];
  }
  di->columnName_ = [((SPOTPrintableString *) nil_chk(id_->name_)) getValue];
  di->categoryName_ = [((SPOTPrintableString *) nil_chk(id_->category_)) getValue];
  [di setColumnWidthWithSPOTPrintableString:id_->width_];
  s = [((SPOTPrintableString *) nil_chk(id_->customProperties_)) getValue];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    [di setCustomPropertiesWithJavaUtilMap:[RAREDataParser parseNameValuePairsWithSPOTPrintableString:id_->customProperties_]];
  }
  [di setColumnMenuWithSPOTSet:[id_ getPopupMenu]];
  di->overrideSelectionBackground_ = [((SPOTBoolean *) nil_chk(id_->overrideSelectionBackground_)) booleanValue];
  [di setHorizontalAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:[id_ getHorizontalAlignment]];
  [di setVerticalAlignmentWithRARERenderableDataItem_VerticalAlignEnum:[id_ getVerticalAlignment]];
  [di setIconPositionWithRARERenderableDataItem_IconPositionEnum:[id_ getIconPosition]];
  [di setHeaderHorizontalAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:[id_ getHeaderHorizontalAlignment]];
  [di setHeaderVerticalAlignmentWithRARERenderableDataItem_VerticalAlignEnum:[id_ getHeaderVerticalAlignment]];
  [di setHeaderIconPositionWithRARERenderableDataItem_IconPositionEnum:[id_ getHeaderIconPosition]];
  [di setCursorNameWithNSString:[((SPOTPrintableString *) nil_chk(id_->cursorName_)) getValue]];
  s = [id_->cursorName_ spot_getAttributeWithNSString:@"cursorDisplayType"];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    [di setCursorDisplayTypeWithRARERenderableDataItem_CursorDisplayTypeEnum:[RARERenderableDataItem_CursorDisplayTypeEnum valueOfWithNSString:[s uppercaseStringWithJRELocale:[JavaUtilLocale US]]]];
  }
  if (([di getType] == RARERenderableDataItem_TYPE_INTEGER) || ([di getType] == RARERenderableDataItem_TYPE_DECIMAL)) {
    if ([di getHorizontalAlignment] == [RARERenderableDataItem_HorizontalAlignEnum AUTO]) {
      [di setHorizontalAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:[RARERenderableDataItem_HorizontalAlignEnum TRAILING]];
      if ([di getHeaderHorizontalAlignment] == [RARERenderableDataItem_HorizontalAlignEnum AUTO]) {
        [di setHeaderHorizontalAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:[RARERenderableDataItem_HorizontalAlignEnum TRAILING]];
      }
    }
  }
  RARESPOTGridCell *cell = [id_ getHeaderCell];
  s = [((SPOTPrintableString *) nil_chk(id_->headerColor_)) getValue];
  if ((cell != nil) || (s != nil)) {
    RAREPaintBucket *pb = [[RAREPaintBucket alloc] init];
    [di setHeaderPainterWithRAREPaintBucket:pb];
    if (cell != nil) {
      (void) [RAREUIColorHelper configureWithRAREiWidget:self withRARESPOTGridCell:cell withRAREPaintBucket:pb];
    }
    if (s != nil) {
      [pb setForegroundColorWithRAREUIColor:[self getColorWithNSString:s]];
    }
  }
  s = [((SPOTPrintableString *) nil_chk(id_->fgColor_)) getValue];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    [di setForegroundWithRAREUIColor:[self getColorWithNSString:s]];
  }
  RAREUIFont *f = [self getFontWithRARESPOTFont:id_->font_];
  if (f != nil) {
    [di setFontWithRAREUIFont:f];
  }
  f = [self getFontWithRARESPOTFont:id_->headerFont_];
  if (f != nil) {
    [di setHeaderFontWithRAREUIFont:f];
  }
  RARESPOTLink *l = [id_ getActionLink];
  if (l != nil) {
    [di setActionListenerWithRAREiActionListener:[[RAREActionLink alloc] initWithRAREiWidget:self withRARESPOTLink:l]];
  }
  cell = [id_ getSelectionGridCell];
  if (cell != nil) {
    [di setItemSelectionPainterWithRAREPaintBucket:[RAREUIColorHelper configureWithRAREiWidget:self withRARESPOTGridCell:cell withRAREPaintBucket:nil]];
  }
  cell = [id_ getGridCell];
  if (cell != nil) {
    [di setItemPainterWithRAREPaintBucket:[RAREUIColorHelper configureWithRAREiWidget:self withRARESPOTGridCell:cell withRAREPaintBucket:nil]];
  }
  cell = [id_ getHeaderRolloverCell];
  if (cell != nil) {
    [di setHeaderRollOverPainterWithRAREPaintBucket:[RAREUIColorHelper configureWithRAREiWidget:self withRARESPOTGridCell:cell withRAREPaintBucket:nil]];
  }
  cell = [id_ getHeaderSelectionCell];
  if (cell != nil) {
    [di setHeaderSelectionPainterWithRAREPaintBucket:[RAREUIColorHelper configureWithRAREiWidget:self withRARESPOTGridCell:cell withRAREPaintBucket:nil]];
  }
  SPOTSet *set = [RAREDataParser resolveSetWithRAREiWidget:self withSPOTSet:[id_ getSubItems] withIOSClass:[IOSClass classWithClass:[RARESPOTItemDescription class]]];
  int len = (set == nil) ? 0 : [set size];
  for (int i = 0; i < len; i++) {
    [di addWithId:[self createColumnWithRARESPOTItemDescription:(RARESPOTItemDescription *) check_class_cast([((SPOTSet *) nil_chk(set)) getWithInt:i], [RARESPOTItemDescription class])]];
  }
  return di;
}

- (RAREColumn *)createColumnWithNSString:(NSString *)title {
  return [[RAREColumn alloc] initWithJavaLangCharSequence:title];
}

- (RAREColumn *)createColumnWithNSString:(NSString *)title
                                  withId:(id)value
                                 withInt:(int)type
                                  withId:(id)data
                   withRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  return [[RAREColumn alloc] initWithJavaLangCharSequence:title withId:value withInt:type withId:data withRAREiPlatformIcon:icon];
}

- (RARERenderableDataItem *)createItemWithId:(id)value {
  RARERenderableDataItem *item;
  if ([value isKindOfClass:[NSString class]]) {
    id o = [self convertWithNSString:(NSString *) check_class_cast(value, [NSString class])];
    if ([o isKindOfClass:[RARERenderableDataItem class]]) {
      item = (RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class]);
    }
    else {
      item = [self createItemWithId:o withId:nil withId:nil];
      if (o == value) {
        [((RARERenderableDataItem *) nil_chk(item)) setConvertedWithBoolean:NO];
      }
    }
  }
  else if ([value isKindOfClass:[RARERenderableDataItem class]]) {
    item = (RARERenderableDataItem *) check_class_cast(value, [RARERenderableDataItem class]);
  }
  else if ([value isKindOfClass:[RARESPOTDataItem class]]) {
    item = [RAREaWidget populateItemWithRAREiWidget:self withRARESPOTDataItem:(RARESPOTDataItem *) check_class_cast(value, [RARESPOTDataItem class]) withRARERenderableDataItem:nil];
  }
  else if ([value isKindOfClass:[RARESPOTItemDescription class]]) {
    RAREColumn *c = [self createColumnWithRARESPOTItemDescription:(RARESPOTItemDescription *) check_class_cast(value, [RARESPOTItemDescription class])];
    item = [((RAREColumn *) nil_chk(c)) convertToItem];
  }
  else {
    item = [self createItemWithId:value withId:nil withId:nil];
  }
  return item;
}

- (RARERenderableDataItem *)createItemWithId:(id)value
                                      withId:(id)data
                                      withId:(id)icon {
  int type = RARERenderableDataItem_TYPE_UNKNOWN;
  if ((value == nil) || ([value isKindOfClass:[NSString class]])) {
    type = RARERenderableDataItem_TYPE_STRING;
  }
  return [self createItemWithId:value withInt:type withId:data withId:icon withId:nil];
}

- (RARERenderableDataItem *)createItemWithId:(id)value
                                     withInt:(int)type
                                      withId:(id)data
                                      withId:(id)icon
                                      withId:(id)color {
  id<RAREiPlatformIcon> ic = nil;
  RAREUIColor *c = nil;
  if (icon != nil) {
    ic = ([icon isKindOfClass:[NSString class]]) ? [self getIconWithNSString:(NSString *) check_class_cast(icon, [NSString class]) withNSString:nil] : (id<RAREiPlatformIcon>) check_protocol_cast(icon, @protocol(RAREiPlatformIcon));
  }
  if (color != nil) {
    c = ([color isKindOfClass:[NSString class]]) ? [self getColorWithNSString:(NSString *) check_class_cast(color, [NSString class])] : (RAREUIColor *) check_class_cast(color, [RAREUIColor class]);
  }
  return [[RARERenderableDataItem alloc] initWithId:value withInt:type withId:data withRAREiPlatformIcon:ic withRAREUIColor:c];
}

- (IOSObjectArray *)createItemArrayWithInt:(int)size {
  return [IOSObjectArray arrayWithLength:size type:[IOSClass classWithClass:[RARERenderableDataItem class]]];
}

- (RARERenderableDataItem *)createItemExWithRARESPOTDataItem:(RARESPOTDataItem *)item {
  return [RAREaWidget populateItemWithRAREiWidget:self withRARESPOTDataItem:item withRARERenderableDataItem:nil];
}

- (id<JavaUtilList>)createItemListWithInt:(int)capacity {
  if (capacity > 0) {
    return [[RAREUTFilterableList alloc] initWithInt:capacity];
  }
  else {
    return [[RAREUTFilterableList alloc] init];
  }
}

- (id<JavaUtilMap>)createOptionMapWithNSString:(NSString *)options
                                      withChar:(unichar)token {
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  (void) [RAREUTCharScanner parseOptionStringWithNSString:options withJavaUtilMap:map withChar:token withBoolean:NO];
  return map;
}

- (RARERenderableDataItem *)createRowWithInt:(int)capacity
                                 withBoolean:(BOOL)populate {
  RARERenderableDataItem *row = [[RARERenderableDataItem alloc] init];
  [row ensureCapacityWithInt:capacity];
  if (populate) {
    for (int i = 0; i < capacity; i++) {
      RARERenderableDataItem *di = [self createItemWithId:(id) check_class_cast(nil, [NSObject class])];
      [row addWithId:di];
    }
  }
  return row;
}

- (void)dataExportedWithRAREiTransferable:(id<RAREiTransferable>)transferable
                  withRAREDropInformation:(RAREDropInformation *)drop {
  RAREaWidgetListener *wl = [self getWidgetListener];
  if ((wl != nil) && [wl isEnabledWithNSString:[RAREiConstants EVENT_DROPEND]]) {
    RAREDataEvent *e = [[RAREDataEvent alloc] initWithId:self withId:drop];
    (void) [wl evaluateWithNSString:[RAREiConstants EVENT_DROPEND] withJavaUtilEventObject:e withBoolean:NO];
  }
  else {
    [self dataExportedExWithRAREiTransferable:transferable withRAREDropInformation:drop];
  }
}

- (void)dataExportedExWithRAREiTransferable:(id<RAREiTransferable>)transferable
                    withRAREDropInformation:(RAREDropInformation *)drop {
  id<RAREiWidget> w = [((RAREDropInformation *) nil_chk(drop)) getTargetWidget];
  if ((w != self) && [drop isMoveAction] && deletingAllowed_) {
    (void) [self removeSelectedDataWithBoolean:NO];
  }
}

- (id)removeSelectedDataWithBoolean:(BOOL)returnData {
  return nil;
}

- (void)dispatchKeyEventWithRAREKeyEvent:(RAREKeyEvent *)e {
  [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) dispatchEventWithRAREKeyEvent:e];
}

- (void)dispatchMouseEventWithRAREMouseEvent:(RAREMouseEvent *)e {
  [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) dispatchEventWithRAREMouseEvent:e];
}

- (void)dispose {
  if ([self isDisposed]) {
    return;
  }
  [super dispose];
  disposed_ = YES;
  RAREActionLink *l = activeLink_;
  if ((l != nil) && ![RAREPlatform isShuttingDown]) {
    activeLink_ = nil;
    @try {
      [l close];
    }
    @catch (JavaLangThrowable *ignore) {
    }
  }
  @try {
    [RARETemplateHandler disposingWithRAREiWidget:self];
    id<RAREiWidgetCustomizer> customizer = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getWidgetCustomizer];
    if (customizer != nil) {
      @try {
        [customizer widgetDisposedWithRAREiWidget:self];
      }
      @catch (JavaLangException *e) {
        [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
      }
    }
    if (scriptingContex_ != nil) {
      [scriptingContex_ dispose];
      scriptingContex_ = nil;
    }
    id<RAREiFormViewer> fv = [self getFormViewer];
    if (fv != nil) {
      [fv unregisterFormWidgetWithRAREiWidget:self];
    }
    if ([self getDataComponent] != nil) {
      [self unregisterWithWidgetWithRAREiPlatformComponent:[self getDataComponent]];
      [self unregisterWithWidgetWithRAREiPlatformComponent:[self getContainerComponent]];
      [self uninitializeListenersWithRAREaWidgetListener:[self getWidgetListener]];
    }
    else {
      [RAREPlatform debugLogWithNSString:@"null dataComponent during dispose"];
    }
    if (widgetListener_ != nil) {
      [widgetListener_ dispose];
      widgetListener_ = nil;
    }
    if (flavorFunctions_ != nil) {
      [flavorFunctions_ clear];
    }
    if (widgetDataLink_ != nil) {
      [widgetDataLink_ clear];
    }
    if ([self getDataComponent] != nil) {
      [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) dispose];
    }
    if ([self getContainerComponent] != nil) {
      [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) dispose];
    }
    if (popupMenu_ != nil) {
      [popupMenu_ dispose];
    }
    if (popupContainer_ != nil) {
      [popupContainer_ dispose];
    }
  }
  @catch (JavaLangThrowable *e) {
    [RAREPlatform ignoreExceptionWithNSString:@"dispose exception" withJavaLangThrowable:e];
  }
  dataComponent_ = nil;
  formComponent_ = nil;
  parentContainer_ = nil;
  popupContainer_ = nil;
  popupMenu_ = nil;
  actionListener_ = nil;
  widgetDataLink_ = nil;
  widgetTitle_ = nil;
  sourceURL_ = nil;
  scriptingContex_ = nil;
  exportDataFlavors_ = nil;
  importDataFlavors_ = nil;
  flavorFunctions_ = nil;
  linkedData_ = nil;
  menuSet_ = nil;
}

- (BOOL)isEqual:(id)o {
  return o == self;
}

- (id)evaluateCodeWithId:(id)code {
  return [RAREaWidgetListener evaluateWithRAREiWidget:self withRAREiScriptHandler:[self getScriptHandler] withId:code withNSString:@"evaluateCode" withJavaUtilEventObject:nil];
}

- (void)executeCodeWithId:(id)code {
  [RAREaWidgetListener executeWithRAREiWidget:self withRAREiScriptHandler:[self getScriptHandler] withId:code withNSString:@"executeCode" withJavaUtilEventObject:nil];
}

- (void)executeEventWithNSString:(NSString *)eventName
         withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [self fireEventExWithRAREaWidgetListener:widgetListener_ withNSString:eventName withJavaUtilEventObject:event withBoolean:YES];
}

- (NSString *)expandStringWithNSString:(NSString *)value {
  return [self expandStringWithNSString:value withBoolean:NO];
}

- (NSString *)expandStringWithNSString:(NSString *)value
                           withBoolean:(BOOL)encode {
  if (value == nil) {
    return @"";
  }
  int n = [((NSString *) nil_chk(value)) indexOf:'{'];
  if ((n == -1) && !encode) {
    return value;
  }
  JavaIoStringWriter *sw = [[JavaIoStringWriter alloc] init];
  @try {
    [self expandStringExWithNSString:value withBoolean:encode withJavaIoWriter:sw withInt:n];
  }
  @catch (JavaIoIOException *e) {
    [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
  }
  return [sw description];
}

- (void)expandStringWithNSString:(NSString *)value
                     withBoolean:(BOOL)encode
                withJavaIoWriter:(JavaIoWriter *)writer {
  @try {
    if (value == nil) {
      return;
    }
    int n = [((NSString *) nil_chk(value)) indexOf:'{'];
    if (n == -1) {
      if (encode) {
        [RAREURLEncoder encodeWithNSString:value withNSString:@"iso-8859-1" withJavaIoWriter:writer];
      }
      else {
        [((JavaIoWriter *) nil_chk(writer)) writeWithNSString:value];
      }
      return;
    }
    [self expandStringExWithNSString:value withBoolean:encode withJavaIoWriter:writer withInt:n];
  }
  @catch (JavaIoIOException *e) {
    @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:e];
  }
}

- (void)finishedLoading {
  if ([RAREPlatform isUIThread]) {
    [self finishedLoadingEx];
    return;
  }
  id<JavaLangRunnable> r = [[RAREaWidget_$4 alloc] initWithRAREaWidget:self];
  [RAREPlatform invokeLaterWithJavaLangRunnable:r];
}

- (void)finishedParsing {
}

- (void)fireEventWithNSString:(NSString *)eventName
      withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [self fireEventExWithRAREaWidgetListener:widgetListener_ withNSString:eventName withJavaUtilEventObject:event withBoolean:NO];
}

- (void)fireKeystrokeActionWithNSString:(NSString *)name {
}

- (void)fireOriginalKeystrokeActionWithNSString:(NSString *)name {
}

- (void)focus {
  [self requestFocus];
}

- (void)focusNextWidget {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)focusPreviousWidget {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)handleActionLinkWithRAREActionLink:(RAREActionLink *)link
                               withBoolean:(BOOL)deferred {
  if ([self isDisposed]) {
    return;
  }
  if (!deferred) {
    [self startedLoading];
  }
  @try {
    if ((widgetDataLink_ != nil) && (widgetDataLink_ != link)) {
      [widgetDataLink_ setContextWithRAREiWidget:nil];
    }
    widgetDataLink_ = link;
    sourceURL_ = [((RAREActionLink *) nil_chk(link)) getURLWithRAREiWidget:self];
    activeLink_ = link;
    if ((sourceURL_ != nil) && [RARECollectionURLConnection isCollectionURLWithJavaNetURL:sourceURL_]) {
      [self handleCollectionWithJavaUtilCollection:[RARECollectionURLConnection getCollectionWithJavaNetURL:sourceURL_] withInt:0];
    }
    else {
      [RAREDataItemParserHandler parseWithRAREiWidget:self withRAREActionLink:link withInt:columnCount_ withRAREiDataItemParserCallback:self];
    }
  }
  @catch (JavaIoIOException *e) {
    @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:e];
  }
  @finally {
    activeLink_ = nil;
    [((RAREActionLink *) nil_chk(link)) close];
    if (!deferred) {
      [self finishedLoading];
    }
  }
}

- (void)handleCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)c
                                       withInt:(int)skip {
  if ([self isDesignMode]) {
    [self finishedLoading];
    return;
  }
  if (c != nil) {
    [self startedParsing];
    [self startedLoading];
    @try {
      [self handleCollectionExWithJavaUtilCollection:c withInt:skip];
    }
    @finally {
      [self finishedParsing];
      [self finishedLoading];
    }
  }
}

- (void)handleDataURLWithNSString:(NSString *)url {
  [self handleActionLinkWithRAREActionLink:[[RAREActionLink alloc] initWithRAREiWidget:self withNSString:url withNSString:nil] withBoolean:NO];
}

- (void)handleDataURLWithJavaNetURL:(JavaNetURL *)url {
  [self handleActionLinkWithRAREActionLink:[[RAREActionLink alloc] initWithRAREiWidget:self withJavaNetURL:url withNSString:nil] withBoolean:NO];
}

- (id<RAREiCancelableFuture>)handleDataURLWithNSString:(NSString *)url
                                           withBoolean:(BOOL)deferred {
  RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:self withNSString:url withNSString:nil];
  if (deferred) {
    [self loadStartedWithRAREActionLink:link];
    return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) executeWorkerTaskWithRAREiWorkerTask:[self createDataLoadTaskWithRAREActionLink:link withBoolean:YES]];
  }
  else {
    [self handleActionLinkWithRAREActionLink:link withBoolean:NO];
    return nil;
  }
}

- (void)handleDataURLWithNSString:(NSString *)mimeType
                     withNSString:(NSString *)url {
  [self handleActionLinkWithRAREActionLink:[[RAREActionLink alloc] initWithRAREiWidget:self withNSString:url withNSString:mimeType] withBoolean:NO];
}

- (void)handleDataURLWithNSString:(NSString *)mimeType
                   withJavaNetURL:(JavaNetURL *)url {
  [self handleActionLinkWithRAREActionLink:[[RAREActionLink alloc] initWithRAREiWidget:self withJavaNetURL:url withNSString:mimeType] withBoolean:NO];
}

- (void)handleDataURLWithJavaNetURL:(JavaNetURL *)url
                        withBoolean:(BOOL)deferred {
  RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:self withJavaNetURL:url withNSString:nil];
  if (deferred) {
    [self loadStartedWithRAREActionLink:link];
    (void) [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) executeWorkerTaskWithRAREiWorkerTask:[self createDataLoadTaskWithRAREActionLink:link withBoolean:YES]];
  }
  else {
    [self handleActionLinkWithRAREActionLink:link withBoolean:NO];
  }
}

- (void)handleExceptionWithJavaLangThrowable:(JavaLangThrowable *)e {
  if (!inExceptionHandler_ && ![self isDisposed]) {
    @try {
      inExceptionHandler_ = YES;
      if ([self isEventEnabledWithNSString:[RAREiConstants EVENT_ERROR]]) {
        RAREDataEvent *de = [[RAREDataEvent alloc] initWithId:[self getContainerComponent] withId:e];
        [self executeEventWithNSString:[RAREiConstants EVENT_ERROR] withJavaUtilEventObject:de];
        if ([de isConsumed]) {
          return;
        }
      }
    }
    @finally {
      inExceptionHandler_ = NO;
    }
    id<RAREiContainer> p = [self getParent];
    if (p != nil) {
      [p handleExceptionWithJavaLangThrowable:e];
      return;
    }
    else {
      [((RAREWindowViewer *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowViewer])) handleExceptionWithJavaLangThrowable:e];
      return;
    }
  }
  @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:e];
}

- (void)handleInlineDataWithNSString:(NSString *)mimeType
                        withNSString:(NSString *)data {
  [self handleActionLinkWithRAREActionLink:[[RAREActionLink alloc] initWithNSString:mimeType withNSString:data] withBoolean:NO];
}

- (void)handleReaderWithNSString:(NSString *)mimeType
                withJavaIoReader:(JavaIoReader *)reader {
  [self startedLoading];
  @try {
    [RAREDataItemParserHandler parseWithRAREiWidget:self withNSString:mimeType withJavaIoReader:reader withInt:columnCount_ withRAREiDataItemParserCallback:self withJavaNetURL:nil];
    [self finishedLoading];
  }
  @catch (JavaLangException *ex) {
    @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:ex];
  }
}

- (NSUInteger)hash {
  return [JavaLangSystem identityHashCodeWithId:self];
}

- (void)imageLoadedWithRAREUIImage:(RAREUIImage *)image {
  if (![self isDisposed]) {
    [self repaint];
  }
}

- (BOOL)importDataWithRAREiTransferable:(id<RAREiTransferable>)transferable
                withRAREDropInformation:(RAREDropInformation *)drop {
  [((RAREDropInformation *) nil_chk(drop)) setTargetWidgetWithRAREiWidget:self];
  [drop setTransferableWithRAREiTransferable:transferable];
  if (([self getWidgetListener] != nil) && [((RAREaWidgetListener *) nil_chk([self getWidgetListener])) isEnabledWithNSString:[RAREiConstants EVENT_DROP]]) {
    RAREDataEvent *e = [[RAREDataEvent alloc] initWithId:self withId:drop];
    (void) [((RAREaWidgetListener *) nil_chk([self getWidgetListener])) evaluateWithNSString:[RAREiConstants EVENT_DROP] withJavaUtilEventObject:e withBoolean:NO];
    return ![e isConsumed];
  }
  else {
    @try {
      if (fileDroppingAllowed_ || urlDroppingAllowed_) {
        id<JavaUtilList> list = [drop getURLList];
        if (list != nil) {
          return [self importURLWithJavaUtilList:list withRAREDropInformation:drop];
        }
      }
    }
    @catch (JavaLangException *ignore) {
    }
    return [self importDataExWithRAREiTransferable:transferable withRAREDropInformation:drop];
  }
}

- (RAREColumn *)parseColumnWithNSString:(NSString *)value
                               withChar:(unichar)ldSeparator {
  RAREDataItemCSVParser *p = [((JavaLangThreadLocal *) nil_chk(RAREaWidget_perThreadParser_)) get];
  [((RAREDataItemCSVParser *) nil_chk(p)) setLinkedDataSeparatorWithChar:ldSeparator];
  return [p parseColumnItemWithRAREiWidget:self withNSString:value withRAREiDataItemParserCallback:self];
}

- (RARERenderableDataItem *)parseDataItemWithNSString:(NSString *)value {
  return [self parseDataItemWithNSString:value withChar:0x0000];
}

- (RARERenderableDataItem *)parseDataItemWithNSString:(NSString *)value
                                             withChar:(unichar)ldSeparator {
  RAREDataItemCSVParser *p = [((JavaLangThreadLocal *) nil_chk(RAREaWidget_perThreadParser_)) get];
  [((RAREDataItemCSVParser *) nil_chk(p)) setLinkedDataSeparatorWithChar:ldSeparator];
  return [p parseDataItemWithRAREiWidget:self withNSString:value withRAREiDataItemParserCallback:self];
}

- (id<JavaUtilList>)parseDataLinkWithRAREActionLink:(RAREActionLink *)link
                                        withBoolean:(BOOL)tabular {
  return [RAREDataItemParserHandler parseWithRAREiWidget:self withRAREActionLink:link withInt:tabular ? -1 : 0];
}

- (id<RAREUTiCancelable>)parseDataLinkWithRAREActionLink:(RAREActionLink *)link
                                             withBoolean:(BOOL)tabular
                               withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  RAREActionLink_ReturnDataTypeEnum *type = tabular ? [RAREActionLink_ReturnDataTypeEnum TABLE] : [RAREActionLink_ReturnDataTypeEnum LIST];
  return [RAREPlatform getContentWithRAREiWidget:self withRAREActionLink:link withRAREActionLink_ReturnDataTypeEnum:type withRAREiFunctionCallback:cb];
}

- (id<JavaUtilList>)parseDataURLWithNSString:(NSString *)url
                                 withBoolean:(BOOL)tabular {
  return [self parseDataURLWithNSString:url withChar:0x0000 withChar:0x0000];
}

- (id<JavaUtilList>)parseDataURLWithNSString:(NSString *)url
                                    withChar:(unichar)colSep {
  return [self parseDataURLWithNSString:url withChar:colSep withChar:0x0000];
}

- (id<RAREUTiCancelable>)parseDataURLWithNSString:(NSString *)url
                                      withBoolean:(BOOL)tabular
                        withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  return [self parseDataURLWithNSString:url withChar:0x0000 withChar:0x0000 withRAREiFunctionCallback:cb];
}

- (id<JavaUtilList>)parseDataURLWithNSString:(NSString *)url
                                    withChar:(unichar)colSep
                                    withChar:(unichar)ldSep {
  RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:self withNSString:url withNSString:nil];
  if (colSep != 0x0000) {
    [link setColumnSeparatorWithChar:colSep];
  }
  [link setLinkedDataSeparatorWithChar:ldSep];
  return [RAREDataItemParserHandler parseWithRAREiWidget:self withRAREActionLink:link withInt:(colSep != 0x0000) ? -1 : 0];
}

- (id<RAREUTiCancelable>)parseDataURLWithNSString:(NSString *)url
                                         withChar:(unichar)colSep
                                         withChar:(unichar)ldSep
                        withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:self withNSString:url withNSString:nil];
  BOOL tabular;
  if (ldSep != 0x0000) {
    [link setLinkedDataSeparatorWithChar:ldSep];
  }
  if (colSep != 0x0000) {
    [link setColumnSeparatorWithChar:colSep];
    tabular = YES;
  }
  else {
    tabular = NO;
  }
  RAREActionLink_ReturnDataTypeEnum *type = tabular ? [RAREActionLink_ReturnDataTypeEnum TABLE] : [RAREActionLink_ReturnDataTypeEnum LIST];
  return [RAREPlatform getContentWithRAREiWidget:self withRAREActionLink:link withRAREActionLink_ReturnDataTypeEnum:type withRAREiFunctionCallback:cb];
}

+ (RARERenderableDataItem *)populateItemWithRAREiWidget:(id<RAREiWidget>)widget
                                   withRARESPOTDataItem:(RARESPOTDataItem *)item
                             withRARERenderableDataItem:(RARERenderableDataItem *)di {
  if (di == nil) {
    di = [[RARERenderableDataItem alloc] init];
  }
  if (widget == nil) {
    widget = [RAREPlatform getContextRootViewer];
  }
  id<RAREiPlatformAppContext> app = [((id<RAREiWidget>) nil_chk(widget)) getAppContext];
  IOSClass *cvtclass = nil;
  int type = [RARERenderableDataItem fromSPOTTypeWithInt:[((RARESPOTDataItem_CValueType *) nil_chk(((RARESPOTDataItem *) nil_chk(item))->valueType_)) intValue]];
  NSString *s = [((SPOTPrintableString *) nil_chk(item->converterClass_)) getValue];
  id context = [((SPOTPrintableString *) nil_chk(item->valueContext_)) getValue];
  if (s != nil) {
    @try {
      cvtclass = [((id<RAREiPlatformAppContext>) nil_chk(app)) getDataConverterClassWithNSString:s];
    }
    @catch (JavaLangClassNotFoundException *ex) {
      [widget handleExceptionWithJavaLangThrowable:ex];
    }
  }
  else if (context != nil) {
    cvtclass = [RARERenderableDataItem getDefaultConverterClassWithInt:type];
  }
  if (cvtclass != nil) {
    [((RARERenderableDataItem *) nil_chk(di)) setConverterClassWithIOSClass:cvtclass];
    id<RAREiDataConverter> cvt = [((id<RAREiPlatformAppContext>) nil_chk(app)) getDataConverterWithIOSClass:cvtclass];
    context = [((id<RAREiDataConverter>) nil_chk(cvt)) createContextWithRAREiWidget:widget withNSString:(NSString *) check_class_cast(context, [NSString class])];
    [di setDataConverterWithRAREiDataConverter:cvt];
  }
  s = [((SPOTPrintableString *) nil_chk(item->linkedDataconverterClass_)) getValue];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    @try {
      cvtclass = [((id<RAREiPlatformAppContext>) nil_chk(app)) getDataConverterClassWithNSString:s];
      if (cvtclass != nil) {
        id<RAREiDataConverter> cvt = [RAREPlatform getDataConverterWithIOSClass:cvtclass];
        [((RARERenderableDataItem *) nil_chk(di)) setLinkedDataConverterWithRAREiDataConverter:cvt];
        s = [((SPOTPrintableString *) nil_chk(item->linkedDataContext_)) getValue];
        if (s != nil) {
          [di setLinkedDataContextWithId:[((id<RAREiDataConverter>) nil_chk(cvt)) createContextWithRAREiWidget:widget withNSString:s]];
        }
      }
    }
    @catch (JavaLangClassNotFoundException *ex) {
      cvtclass = nil;
      [widget handleExceptionWithJavaLangThrowable:ex];
    }
  }
  NSString *value = [((SPOTPrintableString *) nil_chk(item->value_)) getValue];
  NSString *data = [((SPOTPrintableString *) nil_chk(item->linkedData_)) getValue];
  if ((value != nil) && [value hasPrefix:@"Label"]) {
    s = nil;
  }
  [((RARERenderableDataItem *) nil_chk(di)) setValuesWithId:value withInt:type withId:data withRAREiPlatformIcon:[widget getIconWithSPOTPrintableString:item->icon_] withId:context];
  if ([((SPOTPrintableString *) nil_chk(item->disabledIcon_)) spot_hasValue]) {
    [di setDisabledIconWithRAREiPlatformIcon:[widget getIconWithSPOTPrintableString:item->disabledIcon_]];
  }
  if ([((SPOTPrintableString *) nil_chk(item->alternateIcon_)) spot_hasValue]) {
    [di setAlternateIconWithRAREiPlatformIcon:[widget getIconWithSPOTPrintableString:item->alternateIcon_]];
  }
  if ([((SPOTBoolean *) nil_chk(item->scaleIcon_)) booleanValue]) {
    float f = [RAREUTSNumber floatValueWithNSString:[item->scaleIcon_ spot_getAttributeWithNSString:@"percent"]];
    if (f > 1) {
      f = f / 100;
    }
    if (f <= 0) {
      f = 1;
    }
    [di setScaleIconWithBoolean:YES withFloat:f];
  }
  s = [((SPOTPrintableString *) nil_chk(item->fgColor_)) getValue];
  if (s != nil) {
    [di setForegroundWithRAREUIColor:[RAREUIColorHelper getColorWithNSString:s]];
  }
  RARESPOTGridCell *cell = [item getGridCell];
  if (cell != nil) {
    RAREPaintBucket *pb = [[RAREPaintBucket alloc] init];
    (void) [RAREUIColorHelper configureWithRAREiWidget:widget withRARESPOTGridCell:cell withRAREPaintBucket:pb];
    if (([pb getBackgroundPainter] == nil) && ([pb getImagePainter] == nil)) {
      [di setBackgroundWithRAREUIColor:[pb getBackgroundColor]];
    }
    else {
      [di setComponentPainterWithRAREiPlatformComponentPainter:[pb getComponentPainterWithBoolean:NO]];
    }
    [di setBorderWithRAREiPlatformBorder:[pb getBorder]];
  }
  RAREUIFont *f = [RAREUIFontHelper getFontWithRAREiWidget:widget withRARESPOTFont:item->font_];
  if (f != nil) {
    [di setFontWithRAREUIFont:f];
  }
  if (![((SPOTBoolean *) nil_chk(item->enabled_)) booleanValue]) {
    [di setEnabledWithBoolean:NO];
  }
  s = [((SPOTPrintableString *) nil_chk(item->customProperties_)) getValue];
  if (s != nil) {
    [di setCustomPropertiesWithJavaUtilMap:[RAREDataParser parseNameValuePairsWithSPOTPrintableString:item->customProperties_]];
  }
  [di setHorizontalAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:[item getHorizontalAlignment]];
  [di setVerticalAlignmentWithRARERenderableDataItem_VerticalAlignEnum:[item getVerticalAlignment]];
  [di setIconPositionWithRARERenderableDataItem_IconPositionEnum:[item getIconPosition]];
  [di setVisibleWithBoolean:[((SPOTBoolean *) nil_chk(item->visible_)) booleanValue]];
  [di setRowSpanWithInt:[((SPOTInteger *) nil_chk(item->rowSpan_)) intValue]];
  [di setColumnSpanWithInt:[((SPOTInteger *) nil_chk(item->columnSpan_)) intValue]];
  [di setTooltipWithJavaLangCharSequence:[((SPOTPrintableString *) nil_chk(item->tooltip_)) getValue]];
  [di setDraggingAllowedWithBoolean:[((SPOTBoolean *) nil_chk(item->draggingAllowed_)) booleanValue]];
  [di setCursorNameWithNSString:[((SPOTPrintableString *) nil_chk(item->cursorName_)) getValue]];
  s = [item->cursorName_ spot_getAttributeWithNSString:@"cursorDisplayType"];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    [di setCursorDisplayTypeWithRARERenderableDataItem_CursorDisplayTypeEnum:[RARERenderableDataItem_CursorDisplayTypeEnum valueOfWithNSString:[s uppercaseStringWithJRELocale:[JavaUtilLocale US]]]];
  }
  switch ([((RARESPOTDataItem_COrientation *) nil_chk(item->orientation_)) intValue]) {
    case RARESPOTDataItem_COrientation_horizontal:
    [di setOrientationWithRARERenderableDataItem_OrientationEnum:[RARERenderableDataItem_OrientationEnum HORIZONTAL]];
    break;
    case RARESPOTDataItem_COrientation_vertical_up:
    [di setOrientationWithRARERenderableDataItem_OrientationEnum:[RARERenderableDataItem_OrientationEnum VERTICAL_DOWN]];
    break;
    case RARESPOTDataItem_COrientation_vertical_down:
    [di setOrientationWithRARERenderableDataItem_OrientationEnum:[RARERenderableDataItem_OrientationEnum VERTICAL_DOWN]];
    break;
  }
  SPOTSet *set;
  set = [item getImportDataFlavors];
  if ((set != nil) && ([set getCount] > 0)) {
    [di setImportDataFlavorsWithNSStringArray:[set stringValues]];
  }
  set = [item getExportDataFlavors];
  if ((set != nil) && ([set getCount] > 0)) {
    [di setExportDataFlavorsWithNSStringArray:[set stringValues]];
  }
  s = [item spot_getAttributeWithNSString:@"selected"];
  if ((s != nil) && [s equalsIgnoreCase:@"true"] && ([(id) widget isKindOfClass:[RAREaPlatformWidget class]])) {
    [((RAREaPlatformWidget *) check_class_cast(widget, [RAREaPlatformWidget class])) addSelectedWithRARERenderableDataItem:di];
  }
  s = [item spot_getAttributeWithNSString:@"expanded"];
  if ((s != nil) && [s equalsIgnoreCase:@"true"] && ([(id) widget isKindOfClass:[RAREaPlatformWidget class]])) {
    [((RAREaPlatformWidget *) check_class_cast(widget, [RAREaPlatformWidget class])) addExpandedWithRARERenderableDataItem:di];
  }
  s = [item spot_getAttributeWithNSString:@"selectable"];
  if (s != nil) {
    [di setSelectableWithBoolean:[s equalsIgnoreCase:@"true"]];
  }
  s = [item spot_getAttributeWithNSString:@"editable"];
  if (s != nil) {
    [di setEditableWithBoolean:[s equalsIgnoreCase:@"true"]];
  }
  RARESPOTLink *l = [item getActionLink];
  if (l != nil) {
    [di setActionListenerWithRAREiActionListener:[[RAREActionLink alloc] initWithRAREiWidget:widget withRARESPOTLink:l]];
  }
  return di;
}

- (id)putAttributeWithNSString:(NSString *)key
                        withId:(id)value {
  if (value == nil) {
    return [self removeCustomPropertyWithId:key];
  }
  return [self setCustomPropertyWithId:key withId:value];
}

- (BOOL)registerKeystrokeWithNSString:(NSString *)ks
                               withId:(id)code
                              withInt:(int)when {
  return NO;
}

- (void)reloadWithBoolean:(BOOL)context {
  if (widgetDataLink_ != nil) {
    [self clearContents];
    [self setDataLinkWithRAREActionLink:widgetDataLink_];
  }
}

- (BOOL)removeWithId:(id)item {
  int n = ([item isKindOfClass:[RARERenderableDataItem class]]) ? [self indexOfWithId:item] : [self indexOfValueWithId:item];
  if (n != -1) {
    (void) [self removeWithInt:n];
    return YES;
  }
  return NO;
}

- (id)removeAttributeWithNSString:(NSString *)key {
  return [self removeCustomPropertyWithId:key];
}

- (void)removeBackgroundImage {
  [self setBackgroundImageWithRAREUIImage:nil withInt:0 withRARERenderTypeEnum:nil];
}

- (void)removeEventWithNSString:(NSString *)event
                         withId:(id)code {
  (void) [self removeEventHandlerWithNSString:event withId:code];
}

- (id)removeEventHandlerWithNSString:(NSString *)event
                              withId:(id)code {
  RAREaWidgetListener *l = [self getWidgetListener];
  if ((l != nil) && (event != nil)) {
    return [l removeEventHandlerWithNSString:event withId:code];
  }
  return nil;
}

- (void)removeEventListenerWithNSString:(NSString *)event
                                 withId:(id)code {
  (void) [self removeEventHandlerWithNSString:event withId:code];
}

- (void)repaint {
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) repaint];
}

- (void)reset {
}

- (void)selectAll {
}

- (void)showPopupMenuWithInt:(int)x
                     withInt:(int)y {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)startedLoading {
  if ([RAREPlatform isUIThread]) {
    [self startedLoadingEx];
    return;
  }
  RAREaWidgetListener *wl = [self getWidgetListener];
  if ((wl == nil) || ![wl isEnabledWithNSString:[RAREiConstants EVENT_STARTED_LOADING]]) {
    return;
  }
  id<JavaLangRunnable> r = [[RAREaWidget_$5 alloc] initWithRAREaWidget:self];
  [RAREPlatform invokeLaterWithJavaLangRunnable:r];
}

- (void)startedLoadingEx {
  RAREaWidgetListener *wl = [self getWidgetListener];
  if ((wl != nil) && [wl isEnabledWithNSString:[RAREiConstants EVENT_STARTED_LOADING]]) {
    JavaUtilEventObject *e = [[JavaUtilEventObject alloc] initWithId:self];
    (void) [wl evaluateWithNSString:[RAREiConstants EVENT_STARTED_LOADING] withJavaUtilEventObject:e withBoolean:NO];
  }
}

- (void)startedParsing {
}

- (NSString *)toJSON {
  JavaIoStringWriter *sw = [[JavaIoStringWriter alloc] init];
  [self writeJSONValueWithBoolean:YES withJavaIoWriter:sw];
  return [sw description];
}

- (NSString *)description {
  NSString *s = [self getValueAsString];
  return (s == nil) ? @"" : s;
}

- (void)triggerActionEvent {
  [self triggerActionEventWithNSString:@"triggerActionEvent"];
}

- (void)triggerActionEventWithNSString:(NSString *)cmd {
  RAREActionEvent *ae = [[RAREActionEvent alloc] initWithId:[self getDataComponent]];
  [self actionPerformedWithRAREActionEvent:ae];
}

- (void)unregisterWithWidgetWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp {
  if ([((id<RAREiPlatformComponent>) nil_chk(comp)) getWidget] == self) {
    [comp setWidgetWithRAREiWidget:nil];
  }
}

- (void)update {
  if ([self isDisposed]) {
    return;
  }
  if ([RAREPlatform isUIThread]) {
    [self updateEx];
  }
  else {
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREaWidget_$6 alloc] initWithRAREaWidget:self]];
  }
}

- (void)writeHTTPContentWithBoolean:(BOOL)first
                   withJavaIoWriter:(JavaIoWriter *)writer
                       withNSString:(NSString *)boundary {
  @try {
    NSString *name = [self getHTTPFormName];
    id value = [self getHTTPFormValue];
    if ((name == nil) || ![((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) isEnabled] || (value == nil)) {
      return;
    }
    if ([value isKindOfClass:[NSString class]]) {
      [RAREFormHelper writeFieldHeaderWithBoolean:first withJavaIoWriter:writer withNSString:boundary withNSString:name];
      [((JavaIoWriter *) nil_chk(writer)) writeWithNSString:[RAREFunctions utf8StringWithNSString:(NSString *) check_class_cast(value, [NSString class])]];
      [writer writeWithNSString:@"\x0d\n"];
    }
    else if ([value isKindOfClass:[IOSIntArray class]]) {
      [RAREFormHelper writeHTTPContentWithBoolean:first withJavaIoWriter:writer withNSString:boundary withNSString:name withIntArray:(IOSIntArray *) check_class_cast(value, [IOSIntArray class])];
    }
    else {
      [RAREFormHelper writeHTTPContentWithBoolean:first withJavaIoWriter:writer withNSString:boundary withNSString:name withNSStringArray:(IOSObjectArray *) check_class_cast(value, [IOSObjectArray class]) withBoolean:YES];
    }
  }
  @catch (JavaIoIOException *e) {
    @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:e];
  }
}

- (BOOL)writeHTTPValueWithBoolean:(BOOL)first
                 withJavaIoWriter:(JavaIoWriter *)writer {
  @try {
    NSString *name = [self getHTTPFormName];
    id value = [self getHTTPFormValue];
    if ((name == nil) || ![((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) isEnabled] || (value == nil)) {
      return NO;
    }
    if ([value isKindOfClass:[NSString class]]) {
      if (!first) {
        [((JavaIoWriter *) nil_chk(writer)) writeWithInt:'&'];
      }
      [RAREURLEncoder encodeWithNSString:name withNSString:@"iso-8859-1" withJavaIoWriter:writer];
      [((JavaIoWriter *) nil_chk(writer)) writeWithInt:'='];
      [RAREURLEncoder encodeWithNSString:(NSString *) check_class_cast(value, [NSString class]) withNSString:@"iso-8859-1" withJavaIoWriter:writer];
      return YES;
    }
    else if ([value isKindOfClass:[IOSIntArray class]]) {
      return [RAREFormHelper writeHTTPValueWithBoolean:first withJavaIoWriter:writer withNSString:name withIntArray:(IOSIntArray *) check_class_cast(value, [IOSIntArray class])];
    }
    else {
      return [RAREFormHelper writeHTTPValueWithBoolean:first withJavaIoWriter:writer withNSString:name withNSStringArray:(IOSObjectArray *) check_class_cast(value, [IOSObjectArray class])];
    }
  }
  @catch (JavaIoIOException *e) {
    @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:e];
  }
}

- (BOOL)writeJSONValueWithBoolean:(BOOL)first
                 withJavaIoWriter:(JavaIoWriter *)writer {
  @try {
    NSString *name = [self getHTTPFormName];
    id value = [self getHTTPFormValue];
    if ((name == nil) || ![((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) isEnabled] || (value == nil)) {
      return NO;
    }
    if ([value isKindOfClass:[NSString class]]) {
      if (!first) {
        [((JavaIoWriter *) nil_chk(writer)) writeWithNSString:@",\n\t"];
      }
      [RAREJSONHelper encodeWithNSString:name withJavaIoWriter:writer];
      [((JavaIoWriter *) nil_chk(writer)) writeWithNSString:@": "];
      [RAREJSONHelper encodeWithNSString:(NSString *) check_class_cast(value, [NSString class]) withJavaIoWriter:writer];
      return YES;
    }
    else if ([value isKindOfClass:[IOSIntArray class]]) {
      return [RAREFormHelper writeJSONValueWithBoolean:first withJavaIoWriter:writer withNSString:name withIntArray:(IOSIntArray *) check_class_cast(value, [IOSIntArray class])];
    }
    else {
      return [RAREFormHelper writeJSONValueWithBoolean:first withJavaIoWriter:writer withNSString:name withNSStringArray:(IOSObjectArray *) check_class_cast(value, [IOSObjectArray class])];
    }
  }
  @catch (JavaIoIOException *e) {
    @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:e];
  }
}

- (void)setAllowContainerToDisableWithBoolean:(BOOL)allow {
  self->allowContainerToDisable_ = allow;
}

- (void)setAttributeWithNSString:(NSString *)key
                          withId:(id)value {
  (void) [self setCustomPropertyWithId:key withId:value];
}

- (void)setBackgroundWithRAREUIColor:(RAREUIColor *)bg {
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) setBackgroundWithRAREUIColor:bg];
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) repaint];
}

- (void)setBackgroundImageWithRAREUIImage:(RAREUIImage *)image
                                  withInt:(int)opacity
                   withRARERenderTypeEnum:(RARERenderTypeEnum *)type {
  [self setOverlayPainterWithRAREiPlatformPainter:(image == nil) ? nil : [[RAREUIImagePainter alloc] initWithRAREUIImage:image withInt:opacity withRARERenderTypeEnum:type] withBoolean:YES];
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) repaint];
}

- (void)setBackgroundOverlayPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)painter {
  id<RAREiPlatformComponentPainter> cp = [self getComponentPainterWithBoolean:YES withBoolean:YES];
  if (cp != nil) {
    [cp setBackgroundOverlayPainterWithRAREiPlatformPainter:painter];
    [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) repaint];
  }
}

- (void)setBackgroundPainterWithRAREiBackgroundPainter:(id<RAREiBackgroundPainter>)painter {
  id<RAREiPlatformComponentPainter> cp = [self getComponentPainterWithBoolean:YES withBoolean:YES];
  [((id<RAREiPlatformComponentPainter>) nil_chk(cp)) setBackgroundPainterWithRAREiBackgroundPainter:painter withBoolean:YES];
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) repaint];
}

- (void)setBorderWithRAREiPlatformBorder:(id<RAREiPlatformBorder>)border {
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) setBorderWithRAREiPlatformBorder:border];
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) repaint];
}

- (void)setComponentPainterWithRAREiPlatformComponentPainter:(id<RAREiPlatformComponentPainter>)cp {
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) setComponentPainterWithRAREiPlatformComponentPainter:cp];
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) repaint];
}

- (void)setCopyingAllowedWithBoolean:(BOOL)allowed {
  copyingAllowed_ = allowed;
}

- (void)setCursorNameWithNSString:(NSString *)name {
}

- (void)setDataItemsWithRARESPOTDataItem:(RARESPOTDataItem *)items {
  [self clearContents];
  if (items != nil) {
    @try {
      [RAREDataItemParserHandler parseWithRAREiWidget:self withInt:columnCount_ withRARESPOTDataItem:items withRAREiDataItemParserCallback:self];
    }
    @catch (JavaIoIOException *ex) {
      @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:ex];
    }
  }
}

- (void)setDataLinkWithRAREActionLink:(RAREActionLink *)link {
  (void) [self setDataLinkWithRAREActionLink:link withBoolean:YES];
}

- (id<RAREiCancelableFuture>)setDataLinkWithRAREActionLink:(RAREActionLink *)link
                                               withBoolean:(BOOL)defer {
  [self clearContents];
  [self startedParsing];
  if (defer) {
    [self loadStartedWithRAREActionLink:link];
    return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) executeWorkerTaskWithRAREiWorkerTask:[self createDataLoadTaskWithRAREActionLink:link withBoolean:YES]];
  }
  else {
    [self handleActionLinkWithRAREActionLink:link withBoolean:NO];
    return nil;
  }
}

- (void)setDataURLWithNSString:(NSString *)url {
  (void) [self setDataLinkWithRAREActionLink:[[RAREActionLink alloc] initWithRAREiWidget:self withNSString:url withNSString:nil] withBoolean:YES];
}

- (void)setDataURLWithJavaNetURL:(JavaNetURL *)url {
  (void) [self setDataLinkWithRAREActionLink:[[RAREActionLink alloc] initWithRAREiWidget:self withJavaNetURL:url withNSString:nil] withBoolean:YES];
}

- (id<RAREiCancelableFuture>)setDataURLWithNSString:(NSString *)url
                                        withBoolean:(BOOL)defer {
  return [self setDataLinkWithRAREActionLink:[[RAREActionLink alloc] initWithRAREiWidget:self withNSString:url withNSString:nil] withBoolean:defer];
}

- (void)setDeletingAllowedWithBoolean:(BOOL)allowed {
  deletingAllowed_ = allowed;
}

- (void)setDisabledWithBoolean:(BOOL)disabled {
  [self setEnabledWithBoolean:!disabled];
}

- (void)setDisabledColorWithRAREUIColor:(RAREUIColor *)color {
  [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) setDisabledColorWithRAREUIColor:color];
}

- (void)setDisabledIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  id<RAREiPlatformComponent> c = [self getDataComponent];
  if ([(id) c conformsToProtocol: @protocol(RAREiActionComponent)]) {
    [((id<RAREiActionComponent>) check_protocol_cast(c, @protocol(RAREiActionComponent))) setDisabledIconWithRAREiPlatformIcon:icon];
  }
  else {
    disabledIcon_ = icon;
  }
}

- (void)setEnabledWithBoolean:(BOOL)enabled {
  id<RAREiPlatformComponent> dc = [self getDataComponent];
  id<RAREiPlatformComponent> cc = [self getContainerComponent];
  [((id<RAREiPlatformComponent>) nil_chk(dc)) setEnabledWithBoolean:enabled];
  if (cc != dc) {
    [((id<RAREiPlatformComponent>) nil_chk(cc)) setEnabledWithBoolean:enabled];
  }
}

- (void)setEventHandlerWithNSString:(NSString *)event
                             withId:(id)code
                        withBoolean:(BOOL)append {
  NSString *se = [RAREaWidgetListener fromWebEventExWithNSString:event];
  if (se != nil) {
    event = se;
  }
  RAREWidgetListener *l = (RAREWidgetListener *) check_class_cast([self getWidgetListener], [RAREWidgetListener class]);
  if (l == nil) {
    l = (RAREWidgetListener *) check_class_cast([self createWidgetListenerWithRAREiWidget:self withJavaUtilMap:[[JavaUtilHashMap alloc] init] withRAREiScriptHandler:[self getScriptHandler]], [RAREWidgetListener class]);
    [self setWidgetListenerWithRAREaWidgetListener:l];
  }
  (void) [((RAREWidgetListener *) nil_chk(l)) setEventHandlerWithNSString:event withId:code withBoolean:append];
  id<RAREiPlatformComponent> c = [self getDataComponent];
  [((id<RAREiPlatformComponent>) nil_chk(c)) removeMouseListenerWithRAREiMouseListener:l];
  [c removeMouseMotionListenerWithRAREiMouseMotionListener:l];
  if ([l isMouseEventsEnabled]) {
    [c addMouseListenerWithRAREiMouseListener:l];
  }
  if ([l isMouseMotionEventsEnabled]) {
    [c addMouseMotionListenerWithRAREiMouseMotionListener:l];
  }
  [c removeKeyListenerWithRAREiKeyListener:l];
  if ([l isKeyEventsEnabled]) {
    [c addKeyListenerWithRAREiKeyListener:l];
  }
  [c removeFocusListenerWithRAREiFocusListener:l];
  if ([l isEnabledWithNSString:[RAREiConstants EVENT_FOCUS]] || [l isEnabledWithNSString:[RAREiConstants EVENT_BLUR]]) {
    [c addFocusListenerWithRAREiFocusListener:l];
  }
  [c removeViewListenerWithRAREiViewListener:l];
  if ([l isEnabledWithNSString:[RAREiConstants EVENT_RESIZE]] || [l isEnabledWithNSString:[RAREiConstants EVENT_MOVED]] || [l isEnabledWithNSString:[RAREiConstants EVENT_SHOWN]] || [l isEnabledWithNSString:[RAREiConstants EVENT_HIDDEN]]) {
    [c addViewListenerWithRAREiViewListener:l];
  }
  if ([l isEnabledWithNSString:[RAREiConstants EVENT_CHANGE]]) {
    if ([self conformsToProtocol: @protocol(RAREiListHandler)]) {
      [((id<RAREiListHandler>) check_protocol_cast(self, @protocol(RAREiListHandler))) removeSelectionChangeListenerWithRAREiItemChangeListener:l];
      [((id<RAREiListHandler>) check_protocol_cast(self, @protocol(RAREiListHandler))) addSelectionChangeListenerWithRAREiItemChangeListener:l];
    }
    else if ([self conformsToProtocol: @protocol(RAREiChangeable)]) {
      [((id<RAREiChangeable>) check_protocol_cast(self, @protocol(RAREiChangeable))) removeChangeListenerWithRAREiChangeListener:l];
      [((id<RAREiChangeable>) check_protocol_cast(self, @protocol(RAREiChangeable))) addChangeListenerWithRAREiChangeListener:l];
    }
    else if ([self isKindOfClass:[RAREaTextFieldWidget class]]) {
      [((RAREaTextFieldWidget *) check_class_cast(self, [RAREaTextFieldWidget class])) removeTextChangeListenerWithRAREiTextChangeListener:l];
      [((RAREaTextFieldWidget *) check_class_cast(self, [RAREaTextFieldWidget class])) addTextChangeListenerWithRAREiTextChangeListener:l];
    }
  }
  if ([l isEnabledWithNSString:[RAREiConstants EVENT_ACTION]] && ([self conformsToProtocol: @protocol(RAREiActionable)])) {
    [((id<RAREiActionable>) check_protocol_cast(self, @protocol(RAREiActionable))) removeActionListenerWithRAREiActionListener:l];
    [((id<RAREiActionable>) check_protocol_cast(self, @protocol(RAREiActionable))) addActionListenerWithRAREiActionListener:l];
  }
  if (([self conformsToProtocol: @protocol(RAREiTreeHandler)]) && ([((NSString *) nil_chk(event)) hasPrefix:@"onWill"] || [event hasPrefix:@"onHas"])) {
    [((id<RAREiTreeHandler>) check_protocol_cast(self, @protocol(RAREiTreeHandler))) removeExpandedListenerWithRAREiExpandedListener:l];
    [((id<RAREiTreeHandler>) check_protocol_cast(self, @protocol(RAREiTreeHandler))) removeExpansionListenerWithRAREiExpansionListener:l];
    if ([l isExpandedEventsEnabled]) {
      [((id<RAREiTreeHandler>) check_protocol_cast(self, @protocol(RAREiTreeHandler))) addExpandedListenerWithRAREiExpandedListener:l];
    }
    if ([l isExpansionEventsEnabled]) {
      [((id<RAREiTreeHandler>) check_protocol_cast(self, @protocol(RAREiTreeHandler))) addExpansionListenerWithRAREiExpansionListener:l];
    }
  }
}

- (void)setFocusPaintedWithBoolean:(BOOL)focusPainted {
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) setFocusPaintedWithBoolean:focusPainted];
}

- (void)setFocusableWithBoolean:(BOOL)focusable {
  [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) setFocusableWithBoolean:focusable];
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) setFocusableWithBoolean:focusable];
}

- (void)setFontWithRAREUIFont:(RAREUIFont *)font {
  [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) setFontWithRAREUIFont:font];
}

- (void)setForegroundWithRAREUIColor:(RAREUIColor *)fg {
  [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) setForegroundWithRAREUIColor:fg];
  [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) repaint];
}

- (void)setFromHTTPFormValueWithId:(id)value {
  [self setValueWithId:value];
}

- (void)setInnerHTMLWithNSString:(NSString *)value {
  [self setValueWithId:value];
}

- (void)setInnerTextWithNSString:(NSString *)value {
  [self setValueWithId:value];
}

- (void)setMinimumSizeWithInt:(int)width
                      withInt:(int)height {
  id<RAREiPlatformComponent> c = [self getContainerComponent];
  NSString *w = nil;
  NSString *h = nil;
  if (height != -1) {
    h = [NSString stringWithFormat:@"%dpx", height];
  }
  if (width != -1) {
    w = [NSString stringWithFormat:@"%dpx", width];
  }
  [((id<RAREiPlatformComponent>) nil_chk(c)) putClientPropertyWithNSString:[RAREiConstants RARE_MIN_WIDTH_PROPERTY] withId:w];
  [c putClientPropertyWithNSString:[RAREiConstants RARE_MIN_HEIGHT_PROPERTY] withId:h];
}

- (void)setMinimumSizeWithNSString:(NSString *)width
                      withNSString:(NSString *)height {
  [self setMinimumSizeWithRAREiPlatformComponent:formComponent_ withNSString:width withNSString:height withBoolean:YES];
}

- (void)setMinimumSizeWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                    withNSString:(NSString *)width
                                    withNSString:(NSString *)height
                                     withBoolean:(BOOL)always {
  if (height != nil) {
    if ([height isEqual:@"-1"]) {
      height = nil;
    }
    else {
      height = [self expandStringWithNSString:height withBoolean:NO];
    }
  }
  if (width != nil) {
    if ([width isEqual:@"-1"]) {
      width = nil;
    }
    else {
      width = [self expandStringWithNSString:width withBoolean:NO];
    }
  }
  if (always || (width != nil)) {
    [((id<RAREiPlatformComponent>) nil_chk(c)) putClientPropertyWithNSString:[RAREiConstants RARE_MIN_WIDTH_PROPERTY] withId:width];
  }
  if (always || (height != nil)) {
    [((id<RAREiPlatformComponent>) nil_chk(c)) putClientPropertyWithNSString:[RAREiConstants RARE_MIN_HEIGHT_PROPERTY] withId:height];
  }
}

- (void)setNameWithNSString:(NSString *)name {
  id<RAREiWidget> w = [((id<RAREiFormViewer>) nil_chk([self getFormViewer])) getWidgetWithNSString:widgetName_];
  if ((w != nil) && (w != self)) {
    @throw [[RAREApplicationException alloc] initWithNSString:[((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceAsStringWithNSString:@"Rare.runtime.text.widgetExists"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ name } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  else if (w != nil) {
    (void) [((id<RAREiFormViewer>) nil_chk([self getFormViewer])) unregisterNamedItemWithNSString:widgetName_];
  }
  widgetName_ = name;
  (void) [((id<RAREiFormViewer>) nil_chk([self getFormViewer])) registerNamedItemWithNSString:name withId:w];
}

- (void)setObjectWithInt:(int)index
                  withId:(id)item {
  (void) [self setWithInt:index withId:[self createItemWithId:item]];
}

- (void)setOpaqueWithBoolean:(BOOL)opaque {
  [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) setOpaqueWithBoolean:opaque];
}

- (void)setOrientationWithRARERenderableDataItem_OrientationEnum:(RARERenderableDataItem_OrientationEnum *)orientation {
  [super setOrientationWithRARERenderableDataItem_OrientationEnum:orientation];
  id<RAREiPlatformComponent> c = [self getDataComponent];
  if ([(id) c conformsToProtocol: @protocol(RAREiActionComponent)]) {
    [((id<RAREiActionComponent>) check_protocol_cast(c, @protocol(RAREiActionComponent))) setOrientationWithRARERenderableDataItem_OrientationEnum:orientation];
  }
}

- (void)setOverlayPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)painter {
  [self setOverlayPainterWithRAREiPlatformPainter:painter withBoolean:NO];
}

- (void)setParentWithRAREiContainer:(id<RAREiContainer>)parent {
  if (parent != self) {
    parentContainer_ = parent;
  }
}

- (void)setPopupContainerWithRAREiPopup:(id<RAREiPopup>)popup {
  popupContainer_ = popup;
}

- (void)setPopupMenuSetWithSPOTSet:(SPOTSet *)set {
  menuSet_ = set;
  if (menuSet_ != nil) {
    [menuSet_ spot_setParentWithISPOTElement:nil];
  }
}

- (void)setPreferredSizeWithRAREUIDimension:(RAREUIDimension *)size {
  [self setPreferredSizeWithFloat:((RAREUIDimension *) nil_chk(size))->width_ withFloat:size->height_];
}

- (void)setPreferredSizeWithFloat:(float)width
                        withFloat:(float)height {
  id<RAREiPlatformComponent> c = [self getContainerComponent];
  NSString *w = nil;
  NSString *h = nil;
  if (height >= 0) {
    h = [NSString stringWithFormat:@"%fpx", height];
  }
  if (width >= 0) {
    w = [NSString stringWithFormat:@"%fpx", width];
  }
  [((id<RAREiPlatformComponent>) nil_chk(c)) putClientPropertyWithNSString:[RAREiConstants RARE_WIDTH_PROPERTY] withId:w];
  [c putClientPropertyWithNSString:[RAREiConstants RARE_HEIGHT_PROPERTY] withId:h];
}

- (void)setPreferredSizeWithNSString:(NSString *)width
                        withNSString:(NSString *)height {
  [self setPreferredSizeWithRAREiPlatformComponent:[self getContainerComponent] withNSString:width withNSString:height withBoolean:YES];
}

- (void)setPreferredSizeWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                      withNSString:(NSString *)width
                                      withNSString:(NSString *)height
                                       withBoolean:(BOOL)always {
  if (height != nil) {
    if ([height isEqual:@"-1"]) {
      height = nil;
    }
    else {
      height = [self expandStringWithNSString:height withBoolean:NO];
    }
  }
  if (width != nil) {
    if ([width isEqual:@"-1"]) {
      width = nil;
    }
    else {
      width = [self expandStringWithNSString:width withBoolean:NO];
    }
  }
  if (always || (width != nil)) {
    [((id<RAREiPlatformComponent>) nil_chk(c)) putClientPropertyWithNSString:[RAREiConstants RARE_WIDTH_PROPERTY] withId:width];
  }
  if (always || (height != nil)) {
    [((id<RAREiPlatformComponent>) nil_chk(c)) putClientPropertyWithNSString:[RAREiConstants RARE_HEIGHT_PROPERTY] withId:height];
  }
}

- (void)setRequiredWithBoolean:(BOOL)required {
  self->required_ = required;
}

- (void)setRootItemWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  [self setValueWithId:item];
}

- (void)setScriptingContextWithRAREWidgetContext:(RAREWidgetContext *)context {
  scriptingContex_ = context;
}

- (void)setSelectableWithBoolean:(BOOL)selectable {
}

- (void)setSelectedWithBoolean:(BOOL)selected {
  [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) setSelectedWithBoolean:selected];
}

- (void)setSizeWithFloat:(float)width
               withFloat:(float)height {
  [self setPreferredSizeWithFloat:width withFloat:height];
}

- (void)setSizeLockedWithBoolean:(BOOL)sizeLocked {
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) setSizeLockedWithBoolean:sizeLocked];
}

- (void)setTextDirectionWithNSString:(NSString *)direction {
}

- (void)setTitleWithNSString:(NSString *)title {
  widgetTitle_ = title;
  if (titleLabel_ != nil) {
    (void) [RAREUtils setMnemonicAndTextWithRAREiActionComponent:titleLabel_ withNSString:title];
  }
}

- (void)setTooltipWithJavaLangCharSequence:(id<JavaLangCharSequence>)tooltip {
  [super setTooltipWithJavaLangCharSequence:tooltip];
  if ([(id) dataComponent_ conformsToProtocol: @protocol(RAREiActionComponent)]) {
    [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) setToolTipTextWithJavaLangCharSequence:tooltip];
  }
}

- (void)setVisibleWithBoolean:(BOOL)visible {
  [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) setVisibleWithBoolean:visible];
}

- (void)setWidgetDataLinkWithRAREActionLink:(RAREActionLink *)link {
  widgetDataLink_ = link;
  @try {
    sourceURL_ = [((RAREActionLink *) nil_chk(link)) getURLWithRAREiWidget:self];
  }
  @catch (JavaNetMalformedURLException *e) {
    [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
  }
}

- (void)setWidgetListenerWithRAREaWidgetListener:(RAREaWidgetListener *)listener {
  self->widgetListener_ = listener;
}

- (id<RAREiPlatformAppContext>)getAppContext {
  id<RAREiViewer> v = [self getViewer];
  return (v == nil) ? [RAREPlatform getAppContext] : [v getAppContext];
}

- (id)getApplicationContext {
  return [self getAppContext];
}

- (id)getAttributeWithNSString:(NSString *)key {
  id o = nil;
  int len = (key == nil) ? 0 : [key sequenceLength];
  if (len == 0) {
    return nil;
  }
  unichar c = [((NSString *) nil_chk(key)) charAtWithInt:0];
  if (c == '%') {
    return [self getWidgetAttributeWithNSString:key];
  }
  if (c == '@') {
    c = [key charAtWithInt:1];
    if (c == '$') {
      if ([key equalsIgnoreCase:@"@$screenSize"]) {
        return [RAREUIScreen getRelativeScreenSizeName];
      }
      if ([key equalsIgnoreCase:@"@$screenOrientation"]) {
        return [RAREUIScreen getOrientationName];
      }
    }
    return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getDataWithId:[key substring:1]];
  }
  if ((c == 'r') && [key hasPrefix:[RAREiConstants RESOURCE_PREFIX]]) {
    key = [key substring:9];
    o = [((RAREUIProperties *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getUIDefaults])) getWithNSString:key];
    return (o == nil) ? [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceAsStringWithNSString:key] : o;
  }
  if (c == '$') {
    @try {
      return [((id<RAREiFunctionHandler>) nil_chk([RAREPlatform getFunctionHandler])) executeWithRAREiWidget:self withNSString:key];
    }
    @catch (JavaTextParseException *ex) {
      return key;
    }
  }
  o = [self getCustomPropertyWithId:key];
  if (o != nil) {
    return [((id<RAREiScriptHandler>) nil_chk([self getScriptHandler])) unwrapWithId:o];
  }
  return [self getAttributeExWithChar:c withNSString:key];
}

- (RAREUIColor *)getBackground {
  return [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getBackground];
}

- (RAREUIColor *)getBackgroundColorWithNSString:(NSString *)color {
  return [RAREUIColorHelper getBackgroundColorWithNSString:color];
}

- (id<RAREiPlatformPainter>)getBackgroundOverlayPainter {
  return [self getOverlayPainterWithBoolean:YES];
}

- (id<RAREiBackgroundPainter>)getBackgroundPainter {
  id<RAREiPlatformComponentPainter> cp = [self getComponentPainterWithBoolean:YES withBoolean:YES];
  return (cp == nil) ? nil : [cp getBackgroundPainter];
}

- (JavaNetURL *)getBaseURL {
  return [((id<RAREiViewer>) nil_chk([self getViewer])) getBaseURL];
}

- (id<RAREiPlatformBorder>)getBorder {
  return [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getBorder];
}

- (int)getClientHeight {
  return [self getHeight];
}

- (int)getClientWidth {
  return [self getWidth];
}

- (RAREUIColor *)getColorWithNSString:(NSString *)color {
  if (color == nil) {
    return nil;
  }
  if ([((NSString *) nil_chk(color)) indexOf:','] != -1) {
    return [RAREColorUtils getBackgroundColorWithNSString:color];
  }
  return [RAREUIColorHelper getColorWithNSString:color];
}

- (id<RAREiPlatformComponentPainter>)getComponentPainter {
  id<RAREiPlatformComponentPainter> cp = [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getComponentPainter];
  if (cp == nil) {
    cp = [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) getComponentPainter];
  }
  return cp;
}

- (JavaNetURLConnection *)getConnectionWithNSString:(NSString *)file {
  return (JavaNetURLConnection *) check_class_cast([((id<RAREiURLConnection>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) openConnectionWithJavaNetURL:[self getURLWithNSString:file]])) getConnectionObject], [JavaNetURLConnection class]);
}

- (id<RAREiPlatformComponent>)getContainerComponent {
  return formComponent_;
}

- (id<RAREiContainer>)getContainerViewer {
  return [self getParent];
}

- (id<RAREiPlatformComponent>)getDataComponent {
  return dataComponent_;
}

- (JavaNetURL *)getDataURL {
  return sourceURL_;
}

- (id<RAREiPlatformIcon>)getDisabledIcon {
  id<RAREiPlatformComponent> c = [self getContainerComponent];
  if ([(id) c conformsToProtocol: @protocol(RAREiActionComponent)]) {
    return [((id<RAREiActionComponent>) check_protocol_cast(c, @protocol(RAREiActionComponent))) getDisabledIcon];
  }
  else {
    return disabledIcon_;
  }
}

- (id<RAREiPlatformIcon>)getDragIcon {
  id<RAREiPlatformIcon> icon;
  if ([self conformsToProtocol: @protocol(RAREiListHandler)]) {
    id<RAREiListHandler> list = (id<RAREiListHandler>) check_protocol_cast(self, @protocol(RAREiListHandler));
    int n = [list getSelectedIndexCount];
    if (n == 1) {
      icon = [((RARERenderableDataItem *) nil_chk([list getSelectedItem])) getIcon];
      if (icon == nil) {
        icon = [self getIcon];
      }
    }
    else {
      icon = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceAsIconWithNSString:@"Rare.icon.dragMultiple"];
    }
  }
  else {
    icon = [self getIcon];
  }
  return (icon == nil) ? [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceAsIconWithNSString:@"Rare.icon.dragSingle"] : ((id) icon);
}

- (id)getEventHandlerWithNSString:(NSString *)event {
  event = [self getEventNameWithNSString:event];
  RAREaWidgetListener *wl = [self getWidgetListener];
  if (wl != nil) {
    return [wl getEventHandlerWithNSString:event];
  }
  return nil;
}

- (RAREUIFont *)getFont {
  RAREUIFont *f = [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) getFont];
  return (f == nil) ? [RAREUIFontHelper getDefaultFont] : f;
}

- (RAREUIFont *)getFontWithRARESPOTFont:(RARESPOTFont *)fi {
  return (fi == nil) ? nil : [RAREUIFontHelper getFontWithRAREiWidget:self withRARESPOTFont:fi];
}

- (RAREUIFont *)getFontWithNSString:(NSString *)family
                            withInt:(int)style
                       withNSString:(NSString *)ssize
                        withBoolean:(BOOL)monospaced {
  RAREUIFont *base = [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) getFontEx];
  if (base == nil) {
    base = [RAREFontUtils getDefaultFont];
  }
  return [RAREFontUtils getFontWithRAREUIFont:base withNSString:family withInt:style withNSString:ssize withBoolean:monospaced withBoolean:NO withBoolean:NO];
}

- (RAREUIColor *)getForeground {
  return [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) getForeground];
}

- (id<RAREiFormViewer>)getForm {
  return [self getFormViewer];
}

- (id<RAREiFormViewer>)getFormViewer {
  id<RAREiContainer> c = [self getParent];
  return (c == nil) ? nil : [c getFormViewer];
}

- (NSString *)getHTTPFormName {
  return [self getName];
}

- (id)getHTTPFormValue {
  return [self getSelectionAsString];
}

- (int)getHeight {
  return [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getHeight];
}

- (id<RAREiPlatformIcon>)getIcon {
  id<RAREiPlatformComponent> c = [self getDataComponent];
  if ([(id) c conformsToProtocol: @protocol(RAREiActionComponent)]) {
    return [((id<RAREiActionComponent>) check_protocol_cast(c, @protocol(RAREiActionComponent))) getIcon];
  }
  return displayIcon_;
}

- (id<RAREiPlatformIcon>)getIconWithSPOTPrintableString:(SPOTPrintableString *)icon {
  if ((icon == nil) || ![icon spot_hasValue]) {
    return nil;
  }
  return [self getImageIconExWithSPOTPrintableString:icon withBoolean:YES];
}

- (id<RAREiPlatformIcon>)getIconWithNSString:(NSString *)icon {
  return [self getIconWithNSString:icon withNSString:nil withRAREUIDimension:nil withFloat:[RAREaPlatformHelper getScaledImageDensity]];
}

- (id<RAREiPlatformIcon>)getIconWithNSString:(NSString *)icon
                                withNSString:(NSString *)description_ {
  return [self getIconWithNSString:icon withNSString:description_ withRAREUIDimension:nil withFloat:[RAREaPlatformHelper getScaledImageDensity]];
}

- (id<RAREiPlatformIcon>)getIconWithJavaNetURL:(JavaNetURL *)url
                                  withNSString:(NSString *)description_ {
  return [self getIconWithJavaNetURL:url withNSString:description_ withRAREUIDimension:nil withFloat:[RAREaPlatformHelper getScaledImageDensity]];
}

- (id<RAREiPlatformIcon>)getIconWithNSString:(NSString *)icon
                                withNSString:(NSString *)description_
                                   withFloat:(float)density {
  return [self getIconWithNSString:icon withNSString:description_ withRAREUIDimension:nil withFloat:density];
}

- (id<RAREiPlatformIcon>)getIconWithJavaNetURL:(JavaNetURL *)url
                                  withNSString:(NSString *)description_
                                     withFloat:(float)density {
  return [self getIconWithJavaNetURL:url withNSString:description_ withRAREUIDimension:nil withFloat:density];
}

- (id<RAREiPlatformIcon>)getIconWithNSString:(NSString *)icon
                                withNSString:(NSString *)description_
                         withRAREUIDimension:(RAREUIDimension *)size
                                   withFloat:(float)density {
  if ((icon == nil) || ([icon sequenceLength] == 0)) {
    return nil;
  }
  if ([((NSString *) nil_chk(icon)) indexOf:'='] != -1) {
    return [RAREUIImageHelper createStateListIconWithNSString:icon withRAREiWidget:self];
  }
  if ([icon indexOf:'{'] != -1) {
    icon = [self expandStringWithNSString:icon withBoolean:NO];
  }
  RAREUIImage *img = [RAREUIImageHelper getImageWithRAREiWidget:self withNSString:icon withBoolean:[RAREPlatform isUIThread] withRAREUIDimension:size withRAREiImagePainter_ScalingTypeEnum:nil withFloat:density];
  return (img == nil) ? nil : [[RAREUIImageIcon alloc] initWithRAREUIImage:img withNSString:description_];
}

- (id<RAREiPlatformIcon>)getIconWithJavaNetURL:(JavaNetURL *)url
                                  withNSString:(NSString *)description_
                           withRAREUIDimension:(RAREUIDimension *)size
                                     withFloat:(float)density {
  if (url == nil) {
    return nil;
  }
  RAREUIImageIcon *ic = nil;
  @try {
    ic = [RAREaPlatformHelper createIconWithJavaNetURL:url withNSString:description_ withBoolean:[RAREPlatform isUIThread] withFloat:density];
    if (ic != nil) {
      [ic isImageLoadedWithRAREiImageObserver:self];
    }
  }
  @catch (JavaLangException *e) {
    [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
  }
  return ic;
}

- (RAREUIImage *)getImageWithSPOTPrintableString:(SPOTPrintableString *)image {
  RAREUIImageIcon *icon = [self getImageIconExWithSPOTPrintableString:image withBoolean:NO];
  return (icon == nil) ? nil : [icon getImage];
}

- (RAREUIImage *)getImageWithNSString:(NSString *)image {
  return [self getImageWithNSString:image withBoolean:YES withRAREUIDimension:nil withRAREiImagePainter_ScalingTypeEnum:nil withFloat:[RAREaPlatformHelper getUnscaledImageDensity]];
}

- (RAREUIImage *)getImageWithJavaNetURL:(JavaNetURL *)url {
  return [self getImageWithJavaNetURL:url withBoolean:YES withRAREUIDimension:nil withRAREiImagePainter_ScalingTypeEnum:nil withFloat:[RAREaPlatformHelper getUnscaledImageDensity]];
}

- (RAREUIImage *)getImageWithNSString:(NSString *)image
                          withBoolean:(BOOL)deferred
                  withRAREUIDimension:(RAREUIDimension *)size
withRAREiImagePainter_ScalingTypeEnum:(RAREiImagePainter_ScalingTypeEnum *)st
                            withFloat:(float)density {
  return [RAREUIImageHelper getImageWithRAREiWidget:self withNSString:image withBoolean:deferred withRAREUIDimension:size withRAREiImagePainter_ScalingTypeEnum:st withFloat:density];
}

- (RAREUIImage *)getImageWithJavaNetURL:(JavaNetURL *)url
                            withBoolean:(BOOL)deferred
                    withRAREUIDimension:(RAREUIDimension *)size
  withRAREiImagePainter_ScalingTypeEnum:(RAREiImagePainter_ScalingTypeEnum *)st
                              withFloat:(float)density {
  return [RAREUIImageHelper getImageWithRAREiWidget:self withJavaNetURL:url withBoolean:deferred withRAREUIDimension:size withRAREiImagePainter_ScalingTypeEnum:st withFloat:density];
}

- (NSString *)getInnerHTML {
  return [self getInnerText];
}

- (NSString *)getInnerText {
  id value = [self getValue];
  return (value == nil) ? @"" : [value description];
}

- (RAREUIAction *)getKeystrokeActionWithNSString:(NSString *)name {
  NSString *nostroke = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceAsStringWithNSString:@"Rare.runtime.text.noSuchKeystroke"];
  @throw [[RAREApplicationException alloc] initWithNSString:[RAREaPlatformHelper formatWithNSString:nostroke withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ name } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
}

- (NSString *)getLinkedDataAsString {
  id o = [self getLinkedData];
  if (o != nil) {
    return [o description];
  }
  return [self getSelectionDataAsString];
}

- (RAREUIPoint *)getLocationInParent {
  return [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getLocation];
}

- (RAREUIPoint *)getLocationOnScreen {
  return [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getLocationOnScreen];
}

- (NSString *)getName {
  return widgetName_;
}

- (int)getOffsetHeight {
  return [self getHeight];
}

- (int)getOffsetLeft {
  return [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getX];
}

- (id<RAREiContainer>)getOffsetParent {
  return [self getParent];
}

- (int)getOffsetTop {
  return [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getY];
}

- (int)getOffsetWidth {
  return [self getWidth];
}

- (RAREUIPoint *)getOverlayLocationWithBoolean:(BOOL)top {
  id<RAREiPlatformComponent> comp = [self getContainerComponent];
  RAREUIPoint *loc = [((id<RAREiPlatformComponent>) nil_chk(comp)) getLocationOnScreen];
  if (!top) {
    ((RAREUIPoint *) nil_chk(loc))->y_ += [comp getHeight];
  }
  return loc;
}

- (id<RAREiPlatformPainter>)getOverlayPainter {
  return [self getOverlayPainterWithBoolean:NO];
}

- (id<RAREiContainer>)getParent {
  return parentContainer_;
}

- (id<RAREiContainer>)getParentElement {
  return [self getParent];
}

- (NSString *)getPathName {
  if (widgetName_ == nil) {
    return @"";
  }
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] initWithNSString:widgetName_];
  id<RAREiContainer> v = [self getParent];
  while (v != nil) {
    (void) [sb insertWithInt:0 withChar:'/'];
    (void) [sb insertWithInt:0 withNSString:[((id<RAREiContainer>) nil_chk(v)) getName]];
    v = [v getParent];
  }
  (void) [sb insertWithInt:0 withChar:'/'];
  return [sb description];
}

- (RAREUIPoint *)getPopupLocation {
  id<RAREiPlatformComponent> comp = [self getContainerComponent];
  RAREUIPoint *loc = [((id<RAREiPlatformComponent>) nil_chk(comp)) getLocationOnScreen];
  ((RAREUIPoint *) nil_chk(loc))->y_ += [comp getHeight];
  return loc;
}

- (RAREUIPopupMenu *)getPopupMenu {
  if (popupMenu_ != nil) {
    return popupMenu_;
  }
  if ((menuSet_ != nil)) {
    popupMenu_ = [[RAREUIPopupMenu alloc] initWithRAREiWidget:self withSPOTSet:menuSet_ withBoolean:showDefaultMenu_];
    menuSet_ = nil;
  }
  else if (showDefaultMenu_) {
    popupMenu_ = [[RAREUIPopupMenu alloc] initWithRAREiWidget:self withSPOTSet:nil withBoolean:YES];
  }
  return popupMenu_;
}

- (RAREUIDimension *)getPreferredSize {
  if ([self getContainerComponent] != nil) {
    return [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getPreferredSize];
  }
  return [[RAREUIDimension alloc] initWithFloat:0 withFloat:0];
}

- (RAREUIDimension *)getPreferredSizeWithInt:(int)maxWidth {
  RAREUIDimension *size = [[RAREUIDimension alloc] init];
  (void) [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getPreferredSizeWithRAREUIDimension:size withFloat:maxWidth];
  return size;
}

- (int)getPromptWidth {
  return promptWidth_;
}

- (JavaIoReader *)getReaderWithNSString:(NSString *)file {
  JavaNetURL *url = [self getURLWithNSString:file];
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getReaderWithJavaNetURL:url];
}

- (id<RAREiPlatformComponent>)getRenderingComponent {
  id<RAREiPlatformComponent> c = [super getRenderingComponent];
  if (c != nil) {
    return c;
  }
  id<RAREiPlatformComponent> cc = [self getContainerComponent];
  if ([(id) cc conformsToProtocol: @protocol(RAREiPlatformComponent)]) {
    return cc;
  }
  return nil;
}

- (int)getScreenLeft {
  return [((RAREUIPoint *) nil_chk([((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getLocationOnScreen])) intX];
}

- (int)getScreenTop {
  return [((RAREUIPoint *) nil_chk([((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getLocationOnScreen])) intY];
}

- (id<RAREiScriptHandler>)getScriptHandler {
  return [((RAREWindowViewer *) nil_chk([self getWindow])) getScriptHandler];
}

- (RAREWidgetContext *)getScriptingContext {
  if (scriptingContex_ == nil) {
    scriptingContex_ = [((id<RAREiScriptHandler>) nil_chk([self getScriptHandler])) createScriptingContextWithId:self];
  }
  return scriptingContex_;
}

- (id)getSelection {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getSelectionAsString {
  id o = [self getSelection];
  if ([[IOSObjectArray iosClassWithType:[IOSClass classWithClass:[NSObject class]]] isInstance:o]) {
    return [RAREUTHelper toStringWithNSObjectArray:(IOSObjectArray *) check_class_cast(o, [IOSObjectArray class]) withNSString:@"\t"];
  }
  return (o == nil) ? nil : [o description];
}

- (id)getSelectionData {
  id o = [self getSelection];
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    return [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) getLinkedData];
  }
  return nil;
}

- (NSString *)getSelectionDataAsString {
  id o = [self getSelectionData];
  if ([[IOSObjectArray iosClassWithType:[IOSClass classWithClass:[NSObject class]]] isInstance:o]) {
    return [RAREUTHelper toStringWithNSObjectArray:(IOSObjectArray *) check_class_cast(o, [IOSObjectArray class]) withNSString:@"\t"];
  }
  return (o == nil) ? nil : [o description];
}

- (RAREUIDimension *)getSize {
  return [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getSize];
}

- (JavaIoInputStream *)getStreamWithNSString:(NSString *)file {
  return [((id<RAREiURLConnection>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) openConnectionWithJavaNetURL:[self getURLWithNSString:file]])) getInputStream];
}

- (id<RAREiTabDocument>)getTabDocument {
  id<RAREiPlatformComponent> c = [self getContainerComponent];
  while (c != nil) {
    if ([(id) c conformsToProtocol: @protocol(RAREiTabDocument)]) {
      return (id<RAREiTabDocument>) check_protocol_cast(c, @protocol(RAREiTabDocument));
    }
    c = [((id<RAREiPlatformComponent>) nil_chk(c)) getParent];
  }
  return nil;
}

- (int)getTabIndex {
  id<RAREiPlatformComponent> c = [self getContainerComponent];
  while (c != nil) {
    if ([(id) c conformsToProtocol: @protocol(RAREiTabDocument)]) {
      return [((id<RAREiTabDocument>) check_protocol_cast(c, @protocol(RAREiTabDocument))) getTabIndex];
    }
    c = [((id<RAREiPlatformComponent>) nil_chk(c)) getParent];
  }
  return -1;
}

- (id<RAREiTabPaneViewer>)getTabPaneViewer {
  id<RAREiPlatformComponent> c = [self getContainerComponent];
  while (c != nil) {
    if ([(id) c conformsToProtocol: @protocol(RAREiTabDocument)]) {
      return [((id<RAREiTabDocument>) check_protocol_cast(c, @protocol(RAREiTabDocument))) getTabPaneViewer];
    }
    c = [((id<RAREiPlatformComponent>) nil_chk(c)) getParent];
  }
  return nil;
}

- (NSString *)getTextDirection {
  return @"ltr";
}

- (NSString *)getTitle {
  return widgetTitle_;
}

- (id<RAREiPlatformComponent>)getTitleLabel {
  return titleLabel_;
}

- (id)getTransferDataWithRARETransferFlavor:(RARETransferFlavor *)flavor
                      withRAREiTransferable:(id<RAREiTransferable>)transferable {
  if ([((RARETransferFlavor *) nil_chk(flavor)) isStringFlavor]) {
    return [self getSelectionAsString];
  }
  else if ([flavor isWidgetFlavor]) {
    return self;
  }
  else if ([flavor isItemFlavor]) {
    return [self getSelection];
  }
  return nil;
}

- (int)getType {
  return RARERenderableDataItem_TYPE_WIDGET;
}

- (id)getUIWindow {
  id<RAREiContainer> p = [self getParent];
  if (p != nil) {
    return [p getUIWindow];
  }
  return [((RAREWindowViewer *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowViewer])) getUIWindow];
}

- (JavaNetURL *)getURLWithNSString:(NSString *)url {
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) createURLWithRAREiWidget:self withNSString:[self expandStringWithNSString:url withBoolean:NO]];
}

- (id<RAREUTiURLResolver>)getURLResolver {
  return self;
}

- (NSString *)getURLTextWithNSString:(NSString *)url
                        withNSString:(NSString *)charSet {
  if (url == nil) {
    return nil;
  }
  if ([((NSString *) nil_chk(url)) hasPrefix:[RAREiConstants RESOURCE_PREFIX]]) {
    return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getResourceAsStringWithNSString:[url substring:9]];
  }
  id<RAREiURLConnection> conn = nil;
  @try {
    JavaNetURL *u = [self getURLWithNSString:url];
    conn = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) openConnectionWithJavaNetURL:u];
    if (charSet != nil) {
      [((id<RAREiURLConnection>) nil_chk(conn)) setDefaultCharsetWithNSString:charSet];
    }
    return [((id<RAREiURLConnection>) nil_chk(conn)) getContentAsString];
  }
  @catch (JavaLangException *ex) {
    return nil;
  }
  @finally {
    if (conn != nil) {
      [conn dispose];
    }
  }
}

- (id)getValue {
  id o = [self getSelection];
  if (!selectAllAllowed_) {
    if ([o isKindOfClass:[RARERenderableDataItem class]]) {
      o = [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) getValue];
    }
  }
  else if ([[IOSObjectArray iosClassWithType:[IOSClass classWithClass:[RARERenderableDataItem class]]] isInstance:o]) {
    IOSObjectArray *a = (IOSObjectArray *) check_class_cast(o, [IOSObjectArray class]);
    int len = (int) [((IOSObjectArray *) nil_chk(a)) count];
    IOSObjectArray *ao = [IOSObjectArray arrayWithLength:len type:[IOSClass classWithClass:[NSObject class]]];
    RARERenderableDataItem *item;
    for (int i = 0; i < len; i++) {
      item = IOSObjectArray_Get(a, i);
      (void) IOSObjectArray_Set(ao, i, [((RARERenderableDataItem *) nil_chk(item)) getValue]);
    }
    o = ao;
  }
  return o;
}

- (double)getValueAsDouble {
  id o = [self getValue];
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    o = [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) getValue];
    if ([o isKindOfClass:[NSNumber class]]) {
      return [((NSNumber *) check_class_cast(o, [NSNumber class])) doubleValue];
    }
  }
  return (o == nil) ? 0 : [RAREUTSNumber doubleValueWithNSString:[o description]];
}

- (int)getValueAsInt {
  id o = [self getValue];
  if ([o isKindOfClass:[RARERenderableDataItem class]]) {
    o = [((RARERenderableDataItem *) check_class_cast(o, [RARERenderableDataItem class])) getValue];
    if ([o isKindOfClass:[NSNumber class]]) {
      return [((NSNumber *) check_class_cast(o, [NSNumber class])) intValue];
    }
  }
  return (o == nil) ? 0 : [RAREUTSNumber intValueWithNSString:[o description]];
}

- (NSString *)getValueAsString {
  id o = [self getValue];
  return (o == nil) ? nil : [o description];
}

- (id<RAREiViewer>)getViewer {
  return [self getParent];
}

- (int)getWidgetCount {
  return 0;
}

+ (id<RAREiWidget>)getWidgetForComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component {
  if (component != nil) {
    return (id<RAREiWidget>) check_protocol_cast([component getClientPropertyWithNSString:[RAREiConstants RARE_WIDGET_COMPONENT_PROPERTY]], @protocol(RAREiWidget));
  }
  return nil;
}

- (RAREaWidgetListener *)getWidgetListener {
  return widgetListener_;
}

- (RAREiWidget_WidgetTypeEnum *)getWidgetType {
  return widgetType_;
}

- (int)getWidth {
  if ([self getContainerComponent] != nil) {
    return [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getWidth];
  }
  return 0;
}

- (RAREWindowViewer *)getWindow {
  id<RAREiContainer> p = [self getParent];
  if ([(id) p isKindOfClass:[RAREWindowViewer class]]) {
    return (RAREWindowViewer *) check_class_cast(p, [RAREWindowViewer class]);
  }
  if (p != nil) {
    return [p getWindow];
  }
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowViewer];
}

- (BOOL)hasPopupMenu {
  if (popupMenu_ != nil) {
    return YES;
  }
  return (menuSet_ != nil) || showDefaultMenu_;
}

- (BOOL)hasSelection {
  return [self getSelection] != nil;
}

- (BOOL)hasValue {
  return [self getValue] != nil;
}

- (BOOL)isAllowContainerToDisable {
  return allowContainerToDisable_;
}

- (BOOL)isDesignMode {
  return NO;
}

- (BOOL)isDisposed {
  return disposed_;
}

- (BOOL)isEnabled {
  return !disposed_ && [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) isEnabled] && [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) isEnabled];
}

- (BOOL)isEventEnabledWithNSString:(NSString *)event {
  RAREaWidgetListener *l = [self getWidgetListener];
  if (l == nil) {
    return NO;
  }
  return [((RAREaWidgetListener *) nil_chk(l)) isEnabledWithNSString:[self getEventNameWithNSString:event]];
}

- (BOOL)isFocusPainted {
  return [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) isFocusPainted];
}

- (BOOL)isFocusableInCurrentState {
  return [((id<RAREiPlatformComponent>) nil_chk(dataComponent_)) isEnabled] && [dataComponent_ isVisible] && [dataComponent_ isFocusable];
}

- (BOOL)isMultipartContent {
  return NO;
}

- (BOOL)isRequired {
  return required_;
}

- (BOOL)isSelectable {
  return [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) isSelectable];
}

- (BOOL)isSelected {
  return [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) isSelected];
}

- (BOOL)isShowing {
  return !disposed_ && [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) isShowing];
}

- (BOOL)isSizeLocked {
  return NO;
}

- (BOOL)isSubmittable {
  return isSubmittable__ && ([self getName] != nil) && [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) isShowing];
}

- (BOOL)isTextDirectionSet {
  return NO;
}

- (BOOL)isTypeWithNSString:(NSString *)type {
  return [((NSString *) nil_chk([((RAREiWidget_WidgetTypeEnum *) nil_chk([self getWidgetType])) description])) equalsIgnoreCase:type];
}

- (BOOL)isValidForSubmissionWithBoolean:(BOOL)showerror {
  return YES;
}

- (BOOL)isViewer {
  return NO;
}

- (BOOL)isVisible {
  return !disposed_ && [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) isVisible];
}

- (void)addExpandedWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  if (itemAttributes_ == nil) {
    itemAttributes_ = [[RAREaWidget_ItemAttributes alloc] init];
  }
  [((RAREaWidget_ItemAttributes *) nil_chk(itemAttributes_)) addExpandedWithRARERenderableDataItem:item];
}

- (void)addSelectedWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  if (itemAttributes_ == nil) {
    itemAttributes_ = [[RAREaWidget_ItemAttributes alloc] init];
  }
  [((RAREaWidget_ItemAttributes *) nil_chk(itemAttributes_)) addSelectedWithRARERenderableDataItem:item];
}

- (void)configureWithRARESPOTWidget:(RARESPOTWidget *)cfg
                        withBoolean:(BOOL)border
                        withBoolean:(BOOL)textMenus
                        withBoolean:(BOOL)margin
                        withBoolean:(BOOL)fire_created {
  id<RAREiPlatformComponent> panel = nil;
  id<RAREiPlatformComponent> comp = [self getDataComponent];
  id<RAREiPlatformComponent> fcomp = [self getContainerComponent];
  id<RAREiPlatformAppContext> app = [self getAppContext];
  if ([self isDesignMode]) {
    [self setLinkedDataWithId:cfg];
  }
  [self registerWithWidgetWithRAREiPlatformComponent:comp];
  if (fcomp != comp) {
    [self registerWithWidgetWithRAREiPlatformComponent:fcomp];
  }
  if (fire_created) {
    [self fireConfigureEventWithRARESPOTWidget:cfg withNSString:[RAREiConstants EVENT_CREATED]];
  }
  if ([((SPOTBoolean *) nil_chk(((RARESPOTWidget *) nil_chk(cfg))->submitable_)) spot_valueWasSet]) {
    isSubmittable__ = [cfg->submitable_ booleanValue];
  }
  NSString *s;
  if (widgetName_ == nil) {
    widgetName_ = [((SPOTPrintableString *) nil_chk(cfg->name_)) getValue];
    if ((widgetName_ == nil) || ([widgetName_ sequenceLength] == 0)) {
      widgetName_ = [RAREUtils makeWidgetNameWithRARESPOTWidget:cfg withRAREiWidget:self];
      isSubmittable__ = NO;
    }
  }
  if ([[((SPOTPrintableString *) nil_chk(cfg->customProperties_)) spot_getLinkedData] conformsToProtocol: @protocol(JavaUtilMap)]) {
    [self handleCustomPropertiesWithRARESPOTWidget:cfg withJavaUtilMap:(id<JavaUtilMap>) check_protocol_cast([cfg->customProperties_ spot_getLinkedData], @protocol(JavaUtilMap))];
    (void) [cfg->customProperties_ spot_setLinkedDataWithId:nil];
  }
  else {
    s = [cfg->customProperties_ getValue];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      [self handleCustomPropertiesWithRARESPOTWidget:cfg withJavaUtilMap:[RAREDataParser parseNameValuePairsWithSPOTPrintableString:cfg->customProperties_]];
    }
  }
  id<RAREiScriptHandler> sh = [self getScriptHandler];
  id<JavaUtilMap> map = [self isDesignMode] ? nil : [RAREaWidgetListener createEventMapWithRARESPOTWidget:cfg withNSString:widgetName_ withRAREiScriptHandler:sh];
  if (map != nil) {
    [self setWidgetListenerWithRAREaWidgetListener:[self createWidgetListenerWithRAREiWidget:self withJavaUtilMap:map withRAREiScriptHandler:[self getScriptHandler]]];
  }
  if ([((SPOTBoolean *) nil_chk(cfg->copyingAllowed_)) spot_valueWasSet]) {
    copyingAllowed_ = [cfg->copyingAllowed_ booleanValue];
  }
  if ([((SPOTBoolean *) nil_chk(cfg->pastingAllowed_)) spot_valueWasSet]) {
    pastingAllowed_ = [cfg->pastingAllowed_ booleanValue];
  }
  if ([((SPOTBoolean *) nil_chk(cfg->deletingAllowed_)) spot_valueWasSet]) {
    deletingAllowed_ = [cfg->deletingAllowed_ booleanValue];
  }
  required_ = [((SPOTBoolean *) nil_chk(cfg->required_)) booleanValue];
  if ([((SPOTBoolean *) nil_chk(cfg->draggingAllowed_)) spot_valueWasSet]) {
    draggingAllowed_ = [cfg->draggingAllowed_ booleanValue];
  }
  else {
    draggingAllowed_ = [((id<RAREiPlatformAppContext>) nil_chk(app)) areAllWidgetsDraggable];
  }
  dropMode_ = [((RARESPOTWidget_CDropTracking *) nil_chk(cfg->dropTracking_)) intValue];
  if (![((SPOTBoolean *) nil_chk(cfg->focusable_)) booleanValue]) {
    [self setFocusableWithBoolean:NO];
  }
  else if ([cfg->focusable_ spot_valueWasSet]) {
    [self setFocusableWithBoolean:YES];
  }
  RAREUIFont *f = nil;
  if ([((RARESPOTFont *) nil_chk(cfg->font_)) spot_valueWasSet]) {
    f = [RAREUIFontHelper getFontWithRAREiWidget:self withRARESPOTFont:cfg->font_];
  }
  if (f != nil) {
    [((id<RAREiPlatformComponent>) nil_chk(comp)) setFontWithRAREUIFont:f];
    if (comp != fcomp) {
      [((id<RAREiPlatformComponent>) nil_chk(fcomp)) setFontWithRAREUIFont:f];
    }
  }
  RAREUIColor *c = nil;
  s = [((SPOTPrintableString *) nil_chk(cfg->fgColor_)) getValue];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    c = [RAREUIColorHelper getColorWithNSString:s];
  }
  if (c != nil) {
    [((id<RAREiPlatformComponent>) nil_chk(comp)) setForegroundWithRAREUIColor:c];
    if (comp != fcomp) {
      [((id<RAREiPlatformComponent>) nil_chk(fcomp)) setForegroundWithRAREUIColor:c];
    }
  }
  if (widgetTitle_ == nil) {
    widgetTitle_ = [((SPOTPrintableString *) nil_chk(cfg->title_)) getValue];
    if (widgetTitle_ == nil) {
      widgetTitle_ = @"";
    }
  }
  int titleDisplay = [((RARESPOTWidget_CTitleLocation *) nil_chk(cfg->titleLocation_)) intValue];
  if (titleDisplay == RARESPOTWidget_CTitleLocation_auto) {
    titleDisplay = [self getDefaultTitleLocation];
  }
  BOOL lockable = [@"true" equalsIgnoreCase:[cfg spot_getAttributeWithNSString:@"lockable"]];
  if (border) {
    RARESPOTMargin *m = margin ? [cfg getContentPadding] : nil;
    id<RAREiPlatformBorder> mb = (m == nil) ? nil : [m getBorder];
    if (titleDisplay == RARESPOTWidget_CTitleLocation_center_left) {
      panel = [RAREBorderUtils setBorderTypeWithRAREiWidget:self withRAREiPlatformComponent:fcomp withSPOTSet:[cfg getBorders] withNSString:nil withInt:-1 withRAREiPlatformBorder:mb withBoolean:lockable];
    }
    else {
      panel = [RAREBorderUtils setBorderTypeWithRAREiWidget:self withRAREiPlatformComponent:fcomp withSPOTSet:[cfg getBorders] withNSString:widgetTitle_ withInt:titleDisplay withRAREiPlatformBorder:mb withBoolean:lockable];
    }
    if (panel == fcomp) {
      panel = nil;
    }
    else {
      [self registerWithWidgetWithRAREiPlatformComponent:panel];
      formComponent_ = fcomp = panel;
    }
  }
  s = [((SPOTPrintableString *) nil_chk(cfg->bgColor_)) getValue];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    @try {
      if ([s isEqual:@"transparent"]) {
        [((id<RAREiPlatformComponent>) nil_chk(comp)) setOpaqueWithBoolean:NO];
        if (fcomp != comp) {
          [((id<RAREiPlatformComponent>) nil_chk(fcomp)) setOpaqueWithBoolean:NO];
        }
      }
      else {
        [RAREColorUtils configureBackgroundPainterWithRAREiWidget:self withSPOTPrintableString:cfg->bgColor_];
      }
    }
    @catch (JavaLangIllegalArgumentException *e) {
      [RAREPlatform ignoreExceptionWithNSString:@"configureColor" withJavaLangThrowable:e];
    }
  }
  if ([((SPOTPrintableString *) nil_chk(cfg->bgImageURL_)) spot_valueWasSet]) {
    RAREUTObjectHolder *oh = (RAREUTObjectHolder *) check_class_cast([cfg->bgImageURL_ spot_getLinkedData], [RAREUTObjectHolder class]);
    id<RAREiPlatformPainter> ip = nil;
    if (oh != nil) {
      (void) [cfg->bgImageURL_ spot_setLinkedDataWithId:nil];
      if (oh->value_ != nil) {
        [self setOverlayPainterWithRAREiPlatformPainter:ip = (id<RAREiPlatformPainter>) check_protocol_cast(oh->value_, @protocol(RAREiPlatformPainter)) withBoolean:YES];
        oh->value_ = nil;
      }
    }
    else {
      [self setOverlayPainterWithRAREiPlatformPainter:ip = [RAREUtils configureImageWithRAREiWidget:self withRAREiImagePainter:nil withSPOTPrintableString:cfg->bgImageURL_ withBoolean:NO] withBoolean:YES];
    }
    if (ip != nil) {
      [ip setDisposableWithBoolean:YES];
    }
  }
  if ([((SPOTPrintableString *) nil_chk(cfg->overlayImageURL_)) spot_valueWasSet]) {
    RAREUTObjectHolder *oh = (RAREUTObjectHolder *) check_class_cast([cfg->overlayImageURL_ spot_getLinkedData], [RAREUTObjectHolder class]);
    if (oh != nil) {
      if (oh->value_ != nil) {
        [self setOverlayPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>) check_protocol_cast(oh->value_, @protocol(RAREiPlatformPainter)) withBoolean:NO];
        oh->value_ = nil;
      }
    }
    else {
      [self setOverlayPainterWithRAREiPlatformPainter:[RAREUtils configureImageWithRAREiWidget:self withRAREiImagePainter:nil withSPOTPrintableString:cfg->overlayImageURL_ withBoolean:NO] withBoolean:NO];
    }
  }
  if ([((SPOTPrintableString *) nil_chk(cfg->cursorName_)) spot_valueWasSet]) {
    [self setCursorNameWithNSString:[cfg->cursorName_ getValue]];
  }
  if (![((SPOTBoolean *) nil_chk(cfg->enabled_)) booleanValue]) {
    [self setEnabledWithBoolean:NO];
  }
  if (![((SPOTBoolean *) nil_chk(cfg->visible_)) booleanValue]) {
    [self setVisibleWithBoolean:NO];
  }
  RARESPOTLink *link = [cfg getActionLink];
  if (link != nil) {
    [self setActionListenerWithRAREiActionListener:[self createActionLinkWithRARESPOTLink:link]];
  }
  if ([((SPOTBoolean *) nil_chk(cfg->focusPainted_)) spot_valueWasSet]) {
    [self setFocusPaintedWithBoolean:[cfg->focusPainted_ booleanValue]];
  }
  [self configureMenusWithRAREiPlatformComponent:comp withRARESPOTWidget:cfg withBoolean:textMenus];
  [self initializeListenersWithRAREaWidgetListener:[self getWidgetListener]];
  id<RAREiWidgetCustomizer> customizer = [((id<RAREiPlatformAppContext>) nil_chk(app)) getWidgetCustomizer];
  if (customizer != nil) {
    id<RAREiParentComponent> cp = [customizer widgetConfiguredWithRAREiWidget:self withRARESPOTWidget:cfg];
    if (cp != nil) {
      [cp addWithRAREiPlatformComponent:fcomp];
      formComponent_ = fcomp = cp;
    }
  }
  if ([((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) isFocusPainted]) {
    (void) [self getComponentPainterWithBoolean:YES withBoolean:YES];
  }
  [self configureSizeWithRAREiPlatformComponent:[self getContainerComponent] withRARESPOTRectangle:cfg->bounds_];
}

- (void)configureActionsWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp
                                       withSPOTSet:(SPOTSet *)actions {
}

- (void)configureGenericDnDWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp
                                   withRARESPOTWidget:(RARESPOTWidget *)cfg {
  if ((cfg != nil) && [((RARESPOTWidget_CDropTracking *) nil_chk(cfg->dropTracking_)) spot_valueWasSet]) {
    droppingAllowed_ = dropMode_ != RARESPOTWidget_CDropTracking_none;
  }
  if (draggingAllowed_) {
    [RAREaPlatformHelper configureDraggingWithRAREiWidget:self withRAREiPlatformComponent:comp];
  }
  if (draggingAllowed_ || pastingAllowed_ || droppingAllowed_ || copyingAllowed_) {
    [RAREaPlatformHelper configureDropTrackingWithRAREiWidget:self withRAREiPlatformComponent:comp withInt:dropMode_];
  }
  [self registerCutCopyPasteWithRAREiPlatformComponent:comp];
}

- (void)configureMenusWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp
                              withRARESPOTWidget:(RARESPOTWidget *)cfg
                                     withBoolean:(BOOL)textMenus {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)configureSizeWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                          withRARESPOTRectangle:(RARESPOTRectangle *)bounds {
  [self setPreferredSizeWithRAREiPlatformComponent:c withNSString:[((SPOTPrintableString *) nil_chk(((RARESPOTRectangle *) nil_chk(bounds))->width_)) getValue] withNSString:[((SPOTPrintableString *) nil_chk(bounds->height_)) getValue] withBoolean:NO];
  [self setMinimumSizeWithRAREiPlatformComponent:c withNSString:[bounds->width_ spot_getAttributeWithNSString:@"min"] withNSString:[bounds->height_ spot_getAttributeWithNSString:@"min"] withBoolean:NO];
}

- (RAREActionLink *)createActionLinkWithRARESPOTLink:(RARESPOTLink *)link {
  return [[RAREActionLink alloc] initWithRAREiWidget:self withRARESPOTLink:link];
}

- (void)createDataFlavorsWithRARESPOTWidget:(RARESPOTWidget *)cfg {
  SPOTSet *set = [((RARESPOTWidget *) nil_chk(cfg)) getImportDataFlavors];
  int len = (set == nil) ? 0 : [set getCount];
  if (len > 0) {
    importDataFlavors_ = [IOSObjectArray arrayWithLength:len type:[IOSClass classWithClass:[NSString class]]];
    for (int i = 0; i < len; i++) {
      (void) IOSObjectArray_Set(importDataFlavors_, i, [((SPOTSet *) nil_chk(set)) stringValueAtWithInt:i]);
      if ([((NSString *) IOSObjectArray_Get(importDataFlavors_, i)) isEqual:@"file"]) {
        fileDroppingAllowed_ = YES;
      }
      if ([((NSString *) IOSObjectArray_Get(importDataFlavors_, i)) isEqual:@"url"]) {
        urlDroppingAllowed_ = YES;
      }
    }
  }
  set = [cfg getExportDataFlavors];
  len = (set == nil) ? 0 : [set getCount];
  if (len > 0) {
    exportDataFlavors_ = [IOSObjectArray arrayWithLength:len type:[IOSClass classWithClass:[NSString class]]];
    NSString *s;
    int n;
    for (int i = 0; i < len; i++) {
      s = [((SPOTSet *) nil_chk(set)) stringValueAtWithInt:i];
      n = [((NSString *) nil_chk(s)) indexOf:'='];
      if (n == -1) {
        (void) IOSObjectArray_Set(exportDataFlavors_, i, s);
      }
      else {
        (void) IOSObjectArray_Set(exportDataFlavors_, i, [s substring:0 endIndex:n]);
        s = [s substring:n + 1];
        if ([((NSString *) nil_chk(s)) sequenceLength] > 0) {
          if (flavorFunctions_ == nil) {
            flavorFunctions_ = [[JavaUtilHashMap alloc] init];
          }
          (void) [((JavaUtilHashMap *) nil_chk(flavorFunctions_)) putWithId:IOSObjectArray_Get(exportDataFlavors_, i) withId:s];
        }
      }
    }
  }
}

- (id<JavaLangRunnable>)createDataLoadRunnableWithRAREActionLink:(RAREActionLink *)link
                                                     withBoolean:(BOOL)updateStatus {
  id<JavaLangRunnable> task = [[RAREaWidget_$7 alloc] initWithRAREaWidget:self withRAREActionLink:link withBoolean:updateStatus];
  return task;
}

- (id<RAREiWorkerTask>)createDataLoadTaskWithRAREActionLink:(RAREActionLink *)link
                                                withBoolean:(BOOL)updateStatus {
  id<RAREiWorkerTask> task = [[RAREaWidget_$8 alloc] initWithRAREaWidget:self withRAREActionLink:link withBoolean:updateStatus];
  [self startedLoading];
  return task;
}

- (RAREaWidgetListener *)createWidgetListenerWithRAREiWidget:(id<RAREiWidget>)widget
                                             withJavaUtilMap:(id<JavaUtilMap>)map
                                      withRAREiScriptHandler:(id<RAREiScriptHandler>)scriptHandler {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)errorOccuredWithRAREActionLink:(RAREActionLink *)link
                 withJavaLangThrowable:(JavaLangThrowable *)error
                           withBoolean:(BOOL)updateStatus {
  if (![RAREPlatform isUIThread]) {
    id<JavaLangRunnable> r = [[RAREaWidget_$9 alloc] initWithRAREaWidget:self withBoolean:updateStatus withRAREActionLink:link withJavaLangThrowable:error];
    [RAREPlatform invokeLaterWithJavaLangRunnable:r];
  }
  else {
    if (updateStatus) {
      [((id<RAREiAsyncLoadStatusHandler>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getAsyncLoadStatusHandler])) errorOccuredWithRAREiWidget:self withRAREActionLink:link withJavaLangThrowable:error];
    }
    [self handleExceptionWithJavaLangThrowable:error];
  }
}

- (void)expandStringExWithNSString:(NSString *)value
                       withBoolean:(BOOL)encode
                  withJavaIoWriter:(JavaIoWriter *)writer
                           withInt:(int)n {
  if (n == -1) {
    if (encode) {
      [RAREURLEncoder encodeWithNSString:value withNSString:@"ISO-8859-1" withJavaIoWriter:writer];
    }
    else {
      [((JavaIoWriter *) nil_chk(writer)) writeWithNSString:value];
    }
    return;
  }
  IOSCharArray *a = [((NSString *) nil_chk(value)) toCharArray];
  int len = (int) [((IOSCharArray *) nil_chk(a)) count];
  RAREUTCharScanner *sc = [self getScanner];
  [((RAREUTCharScanner *) nil_chk(sc)) resetWithCharArray:a withInt:0 withInt:len withBoolean:NO];
  NSString *s;
  id o;
  int p = 0;
  do {
    n = n - p;
    [((JavaIoWriter *) nil_chk(writer)) writeWithCharArray:a withInt:p withInt:n];
    [sc consumeWithInt:n + 1];
    p = [sc getPosition];
    n = [sc indexOfWithChar:'}' withBoolean:YES withBoolean:YES];
    if (n == -1) {
      break;
    }
    n = n - p;
    s = [sc getStringWithInt:p withInt:n];
    o = [self getAttributeWithNSString:s];
    [sc resetWithCharArray:a withInt:0 withInt:len withBoolean:NO];
    [sc consumeWithInt:p];
    if (o != nil) {
      s = [o description];
      if (encode) {
        @try {
          [RAREURLEncoder encodeWithNSString:s withNSString:@"ISO-8859-1" withJavaIoWriter:writer];
        }
        @catch (JavaIoIOException *e) {
          [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
        }
      }
      else {
        [writer writeWithNSString:s];
      }
    }
    [sc consumeWithInt:n + 1];
    p = [sc getPosition];
    n = [sc indexOfWithChar:'{' withBoolean:NO withBoolean:NO];
  }
  while (n != -1);
  n = [sc getLength];
  if (n > 0) {
    [((JavaIoWriter *) nil_chk(writer)) writeWithCharArray:a withInt:[sc getRelPosition] withInt:n];
  }
}

- (void)finishedLoadingEx {
  if ([self isDisposed]) {
    return;
  }
  RAREaWidgetListener *wl = [self getWidgetListener];
  if ((wl != nil) && [wl isEnabledWithNSString:[RAREiConstants EVENT_FINISHED_LOADING]]) {
    JavaUtilEventObject *e = [[JavaUtilEventObject alloc] initWithId:self];
    (void) [wl evaluateWithNSString:[RAREiConstants EVENT_FINISHED_LOADING] withJavaUtilEventObject:e withBoolean:NO];
  }
}

- (void)fireConfigureEventWithRARESPOTWidget:(RARESPOTWidget *)cfg
                                withNSString:(NSString *)event {
  if ([self isDesignMode]) {
    return;
  }
  if ([((NSString *) nil_chk(event)) isEqual:[RAREiConstants EVENT_CREATED]]) {
    NSString *code = [((RARESPOTWidget *) nil_chk(cfg)) spot_getAttributeWithNSString:@"onCreated"];
    if ((code != nil) && ([code sequenceLength] > 0)) {
      RAREDataEvent *e = [[RAREDataEvent alloc] initWithId:self withId:cfg];
      (void) [RAREaWidgetListener evaluateWithRAREiWidget:self withRAREiScriptHandler:[self getScriptHandler] withId:code withJavaUtilEventObject:e];
    }
  }
  else {
    RAREaWidgetListener *wl = [self getWidgetListener];
    if ((wl != nil) && [wl isEnabledWithNSString:event]) {
      RAREDataEvent *e = [[RAREDataEvent alloc] initWithId:self withId:cfg];
      (void) [wl evaluateWithNSString:event withJavaUtilEventObject:e withBoolean:NO];
    }
  }
}

- (void)fireEventExWithRAREaWidgetListener:(RAREaWidgetListener *)wl
                              withNSString:(NSString *)eventName
                   withJavaUtilEventObject:(JavaUtilEventObject *)event
                               withBoolean:(BOOL)inline_ {
  eventName = [self getEventNameWithNSString:eventName];
  if ((wl == nil) || (eventName == nil) || (event == nil)) {
    return;
  }
  if (inline_) {
    (void) [((RAREaWidgetListener *) nil_chk(wl)) evaluateWithNSString:eventName withJavaUtilEventObject:event withBoolean:NO];
  }
  else {
    [((RAREaWidgetListener *) nil_chk(wl)) executeWithNSString:eventName withJavaUtilEventObject:event];
  }
}

- (void)focusEventWithRAREFocusEvent:(RAREFocusEvent *)e {
}

- (void)handleCollectionExWithJavaUtilCollection:(id<JavaUtilCollection>)c
                                         withInt:(int)skip {
  if ([self isDesignMode]) {
    return;
  }
  if (c != nil) {
    id<JavaUtilIterator> it = [c iterator];
    while ((skip > 0) && [((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      (void) [((id<JavaUtilIterator>) nil_chk(it)) next];
      skip--;
    }
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      [self addParsedRowWithRARERenderableDataItem:[it next]];
    }
  }
}

- (void)handleCustomPropertiesWithRARESPOTWidget:(RARESPOTWidget *)cfg
                                 withJavaUtilMap:(id<JavaUtilMap>)properties {
  [RAREPlatform handlePlatformPropertiesWithRAREiWidget:self withRARESPOTWidget:cfg withJavaUtilMap:properties];
  if ([self getCustomProperties] == nil) {
    [self setCustomPropertiesWithJavaUtilMap:properties];
  }
  else {
    [((id<JavaUtilMap>) nil_chk([self getCustomProperties])) putAllWithJavaUtilMap:properties];
  }
}

- (void)handleDataURLWithRARESPOTWidget:(RARESPOTWidget *)cfg {
  if ((cfg == nil) || ([((SPOTPrintableString *) nil_chk(cfg->dataURL_)) getValue] == nil)) {
    return;
  }
  if (![RAREPlatform isUIThread]) {
    [self handleDataURLWithRARESPOTWidget:cfg withBoolean:NO];
    return;
  }
  BOOL deferred = YES;
  NSString *s = [((SPOTPrintableString *) nil_chk(((RARESPOTWidget *) nil_chk(cfg))->dataURL_)) spot_getAttributeWithNSString:@"deferred"];
  if (s != nil) {
    deferred = ![s equalsIgnoreCase:@"false"] || [RAREPlatform isUIThread];
  }
  else {
    s = [cfg->dataURL_ spot_getAttributeWithNSString:@"inline"];
    if ([@"true" isEqual:s]) {
      deferred = NO;
    }
  }
  [self handleDataURLWithRARESPOTWidget:cfg withBoolean:deferred];
}

- (void)handleDataURLWithRARESPOTWidget:(RARESPOTWidget *)cfg
                            withBoolean:(BOOL)deferred {
  if ([self isDesignMode] || (cfg == nil) || ([((SPOTPrintableString *) nil_chk(cfg->dataURL_)) getValue] == nil)) {
    [self finishedLoading];
    return;
  }
  sourceURL_ = nil;
  RAREActionLink *ref = [RAREActionLink getActionLinkWithRAREiWidget:self withSPOTPrintableString:((RARESPOTWidget *) nil_chk(cfg))->dataURL_ withInt:0];
  [self startedParsing];
  if (deferred) {
    [self loadStartedWithRAREActionLink:ref];
    (void) [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) executeWorkerTaskWithRAREiWorkerTask:[self createDataLoadTaskWithRAREActionLink:ref withBoolean:YES]];
  }
  else {
    [self handleActionLinkWithRAREActionLink:ref withBoolean:NO];
  }
}

+ (void)handleSelectionsWithRAREiListHandler:(id<RAREiListHandler>)comp
              withRAREaWidget_ItemAttributes:(RAREaWidget_ItemAttributes *)at {
  if (at == nil) {
    return;
  }
  int index;
  if (((RAREaWidget_ItemAttributes *) nil_chk(at))->select_ != nil) {
    index = [((id<RAREiListHandler>) nil_chk(comp)) indexOfWithId:at->select_];
    if (index != -1) {
      [comp setSelectedIndexWithInt:index];
    }
  }
  JavaUtilArrayList *list = at->selected_;
  int len = (list == nil) ? 0 : [list size];
  for (int i = 0; i < len; i++) {
    index = [((id<RAREiListHandler>) nil_chk(comp)) indexOfWithId:[((JavaUtilArrayList *) nil_chk(list)) getWithInt:i]];
    if (index != -1) {
      [comp setSelectedIndexWithInt:index];
    }
  }
}

- (BOOL)importDataExWithRAREiTransferable:(id<RAREiTransferable>)t
                  withRAREDropInformation:(RAREDropInformation *)drop {
  return NO;
}

- (BOOL)importURLWithJavaUtilList:(id<JavaUtilList>)urls
          withRAREDropInformation:(RAREDropInformation *)drop {
  NSString *val = nil;
  if ((urls != nil) && (![urls isEmpty])) {
    JavaNetURL *u = [urls getWithInt:0];
    val = [RAREJavaURLConnection toExternalFormWithJavaNetURL:u];
  }
  if (val != nil) {
    [self setValueWithId:val];
  }
  return val != nil;
}

- (void)initializeListenersWithRAREaWidgetListener:(RAREaWidgetListener *)listener {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)loadCompletedWithRAREActionLink:(RAREActionLink *)link {
  if (![RAREPlatform isUIThread]) {
    id<JavaLangRunnable> r = [[RAREaWidget_$10 alloc] initWithRAREaWidget:self withRAREActionLink:link];
    [RAREPlatform invokeLaterWithJavaLangRunnable:r];
  }
  else {
    [((id<RAREiAsyncLoadStatusHandler>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getAsyncLoadStatusHandler])) loadCompletedWithRAREiWidget:self withRAREActionLink:link];
  }
}

- (void)loadStartedWithRAREActionLink:(RAREActionLink *)link {
  [((id<RAREiAsyncLoadStatusHandler>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getAsyncLoadStatusHandler])) loadStartedWithRAREiWidget:self withRAREActionLink:link withRAREUTiCancelable:nil];
}

- (void)popupMenuClosingWithRAREUIPopupMenu:(RAREUIPopupMenu *)menu {
}

- (void)registerCutCopyPasteWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp {
  if (copyingAllowed_ || pastingAllowed_ || selectAllAllowed_ || deletingAllowed_) {
    [RAREActionHelper registerCutCopyPasteBindingsWithRAREiPlatformComponent:comp];
    [RAREActionHelper setCopyEnabledWithRAREiPlatformComponent:comp withBoolean:self->copyingAllowed_];
    [RAREActionHelper setCutEnabledWithRAREiPlatformComponent:comp withBoolean:self->deletingAllowed_];
    [RAREActionHelper setPasteEnabledWithRAREiPlatformComponent:comp withBoolean:self->pastingAllowed_];
    [RAREActionHelper setSelectAllEnabledWithRAREiPlatformComponent:comp withBoolean:self->selectAllAllowed_];
  }
}

- (void)registerWithWidgetWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component {
  [((id<RAREiPlatformComponent>) nil_chk(component)) setWidgetWithRAREiWidget:self];
}

- (void)uninitializeListenersWithRAREaWidgetListener:(RAREaWidgetListener *)listener {
}

- (void)updateEx {
  id<RAREiPlatformComponent> c = [self getContainerComponent];
  id<RAREiPlatformComponent> dc = [self getDataComponent];
  if ((dc == nil) || (c == nil)) {
    return;
  }
  [((id<RAREiPlatformComponent>) nil_chk(c)) revalidate];
  [c repaint];
}

- (void)setOverlayPainterWithRAREiPlatformPainter:(id<RAREiPlatformPainter>)painter
                                      withBoolean:(BOOL)background {
  id<RAREiPainterSupport> ps = [self getPainterSupportWithBoolean:background];
  if (ps != nil) {
    id<RAREiPlatformComponentPainter> cp = [ps getComponentPainter];
    if (cp == nil) {
      cp = [[RAREUIComponentPainter alloc] init];
      [ps setComponentPainterWithRAREiPlatformComponentPainter:cp];
    }
    if (background) {
      [((id<RAREiPlatformComponentPainter>) nil_chk(cp)) setBackgroundOverlayPainterWithRAREiPlatformPainter:painter];
    }
    else {
      [((id<RAREiPlatformComponentPainter>) nil_chk(cp)) setOverlayPainterWithRAREiPlatformPainter:painter];
    }
    [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) repaint];
  }
}

- (id)getAttributeExWithChar:(unichar)firstChar
                withNSString:(NSString *)key {
  if (firstChar == '/') {
    int n = [((NSString *) nil_chk(key)) indexOf:'/' fromIndex:1];
    if (n != -1) {
      id<RAREiViewer> v = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getViewerWithNSString:[key substring:1 endIndex:n]];
      if (v != nil) {
        return [v getAttributeWithNSString:[key substring:n + 1]];
      }
    }
  }
  int n = [((NSString *) nil_chk(key)) indexOf:'/' fromIndex:1];
  if (n != -1) {
    id<RAREiViewer> v = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getViewerWithNSString:[key substring:0 endIndex:n]];
    if (v != nil) {
      return [v getAttributeWithNSString:[key substring:n + 1]];
    }
  }
  return nil;
}

- (id<RAREiPlatformComponentPainter>)getComponentPainterWithBoolean:(BOOL)create
                                                        withBoolean:(BOOL)outer {
  id<RAREiPainterSupport> ps = [self getPainterSupportWithBoolean:outer];
  if (ps != nil) {
    id<RAREiPlatformComponentPainter> cp = [ps getComponentPainter];
    if ((cp == nil) && create) {
      cp = [[RAREUIComponentPainter alloc] init];
      [ps setComponentPainterWithRAREiPlatformComponentPainter:cp];
    }
    return cp;
  }
  return nil;
}

- (int)getDefaultTitleLocation {
  if ([self isViewer]) {
    return RARESPOTWidget_CTitleLocation_not_displayed;
  }
  else {
    return RARESPOTWidget_CTitleLocation_center_left;
  }
}

- (id)getDropTargetWithRAREDropInformation:(RAREDropInformation *)drop {
  return nil;
}

- (NSString *)getEventNameWithNSString:(NSString *)event {
  if ([((NSString *) nil_chk(event)) indexOf:'.'] == -1) {
    NSString *s = [RAREaWidgetListener fromWebEventWithNSString:event];
    if (s != nil) {
      event = s;
    }
    event = [NSString stringWithFormat:@"%@%@", [RAREiConstants EVENT_PREFIX], event];
  }
  return event;
}

- (RAREUIImageIcon *)getImageIconExWithSPOTPrintableString:(SPOTPrintableString *)image
                                               withBoolean:(BOOL)forIcon {
  NSString *href = [((SPOTPrintableString *) nil_chk(image)) getValue];
  if (href == nil) {
    return nil;
  }
  NSString *s = [image spot_getAttributeWithNSString:@"slice"];
  if (s != nil) {
    href = [NSString stringWithFormat:@"%@%@", href, [NSString stringWithFormat:@"[%@]", s]];
  }
  s = [image spot_getAttributeWithNSString:@"size"];
  RAREUIDimension *size = nil;
  if ((s != nil) && ([s sequenceLength] > 0)) {
    size = [RAREUtils getSizeWithNSString:[s trim]];
  }
  BOOL defer = YES;
  if ([@"true" equalsIgnoreCase:[image spot_getAttributeWithNSString:@"waitForLoad"]]) {
    defer = NO;
  }
  if ([@"false" equalsIgnoreCase:[image spot_getAttributeWithNSString:@"deferred"]]) {
    defer = NO;
  }
  float density = 0;
  s = [image spot_getAttributeWithNSString:@"density"];
  if (s != nil) {
    density = [RAREUTSNumber floatValueWithNSString:s];
  }
  if (density == 0) {
    density = forIcon ? [RAREaPlatformHelper getScaledImageDensity] : [RAREaPlatformHelper getUnscaledImageDensity];
  }
  RAREiImagePainter_ScalingTypeEnum *st = nil;
  s = [image spot_getAttributeWithNSString:@"scaling"];
  if (s != nil) {
    @try {
      st = [RAREiImagePainter_ScalingTypeEnum valueOfWithNSString:[s uppercaseStringWithJRELocale:[JavaUtilLocale US]]];
    }
    @catch (JavaLangException *e) {
      [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
    }
  }
  if ((size == nil) && (st == nil) && [((NSString *) nil_chk(href)) hasPrefix:[RAREiConstants RESOURCE_PREFIX]]) {
    RAREUIImageIcon *ic = (RAREUIImageIcon *) check_class_cast([RAREPlatform getResourceAsIconWithNSString:[href substring:[RAREiConstants RESOURCE_PREFIX_LENGTH]]], [RAREUIImageIcon class]);
    return (ic == nil) ? [[RAREUIImageIcon alloc] initWithRAREUIImage:[RAREaUIImageIcon getBrokenImage]] : ic;
  }
  RAREUIImage *img = [self getImageWithNSString:href withBoolean:defer withRAREUIDimension:size withRAREiImagePainter_ScalingTypeEnum:st withFloat:density];
  return [[RAREUIImageIcon alloc] initWithRAREUIImage:(img == nil) ? [RAREaUIImageIcon getBrokenImage] : img];
}

- (id<RAREiPainterSupport>)getPainterSupportWithBoolean:(BOOL)background {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (RAREUTCharScanner *)getScanner {
  return [((JavaLangThreadLocal *) nil_chk(RAREaWidget_perThreadScanner_)) get];
}

- (id)getTransferDataExWithRARETransferFlavor:(RARETransferFlavor *)flavor
                        withRAREiTransferable:(id<RAREiTransferable>)transferable {
  if ([((RARETransferFlavor *) nil_chk([RARETransferFlavor stringFlavor])) isEqual:flavor]) {
    return [self getSelectionAsString];
  }
  else if ([((RARETransferFlavor *) nil_chk([RARETransferFlavor widgetFlavor])) isEqual:flavor]) {
    return self;
  }
  else if ([((RARETransferFlavor *) nil_chk([RARETransferFlavor itemFlavor])) isEqual:flavor]) {
    return [self getSelection];
  }
  return nil;
}

- (id<RAREiPlatformComponent>)getUIComponent {
  id<RAREiPlatformComponent> c = [self getDataComponent];
  if (c == nil) {
    c = [self getContainerComponent];
  }
  if (c == nil) {
    id<RAREiContainer> v = [self getParent];
    if (v != nil) {
      if ([(id) v isKindOfClass:[RAREaPlatformWidget class]]) {
        return [((RAREaPlatformWidget *) check_class_cast(v, [RAREaPlatformWidget class])) getUIComponent];
      }
      c = [v getDataComponent];
    }
  }
  return (c == nil) ? [((RAREWindowViewer *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowViewer])) getDataComponent] : c;
}

- (NSString *)getWidgetAttributeWithNSString:(NSString *)name {
  if ([((NSString *) nil_chk(name)) isEqual:[RAREiConstants WIDGET_ATT_SELECTION_DATA]]) {
    return [self getSelectionDataAsString];
  }
  if ([name isEqual:[RAREiConstants WIDGET_ATT_SELECTION_VALUE]]) {
    return [self getSelectionAsString];
  }
  if ([name isEqual:[RAREiConstants WIDGET_ATT_DATA]]) {
    return [self getLinkedDataAsString];
  }
  if ([name isEqual:[RAREiConstants WIDGET_ATT_VALUE]]) {
    return [self getValueAsString];
  }
  if ([name isEqual:[RAREiConstants WIDGET_ATT_SUBMIT_VALUE]]) {
    id value = [self getHTTPFormValue];
    if ([value isKindOfClass:[NSString class]]) {
      return (NSString *) check_class_cast(value, [NSString class]);
    }
    else if ([value isKindOfClass:[IOSIntArray class]]) {
      return [RAREUTHelper toStringWithIntArray:(IOSIntArray *) check_class_cast(value, [IOSIntArray class]) withBoolean:NO];
    }
    else if ([[IOSObjectArray iosClassWithType:[IOSClass classWithClass:[NSString class]]] isInstance:value]) {
      return [RAREUTHelper toStringWithNSObjectArray:(IOSObjectArray *) check_class_cast(value, [IOSObjectArray class]) withNSString:@","];
    }
    else {
      return @"";
    }
  }
  if ([name isEqual:[RAREiConstants WIDGET_ATT_TITLE]]) {
    return widgetTitle_;
  }
  if ([name isEqual:[RAREiConstants WIDGET_ATT_NAME]]) {
    return widgetName_;
  }
  if ([name isEqual:[RAREiConstants WIDGET_ATT_NAME]]) {
    return widgetName_;
  }
  if ([name isEqual:[RAREiConstants APPLICATION_DOC_SERVERBASE]]) {
    NSString *s = [RAREFunctions documentServerBase];
    return (s == nil) ? @"" : s;
  }
  JavaNetURL *url = nil;
  do {
    if ([name isEqual:[RAREiConstants WIDGET_CONTEXTURL]]) {
      url = [((id<RAREiViewer>) nil_chk([self getViewer])) getContextURL];
      break;
    }
    if ([name isEqual:[RAREiConstants WIDGET_BASEURL]]) {
      url = [((id<RAREiViewer>) nil_chk([self getViewer])) getBaseURL];
      break;
    }
    if ([name isEqual:[RAREiConstants APPLICATION_SERVERBASE]]) {
      url = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getApplicationURL];
      if ((url == nil) || ![((NSString *) nil_chk([url getProtocol])) hasPrefix:@"http"]) {
        url = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getDocumentBase];
      }
      if (url == nil) {
        url = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getApplicationURL];
      }
      break;
    }
    if ([name isEqual:[RAREiConstants APPLICATION_CODEBASE]]) {
      url = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getCodeBase];
      break;
    }
    if ([name isEqual:[RAREiConstants APPLICATION_DOCBASE]]) {
      url = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getDocumentBase];
      break;
    }
    if ([name isEqual:[RAREiConstants APPLICATION_URL]]) {
      url = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getApplicationURL];
      break;
    }
  }
  while (NO);
  return (url == nil) ? @"" : [RAREJavaURLConnection toExternalFormWithJavaNetURL:url];
}

- (BOOL)isDropEventEnabled {
  return (([self getWidgetListener] != nil) && [((RAREaWidgetListener *) nil_chk([self getWidgetListener])) isEnabledWithNSString:[RAREiConstants EVENT_DROP]]);
}

- (id<RAREiPlatformPainter>)getOverlayPainterWithBoolean:(BOOL)background {
  id<RAREiPlatformComponentPainter> cp = [self getComponentPainterWithBoolean:YES withBoolean:background];
  if (cp == nil) {
    return nil;
  }
  return background ? [((id<RAREiPlatformComponentPainter>) nil_chk(cp)) getBackgroundOverlayPainter] : [((id<RAREiPlatformComponentPainter>) nil_chk(cp)) getOverlayPainter];
}

- (RAREUIImage *)capture {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)getHasPainterSupport {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)handleKeyboardActionsWithRAREKeyEvent:(RAREKeyEvent *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)hidePopupContainer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (BOOL)isFocusOwner {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isInPopup {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)requestFocus {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (void)initialize {
  if (self == [RAREaWidget class]) {
    RAREaWidget_perThreadScanner_ = [[RAREaWidget_$1 alloc] init];
    RAREaWidget_perThreadParser_ = [[RAREaWidget_$2 alloc] init];
  }
}

- (void)copyAllFieldsTo:(RAREaWidget *)other {
  [super copyAllFieldsTo:other];
  other->activeLink_ = activeLink_;
  other->allowContainerToDisable_ = allowContainerToDisable_;
  other->columnCount_ = columnCount_;
  other->copyingAllowed_ = copyingAllowed_;
  other->dataComponent_ = dataComponent_;
  other->deletingAllowed_ = deletingAllowed_;
  other->disposed_ = disposed_;
  other->dropMode_ = dropMode_;
  other->droppingAllowed_ = droppingAllowed_;
  other->explicitItemImport_ = explicitItemImport_;
  other->fileDroppingAllowed_ = fileDroppingAllowed_;
  other->flavorFunctions_ = flavorFunctions_;
  other->formComponent_ = formComponent_;
  other->inExceptionHandler_ = inExceptionHandler_;
  other->isSubmittable__ = isSubmittable__;
  other->itemAttributes_ = itemAttributes_;
  other->menuSet_ = menuSet_;
  other->parentContainer_ = parentContainer_;
  other->pastingAllowed_ = pastingAllowed_;
  other->popupContainer_ = popupContainer_;
  other->popupMenu_ = popupMenu_;
  other->promptWidth_ = promptWidth_;
  other->required_ = required_;
  other->scriptingContex_ = scriptingContex_;
  other->selectAllAllowed_ = selectAllAllowed_;
  other->showDefaultMenu_ = showDefaultMenu_;
  other->sourceURL_ = sourceURL_;
  other->titleLabel_ = titleLabel_;
  other->urlDroppingAllowed_ = urlDroppingAllowed_;
  other->widgetDataLink_ = widgetDataLink_;
  other->widgetListener_ = widgetListener_;
  other->widgetName_ = widgetName_;
  other->widgetTitle_ = widgetTitle_;
  other->widgetType_ = widgetType_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithRAREiContainer:", NULL, NULL, 0x4, NULL },
    { "addToDataMapWithNSString:withChar:", NULL, "V", 0x1, "JavaTextParseException" },
    { "buzz", NULL, "V", 0x401, NULL },
    { "canCopy", NULL, "Z", 0x1, NULL },
    { "canCut", NULL, "Z", 0x1, NULL },
    { "canDelete", NULL, "Z", 0x1, NULL },
    { "canDragWithRAREDragEvent:", NULL, "Z", 0x1, NULL },
    { "canDrop", NULL, "Z", 0x1, NULL },
    { "canExportWithRARETransferFlavor:", NULL, "Z", 0x1, NULL },
    { "canImportWithRARETransferFlavorArray:withRAREDropInformation:", NULL, "Z", 0x1, NULL },
    { "canMove", NULL, "Z", 0x1, NULL },
    { "canPaste", NULL, "Z", 0x1, NULL },
    { "canRedo", NULL, "Z", 0x1, NULL },
    { "canSelectAll", NULL, "Z", 0x1, NULL },
    { "canUndo", NULL, "Z", 0x1, NULL },
    { "canUndoOrRedo", NULL, "Z", 0x1, NULL },
    { "configureWithRARESPOTWidget:", NULL, "V", 0x401, NULL },
    { "createColumnWithRARESPOTItemDescription:", NULL, "LRAREColumn", 0x1, NULL },
    { "createColumnWithNSString:", NULL, "LRAREColumn", 0x1, NULL },
    { "createColumnWithNSString:withId:withInt:withId:withRAREiPlatformIcon:", NULL, "LRAREColumn", 0x1, NULL },
    { "createItemWithId:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "createItemWithId:withId:withId:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "createItemWithId:withInt:withId:withId:withId:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "createItemArrayWithInt:", NULL, "LIOSObjectArray", 0x1, NULL },
    { "createItemExWithRARESPOTDataItem:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "createItemListWithInt:", NULL, "LJavaUtilList", 0x1, NULL },
    { "createOptionMapWithNSString:withChar:", NULL, "LJavaUtilMap", 0x1, "JavaTextParseException" },
    { "createRowWithInt:withBoolean:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "removeSelectedDataWithBoolean:", NULL, "LNSObject", 0x1, NULL },
    { "evaluateCodeWithId:", NULL, "LNSObject", 0x1, NULL },
    { "expandStringWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "expandStringWithNSString:withBoolean:", NULL, "LNSString", 0x1, NULL },
    { "focusNextWidget", NULL, "V", 0x401, NULL },
    { "focusPreviousWidget", NULL, "V", 0x401, NULL },
    { "handleDataURLWithNSString:withBoolean:", NULL, "LRAREiCancelableFuture", 0x1, NULL },
    { "importDataWithRAREiTransferable:withRAREDropInformation:", NULL, "Z", 0x1, NULL },
    { "parseColumnWithNSString:withChar:", NULL, "LRAREColumn", 0x1, "JavaIoIOException" },
    { "parseDataItemWithNSString:", NULL, "LRARERenderableDataItem", 0x1, "JavaIoIOException" },
    { "parseDataItemWithNSString:withChar:", NULL, "LRARERenderableDataItem", 0x1, "JavaIoIOException" },
    { "parseDataLinkWithRAREActionLink:withBoolean:", NULL, "LJavaUtilList", 0x1, "JavaLangException" },
    { "parseDataLinkWithRAREActionLink:withBoolean:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, NULL },
    { "parseDataURLWithNSString:withBoolean:", NULL, "LJavaUtilList", 0x1, "JavaLangException" },
    { "parseDataURLWithNSString:withChar:", NULL, "LJavaUtilList", 0x1, "JavaLangException" },
    { "parseDataURLWithNSString:withBoolean:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, NULL },
    { "parseDataURLWithNSString:withChar:withChar:", NULL, "LJavaUtilList", 0x1, "JavaLangException" },
    { "parseDataURLWithNSString:withChar:withChar:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, NULL },
    { "populateItemWithRAREiWidget:withRARESPOTDataItem:withRARERenderableDataItem:", NULL, "LRARERenderableDataItem", 0x9, NULL },
    { "putAttributeWithNSString:withId:", NULL, "LNSObject", 0x1, NULL },
    { "registerKeystrokeWithNSString:withId:withInt:", NULL, "Z", 0x1, NULL },
    { "removeWithId:", NULL, "Z", 0x1, NULL },
    { "removeAttributeWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "removeEventHandlerWithNSString:withId:", NULL, "LNSObject", 0x1, NULL },
    { "showPopupMenuWithInt:withInt:", NULL, "V", 0x401, NULL },
    { "toJSON", NULL, "LNSString", 0x1, NULL },
    { "writeHTTPValueWithBoolean:withJavaIoWriter:", NULL, "Z", 0x1, NULL },
    { "writeJSONValueWithBoolean:withJavaIoWriter:", NULL, "Z", 0x1, NULL },
    { "setDataLinkWithRAREActionLink:withBoolean:", NULL, "LRAREiCancelableFuture", 0x1, NULL },
    { "setDataURLWithNSString:withBoolean:", NULL, "LRAREiCancelableFuture", 0x1, NULL },
    { "setMinimumSizeWithRAREiPlatformComponent:withNSString:withNSString:withBoolean:", NULL, "V", 0x4, NULL },
    { "setPreferredSizeWithRAREiPlatformComponent:withNSString:withNSString:withBoolean:", NULL, "V", 0x4, NULL },
    { "getAppContext", NULL, "LRAREiPlatformAppContext", 0x1, NULL },
    { "getApplicationContext", NULL, "LNSObject", 0x1, NULL },
    { "getAttributeWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getBackground", NULL, "LRAREUIColor", 0x1, NULL },
    { "getBackgroundColorWithNSString:", NULL, "LRAREUIColor", 0x1, NULL },
    { "getBackgroundOverlayPainter", NULL, "LRAREiPlatformPainter", 0x1, NULL },
    { "getBackgroundPainter", NULL, "LRAREiBackgroundPainter", 0x1, NULL },
    { "getBaseURL", NULL, "LJavaNetURL", 0x1, NULL },
    { "getBorder", NULL, "LRAREiPlatformBorder", 0x1, NULL },
    { "getColorWithNSString:", NULL, "LRAREUIColor", 0x1, NULL },
    { "getComponentPainter", NULL, "LRAREiPlatformComponentPainter", 0x1, NULL },
    { "getConnectionWithNSString:", NULL, "LJavaNetURLConnection", 0x1, "JavaIoIOException" },
    { "getContainerComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getContainerViewer", NULL, "LRAREiContainer", 0x1, NULL },
    { "getDataComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getDataURL", NULL, "LJavaNetURL", 0x1, NULL },
    { "getDisabledIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getDragIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getEventHandlerWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getFont", NULL, "LRAREUIFont", 0x1, NULL },
    { "getFontWithRARESPOTFont:", NULL, "LRAREUIFont", 0x1, NULL },
    { "getFontWithNSString:withInt:withNSString:withBoolean:", NULL, "LRAREUIFont", 0x1, NULL },
    { "getForeground", NULL, "LRAREUIColor", 0x1, NULL },
    { "getForm", NULL, "LRAREiFormViewer", 0x1, NULL },
    { "getFormViewer", NULL, "LRAREiFormViewer", 0x1, NULL },
    { "getHTTPFormName", NULL, "LNSString", 0x1, NULL },
    { "getHTTPFormValue", NULL, "LNSObject", 0x1, NULL },
    { "getIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getIconWithSPOTPrintableString:", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getIconWithNSString:", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getIconWithNSString:withNSString:", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getIconWithJavaNetURL:withNSString:", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getIconWithNSString:withNSString:withFloat:", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getIconWithJavaNetURL:withNSString:withFloat:", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getIconWithNSString:withNSString:withRAREUIDimension:withFloat:", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getIconWithJavaNetURL:withNSString:withRAREUIDimension:withFloat:", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getImageWithSPOTPrintableString:", NULL, "LRAREUIImage", 0x1, NULL },
    { "getImageWithNSString:", NULL, "LRAREUIImage", 0x1, NULL },
    { "getImageWithJavaNetURL:", NULL, "LRAREUIImage", 0x1, NULL },
    { "getImageWithNSString:withBoolean:withRAREUIDimension:withRAREiImagePainter_ScalingTypeEnum:withFloat:", NULL, "LRAREUIImage", 0x1, NULL },
    { "getImageWithJavaNetURL:withBoolean:withRAREUIDimension:withRAREiImagePainter_ScalingTypeEnum:withFloat:", NULL, "LRAREUIImage", 0x1, NULL },
    { "getInnerHTML", NULL, "LNSString", 0x1, NULL },
    { "getInnerText", NULL, "LNSString", 0x1, NULL },
    { "getKeystrokeActionWithNSString:", NULL, "LRAREUIAction", 0x1, NULL },
    { "getLinkedDataAsString", NULL, "LNSString", 0x1, NULL },
    { "getLocationInParent", NULL, "LRAREUIPoint", 0x1, NULL },
    { "getLocationOnScreen", NULL, "LRAREUIPoint", 0x1, NULL },
    { "getName", NULL, "LNSString", 0x1, NULL },
    { "getOffsetParent", NULL, "LRAREiContainer", 0x1, NULL },
    { "getOverlayLocationWithBoolean:", NULL, "LRAREUIPoint", 0x1, NULL },
    { "getOverlayPainter", NULL, "LRAREiPlatformPainter", 0x1, NULL },
    { "getParent", NULL, "LRAREiContainer", 0x1, NULL },
    { "getParentElement", NULL, "LRAREiContainer", 0x1, NULL },
    { "getPathName", NULL, "LNSString", 0x1, NULL },
    { "getPopupLocation", NULL, "LRAREUIPoint", 0x1, NULL },
    { "getPopupMenu", NULL, "LRAREUIPopupMenu", 0x1, NULL },
    { "getPreferredSize", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getPreferredSizeWithInt:", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getReaderWithNSString:", NULL, "LJavaIoReader", 0x1, "JavaIoIOException" },
    { "getRenderingComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getScriptHandler", NULL, "LRAREiScriptHandler", 0x1, NULL },
    { "getScriptingContext", NULL, "LRAREWidgetContext", 0x1, NULL },
    { "getSelection", NULL, "LNSObject", 0x401, NULL },
    { "getSelectionAsString", NULL, "LNSString", 0x1, NULL },
    { "getSelectionData", NULL, "LNSObject", 0x1, NULL },
    { "getSelectionDataAsString", NULL, "LNSString", 0x1, NULL },
    { "getSize", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getStreamWithNSString:", NULL, "LJavaIoInputStream", 0x1, "JavaIoIOException" },
    { "getTabDocument", NULL, "LRAREiTabDocument", 0x1, NULL },
    { "getTabPaneViewer", NULL, "LRAREiTabPaneViewer", 0x1, NULL },
    { "getTextDirection", NULL, "LNSString", 0x1, NULL },
    { "getTitle", NULL, "LNSString", 0x1, NULL },
    { "getTitleLabel", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getTransferDataWithRARETransferFlavor:withRAREiTransferable:", NULL, "LNSObject", 0x1, NULL },
    { "getUIWindow", NULL, "LNSObject", 0x1, NULL },
    { "getURLWithNSString:", NULL, "LJavaNetURL", 0x1, "JavaNetMalformedURLException" },
    { "getURLResolver", NULL, "LRAREUTiURLResolver", 0x1, NULL },
    { "getURLTextWithNSString:withNSString:", NULL, "LNSString", 0x1, NULL },
    { "getValue", NULL, "LNSObject", 0x1, NULL },
    { "getValueAsString", NULL, "LNSString", 0x1, NULL },
    { "getViewer", NULL, "LRAREiViewer", 0x1, NULL },
    { "getWidgetForComponentWithRAREiPlatformComponent:", NULL, "LRAREiWidget", 0x9, NULL },
    { "getWidgetListener", NULL, "LRAREaWidgetListener", 0x1, NULL },
    { "getWidgetType", NULL, "LRAREiWidget_WidgetTypeEnum", 0x1, NULL },
    { "getWindow", NULL, "LRAREWindowViewer", 0x1, NULL },
    { "hasPopupMenu", NULL, "Z", 0x1, NULL },
    { "hasSelection", NULL, "Z", 0x1, NULL },
    { "hasValue", NULL, "Z", 0x1, NULL },
    { "isAllowContainerToDisable", NULL, "Z", 0x1, NULL },
    { "isDesignMode", NULL, "Z", 0x1, NULL },
    { "isDisposed", NULL, "Z", 0x1, NULL },
    { "isEnabled", NULL, "Z", 0x1, NULL },
    { "isEventEnabledWithNSString:", NULL, "Z", 0x1, NULL },
    { "isFocusPainted", NULL, "Z", 0x1, NULL },
    { "isFocusableInCurrentState", NULL, "Z", 0x1, NULL },
    { "isMultipartContent", NULL, "Z", 0x1, NULL },
    { "isRequired", NULL, "Z", 0x1, NULL },
    { "isSelectable", NULL, "Z", 0x1, NULL },
    { "isSelected", NULL, "Z", 0x1, NULL },
    { "isShowing", NULL, "Z", 0x1, NULL },
    { "isSizeLocked", NULL, "Z", 0x1, NULL },
    { "isSubmittable", NULL, "Z", 0x1, NULL },
    { "isTextDirectionSet", NULL, "Z", 0x1, NULL },
    { "isTypeWithNSString:", NULL, "Z", 0x1, NULL },
    { "isValidForSubmissionWithBoolean:", NULL, "Z", 0x1, NULL },
    { "isViewer", NULL, "Z", 0x1, NULL },
    { "isVisible", NULL, "Z", 0x1, NULL },
    { "addExpandedWithRARERenderableDataItem:", NULL, "V", 0x4, NULL },
    { "addSelectedWithRARERenderableDataItem:", NULL, "V", 0x4, NULL },
    { "configureWithRARESPOTWidget:withBoolean:withBoolean:withBoolean:withBoolean:", NULL, "V", 0x4, NULL },
    { "configureActionsWithRAREiPlatformComponent:withSPOTSet:", NULL, "V", 0x4, NULL },
    { "configureGenericDnDWithRAREiPlatformComponent:withRARESPOTWidget:", NULL, "V", 0x4, NULL },
    { "configureMenusWithRAREiPlatformComponent:withRARESPOTWidget:withBoolean:", NULL, "V", 0x404, NULL },
    { "configureSizeWithRAREiPlatformComponent:withRARESPOTRectangle:", NULL, "V", 0x4, NULL },
    { "createActionLinkWithRARESPOTLink:", NULL, "LRAREActionLink", 0x4, NULL },
    { "createDataFlavorsWithRARESPOTWidget:", NULL, "V", 0x4, NULL },
    { "createDataLoadRunnableWithRAREActionLink:withBoolean:", NULL, "LJavaLangRunnable", 0x4, NULL },
    { "createDataLoadTaskWithRAREActionLink:withBoolean:", NULL, "LRAREiWorkerTask", 0x4, NULL },
    { "createWidgetListenerWithRAREiWidget:withJavaUtilMap:withRAREiScriptHandler:", NULL, "LRAREaWidgetListener", 0x404, NULL },
    { "errorOccuredWithRAREActionLink:withJavaLangThrowable:withBoolean:", NULL, "V", 0x4, NULL },
    { "expandStringExWithNSString:withBoolean:withJavaIoWriter:withInt:", NULL, "V", 0x4, "JavaIoIOException" },
    { "finishedLoadingEx", NULL, "V", 0x4, NULL },
    { "fireConfigureEventWithRARESPOTWidget:withNSString:", NULL, "V", 0x4, NULL },
    { "fireEventExWithRAREaWidgetListener:withNSString:withJavaUtilEventObject:withBoolean:", NULL, "V", 0x4, NULL },
    { "focusEventWithRAREFocusEvent:", NULL, "V", 0x4, NULL },
    { "handleCollectionExWithJavaUtilCollection:withInt:", NULL, "V", 0x4, NULL },
    { "handleCustomPropertiesWithRARESPOTWidget:withJavaUtilMap:", NULL, "V", 0x4, NULL },
    { "handleDataURLWithRARESPOTWidget:", NULL, "V", 0x4, NULL },
    { "handleDataURLWithRARESPOTWidget:withBoolean:", NULL, "V", 0x4, NULL },
    { "handleSelectionsWithRAREiListHandler:withRAREaWidget_ItemAttributes:", NULL, "V", 0xc, NULL },
    { "importDataExWithRAREiTransferable:withRAREDropInformation:", NULL, "Z", 0x4, NULL },
    { "importURLWithJavaUtilList:withRAREDropInformation:", NULL, "Z", 0x4, NULL },
    { "initializeListenersWithRAREaWidgetListener:", NULL, "V", 0x404, NULL },
    { "loadCompletedWithRAREActionLink:", NULL, "V", 0x4, NULL },
    { "loadStartedWithRAREActionLink:", NULL, "V", 0x4, NULL },
    { "popupMenuClosingWithRAREUIPopupMenu:", NULL, "V", 0x4, NULL },
    { "registerCutCopyPasteWithRAREiPlatformComponent:", NULL, "V", 0x4, NULL },
    { "registerWithWidgetWithRAREiPlatformComponent:", NULL, "V", 0x4, NULL },
    { "uninitializeListenersWithRAREaWidgetListener:", NULL, "V", 0x4, NULL },
    { "updateEx", NULL, "V", 0x4, NULL },
    { "setOverlayPainterWithRAREiPlatformPainter:withBoolean:", NULL, "V", 0x4, NULL },
    { "getAttributeExWithChar:withNSString:", NULL, "LNSObject", 0x4, NULL },
    { "getComponentPainterWithBoolean:withBoolean:", NULL, "LRAREiPlatformComponentPainter", 0x4, NULL },
    { "getDefaultTitleLocation", NULL, "I", 0x4, NULL },
    { "getDropTargetWithRAREDropInformation:", NULL, "LNSObject", 0x4, NULL },
    { "getEventNameWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "getImageIconExWithSPOTPrintableString:withBoolean:", NULL, "LRAREUIImageIcon", 0x4, NULL },
    { "getPainterSupportWithBoolean:", NULL, "LRAREiPainterSupport", 0x404, NULL },
    { "getScanner", NULL, "LRAREUTCharScanner", 0x14, NULL },
    { "getTransferDataExWithRARETransferFlavor:withRAREiTransferable:", NULL, "LNSObject", 0x4, NULL },
    { "getUIComponent", NULL, "LRAREiPlatformComponent", 0x4, NULL },
    { "getWidgetAttributeWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "isDropEventEnabled", NULL, "Z", 0x4, NULL },
    { "getOverlayPainterWithBoolean:", NULL, "LRAREiPlatformPainter", 0x2, NULL },
    { "capture", NULL, "LRAREUIImage", 0x401, NULL },
    { "getHasPainterSupport", NULL, "Z", 0x401, NULL },
    { "handleKeyboardActionsWithRAREKeyEvent:", NULL, "V", 0x401, NULL },
    { "hidePopupContainer", NULL, "V", 0x401, NULL },
    { "isFocusOwner", NULL, "Z", 0x401, NULL },
    { "isInPopup", NULL, "Z", 0x401, NULL },
    { "requestFocus", NULL, "Z", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "perThreadScanner_", NULL, 0xc, "LJavaLangThreadLocal" },
    { "perThreadParser_", NULL, 0xc, "LJavaLangThreadLocal" },
    { "columnCount_", NULL, 0x4, "I" },
    { "copyingAllowed_", NULL, 0x4, "Z" },
    { "isSubmittable__", "isSubmittable", 0x4, "Z" },
    { "widgetType_", NULL, 0x4, "LRAREiWidget_WidgetTypeEnum" },
    { "allowContainerToDisable_", NULL, 0x4, "Z" },
    { "activeLink_", NULL, 0x4, "LRAREActionLink" },
    { "dataComponent_", NULL, 0x4, "LRAREiPlatformComponent" },
    { "deletingAllowed_", NULL, 0x4, "Z" },
    { "disposed_", NULL, 0x4, "Z" },
    { "dropMode_", NULL, 0x4, "I" },
    { "droppingAllowed_", NULL, 0x4, "Z" },
    { "explicitItemImport_", NULL, 0x4, "Z" },
    { "fileDroppingAllowed_", NULL, 0x4, "Z" },
    { "flavorFunctions_", NULL, 0x4, "LJavaUtilHashMap" },
    { "formComponent_", NULL, 0x4, "LRAREiPlatformComponent" },
    { "inExceptionHandler_", NULL, 0x4, "Z" },
    { "itemAttributes_", NULL, 0x4, "LRAREaWidget_ItemAttributes" },
    { "menuSet_", NULL, 0x4, "LSPOTSet" },
    { "parentContainer_", NULL, 0x4, "LRAREiContainer" },
    { "pastingAllowed_", NULL, 0x4, "Z" },
    { "popupContainer_", NULL, 0x4, "LRAREiPopup" },
    { "popupMenu_", NULL, 0x4, "LRAREUIPopupMenu" },
    { "promptWidth_", NULL, 0x4, "I" },
    { "required_", NULL, 0x4, "Z" },
    { "scriptingContex_", NULL, 0x4, "LRAREWidgetContext" },
    { "selectAllAllowed_", NULL, 0x4, "Z" },
    { "showDefaultMenu_", NULL, 0x4, "Z" },
    { "sourceURL_", NULL, 0x4, "LJavaNetURL" },
    { "titleLabel_", NULL, 0x4, "LRAREiActionComponent" },
    { "urlDroppingAllowed_", NULL, 0x4, "Z" },
    { "widgetDataLink_", NULL, 0x4, "LRAREActionLink" },
    { "widgetListener_", NULL, 0x4, "LRAREaWidgetListener" },
    { "widgetName_", NULL, 0x4, "LNSString" },
    { "widgetTitle_", NULL, 0x4, "LNSString" },
  };
  static J2ObjcClassInfo _RAREaWidget = { "aWidget", "com.appnativa.rare.widget", NULL, 0x401, 221, methods, 36, fields, 0, NULL};
  return &_RAREaWidget;
}

@end
@implementation RAREaWidget_ItemAttributes

- (void)addCheckedWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  if (check_ != nil) {
    if (checked_ == nil) {
      checked_ = [[JavaUtilArrayList alloc] initWithInt:5];
    }
    [((JavaUtilArrayList *) nil_chk(checked_)) addWithId:item];
  }
  else {
    check_ = item;
  }
}

- (void)addExpandedWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  if (expand_ != nil) {
    if (expanded_ == nil) {
      expanded_ = [[JavaUtilArrayList alloc] initWithInt:5];
    }
    [((JavaUtilArrayList *) nil_chk(expanded_)) addWithId:item];
  }
  else {
    expand_ = item;
  }
}

- (void)addSelectedWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  if (select_ != nil) {
    if (selected_ == nil) {
      selected_ = [[JavaUtilArrayList alloc] initWithInt:5];
    }
    [((JavaUtilArrayList *) nil_chk(selected_)) addWithId:item];
  }
  else {
    select_ = item;
  }
}

- (id)init {
  return [super init];
}

- (void)copyAllFieldsTo:(RAREaWidget_ItemAttributes *)other {
  [super copyAllFieldsTo:other];
  other->check_ = check_;
  other->checked_ = checked_;
  other->expand_ = expand_;
  other->expanded_ = expanded_;
  other->select_ = select_;
  other->selected_ = selected_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "check_", NULL, 0x1, "LRARERenderableDataItem" },
    { "checked_", NULL, 0x1, "LJavaUtilArrayList" },
    { "expand_", NULL, 0x1, "LRARERenderableDataItem" },
    { "expanded_", NULL, 0x1, "LJavaUtilArrayList" },
    { "select_", NULL, 0x1, "LRARERenderableDataItem" },
    { "selected_", NULL, 0x1, "LJavaUtilArrayList" },
  };
  static J2ObjcClassInfo _RAREaWidget_ItemAttributes = { "ItemAttributes", "com.appnativa.rare.widget", "aWidget", 0x9, 0, NULL, 6, fields, 0, NULL};
  return &_RAREaWidget_ItemAttributes;
}

@end
@implementation RAREaWidget_$1

- (RAREUTCharScanner *)initialValue {
  @synchronized(self) {
    {
      return [[RAREUTCharScanner alloc] init];
    }
  }
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initialValue", NULL, "LRAREUTCharScanner", 0x24, NULL },
  };
  static const char *superclass_type_args[] = {"LRAREUTCharScanner"};
  static J2ObjcClassInfo _RAREaWidget_$1 = { "$1", "com.appnativa.rare.widget", "aWidget", 0x8000, 1, methods, 0, NULL, 1, superclass_type_args};
  return &_RAREaWidget_$1;
}

@end
@implementation RAREaWidget_$2

- (RAREDataItemCSVParser *)initialValue {
  @synchronized(self) {
    {
      return [[RAREDataItemCSVParser alloc] init];
    }
  }
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initialValue", NULL, "LRAREDataItemCSVParser", 0x24, NULL },
  };
  static const char *superclass_type_args[] = {"LRAREDataItemCSVParser"};
  static J2ObjcClassInfo _RAREaWidget_$2 = { "$2", "com.appnativa.rare.widget", "aWidget", 0x8000, 1, methods, 0, NULL, 1, superclass_type_args};
  return &_RAREaWidget_$2;
}

@end
@implementation RAREaWidget_$3

- (void)animationStartedWithRAREiPlatformAnimator:(id<RAREiPlatformAnimator>)source {
}

- (void)animationEndedWithRAREiPlatformAnimator:(id<RAREiPlatformAnimator>)source {
  [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREaWidget_$3_$1 alloc] initWithRAREaWidget_$3:self]];
}

- (id)initWithRAREiPlatformAnimator:(id<RAREiPlatformAnimator>)capture$0 {
  val$pa_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$pa_", NULL, 0x1012, "LRAREiPlatformAnimator" },
  };
  static J2ObjcClassInfo _RAREaWidget_$3 = { "$3", "com.appnativa.rare.widget", "aWidget", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaWidget_$3;
}

@end
@implementation RAREaWidget_$3_$1

- (void)run {
  [((id<RAREiPlatformAnimator>) nil_chk(this$0_->val$pa_)) dispose];
}

- (id)initWithRAREaWidget_$3:(RAREaWidget_$3 *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWidget_$3" },
  };
  static J2ObjcClassInfo _RAREaWidget_$3_$1 = { "$1", "com.appnativa.rare.widget", "aWidget$$3", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaWidget_$3_$1;
}

@end
@implementation RAREaWidget_$4

- (void)run {
  [this$0_ finishedLoadingEx];
}

- (id)initWithRAREaWidget:(RAREaWidget *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWidget" },
  };
  static J2ObjcClassInfo _RAREaWidget_$4 = { "$4", "com.appnativa.rare.widget", "aWidget", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaWidget_$4;
}

@end
@implementation RAREaWidget_$5

- (void)run {
  [this$0_ startedLoadingEx];
}

- (id)initWithRAREaWidget:(RAREaWidget *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWidget" },
  };
  static J2ObjcClassInfo _RAREaWidget_$5 = { "$5", "com.appnativa.rare.widget", "aWidget", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaWidget_$5;
}

@end
@implementation RAREaWidget_$6

- (void)run {
  [this$0_ updateEx];
}

- (id)initWithRAREaWidget:(RAREaWidget *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWidget" },
  };
  static J2ObjcClassInfo _RAREaWidget_$6 = { "$6", "com.appnativa.rare.widget", "aWidget", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaWidget_$6;
}

@end
@implementation RAREaWidget_$7

- (void)run {
  if (![this$0_ isDisposed]) {
    @try {
      [this$0_ handleActionLinkWithRAREActionLink:val$link_ withBoolean:NO];
      if (val$updateStatus_) {
        [this$0_ loadCompletedWithRAREActionLink:val$link_];
      }
    }
    @catch (JavaLangException *ex) {
      [this$0_ errorOccuredWithRAREActionLink:val$link_ withJavaLangThrowable:ex withBoolean:val$updateStatus_];
    }
  }
}

- (id)initWithRAREaWidget:(RAREaWidget *)outer$
       withRAREActionLink:(RAREActionLink *)capture$0
              withBoolean:(BOOL)capture$1 {
  this$0_ = outer$;
  val$link_ = capture$0;
  val$updateStatus_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWidget" },
    { "val$link_", NULL, 0x1012, "LRAREActionLink" },
    { "val$updateStatus_", NULL, 0x1012, "Z" },
  };
  static J2ObjcClassInfo _RAREaWidget_$7 = { "$7", "com.appnativa.rare.widget", "aWidget", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_RAREaWidget_$7;
}

@end
@implementation RAREaWidget_$8

- (id)compute {
  if (!canceled_ && ![this$0_ isDisposed]) {
    done_ = NO;
    @try {
      [this$0_ handleActionLinkWithRAREActionLink:val$link_ withBoolean:YES];
      if (val$updateStatus_) {
        [this$0_ loadCompletedWithRAREActionLink:val$link_];
      }
    }
    @catch (JavaLangException *ex) {
      [this$0_ errorOccuredWithRAREActionLink:val$link_ withJavaLangThrowable:ex withBoolean:val$updateStatus_];
    }
    @finally {
      done_ = YES;
    }
  }
  return nil;
}

- (void)finishWithId:(id)result {
  if (![this$0_ isDisposed]) {
    [this$0_ finishedLoading];
  }
}

- (void)cancelWithBoolean:(BOOL)canInterrupt {
  canceled_ = YES;
  if (canInterrupt) {
    @try {
      [((RAREActionLink *) nil_chk(val$link_)) close];
    }
    @catch (JavaLangException *ignore) {
    }
  }
}

- (BOOL)isCanceled {
  return canceled_;
}

- (BOOL)isDone {
  return done_ || canceled_;
}

- (id)initWithRAREaWidget:(RAREaWidget *)outer$
       withRAREActionLink:(RAREActionLink *)capture$0
              withBoolean:(BOOL)capture$1 {
  this$0_ = outer$;
  val$link_ = capture$0;
  val$updateStatus_ = capture$1;
  return [super init];
}

- (void)copyAllFieldsTo:(RAREaWidget_$8 *)other {
  [super copyAllFieldsTo:other];
  other->canceled_ = canceled_;
  other->done_ = done_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
    { "isCanceled", NULL, "Z", 0x1, NULL },
    { "isDone", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWidget" },
    { "canceled_", NULL, 0x40, "Z" },
    { "val$link_", NULL, 0x1012, "LRAREActionLink" },
    { "val$updateStatus_", NULL, 0x1012, "Z" },
  };
  static J2ObjcClassInfo _RAREaWidget_$8 = { "$8", "com.appnativa.rare.widget", "aWidget", 0x8000, 3, methods, 4, fields, 0, NULL};
  return &_RAREaWidget_$8;
}

@end
@implementation RAREaWidget_$9

- (void)run {
  if ([this$0_ isDisposed]) {
    return;
  }
  if (val$updateStatus_) {
    [((id<RAREiAsyncLoadStatusHandler>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([this$0_ getAppContext])) getAsyncLoadStatusHandler])) errorOccuredWithRAREiWidget:this$0_ withRAREActionLink:val$link_ withJavaLangThrowable:val$error_];
  }
  [this$0_ handleExceptionWithJavaLangThrowable:val$error_];
}

- (id)initWithRAREaWidget:(RAREaWidget *)outer$
              withBoolean:(BOOL)capture$0
       withRAREActionLink:(RAREActionLink *)capture$1
    withJavaLangThrowable:(JavaLangThrowable *)capture$2 {
  this$0_ = outer$;
  val$updateStatus_ = capture$0;
  val$link_ = capture$1;
  val$error_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWidget" },
    { "val$updateStatus_", NULL, 0x1012, "Z" },
    { "val$link_", NULL, 0x1012, "LRAREActionLink" },
    { "val$error_", NULL, 0x1012, "LJavaLangThrowable" },
  };
  static J2ObjcClassInfo _RAREaWidget_$9 = { "$9", "com.appnativa.rare.widget", "aWidget", 0x8000, 0, NULL, 4, fields, 0, NULL};
  return &_RAREaWidget_$9;
}

@end
@implementation RAREaWidget_$10

- (void)run {
  if ([this$0_ isDisposed]) {
    return;
  }
  [((id<RAREiAsyncLoadStatusHandler>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([this$0_ getAppContext])) getAsyncLoadStatusHandler])) loadCompletedWithRAREiWidget:this$0_ withRAREActionLink:val$link_];
}

- (id)initWithRAREaWidget:(RAREaWidget *)outer$
       withRAREActionLink:(RAREActionLink *)capture$0 {
  this$0_ = outer$;
  val$link_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWidget" },
    { "val$link_", NULL, 0x1012, "LRAREActionLink" },
  };
  static J2ObjcClassInfo _RAREaWidget_$10 = { "$10", "com.appnativa.rare.widget", "aWidget", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_RAREaWidget_$10;
}

@end
