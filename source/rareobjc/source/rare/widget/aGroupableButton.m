//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/widget/aGroupableButton.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/spot/Button.h"
#include "com/appnativa/rare/spot/GridCell.h"
#include "com/appnativa/rare/spot/Margin.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/PainterUtils.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/aWidgetListener.h"
#include "com/appnativa/rare/ui/event/iActionListener.h"
#include "com/appnativa/rare/ui/event/iChangeListener.h"
#include "com/appnativa/rare/ui/iActionComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/painter/PaintBucket.h"
#include "com/appnativa/rare/ui/painter/PainterHolder.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/widget/ButtonGroup.h"
#include "com/appnativa/rare/widget/aGroupableButton.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/util/SNumber.h"
#include "java/lang/Boolean.h"
#include "java/lang/CharSequence.h"

@implementation RAREaGroupableButton

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    showText_ = YES;
    allowDeselection_ = NO;
  }
  return self;
}

- (void)setActionListenerWithRAREiActionListener:(id<RAREiActionListener>)al {
  [self addActionListenerWithRAREiActionListener:al];
}

- (void)addActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
  id<RAREiActionComponent> b = (id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent));
  [((id<RAREiActionComponent>) nil_chk(b)) addActionListenerWithRAREiActionListener:l];
}

- (void)addChangeListenerWithRAREiChangeListener:(id<RAREiChangeListener>)l {
  id<RAREiActionComponent> b = (id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent));
  [((id<RAREiActionComponent>) nil_chk(b)) addChangeListenerWithRAREiChangeListener:l];
}

- (void)clearContents {
  [super clearContents];
  [self setValueWithId:@""];
}

- (void)clearSelection {
  if (buttonGroup_ != nil) {
    [buttonGroup_ clearSelection];
  }
  else {
    [self setSelectedWithBoolean:NO];
  }
}

- (void)click {
  [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) doClick];
}

- (void)dispose {
  if (buttonGroup_ != nil) {
    [buttonGroup_ removeExWithRAREaGroupableButton:self];
  }
  [super dispose];
  buttonGroup_ = nil;
}

- (RAREButtonGroup *)getButtonGroup {
  return buttonGroup_;
}

- (NSString *)getGroupName {
  return groupName_;
}

- (id)getHTTPFormValue {
  switch (submitValueType_) {
    case RARESPOTButton_CSubmitValue_value_property:
    return [self isSelected] ? [self getCustomPropertyWithId:@"value"] : nil;
    case RARESPOTButton_CSubmitValue_text:
    return [self isSelected] ? [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) getText] : nil;
    case RARESPOTButton_CSubmitValue_state_selected_deselected:
    return [self isSelected] ? @"selected" : @"deselected";
    case RARESPOTButton_CSubmitValue_state_zero_one:
    return [self isSelected] ? @"1" : @"0";
    default:
    return [self isSelected] ? @"on" : @"off";
  }
}

- (id<RAREiPlatformIcon>)getIcon {
  return [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) getIcon];
}

- (RAREaGroupableButton *)getSelectedButton {
  if (buttonGroup_ == nil) {
    return [self isSelected] ? self : nil;
  }
  return [((RAREButtonGroup *) nil_chk(buttonGroup_)) getSelectedButton];
}

- (NSString *)getSelectedButtonName {
  RAREaGroupableButton *b = [self getSelectedButton];
  return (b == nil) ? nil : [b getName];
}

- (id)getSelection {
  return [self getSelectedButtonName];
}

- (NSString *)getSelectionAsString {
  return [self getSelectedButtonName];
}

- (id)getValue {
  if ((widgetType_ == [RAREiWidget_WidgetTypeEnum CheckBox]) || (widgetType_ == [RAREiWidget_WidgetTypeEnum RadioButton])) {
    return [JavaLangBoolean valueOfWithBoolean:[self isSelected]];
  }
  return buttonText_;
}

- (id)getValueWithRAREiWidget:(id<RAREiWidget>)context {
  return [super getValueWithRAREiWidget:context];
}

- (NSString *)getValueAsString {
  return (buttonText_ == nil) ? @"" : [buttonText_ sequenceDescription];
}

- (BOOL)isSelected {
  return [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) isSelected];
}

- (BOOL)isValidForSubmissionWithBoolean:(BOOL)showerror {
  return [self isSelected];
}

- (void)removeActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
  id<RAREiActionComponent> b = (id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent));
  if (b != nil) {
    [b removeActionListenerWithRAREiActionListener:l];
  }
}

- (void)removeChangeListenerWithRAREiChangeListener:(id<RAREiChangeListener>)l {
  id<RAREiActionComponent> b = (id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent));
  [((id<RAREiActionComponent>) nil_chk(b)) removeChangeListenerWithRAREiChangeListener:l];
}

- (void)reset {
  [super reset];
  if (initialValue_ != nil) {
    buttonText_ = [self expandStringWithNSString:initialValue_ withBoolean:NO];
    [self setValueWithId:buttonText_];
  }
  [self setSelectedWithBoolean:initiallySelected_];
}

- (void)selectionChangedWithBoolean:(BOOL)selected {
  if (buttonGroup_ != nil) {
    [buttonGroup_ selectionChangedWithRAREaGroupableButton:self withBoolean:selected];
  }
}

- (void)setFromHTTPFormValueWithId:(id)value {
  switch (submitValueType_) {
    case RARESPOTButton_CSubmitValue_value_property:
    (void) [self setCustomPropertyWithId:@"value" withId:value];
    break;
    case RARESPOTButton_CSubmitValue_text:
    [self setValueWithId:(value == nil) ? @"" : [value description]];
    break;
    case RARESPOTButton_CSubmitValue_state_selected_deselected:
    [self setSelectedWithBoolean:[@"selected" isEqual:value]];
    break;
    case RARESPOTButton_CSubmitValue_state_zero_one:
    [self setSelectedWithBoolean:[@"1" isEqual:value]];
    break;
    default:
    [self setSelectedWithBoolean:[@"on" isEqual:value]];
  }
}

- (void)setGroupNameWithNSString:(NSString *)name {
  if (buttonGroup_ != nil) {
    [buttonGroup_ removeWithRAREaGroupableButton:self];
    buttonGroup_ = nil;
  }
  if (name != nil) {
    NSString *gkey = [NSString stringWithFormat:@"_buttonGroup.%@", name];
    RAREButtonGroup *g = (RAREButtonGroup *) check_class_cast([((id<RAREiFormViewer>) nil_chk([self getFormViewer])) getNamedItemWithNSString:gkey], [RAREButtonGroup class]);
    if (g == nil) {
      g = [[RAREButtonGroup alloc] initWithNSString:name];
      (void) [((id<RAREiFormViewer>) nil_chk([self getFormViewer])) registerNamedItemWithNSString:gkey withId:g];
    }
    buttonGroup_ = g;
    [((RAREButtonGroup *) nil_chk(g)) addWithRAREaGroupableButton:self];
  }
  groupName_ = name;
}

- (void)setIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) setIconWithRAREiPlatformIcon:icon];
}

- (void)setInnerHTMLWithNSString:(NSString *)value {
  if (value != nil) {
    value = [NSString stringWithFormat:@"<html>%@</html>", value];
  }
  [self setValueWithId:value];
}

- (void)setSelectedWithBoolean:(BOOL)selected {
  [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) setSelectedWithBoolean:selected];
}

- (void)setShowTextWithBoolean:(BOOL)show {
  if (show != showText_) {
    showText_ = show;
    if (show) {
      [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) setTextWithJavaLangCharSequence:buttonText_];
    }
    else {
      [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) setTextWithJavaLangCharSequence:@""];
    }
  }
}

- (void)setTextWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  buttonText_ = (text == nil) ? @"" : ((id) text);
  if (showText_) {
    [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) setTextWithJavaLangCharSequence:buttonText_];
  }
}

- (void)setValueWithId:(id)value {
  if ([value isKindOfClass:[JavaLangBoolean class]]) {
    [self setSelectedWithBoolean:[(JavaLangBoolean *) check_class_cast(value, [JavaLangBoolean class]) booleanValue]];
  }
  else {
    id<JavaLangCharSequence> s;
    if ([value conformsToProtocol: @protocol(JavaLangCharSequence)]) {
      s = (id<JavaLangCharSequence>) check_protocol_cast(value, @protocol(JavaLangCharSequence));
    }
    else {
      s = (value == nil) ? @"" : [self toStringWithRAREiWidget:self withId:value withId:nil];
    }
    buttonText_ = s;
    if (showText_) {
      [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) setTextWithJavaLangCharSequence:buttonText_];
    }
  }
}

- (void)setValueFromItemWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  [self setValueWithId:[((RARERenderableDataItem *) nil_chk(item)) description]];
  [self setIconWithRAREiPlatformIcon:[item getIcon]];
  [self setDisabledIconWithRAREiPlatformIcon:[item getDisabledIcon]];
  [self setAlternateIconWithRAREiPlatformIcon:[item getAlternateIcon]];
}

- (void)configureExWithRARESPOTButton:(RARESPOTButton *)cfg {
  allowDeselection_ = NO;
  id<RAREiActionComponent> comp = [self createButtonWithRARESPOTButton:cfg];
  dataComponent_ = formComponent_ = comp;
  [self configureWithRARESPOTWidget:cfg withBoolean:YES withBoolean:NO withBoolean:NO withBoolean:YES];
  [self configureExWithRAREiActionComponent:comp withRARESPOTButton:cfg];
  NSString *name = [((SPOTPrintableString *) nil_chk(((RARESPOTButton *) nil_chk(cfg))->name_)) getValue];
  if (name != nil) {
    RAREUIAction *a = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getActionWithNSString:name];
    if (a != nil) {
      [((id<RAREiActionComponent>) nil_chk(comp)) setActionWithRAREUIAction:a];
      if ([cfg spot_getAttributeWithNSString:@"onAction"] != nil) {
        [comp removeActionListenerWithRAREiActionListener:a];
      }
      if (buttonText_ == nil) {
        buttonText_ = [comp getText];
      }
    }
  }
  RARESPOTMargin *m = [cfg getContentPadding];
  if (m != nil) {
    RAREUIInsets *in = [m getInsets];
    if (![((SPOTPrintableString *) nil_chk(m->top_)) spot_valueWasSet]) {
      ((RAREUIInsets *) nil_chk(in))->top_ = -1;
    }
    if (![((SPOTPrintableString *) nil_chk(m->left_)) spot_valueWasSet]) {
      ((RAREUIInsets *) nil_chk(in))->left_ = -1;
    }
    if (![((SPOTPrintableString *) nil_chk(m->bottom_)) spot_valueWasSet]) {
      ((RAREUIInsets *) nil_chk(in))->bottom_ = -1;
    }
    if (![((SPOTPrintableString *) nil_chk(m->right_)) spot_valueWasSet]) {
      ((RAREUIInsets *) nil_chk(in))->right_ = -1;
    }
    [((id<RAREiActionComponent>) nil_chk(comp)) setMarginWithRAREUIInsets:in];
  }
  if (!showText_) {
    [((id<RAREiActionComponent>) nil_chk(comp)) setTextWithJavaLangCharSequence:@""];
  }
  if (buttonText_ != nil) {
    [self setValueWithId:buttonText_];
  }
  [((id<RAREiActionComponent>) nil_chk(comp)) setSelectedWithBoolean:initiallySelected_ = [((SPOTBoolean *) nil_chk(cfg->selected_)) booleanValue]];
}

- (void)configureExWithRAREiActionComponent:(id<RAREiActionComponent>)comp
                         withRARESPOTButton:(RARESPOTButton *)cfg {
  submitValueType_ = [((RARESPOTButton_CSubmitValue *) nil_chk(((RARESPOTButton *) nil_chk(cfg))->submitValue_)) intValue];
  allowDeselection_ = [@"true" equalsIgnoreCase:[((SPOTPrintableString *) nil_chk(cfg->groupName_)) spot_getAttributeWithNSString:@"allowDeselection"]];
  id<RAREiPlatformIcon> icon = [self getIconWithSPOTPrintableString:cfg->icon_];
  initialValue_ = [((SPOTPrintableString *) nil_chk(cfg->value_)) getValue];
  if (initialValue_ != nil) {
    buttonText_ = [self expandStringWithNSString:initialValue_ withBoolean:NO];
  }
  [self setGroupNameWithNSString:[cfg->groupName_ getValue]];
  if (([((RARESPOTButton_CTextHAlignment *) nil_chk(cfg->textHAlignment_)) intValue] != RARESPOTButton_CTextHAlignment_auto) || ([((RARESPOTButton_CTextVAlignment *) nil_chk(cfg->textVAlignment_)) intValue] != RARESPOTButton_CTextVAlignment_auto)) {
    [RAREaPlatformHelper setTextAlignmentWithRAREiPlatformComponent:comp withRARERenderableDataItem_HorizontalAlignEnum:[RAREUtils getHorizontalAlignmentWithInt:[cfg->textHAlignment_ intValue]] withRARERenderableDataItem_VerticalAlignEnum:[RAREUtils getVerticalAlignmentWithInt:[((RARESPOTButton_CTextVAlignment *) nil_chk(cfg->textVAlignment_)) intValue]]];
  }
  if ([((RARESPOTButton_CIconPosition *) nil_chk(cfg->iconPosition_)) intValue] != RARESPOTButton_CIconPosition_auto) {
    [((id<RAREiActionComponent>) nil_chk(comp)) setIconPositionWithRARERenderableDataItem_IconPositionEnum:[RAREUtils getIconPositionWithInt:[cfg->iconPosition_ intValue]]];
  }
  if ([((SPOTBoolean *) nil_chk(cfg->wordWrap_)) spot_valueWasSet] && [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) okForOSWithISPOTElement:cfg->wordWrap_]) {
    [((id<RAREiActionComponent>) nil_chk(comp)) setWordWrapWithBoolean:[cfg->wordWrap_ booleanValue]];
  }
  if ([((SPOTBoolean *) nil_chk(cfg->showText_)) spot_valueWasSet]) {
    showText_ = [cfg->showText_ booleanValue];
  }
  else if (icon == nil) {
    showText_ = YES;
  }
  RARESPOTMargin *m = [cfg getContentPadding];
  if (m != nil) {
    [((id<RAREiActionComponent>) nil_chk(comp)) setMarginWithRAREUIInsets:[m getInsets]];
  }
  if (icon != nil) {
    [self setIconWithRAREiPlatformIcon:icon];
  }
  icon = [self getIconWithSPOTPrintableString:cfg->selectedIcon_];
  if (icon != nil) {
    [((id<RAREiActionComponent>) nil_chk(comp)) setSelectedIconWithRAREiPlatformIcon:icon];
  }
  icon = [self getIconWithSPOTPrintableString:cfg->pressedIcon_];
  if (icon != nil) {
    [((id<RAREiActionComponent>) nil_chk(comp)) setPressedIconWithRAREiPlatformIcon:icon];
  }
  icon = [self getIconWithSPOTPrintableString:cfg->disabledIcon_];
  if (icon != nil) {
    [((id<RAREiActionComponent>) nil_chk(comp)) setDisabledIconWithRAREiPlatformIcon:icon];
  }
  if ([((SPOTBoolean *) nil_chk(cfg->scaleIcon_)) booleanValue]) {
    float f = [RAREUTSNumber floatValueWithNSString:[cfg->scaleIcon_ spot_getAttributeWithNSString:@"percent"]];
    if (f > 1) {
      f = f / 100;
    }
    if (f <= 0) {
      f = 1;
    }
    [((id<RAREiActionComponent>) nil_chk(comp)) setScaleIconWithBoolean:YES withFloat:f];
  }
  if (![RAREPlatform isTouchDevice]) {
    [self setFocusPaintedWithBoolean:YES];
  }
}

- (void)configurePaintersWithRARESPOTButton:(RARESPOTButton *)cfg {
  RAREPaintBucket *pp = [RAREColorUtils configureWithRAREiWidget:self withRARESPOTGridCell:[((RARESPOTButton *) nil_chk(cfg)) getPressedPainter] withRAREPaintBucket:nil];
  RAREPaintBucket *sp = [RAREColorUtils configureWithRAREiWidget:self withRARESPOTGridCell:[cfg getSelectionPainter] withRAREPaintBucket:nil];
  RAREPaintBucket *dp = [RAREColorUtils configureWithRAREiWidget:self withRARESPOTGridCell:[cfg getDisabledPainter] withRAREPaintBucket:nil];
  if ((pp != nil) || (sp != nil) || (dp != nil)) {
    if ((pp == nil) && (sp == nil)) {
      pp = ((RAREPainterHolder *) nil_chk([RAREPainterUtils createButtonPaintHolder]))->pressedPainter_;
    }
    RAREPainterHolder *p = [[RAREPainterHolder alloc] initWithRAREPaintBucket:nil withRAREPaintBucket:sp withRAREPaintBucket:nil withRAREPaintBucket:pp withRAREPaintBucket:dp];
    [((id<RAREiPlatformComponentPainter>) nil_chk([self getComponentPainterWithBoolean:YES withBoolean:YES])) setPainterHolderWithRAREPainterHolder:p];
  }
}

- (id<RAREiActionComponent>)createButtonWithRARESPOTButton:(RARESPOTButton *)cfg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)initializeListenersWithRAREaWidgetListener:(RAREaWidgetListener *)l {
  [super initializeListenersWithRAREaWidgetListener:l];
  if ((l != nil) && [l isChangeEventEnabled]) {
    [self addChangeListenerWithRAREiChangeListener:l];
  }
}

- (BOOL)isTextView {
  return YES;
}

- (void)postConfigureWithRARESPOTButton:(RARESPOTButton *)cfg {
}

- (void)copyAllFieldsTo:(RAREaGroupableButton *)other {
  [super copyAllFieldsTo:other];
  other->allowDeselection_ = allowDeselection_;
  other->buttonGroup_ = buttonGroup_;
  other->buttonText_ = buttonText_;
  other->groupName_ = groupName_;
  other->initialValue_ = initialValue_;
  other->initiallySelected_ = initiallySelected_;
  other->showText_ = showText_;
  other->submitValueType_ = submitValueType_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getButtonGroup", NULL, "LRAREButtonGroup", 0x1, NULL },
    { "getGroupName", NULL, "LNSString", 0x1, NULL },
    { "getHTTPFormValue", NULL, "LNSObject", 0x1, NULL },
    { "getIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getSelectedButton", NULL, "LRAREaGroupableButton", 0x1, NULL },
    { "getSelectedButtonName", NULL, "LNSString", 0x1, NULL },
    { "getSelection", NULL, "LNSObject", 0x1, NULL },
    { "getSelectionAsString", NULL, "LNSString", 0x1, NULL },
    { "getValue", NULL, "LNSObject", 0x1, NULL },
    { "getValueWithRAREiWidget:", NULL, "LNSObject", 0x1, NULL },
    { "getValueAsString", NULL, "LNSString", 0x1, NULL },
    { "isSelected", NULL, "Z", 0x1, NULL },
    { "isValidForSubmissionWithBoolean:", NULL, "Z", 0x1, NULL },
    { "configureExWithRARESPOTButton:", NULL, "V", 0x4, NULL },
    { "configureExWithRAREiActionComponent:withRARESPOTButton:", NULL, "V", 0x4, NULL },
    { "configurePaintersWithRARESPOTButton:", NULL, "V", 0x4, NULL },
    { "createButtonWithRARESPOTButton:", NULL, "LRAREiActionComponent", 0x404, NULL },
    { "initializeListenersWithRAREaWidgetListener:", NULL, "V", 0x4, NULL },
    { "isTextView", NULL, "Z", 0x4, NULL },
    { "postConfigureWithRARESPOTButton:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "showText_", NULL, 0x4, "Z" },
    { "buttonGroup_", NULL, 0x4, "LRAREButtonGroup" },
    { "buttonText_", NULL, 0x4, "LJavaLangCharSequence" },
    { "groupName_", NULL, 0x4, "LNSString" },
    { "initialValue_", NULL, 0x4, "LNSString" },
    { "submitValueType_", NULL, 0x4, "I" },
    { "allowDeselection_", NULL, 0x4, "Z" },
  };
  static J2ObjcClassInfo _RAREaGroupableButton = { "aGroupableButton", "com.appnativa.rare.widget", NULL, 0x401, 20, methods, 7, fields, 0, NULL};
  return &_RAREaGroupableButton;
}

@end
