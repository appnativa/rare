//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/widget/aPushButtonWidget.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/spot/Button.h"
#include "com/appnativa/rare/spot/GridCell.h"
#include "com/appnativa/rare/spot/ItemDescription.h"
#include "com/appnativa/rare/spot/ListBox.h"
#include "com/appnativa/rare/spot/Margin.h"
#include "com/appnativa/rare/spot/MenuItem.h"
#include "com/appnativa/rare/spot/PushButton.h"
#include "com/appnativa/rare/spot/Rectangle.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/Component.h"
#include "com/appnativa/rare/ui/FocusedAction.h"
#include "com/appnativa/rare/ui/Location.h"
#include "com/appnativa/rare/ui/MenuUtils.h"
#include "com/appnativa/rare/ui/PainterUtils.h"
#include "com/appnativa/rare/ui/RenderType.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIColorHelper.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/ViewerCreator.h"
#include "com/appnativa/rare/ui/WindowPane.h"
#include "com/appnativa/rare/ui/aWidgetListener.h"
#include "com/appnativa/rare/ui/border/SharedLineBorder.h"
#include "com/appnativa/rare/ui/border/UIBalloonBorder.h"
#include "com/appnativa/rare/ui/border/UILineBorder.h"
#include "com/appnativa/rare/ui/effects/aAnimator.h"
#include "com/appnativa/rare/ui/effects/aSizeAnimation.h"
#include "com/appnativa/rare/ui/effects/iPlatformAnimator.h"
#include "com/appnativa/rare/ui/event/ActionEvent.h"
#include "com/appnativa/rare/ui/event/ExpansionEvent.h"
#include "com/appnativa/rare/ui/event/iActionListener.h"
#include "com/appnativa/rare/ui/iActionComponent.h"
#include "com/appnativa/rare/ui/iListHandler.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/iPlatformWindowManager.h"
#include "com/appnativa/rare/ui/iPopup.h"
#include "com/appnativa/rare/ui/painter/PaintBucket.h"
#include "com/appnativa/rare/ui/painter/PainterHolder.h"
#include "com/appnativa/rare/ui/painter/UIComponentPainter.h"
#include "com/appnativa/rare/ui/painter/iBackgroundPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/viewer/ToolBarViewer.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/aContainer.h"
#include "com/appnativa/rare/viewer/aListViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/PushButtonWidget.h"
#include "com/appnativa/rare/widget/aGroupableButton.h"
#include "com/appnativa/rare/widget/aPlatformWidget.h"
#include "com/appnativa/rare/widget/aPushButtonWidget.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTAny.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTInteger.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/SNumber.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Exception.h"
#include "java/util/Map.h"

@implementation RAREaPushButtonWidget

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    autoClosePopup_ = YES;
    matchBackgrounds_ = YES;
    sharedBorderColor_ = [RAREaUILineBorder getDefaultLineColor];
    sharedBorderThickness_ = [RAREScreenUtils platformPixelsfWithFloat:1.5f];
    sharedBorderArc_ = [RAREScreenUtils PLATFORM_PIXELS_4];
    popupTransient_ = YES;
    lc_ = 0;
    widgetType_ = [RAREiWidget_WidgetTypeEnum PushButton];
  }
  return self;
}

- (void)inlineActionEvent {
  RAREaWidgetListener *l = [self getWidgetListener];
  if ((l != nil) && [l isActionEventEnabled]) {
    (void) [l evaluateWithNSString:[RAREiConstants EVENT_ACTION] withJavaUtilEventObject:[[RAREActionEvent alloc] initWithId:self] withBoolean:NO];
  }
}

- (void)configureWithRARESPOTWidget:(RARESPOTWidget *)cfg {
  [self configureExWithRARESPOTPushButton:(RARESPOTPushButton *) check_class_cast(cfg, [RARESPOTPushButton class])];
  [self fireConfigureEventWithRARESPOTWidget:cfg withNSString:[RAREiConstants EVENT_CONFIGURE]];
}

- (void)createPopupWidget {
  if (popupWidget_ != nil) {
    return;
  }
  if (popupConfiguration_ != nil) {
    popupWidget_ = [RAREaContainer createWidgetWithRAREiContainer:[self getParent] withRARESPOTWidget:popupConfiguration_];
    if ([((SPOTBoolean *) nil_chk(popupConfiguration_->focusable_)) spot_valueWasSet]) {
      popupContentFocusable_ = [popupConfiguration_->focusable_ booleanValue];
    }
    if ([(id) [((id<RAREiWidget>) nil_chk(popupWidget_)) getBorder] isKindOfClass:[RAREUIBalloonBorder class]]) {
      RAREUIBalloonBorder *b = (RAREUIBalloonBorder *) check_class_cast([popupWidget_ getBorder], [RAREUIBalloonBorder class]);
      if ([((RAREUIBalloonBorder *) nil_chk(b)) isAutoLocatePeak]) {
        balloonBorder_ = b;
      }
    }
    if (actionType_ == RARESPOTPushButton_CActionType_popup_menu) {
      [((RAREaListViewer *) check_class_cast(popupWidget_, [RAREaListViewer class])) addAllWithJavaUtilCollection:self];
      [((RAREaListViewer *) check_class_cast(popupWidget_, [RAREaListViewer class])) addActionListenerWithRAREiActionListener:[[RAREaPushButtonWidget_$1 alloc] initWithRAREaPushButtonWidget:self]];
    }
    NSString *s;
    if (origPopupAttributes_ != nil) {
      s = [origPopupAttributes_ getWithId:@"okWidget"];
      if (s == nil) {
        (void) [origPopupAttributes_ getWithId:@"okwidget"];
      }
      s = [origPopupAttributes_ getWithId:@"matchbackground"];
      if (s == nil) {
        s = [origPopupAttributes_ getWithId:@"matchBackground"];
      }
      if (s != nil) {
        matchBackgrounds_ = [s equalsIgnoreCase:@"true"];
      }
    }
  }
  popupConfiguration_ = nil;
}

- (void)dispose {
  [super dispose];
  if (popupComponent_ != nil) {
    [popupComponent_ dispose];
  }
  if (popupWidget_ != nil) {
    [popupWidget_ dispose];
  }
  popupButtomMenu_ = nil;
  popupConfiguration_ = nil;
  popupComponent_ = nil;
  popupWidget_ = nil;
  popupPainter_ = nil;
  sharedLineBorder_ = nil;
}

- (void)hidePopupContainer {
  if (popupWidget_ == nil) {
    [super hidePopupContainer];
    return;
  }
  if (popupComponent_ != nil) {
    [popupComponent_ hidePopup];
  }
}

- (void)showPopupMenuWithInt:(int)x
                     withInt:(int)y {
  if (actionType_ != RARESPOTPushButton_CActionType_popup_menu) {
    [super showPopupMenuWithInt:x withInt:y];
    return;
  }
  int len = (popupButtomMenu_ == nil) ? 0 : [popupButtomMenu_ getCount];
  if (popupButtomMenu_ != nil) {
    popupScrollable_ = [@"true" isEqual:[popupButtomMenu_ spot_getAttributeWithNSString:@"scrollable"]];
  }
  if (len > 0) {
    [self ensureCapacityWithInt:len];
    for (int i = 0; i < len; i++) {
      [self addWithId:[RAREMenuUtils createDataItemWithRAREiWidget:self withRARESPOTMenuItem:(RARESPOTMenuItem *) check_class_cast([((SPOTSet *) nil_chk(popupButtomMenu_)) getExWithInt:i], [RARESPOTMenuItem class])]];
    }
    popupButtomMenu_ = nil;
  }
  if ((popupWidget_ == nil) && (popupConfiguration_ == nil)) {
    popupConfiguration_ = [self createPopupMenuConfigurationWithInt:[self size] withNSString:nil];
  }
  [self showPopupWidget];
}

- (void)showPopupWidget {
  [self showPopupWidgetEx];
}

+ (RAREPushButtonWidget *)createWithRAREiContainer:(id<RAREiContainer>)parent {
  RAREPushButtonWidget *widget = [[RAREPushButtonWidget alloc] initWithRAREiContainer:parent];
  [widget configureWithRARESPOTWidget:(RARESPOTPushButton *) check_class_cast([((RAREWindowViewer *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getWindowViewer])) createConfigurationObjectWithNSString:@"PushButton"], [RARESPOTPushButton class])];
  return widget;
}

+ (RAREPushButtonWidget *)createWithRAREiContainer:(id<RAREiContainer>)parent
                            withRARESPOTPushButton:(RARESPOTPushButton *)cfg {
  RAREPushButtonWidget *widget = [[RAREPushButtonWidget alloc] initWithRAREiContainer:parent];
  [widget configureWithRARESPOTWidget:cfg];
  return widget;
}

- (void)setDefaultButtonWithBoolean:(BOOL)isdefault {
}

- (void)setPopupAnimatorWithRAREiPlatformAnimator:(id<RAREiPlatformAnimator>)popupAnimator {
  self->popupAnimator_ = popupAnimator;
  if ([(id) popupAnimator isKindOfClass:[RAREaSizeAnimation class]]) {
    sizingAnchor_ = [((RAREaSizeAnimation *) check_class_cast(popupAnimator, [RAREaSizeAnimation class])) getDiagonalAnchor];
  }
  else {
    sizingAnchor_ = nil;
  }
}

- (int)getSelectedIndex {
  if ([(id) popupWidget_ isKindOfClass:[RAREaListViewer class]]) {
    return [((RAREaListViewer *) check_class_cast(popupWidget_, [RAREaListViewer class])) getSelectedIndex];
  }
  return -1;
}

- (RARERenderableDataItem *)getSelectedItem {
  if ([(id) popupWidget_ isKindOfClass:[RAREaListViewer class]]) {
    return [((RAREaListViewer *) check_class_cast(popupWidget_, [RAREaListViewer class])) getSelectedItem];
  }
  return nil;
}

- (id<RAREiWidget>)getPopupWidget {
  return popupWidget_;
}

- (void)setSelectedIndexWithInt:(int)index {
  int len = [self size];
  if ((index < len) && (index > 0)) {
    RARERenderableDataItem *di = [self getWithInt:index];
    [self setTextWithJavaLangCharSequence:[((RARERenderableDataItem *) nil_chk(di)) description]];
    if ([di getIcon] != nil) {
      [self setIconWithRAREiPlatformIcon:[di getIcon]];
    }
    if ([(id) popupWidget_ isKindOfClass:[RAREaListViewer class]]) {
      [((RAREaListViewer *) check_class_cast(popupWidget_, [RAREaListViewer class])) setSelectedIndexWithInt:index];
    }
  }
  else {
    [self setTextWithJavaLangCharSequence:@""];
    if ([(id) popupWidget_ isKindOfClass:[RAREaListViewer class]]) {
      [((RAREaListViewer *) check_class_cast(popupWidget_, [RAREaListViewer class])) clearSelection];
    }
  }
}

- (id)getHTTPFormValue {
  if (submitValueType_ == RARESPOTButton_CSubmitValue_text) {
    return [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) getText];
  }
  return [super getHTTPFormValue];
}

- (id<RAREiPlatformAnimator>)getPopupAnimator {
  return popupAnimator_;
}

- (BOOL)hasPopupWidget {
  return (popupConfiguration_ != nil) || (popupWidget_ != nil);
}

- (void)configureExWithRARESPOTPushButton:(RARESPOTPushButton *)cfg {
  int buttonStyle;
  actionType_ = [((RARESPOTPushButton_CActionType *) nil_chk(((RARESPOTPushButton *) nil_chk(cfg))->actionType_)) intValue];
  if (([(id) [self getParent] isKindOfClass:[RAREToolBarViewer class]]) && ![((RARESPOTPushButton_CButtonStyle *) nil_chk(cfg->buttonStyle_)) spot_valueWasSet]) {
    buttonStyle = RARESPOTPushButton_CButtonStyle_toolbar;
  }
  else {
    switch (actionType_) {
      case RARESPOTPushButton_CActionType_popup_widget:
      case RARESPOTPushButton_CActionType_popup_menu:
      if ([((RARESPOTPushButton_CButtonStyle *) nil_chk(cfg->buttonStyle_)) spot_valueWasSet]) {
        buttonStyle = [cfg->buttonStyle_ intValue];
      }
      else {
        buttonStyle = RARESPOTPushButton_CButtonStyle_toolbar;
      }
      break;
      default:
      buttonStyle = [((RARESPOTPushButton_CButtonStyle *) nil_chk(cfg->buttonStyle_)) intValue];
      break;
    }
  }
  switch (buttonStyle) {
    case RARESPOTPushButton_CButtonStyle_hyperlink:
    hyperlink_ = YES;
    break;
    case RARESPOTPushButton_CButtonStyle_hyperlink_always_underline:
    underlineAlways_ = YES;
    hyperlink_ = YES;
    break;
    case RARESPOTPushButton_CButtonStyle_standard:
    break;
    default:
    break;
  }
  NSString *s = nil;
  if ((buttonStyle == RARESPOTPushButton_CButtonStyle_standard) && ![((SPOTPrintableString *) nil_chk(((RARESPOTRectangle *) nil_chk(cfg->bounds_))->height_)) spot_valueWasSet]) {
    s = [((RAREUIProperties *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getUIDefaults])) getStringWithNSString:@"Rare.PushButton.height"];
    if (s != nil) {
      [cfg->bounds_->height_ setValueWithNSString:s];
    }
  }
  else {
    s = nil;
  }
  [super configureExWithRARESPOTButton:cfg];
  if (s != nil) {
    [((SPOTPrintableString *) nil_chk(((RARESPOTRectangle *) nil_chk(cfg->bounds_))->height_)) spot_clear];
  }
  s = [((SPOTAny *) nil_chk(cfg->popupWidget_)) spot_getAttributeWithNSString:@"closeOnAction"];
  autoClosePopup_ = (s != nil) && [s equalsIgnoreCase:@"true"];
  if ((actionType_ == RARESPOTPushButton_CActionType_popup_widget) || ([cfg->popupWidget_ getValue] != nil)) {
    origPopupAttributes_ = [cfg->popupWidget_ spot_getAttributesEx];
    popupConfiguration_ = (RARESPOTWidget *) check_class_cast([cfg->popupWidget_ getValue], [RARESPOTWidget class]);
    if (origPopupAttributes_ != nil) {
      popupScrollable_ = [@"true" isEqual:[origPopupAttributes_ getWithId:@"scrollable"]];
      popupTransient_ = ![@"false" isEqual:[origPopupAttributes_ getWithId:@"transient"]];
      if ((popupConfiguration_ == nil) && ([origPopupAttributes_ getWithId:@"url"] != nil)) {
        popupLink_ = [[RAREActionLink alloc] initWithRAREUTiURLResolver:self withNSString:[origPopupAttributes_ getWithId:@"url"] withNSString:nil];
      }
    }
    if (popupConfiguration_ != nil) {
      if (![self isDesignMode]) {
        [popupConfiguration_ spot_setParentWithISPOTElement:nil];
      }
    }
    if ([((SPOTBoolean *) nil_chk(cfg->useSharedBorderForPopup_)) booleanValue]) {
      shareBorder_ = YES;
      s = [cfg->useSharedBorderForPopup_ spot_getAttributeWithNSString:@"color"];
      if (s != nil) {
        sharedBorderColor_ = [RAREColorUtils getColorWithNSString:s];
      }
      s = [cfg->useSharedBorderForPopup_ spot_getAttributeWithNSString:@"cornerArc"];
      if (s != nil) {
        sharedBorderArc_ = [RAREScreenUtils platformPixelsWithFloat:[RAREUTSNumber intValueWithNSString:s]];
      }
      s = [cfg->useSharedBorderForPopup_ spot_getAttributeWithNSString:@"thickness"];
      if (s != nil) {
        sharedBorderThickness_ = [RAREScreenUtils platformPixelsfWithFloat:[RAREUTSNumber floatValueWithNSString:s]];
      }
    }
  }
  id<RAREiActionComponent> comp = (id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent));
  BOOL selAction = [((SPOTBoolean *) nil_chk(cfg->enabledOnSelectionOnly_)) booleanValue];
  BOOL focusedAction = [((SPOTBoolean *) nil_chk(cfg->focusedAction_)) booleanValue];
  NSString *name = [((SPOTPrintableString *) nil_chk(cfg->name_)) getValue];
  if (focusedAction && ([((id<RAREiActionComponent>) nil_chk(comp)) getAction] == nil) && (name != nil & [((NSString *) nil_chk(name)) sequenceLength] > 0)) {
    RAREFocusedAction *a = [[RAREFocusedAction alloc] initWithNSString:name withNSString:[((SPOTPrintableString *) nil_chk(cfg->value_)) getValue] withRAREiPlatformIcon:[comp getIcon]];
    [a setEnabledOnSelectionOnlyWithBoolean:selAction];
    [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) registerFocusedActionWithRAREaFocusedAction:a];
  }
  if ((actionType_ == RARESPOTPushButton_CActionType_list_toggle) && ([((SPOTPrintableString *) nil_chk(cfg->dataURL_)) getValue] != nil)) {
    [self handleDataURLWithRARESPOTWidget:cfg withBoolean:NO];
    NSString *text = [self getValueAsString];
    int len = [self size];
    RARERenderableDataItem *item;
    displayIcon_ = [self getIcon];
    for (int i = 0; i < len; i++) {
      item = [self getWithInt:i];
      s = [((RARERenderableDataItem *) nil_chk(item)) description];
      if ((text != nil) && [text isEqual:s]) {
        togglePosition_ = i;
      }
    }
  }
  initiallySelected_aPushButtonWidget_ = [((SPOTBoolean *) nil_chk(cfg->selected_)) booleanValue];
  if (initiallySelected_aPushButtonWidget_) {
    [self setSelectedWithBoolean:YES];
  }
  if ([((RARESPOTPushButton_COrientation *) nil_chk(cfg->orientation_)) spot_valueWasSet]) {
    [RAREUtils setOrientationWithRAREiActionComponent:(id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent)) withInt:[cfg->orientation_ getValue]];
  }
  if ([((SPOTPrintableString *) nil_chk(cfg->popupAnimator_)) getValue] != nil) {
    id<RAREiPlatformAnimator> a = [RAREaAnimator createAnimatorWithRAREiWidget:self withSPOTPrintableString:cfg->popupAnimator_];
    if (a != nil) {
      [a setAutoOrientWithBoolean:YES];
      [self setPopupAnimatorWithRAREiPlatformAnimator:a];
    }
  }
  [self configurePaintersWithRARESPOTPushButton:cfg withInt:buttonStyle];
}

- (void)configureMenusWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp
                              withRARESPOTWidget:(RARESPOTWidget *)cfg
                                     withBoolean:(BOOL)textMenus {
  if (actionType_ == RARESPOTPushButton_CActionType_popup_menu) {
    popupButtomMenu_ = [((RARESPOTWidget *) nil_chk(cfg)) getPopupMenu];
    shareBorder_ = YES;
    matchBackgrounds_ = YES;
  }
  else {
    [super configureMenusWithRAREiPlatformComponent:comp withRARESPOTWidget:cfg withBoolean:textMenus];
  }
}

- (void)configurePaintersWithRARESPOTPushButton:(RARESPOTPushButton *)cfg
                                        withInt:(int)buttonStyle {
  RAREPaintBucket *pp = [RAREColorUtils configureWithRAREiWidget:self withRARESPOTGridCell:[((RARESPOTPushButton *) nil_chk(cfg)) getPressedPainter] withRAREPaintBucket:nil];
  RAREPaintBucket *sp = [RAREColorUtils configureWithRAREiWidget:self withRARESPOTGridCell:[cfg getSelectionPainter] withRAREPaintBucket:nil];
  RAREPaintBucket *dp = [RAREColorUtils configureWithRAREiWidget:self withRARESPOTGridCell:[cfg getDisabledPainter] withRAREPaintBucket:nil];
  if ((pp != nil) || (sp != nil) || (dp != nil)) {
    if ((pp == nil) && (sp == nil)) {
      pp = ((RAREPainterHolder *) nil_chk([RAREPainterUtils createButtonPaintHolder]))->pressedPainter_;
    }
    RAREPainterHolder *p = [[RAREPainterHolder alloc] initWithRAREPaintBucket:nil withRAREPaintBucket:sp withRAREPaintBucket:nil withRAREPaintBucket:pp withRAREPaintBucket:dp];
    [p setForegroundColorWithRAREUIColor:[self getForeground]];
    [((id<RAREiPlatformComponentPainter>) nil_chk([self getComponentPainterWithBoolean:YES withBoolean:YES])) setPainterHolderWithRAREPainterHolder:p];
  }
  else {
    RAREPainterHolder *p = nil;
    switch (buttonStyle) {
      case RARESPOTPushButton_CButtonStyle_toggle_toolbar:
      p = [RAREPainterUtils createToggleToolBarButtonPaintHolder];
      break;
      case RARESPOTPushButton_CButtonStyle_split_toolbar:
      case RARESPOTPushButton_CButtonStyle_toolbar:
      p = [RAREPainterUtils createToolBarButtonPaintHolder];
      break;
      case RARESPOTPushButton_CButtonStyle_hyperlink:
      case RARESPOTPushButton_CButtonStyle_hyperlink_always_underline:
      p = [RAREPainterUtils createHyperlinkPaintHolder];
      break;
      case RARESPOTPushButton_CButtonStyle_standard:
      p = [RAREPainterUtils createButtonPaintHolder];
      break;
      default:
      break;
    }
    if (p != nil) {
      BOOL npCloned = NO;
      BOOL pCloned = NO;
      if (([((SPOTPrintableString *) nil_chk(cfg->bgColor_)) getValue] != nil) || ([cfg getBorders] != nil)) {
        p = (RAREPainterHolder *) check_class_cast([p clone], [RAREPainterHolder class]);
        pCloned = YES;
        if (((RAREPainterHolder *) nil_chk(p))->normalPainter_ == nil) {
          p->normalPainter_ = [[RAREPaintBucket alloc] init];
          npCloned = YES;
        }
        if ([cfg->bgColor_ getValue] != nil) {
          if (!npCloned && ([((RAREPaintBucket *) nil_chk(p->normalPainter_)) getBackgroundPainter] != nil)) {
            p->normalPainter_ = (RAREPaintBucket *) check_class_cast([p->normalPainter_ clone], [RAREPaintBucket class]);
            [((RAREPaintBucket *) nil_chk(p->normalPainter_)) setBackgroundPainterWithRAREiBackgroundPainter:nil];
            npCloned = YES;
          }
        }
        if ([cfg getBorders] != nil) {
          if (([((RAREPaintBucket *) nil_chk(p->normalPainter_)) getBorder] != nil) && !npCloned) {
            p->normalPainter_ = (RAREPaintBucket *) check_class_cast([p->normalPainter_ clone], [RAREPaintBucket class]);
          }
          [((RAREPaintBucket *) nil_chk(p->normalPainter_)) setBorderWithRAREiPlatformBorder:nil];
          if ((p->pressedPainter_ != nil) && ([p->pressedPainter_ getBorder] != nil)) {
            p->pressedPainter_ = (RAREPaintBucket *) check_class_cast([p->pressedPainter_ clone], [RAREPaintBucket class]);
            [((RAREPaintBucket *) nil_chk(p->pressedPainter_)) setBorderWithRAREiPlatformBorder:nil];
          }
        }
      }
      if ([((SPOTPrintableString *) nil_chk(cfg->fgColor_)) getValue] != nil) {
        if (!pCloned) {
          p = (RAREPainterHolder *) check_class_cast([((RAREPainterHolder *) nil_chk(p)) clone], [RAREPainterHolder class]);
          pCloned = YES;
        }
        if (!npCloned) {
          ((RAREPainterHolder *) nil_chk(p))->normalPainter_ = (RAREPaintBucket *) check_class_cast([((RAREPaintBucket *) nil_chk(p->normalPainter_)) clone], [RAREPaintBucket class]);
        }
        RAREUIColor *fg = [((id<RAREiPlatformComponent>) nil_chk([self getDataComponent])) getForeground];
        [((RAREPainterHolder *) nil_chk(p)) setForegroundColorWithRAREUIColor:fg];
        [((RAREPaintBucket *) nil_chk(p->normalPainter_)) setForegroundColorWithRAREUIColor:fg];
        if ([((RAREPaintBucket *) nil_chk(p->pressedPainter_)) getForegroundColor] != nil) {
          p->pressedPainter_ = (RAREPaintBucket *) check_class_cast([p->pressedPainter_ clone], [RAREPaintBucket class]);
          [((RAREPaintBucket *) nil_chk(p->pressedPainter_)) setForegroundColorWithRAREUIColor:[RAREColorUtils getPressedVersionWithRAREUIColor:fg]];
        }
      }
      [((id<RAREiPlatformComponentPainter>) nil_chk([self getComponentPainterWithBoolean:YES withBoolean:YES])) setPainterHolderWithRAREPainterHolder:p];
    }
  }
}

- (id<RAREiPopup>)createPopupComponent {
  return [((id<RAREiPlatformWindowManager>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getWindowManager])) createPopupWithRAREiWidget:self];
}

- (RARESPOTListBox *)createPopupMenuConfigurationWithInt:(int)defaultVisibleRowCount
                                            withNSString:(NSString *)template_ {
  setParentOnAdd_ = NO;
  if (template_ == nil) {
    template_ = @"Rare.PushButton.menu";
  }
  RARESPOTListBox *cfg = (RARESPOTListBox *) check_class_cast([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) createConfigurationObjectWithNSString:@"ListBox" withNSString:template_], [RARESPOTListBox class]);
  if (![((SPOTPrintableString *) nil_chk(((RARESPOTRectangle *) nil_chk(((RARESPOTListBox *) nil_chk(cfg))->bounds_))->width_)) spot_valueWasSet]) {
    [cfg->bounds_->width_ spot_setAttributeWithNSString:@"min" withNSString:@"12ch"];
  }
  if ([cfg getItemDescription] == nil) {
    [((SPOTPrintableString *) nil_chk(((RARESPOTItemDescription *) nil_chk([cfg getItemDescriptionReference]))->icon_)) setValueWithNSString:@"resource:Rare.icon.empty"];
  }
  [((SPOTBoolean *) nil_chk(cfg->singleClickActionEnabled_)) setValueWithBoolean:YES];
  if (![((SPOTPrintableString *) nil_chk(cfg->templateName_)) spot_hasValue]) {
    [((SPOTBoolean *) nil_chk(cfg->showDividerLine_)) setValueWithBoolean:YES];
    [cfg->showDividerLine_ spot_setAttributeWithNSString:@"showLastLine" withNSString:@"false"];
  }
  if ((defaultVisibleRowCount > 0) && ![((SPOTInteger *) nil_chk(cfg->visibleRowCount_)) spot_hasValue]) {
    [cfg->visibleRowCount_ setValueWithLong:defaultVisibleRowCount];
  }
  [((RARESPOTMargin *) nil_chk([cfg getContentPaddingReference])) setValuesWithInt:2 withInt:8 withInt:2 withInt:2];
  return cfg;
}

- (void)disposeOfPopup {
  if (popupComponent_ != nil) {
    [popupComponent_ dispose];
    popupComponent_ = nil;
    if (popupWidget_ != nil) {
      [((id<RAREiFormViewer>) nil_chk([self getFormViewer])) unregisterFormWidgetWithRAREiWidget:popupWidget_];
    }
  }
}

- (void)initializeListenersWithRAREaWidgetListener:(RAREaWidgetListener *)l {
  [super initializeListenersWithRAREaWidgetListener:l];
  switch (actionType_) {
    case RARESPOTPushButton_CActionType_submit_form:
    case RARESPOTPushButton_CActionType_clear_form:
    case RARESPOTPushButton_CActionType_popup_widget:
    case RARESPOTPushButton_CActionType_popup_menu:
    case RARESPOTPushButton_CActionType_link:
    case RARESPOTPushButton_CActionType_list_toggle:
    if (actionListener_ == nil) {
      actionListener_ = [[RAREaPushButtonWidget_$2 alloc] initWithRAREaPushButtonWidget:self];
      [((id<RAREiActionComponent>) check_protocol_cast(dataComponent_, @protocol(RAREiActionComponent))) addActionListenerWithRAREiActionListener:actionListener_];
    }
    return;
    default:
    break;
  }
}

- (void)resetButtonBorderAndBackground {
  if (sharedLineBorder_ != nil) {
    [((id<RAREiPlatformComponentPainter>) nil_chk([self getComponentPainter])) setSharedBorderWithRARESharedLineBorder:nil];
    [self update];
  }
}

- (void)setupSharedBorder {
  if (sharedLineBorder_ == nil) {
    RAREUIColor *c = (RAREUIColor *) check_class_cast([((id<RAREiPlatformComponent>) nil_chk([((id<RAREiWidget>) nil_chk(popupWidget_)) getContainerComponent])) getClientPropertyWithNSString:[RAREiConstants RARE_FILLCOLOR_PROPERTY]], [RAREUIColor class]);
    if (c == nil) {
      c = [popupWidget_ getBackground];
    }
    if (c == nil) {
      c = [RAREUIColorHelper getBackground];
    }
    RARESharedLineBorder *b = [[RARESharedLineBorder alloc] initWithRAREUIColor:sharedBorderColor_ withFloat:sharedBorderThickness_ withInt:sharedBorderArc_];
    if (matchBackgrounds_) {
      [b setBackgroundColorWithRAREUIColor:c];
    }
    popupPainter_ = [[RAREUIComponentPainter alloc] init];
    [popupPainter_ setBorderWithRAREiPlatformBorder:b];
    [popupPainter_ setBackgroundColorWithRAREUIColor:c];
    sharedLineBorder_ = b;
    (void) [self getComponentPainterWithBoolean:YES withBoolean:YES];
  }
}

- (void)showPopupWidgetEx {
  if (popupComponent_ != nil) {
    [self disposeOfPopup];
    return;
  }
  if (popupWidget_ == nil) {
    if ((popupConfiguration_ == nil) && (popupLink_ != nil)) {
      @try {
        (void) [RAREViewerCreator createConfigurationWithRAREiWidget:self withRAREActionLink:popupLink_ withRAREiFunctionCallback:[[RAREaPushButtonWidget_$3 alloc] initWithRAREaPushButtonWidget:self]];
      }
      @catch (JavaLangException *ex) {
        [self handleExceptionWithJavaLangThrowable:ex];
        return;
      }
      popupLink_ = nil;
      return;
    }
    [self createPopupWidget];
  }
  else if (actionType_ == RARESPOTPushButton_CActionType_popup_menu) {
    [((RAREaListViewer *) check_class_cast(popupWidget_, [RAREaListViewer class])) clearSelection];
  }
  if (shareBorder_) {
    [self setupSharedBorder];
  }
  popupComponent_ = [self createPopupComponent];
  [((id<RAREiPopup>) nil_chk(popupComponent_)) setTransientWithBoolean:popupTransient_];
  [popupComponent_ setFocusableWithBoolean:popupContentFocusable_];
  [popupComponent_ setMovableWithBoolean:NO];
  [popupComponent_ setAnimatorWithRAREiPlatformAnimator:popupAnimator_];
  if (sharedLineBorder_ != nil) {
    [sharedLineBorder_ setSharersWithRAREiPlatformComponent:[self getContainerComponent] withRAREiPlatformComponent:[popupComponent_ getWindowPane]];
  }
  if (popupPainter_ != nil) {
    [popupComponent_ setComponentPainterWithRAREiPlatformComponentPainter:popupPainter_];
  }
  if ([(id) popupWidget_ conformsToProtocol: @protocol(RAREiViewer)]) {
    (void) [popupComponent_ setViewerWithRAREiViewer:(id<RAREiViewer>) check_protocol_cast(popupWidget_, @protocol(RAREiViewer))];
  }
  else {
    [popupComponent_ setContentWithRAREiPlatformComponent:[((id<RAREiWidget>) nil_chk(popupWidget_)) getContainerComponent]];
  }
  (void) [((id<RAREiFormViewer>) nil_chk([self getFormViewer])) registerFormWidgetWithRAREiWidget:popupWidget_];
  id<RAREiFormViewer> fv = [self getFormViewer];
  if (fv != [((id<RAREiWidget>) nil_chk(popupWidget_)) getFormViewer]) {
    (void) [((id<RAREiFormViewer>) nil_chk([self getFormViewer])) registerFormWidgetWithRAREiWidget:popupWidget_];
  }
  popupAttributes_ = [RAREUtils resolveOptionsWithRAREiWidget:self withJavaUtilMap:origPopupAttributes_ withJavaUtilMap:popupAttributes_];
  [popupComponent_ setOptionsWithJavaUtilMap:popupAttributes_];
  [popupComponent_ addPopupMenuListenerWithRAREiPopupMenuListener:[[RAREaPushButtonWidget_$4 alloc] initWithRAREaPushButtonWidget:self]];
  if (popupBounds_ == nil) {
    popupBounds_ = [[RAREUIRectangle alloc] init];
  }
  RAREUIDimension *d = [popupWidget_ getPreferredSize];
  if (shareBorder_) {
    ((RAREUIDimension *) nil_chk(d))->width_ += ([RAREScreenUtils PLATFORM_PIXELS_2] * sharedBorderThickness_);
    d->height_ += ([RAREScreenUtils PLATFORM_PIXELS_2] * sharedBorderThickness_);
  }
  float maxw = ((RAREUIDimension *) nil_chk([RAREScreenUtils getUsableScreenSize]))->width_ - [RAREScreenUtils PLATFORM_PIXELS_8];
  if (maxw < ((RAREUIDimension *) nil_chk(d))->width_) {
    d->width_ = maxw;
  }
  [self getProposedPopupBoundsWithRAREUIDimension:d withRAREUIRectangle:popupBounds_];
  if (popupAnimator_ != nil) {
    RARELocationEnum *loc;
    if (((RAREUIRectangle *) nil_chk(popupBounds_))->y_ < -popupBounds_->height_) {
      loc = (popupBounds_->x_ == 0) ? [RARELocationEnum TOP] : [RARELocationEnum LEFT];
    }
    else {
      loc = (popupBounds_->x_ == 0) ? [RARELocationEnum BOTTOM] : [RARELocationEnum LEFT];
    }
    [RAREaAnimator adjustAnimationWithRAREiAnimator:popupAnimator_ withBoolean:YES withRARERenderTypeEnum:sizingAnchor_ withRARELocationEnum:loc];
  }
  if (shareBorder_) {
    (void) [((RAREComponent *) nil_chk([self getContainerComponentEx])) getOrientedSizeWithRAREUIDimension:d];
    if ((((RAREUIRectangle *) nil_chk(popupBounds_))->y_ == 0) || [RAREUTSNumber isEqualWithFloat:popupBounds_->y_ + popupBounds_->height_ + d->height_ withFloat:[RAREScreenUtils PLATFORM_PIXELS_2]]) {
      popupBounds_->y_ -= [RAREScreenUtils PLATFORM_PIXELS_1];
    }
  }
  [self willShowPopupWithRAREiPopup:popupComponent_ withRAREUIRectangle:popupBounds_];
  [popupComponent_ setSizeWithFloat:((RAREUIRectangle *) nil_chk(popupBounds_))->width_ withFloat:popupBounds_->height_];
  [self updatePopupComponentWithRAREiPopup:popupComponent_];
  [self inlineActionEvent];
  [popupComponent_ showPopupWithRAREiPlatformComponent:formComponent_ withFloat:popupBounds_->x_ withFloat:popupBounds_->y_];
}

- (void)updateButtonBorderAndBackground {
  if (shareBorder_ && (popupWidget_ != nil)) {
    [((id<RAREiPlatformComponentPainter>) nil_chk([self getComponentPainter])) setSharedBorderWithRARESharedLineBorder:sharedLineBorder_];
    [self repaint];
  }
}

- (void)updatePopupComponentWithRAREiPopup:(id<RAREiPopup>)popup {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)willShowPopupWithRAREiPopup:(id<RAREiPopup>)p
                withRAREUIRectangle:(RAREUIRectangle *)bounds {
}

- (void)getProposedPopupBoundsWithRAREUIDimension:(RAREUIDimension *)contentSize
                              withRAREUIRectangle:(RAREUIRectangle *)r {
  id<RAREiPlatformBorder> b = (popupPainter_ == nil) ? nil : [popupPainter_ getBorder];
  [RAREUtils getProposedPopupBoundsWithRAREUIRectangle:r withRAREiPlatformComponent:formComponent_ withRAREUIDimension:contentSize withFloat:0 withRARERenderableDataItem_HorizontalAlignEnum:[RARERenderableDataItem_HorizontalAlignEnum AUTO] withRAREiPlatformBorder:b withBoolean:popupScrollable_ || ([(id) popupWidget_ conformsToProtocol: @protocol(RAREiListHandler)])];
  if (balloonBorder_ != nil) {
    [balloonBorder_ autoLocatePeakForProposedBoundsWithRAREiPlatformComponent:formComponent_ withRAREUIRectangle:r];
  }
}

- (id<RAREiActionListener>)getPopupMenuActionListener {
  return popupMenuActionListener_;
}

- (void)setPopupMenuActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
  self->popupMenuActionListener_ = l;
}

- (void)setPopupScrollableWithBoolean:(BOOL)scrollable {
  self->popupScrollable_ = scrollable;
}

- (void)copyAllFieldsTo:(RAREaPushButtonWidget *)other {
  [super copyAllFieldsTo:other];
  other->actionType_ = actionType_;
  other->autoClosePopup_ = autoClosePopup_;
  other->balloonBorder_ = balloonBorder_;
  other->hyperlink_ = hyperlink_;
  other->initiallySelected_aPushButtonWidget_ = initiallySelected_aPushButtonWidget_;
  other->lc_ = lc_;
  other->matchBackgrounds_ = matchBackgrounds_;
  other->origPopupAttributes_ = origPopupAttributes_;
  other->popupAnimator_ = popupAnimator_;
  other->popupAttributes_ = popupAttributes_;
  other->popupBounds_ = popupBounds_;
  other->popupButtomMenu_ = popupButtomMenu_;
  other->popupComponent_ = popupComponent_;
  other->popupConfiguration_ = popupConfiguration_;
  other->popupContentFocusable_ = popupContentFocusable_;
  other->popupLink_ = popupLink_;
  other->popupMenuActionListener_ = popupMenuActionListener_;
  other->popupPainter_ = popupPainter_;
  other->popupScrollable_ = popupScrollable_;
  other->popupTransient_ = popupTransient_;
  other->popupWidget_ = popupWidget_;
  other->shareBorder_ = shareBorder_;
  other->sharedBorderArc_ = sharedBorderArc_;
  other->sharedBorderColor_ = sharedBorderColor_;
  other->sharedBorderThickness_ = sharedBorderThickness_;
  other->sharedLineBorder_ = sharedLineBorder_;
  other->sizingAnchor_ = sizingAnchor_;
  other->togglePosition_ = togglePosition_;
  other->underlineAlways_ = underlineAlways_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "inlineActionEvent", NULL, "V", 0x4, NULL },
    { "createWithRAREiContainer:", NULL, "LRAREPushButtonWidget", 0x9, NULL },
    { "createWithRAREiContainer:withRARESPOTPushButton:", NULL, "LRAREPushButtonWidget", 0x9, NULL },
    { "getSelectedItem", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getPopupWidget", NULL, "LRAREiWidget", 0x1, NULL },
    { "getHTTPFormValue", NULL, "LNSObject", 0x1, NULL },
    { "getPopupAnimator", NULL, "LRAREiPlatformAnimator", 0x1, NULL },
    { "hasPopupWidget", NULL, "Z", 0x1, NULL },
    { "configureExWithRARESPOTPushButton:", NULL, "V", 0x4, NULL },
    { "configureMenusWithRAREiPlatformComponent:withRARESPOTWidget:withBoolean:", NULL, "V", 0x4, NULL },
    { "configurePaintersWithRARESPOTPushButton:withInt:", NULL, "V", 0x4, NULL },
    { "createPopupComponent", NULL, "LRAREiPopup", 0x4, NULL },
    { "createPopupMenuConfigurationWithInt:withNSString:", NULL, "LRARESPOTListBox", 0x4, NULL },
    { "disposeOfPopup", NULL, "V", 0x4, NULL },
    { "initializeListenersWithRAREaWidgetListener:", NULL, "V", 0x4, NULL },
    { "resetButtonBorderAndBackground", NULL, "V", 0x4, NULL },
    { "setupSharedBorder", NULL, "V", 0x4, NULL },
    { "showPopupWidgetEx", NULL, "V", 0x4, NULL },
    { "updateButtonBorderAndBackground", NULL, "V", 0x4, NULL },
    { "updatePopupComponentWithRAREiPopup:", NULL, "V", 0x404, NULL },
    { "willShowPopupWithRAREiPopup:withRAREUIRectangle:", NULL, "V", 0x4, NULL },
    { "getProposedPopupBoundsWithRAREUIDimension:withRAREUIRectangle:", NULL, "V", 0x4, NULL },
    { "getPopupMenuActionListener", NULL, "LRAREiActionListener", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "autoClosePopup_", NULL, 0x4, "Z" },
    { "matchBackgrounds_", NULL, 0x4, "Z" },
    { "sharedBorderColor_", NULL, 0x4, "LRAREUIColor" },
    { "sharedBorderThickness_", NULL, 0x4, "F" },
    { "balloonBorder_", NULL, 0x4, "LRAREUIBalloonBorder" },
    { "actionType_", NULL, 0x4, "I" },
    { "hyperlink_", NULL, 0x4, "Z" },
    { "initiallySelected_aPushButtonWidget_", "initiallySelected", 0x4, "Z" },
    { "origPopupAttributes_", NULL, 0x4, "LJavaUtilMap" },
    { "popupAnimator_", NULL, 0x4, "LRAREiPlatformAnimator" },
    { "popupAttributes_", NULL, 0x4, "LJavaUtilMap" },
    { "popupBounds_", NULL, 0x4, "LRAREUIRectangle" },
    { "popupButtomMenu_", NULL, 0x4, "LSPOTSet" },
    { "popupComponent_", NULL, 0x4, "LRAREiPopup" },
    { "popupConfiguration_", NULL, 0x4, "LRARESPOTWidget" },
    { "popupLink_", NULL, 0x4, "LRAREActionLink" },
    { "popupPainter_", NULL, 0x4, "LRAREiPlatformComponentPainter" },
    { "popupWidget_", NULL, 0x4, "LRAREiWidget" },
    { "shareBorder_", NULL, 0x4, "Z" },
    { "sharedBorderArc_", NULL, 0x4, "I" },
    { "sharedLineBorder_", NULL, 0x4, "LRARESharedLineBorder" },
    { "togglePosition_", NULL, 0x4, "I" },
    { "underlineAlways_", NULL, 0x4, "Z" },
    { "popupContentFocusable_", NULL, 0x4, "Z" },
    { "popupScrollable_", NULL, 0x4, "Z" },
    { "popupMenuActionListener_", NULL, 0x4, "LRAREiActionListener" },
    { "popupTransient_", NULL, 0x4, "Z" },
    { "lc_", NULL, 0x0, "I" },
  };
  static J2ObjcClassInfo _RAREaPushButtonWidget = { "aPushButtonWidget", "com.appnativa.rare.widget", NULL, 0x401, 23, methods, 28, fields, 0, NULL};
  return &_RAREaPushButtonWidget;
}

@end
@implementation RAREaPushButtonWidget_$1

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  [this$0_ hidePopupContainer];
  RARERenderableDataItem *item = [((RAREaListViewer *) check_class_cast(this$0_->popupWidget_, [RAREaListViewer class])) getSelectedItem];
  if (item != nil) {
    if ([item getActionListener] != nil) {
      [((id<RAREiActionListener>) nil_chk([item getActionListener])) actionPerformedWithRAREActionEvent:[[RAREActionEvent alloc] initWithId:[this$0_ getDataComponent]]];
    }
    else if (this$0_->popupMenuActionListener_ != nil) {
      [this$0_->popupMenuActionListener_ actionPerformedWithRAREActionEvent:[[RAREActionEvent alloc] initWithId:[this$0_ getDataComponent]]];
    }
  }
}

- (id)initWithRAREaPushButtonWidget:(RAREaPushButtonWidget *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaPushButtonWidget" },
  };
  static J2ObjcClassInfo _RAREaPushButtonWidget_$1 = { "$1", "com.appnativa.rare.widget", "aPushButtonWidget", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaPushButtonWidget_$1;
}

@end
@implementation RAREaPushButtonWidget_$2

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  switch (this$0_->actionType_) {
    case RARESPOTPushButton_CActionType_submit_form:
    [((id<RAREiFormViewer>) nil_chk([this$0_ getFormViewer])) submitFormWithRAREiFunctionCallback:nil];
    break;
    case RARESPOTPushButton_CActionType_clear_form:
    [((id<RAREiFormViewer>) nil_chk([this$0_ getFormViewer])) reloadForm];
    break;
    case RARESPOTPushButton_CActionType_popup_widget:
    [this$0_ showPopupWidget];
    break;
    case RARESPOTPushButton_CActionType_popup_menu:
    [this$0_ showPopupMenuWithInt:0 withInt:[this$0_ getHeight]];
    break;
    default:
    if ([this$0_ size] > 0) {
      this$0_->togglePosition_++;
      if (this$0_->togglePosition_ >= [this$0_ size]) {
        this$0_->togglePosition_ = 0;
      }
      [this$0_ setValueWithId:[((RARERenderableDataItem *) nil_chk([this$0_ getWithInt:this$0_->togglePosition_])) description]];
    }
    break;
  }
}

- (id)initWithRAREaPushButtonWidget:(RAREaPushButtonWidget *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaPushButtonWidget" },
  };
  static J2ObjcClassInfo _RAREaPushButtonWidget_$2 = { "$2", "com.appnativa.rare.widget", "aPushButtonWidget", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaPushButtonWidget_$2;
}

@end
@implementation RAREaPushButtonWidget_$3

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if ([returnValue isKindOfClass:[RARESPOTWidget class]]) {
    this$0_->popupConfiguration_ = (RARESPOTWidget *) check_class_cast(returnValue, [RARESPOTWidget class]);
    [this$0_ showPopupWidgetEx];
  }
  else if ([returnValue isKindOfClass:[JavaLangException class]]) {
    [this$0_ handleExceptionWithJavaLangThrowable:(JavaLangException *) check_class_cast(returnValue, [JavaLangException class])];
  }
}

- (id)initWithRAREaPushButtonWidget:(RAREaPushButtonWidget *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaPushButtonWidget" },
  };
  static J2ObjcClassInfo _RAREaPushButtonWidget_$3 = { "$3", "com.appnativa.rare.widget", "aPushButtonWidget", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaPushButtonWidget_$3;
}

@end
@implementation RAREaPushButtonWidget_$4

- (void)popupMenuWillBecomeVisibleWithRAREExpansionEvent:(RAREExpansionEvent *)e {
  RAREaWidgetListener *l = [this$0_ getWidgetListener];
  if (l != nil) {
    [l popupMenuWillBecomeVisibleWithRAREExpansionEvent:e];
  }
  [this$0_ updateButtonBorderAndBackground];
}

- (void)popupMenuWillBecomeInvisibleWithRAREExpansionEvent:(RAREExpansionEvent *)e {
  RAREaWidgetListener *l = [this$0_ getWidgetListener];
  if (l != nil) {
    [l popupMenuWillBecomeInvisibleWithRAREExpansionEvent:e];
  }
  [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREaPushButtonWidget_$4_$1 alloc] initWithRAREaPushButtonWidget_$4:self]];
  [this$0_ resetButtonBorderAndBackground];
}

- (void)popupMenuCanceledWithRAREExpansionEvent:(RAREExpansionEvent *)e {
  RAREaWidgetListener *l = [this$0_ getWidgetListener];
  if (l != nil) {
    [l popupMenuCanceledWithRAREExpansionEvent:e];
  }
}

- (id)initWithRAREaPushButtonWidget:(RAREaPushButtonWidget *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaPushButtonWidget" },
  };
  static J2ObjcClassInfo _RAREaPushButtonWidget_$4 = { "$4", "com.appnativa.rare.widget", "aPushButtonWidget", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaPushButtonWidget_$4;
}

@end
@implementation RAREaPushButtonWidget_$4_$1

- (void)run {
  [this$0_->this$0_ disposeOfPopup];
}

- (id)initWithRAREaPushButtonWidget_$4:(RAREaPushButtonWidget_$4 *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaPushButtonWidget_$4" },
  };
  static J2ObjcClassInfo _RAREaPushButtonWidget_$4_$1 = { "$1", "com.appnativa.rare.widget", "aPushButtonWidget$$4", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaPushButtonWidget_$4_$1;
}

@end
