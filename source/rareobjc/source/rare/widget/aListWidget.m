//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/widget/aListWidget.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/ui/Column.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIPoint.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/UISelectionModelGroup.h"
#include "com/appnativa/rare/ui/UIStroke.h"
#include "com/appnativa/rare/ui/aWidgetListener.h"
#include "com/appnativa/rare/ui/event/ActionEvent.h"
#include "com/appnativa/rare/ui/event/iActionListener.h"
#include "com/appnativa/rare/ui/event/iItemChangeListener.h"
#include "com/appnativa/rare/ui/iListHandler.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/iPlatformItemRenderer.h"
#include "com/appnativa/rare/ui/iPlatformListHandler.h"
#include "com/appnativa/rare/util/DataItemCollection.h"
#include "com/appnativa/rare/util/ListHelper.h"
#include "com/appnativa/rare/util/SubItemComparator.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/widget/aListWidget.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/util/iFilter.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"

@implementation RAREaListWidget

- (id)init {
  return [self initRAREaListWidgetWithRAREiContainer:nil];
}

- (id)initRAREaListWidgetWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    initiallySelectedIndex_ = -1;
  }
  return self;
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  return [self initRAREaListWidgetWithRAREiContainer:parent];
}

- (BOOL)addWithId:(RARERenderableDataItem *)item {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) addWithId:item];
  return YES;
}

- (void)addActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) addActionListenerWithRAREiActionListener:l];
}

- (BOOL)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) addAllWithJavaUtilCollection:c];
}

- (BOOL)addAllWithInt:(int)index
withJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) addAllWithInt:index withJavaUtilCollection:c];
}

- (void)addAllWithInt:(int)index
     withJavaUtilList:(id<JavaUtilList>)items
          withBoolean:(BOOL)insertMode {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) addAllWithInt:index withJavaUtilList:items withBoolean:insertMode];
}

- (void)addExWithRARERenderableDataItem:(RARERenderableDataItem *)row {
  [((id<JavaUtilList>) nil_chk([self getTempList])) addWithId:row];
}

- (void)addIndexToFilteredListWithInt:(int)index {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) addIndexToFilteredListWithInt:index];
}

- (void)addSelectionChangeListenerWithRAREiItemChangeListener:(id<RAREiItemChangeListener>)l {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) addSelectionChangeListenerWithRAREiItemChangeListener:l];
}

- (void)addSelectionIndexWithInt:(int)index {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) addSelectionIndexWithInt:index];
}

- (void)makeSelectionVisible {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) makeSelectionVisible];
}

- (void)clear {
  if ([((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getItemCount] > 0) {
    if (![RAREPlatform isUIThread]) {
      [RAREListHelper runLaterWithRAREiListHandler:self withRAREListHelper_RunTypeEnum:[RAREListHelper_RunTypeEnum CLEAR]];
      return;
    }
    initiallySelectedIndex_ = -1;
    itemAttributes_ = nil;
    [listComponent_ clear];
  }
}

- (void)clearContents {
  [self clear];
}

- (void)clearEx {
  if (tempList_ != nil) {
    [tempList_ clear];
  }
  tempList_ = nil;
}

- (void)clearContextMenuIndex {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) clearContextMenuIndex];
}

- (void)clearSelection {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) clearSelection];
}

- (void)convertWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  if (itemDescription_ != nil) {
    [itemDescription_ convertWithRAREiWidget:self withRARERenderableDataItem:item];
  }
}

- (void)copySelectedItemsWithInt:(int)index
                     withBoolean:(BOOL)insertMode
                     withBoolean:(BOOL)delete_ {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) copySelectedItemsWithInt:index withBoolean:insertMode withBoolean:delete_];
}

- (id)deleteSelectedDataWithBoolean:(BOOL)returnData {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) deleteSelectedDataWithBoolean:returnData];
}

- (void)dispose {
  if (listComponent_ != nil) {
    [listComponent_ dispose];
  }
  [super dispose];
  listComponent_ = nil;
  itemDescription_ = nil;
}

- (BOOL)filterWithRAREUTiFilter:(id<RAREUTiFilter>)filter {
  if ([super filterWithRAREUTiFilter:filter]) {
    [self clearSelection];
    [self repaint];
    return YES;
  }
  return NO;
}

- (BOOL)filterWithNSString:(NSString *)filter
               withBoolean:(BOOL)contains
               withBoolean:(BOOL)nullPasses
               withBoolean:(BOOL)emptyPasses {
  if ([((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) filterWithNSString:filter withBoolean:contains withBoolean:nullPasses withBoolean:emptyPasses]) {
    [self clearSelection];
    [self repaint];
    return YES;
  }
  return NO;
}

- (int)findAndSelectWithRAREUTiFilter:(id<RAREUTiFilter>)filter
                              withInt:(int)start {
  int n = [self findWithRAREUTiFilter:filter withInt:start];
  if (n != -1) {
    [self setSelectedIndexWithInt:n];
  }
  return n;
}

- (int)findAndSelectWithNSString:(NSString *)filter
                         withInt:(int)start
                     withBoolean:(BOOL)contains {
  int n = [self findWithNSString:filter withInt:start withBoolean:contains];
  if (n != -1) {
    [self setSelectedIndexWithInt:n];
  }
  return n;
}

- (void)fireActionForSelected {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) fireActionForSelected];
}

- (void)moveWithInt:(int)from
            withInt:(int)to {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) moveWithInt:from withInt:to];
}

- (void)upArrow {
  if ([self getRowCount] > 0) {
    int row = [self getSelectedIndex];
    [RAREUISelectionModelGroup selectPreviousRowWithRAREiListHandler:listComponent_ withInt:row];
  }
}

- (void)downArrow {
  if ([self getRowCount] > 0) {
    int row = [self getSelectedIndex];
    [RAREUISelectionModelGroup selectNextRowWithRAREiListHandler:listComponent_ withInt:row];
  }
}

- (void)refreshItems {
  if (![RAREPlatform isUIThread]) {
    [RAREListHelper runLaterWithRAREiListHandler:self withRAREListHelper_RunTypeEnum:[RAREListHelper_RunTypeEnum REFRESH]];
    return;
  }
  if (tempList_ != nil) {
    [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setAllWithJavaUtilCollection:tempList_];
    [tempList_ clear];
    tempList_ = nil;
  }
  else {
    [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) refreshItems];
  }
}

- (RARERenderableDataItem *)removeWithInt:(int)index {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) removeWithInt:index];
}

- (void)repaintRowWithInt:(int)row {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) repaintRowWithInt:row];
}

- (BOOL)removeWithId:(id)item {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) removeWithId:item];
}

- (void)removeActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
  if (listComponent_ != nil) {
    [listComponent_ removeActionListenerWithRAREiActionListener:l];
  }
}

- (BOOL)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) removeAllWithJavaUtilCollection:c];
}

- (void)removeRowsWithIntArray:(IOSIntArray *)indexes {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) removeRowsWithIntArray:indexes];
}

- (void)removeSelectionWithInt:(int)index {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) removeSelectionWithInt:index];
}

- (void)removeSelectionChangeListenerWithRAREiItemChangeListener:(id<RAREiItemChangeListener>)l {
  if (listComponent_ != nil) {
    [listComponent_ removeSelectionChangeListenerWithRAREiItemChangeListener:l];
  }
}

- (void)reset {
  if (widgetDataLink_ != nil) {
    [super reloadWithBoolean:YES];
  }
  else {
    [self clearSelection];
    if ((initiallySelectedIndex_ > -1) && (initiallySelectedIndex_ < [self getItemCount])) {
      [self setSelectedIndexWithInt:initiallySelectedIndex_];
    }
  }
}

- (BOOL)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) retainAllWithJavaUtilCollection:c];
}

- (void)scrollRowToTopWithInt:(int)row {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) scrollRowToTopWithInt:row];
}

- (void)scrollRowToBottomWithInt:(int)row {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) scrollRowToBottomWithInt:row];
}

- (void)scrollRowToVisibleWithInt:(int)row {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) scrollRowToVisibleWithInt:row];
}

- (void)selectAll {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) selectAll];
}

- (void)sizeRowsToFit {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) sizeRowsToFit];
}

- (void)sortWithBoolean:(BOOL)descending {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) sortWithJavaUtilComparator:descending ? [RARESubItemComparator getReverseOrderComparatorInstance] : nil];
}

- (void)sortWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) sortWithJavaUtilComparator:comparator];
}

- (BOOL)setAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setAllWithJavaUtilCollection:c];
}

- (void)setAlternatingHilightColorWithRAREUIColor:(RAREUIColor *)color {
  alternatingColor_ = color;
}

- (void)setChangeEventsEnabledWithBoolean:(BOOL)enabled {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setChangeEventsEnabledWithBoolean:enabled];
}

- (void)setChangeSelColorOnLostFocusWithBoolean:(BOOL)change {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setChangeSelColorOnLostFocusWithBoolean:change];
}

- (void)setDividerLineWithRAREUIColor:(RAREUIColor *)c
                     withRAREUIStroke:(RAREUIStroke *)stroke {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setDividerLineWithRAREUIColor:c withRAREUIStroke:stroke];
}

- (void)setHandleFirstFocusSelectionWithBoolean:(BOOL)handle {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setHandleFirstFocusSelectionWithBoolean:handle];
}

- (void)setListSelectableWithBoolean:(BOOL)selectable {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setListSelectableWithBoolean:selectable];
}

- (void)setListSelectionTypeWithRAREiListHandler_SelectionTypeEnum:(RAREiListHandler_SelectionTypeEnum *)type {
  if (listComponent_ != nil) {
    [listComponent_ setListSelectionTypeWithRAREiListHandler_SelectionTypeEnum:type];
  }
}

- (void)setSelectionModeWithRAREiListHandler_SelectionModeEnum:(RAREiListHandler_SelectionModeEnum *)selectionMode {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setSelectionModeWithRAREiListHandler_SelectionModeEnum:selectionMode];
}

- (void)setMinRowHeightWithInt:(int)min {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setMinRowHeightWithInt:min];
}

- (void)setMinimumVisibleRowCountWithInt:(int)rows {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setMinimumVisibleRowCountWithInt:rows];
}

- (void)setRowHeightWithInt:(int)height {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setRowHeightWithInt:height];
}

- (void)setSelectedIndexWithInt:(int)index {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setSelectedIndexWithInt:index];
}

- (void)setSelectedIndexesWithIntArray:(IOSIntArray *)indices {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setSelectedIndexesWithIntArray:indices];
}

- (void)setSelectedItemWithRARERenderableDataItem:(RARERenderableDataItem *)value {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setSelectedItemWithRARERenderableDataItem:value];
}

- (void)setValueWithId:(id)value {
  if (value == nil) {
    [self clearSelection];
  }
  else if ([value isKindOfClass:[RARERenderableDataItem class]]) {
    [self setSelectedItemWithRARERenderableDataItem:(RARERenderableDataItem *) check_class_cast(value, [RARERenderableDataItem class])];
  }
  else {
    int n = [self indexOfValueEqualsWithId:value];
    if (n == -1) {
      n = [self indexOfLinkedDataEqualsWithId:value];
    }
    [self setSelectedIndexWithInt:n];
  }
}

- (void)setVisibleRowCountWithInt:(int)rows {
  [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) setVisibleRowCountWithInt:rows];
}

- (RAREUIColor *)getAlternatingHilightColor {
  return alternatingColor_;
}

- (int)getAnchorSelectionIndex {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getAnchorSelectionIndex];
}

- (id<RAREiPlatformIcon>)getIcon {
  if (displayIcon_ != nil) {
    return displayIcon_;
  }
  RARERenderableDataItem *item = [self getSelectedItem];
  if ((item != nil) && ([item getIcon] != nil)) {
    return [item getIcon];
  }
  if (self->itemDescription_ != nil) {
    return [itemDescription_ getIcon];
  }
  return nil;
}

- (RARERenderableDataItem *)getItemAtWithRAREUIPoint:(RAREUIPoint *)p {
  int row = [self getRowIndexAtWithRAREUIPoint:p];
  return (row == -1) ? nil : [self getItemWithInt:row];
}

- (int)getItemCount {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) size];
}

- (RAREColumn *)getItemDescription {
  return itemDescription_;
}

- (id<RAREiPlatformItemRenderer>)getItemRenderer {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getItemRenderer];
}

- (id<RAREiPlatformComponent>)getListComponent {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getListComponent];
}

- (RAREiListHandler_SelectionTypeEnum *)getListSelectionType {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getListSelectionType];
}

- (int)getMaxSelectionIndex {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getMaxSelectionIndex];
}

- (int)getMinSelectionIndex {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getMinSelectionIndex];
}

- (int)getMinimumVisibleRowCount {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getMinimumVisibleRowCount];
}

- (RAREUIPoint *)getPopupLocationWithInt:(int)index {
  RAREUIRectangle *rect = [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getRowBoundsWithInt:index withInt:index];
  RAREUIPoint *p = [((id<RAREiPlatformComponent>) nil_chk([self getContainerComponent])) getLocationOnScreen];
  ((RAREUIPoint *) nil_chk(p))->y_ += ((RAREUIRectangle *) nil_chk(rect))->y_ + rect->height_;
  return p;
}

- (int)getContextMenuIndex {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getContextMenuIndex];
}

- (RARERenderableDataItem *)getContextMenuItem {
  int n = [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getContextMenuIndex];
  return (n == -1) ? nil : [listComponent_ getWithInt:n];
}

- (int)getPreferredHeightWithInt:(int)row {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getPreferredHeightWithInt:row];
}

- (RAREUIRectangle *)getRowBoundsWithInt:(int)row0
                                 withInt:(int)row1 {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getRowBoundsWithInt:row0 withInt:row1];
}

- (int)getRowCount {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) size];
}

- (int)getRowIndexAtWithRAREUIPoint:(RAREUIPoint *)p {
  return [self getSelectedIndex];
}

- (int)getRowIndexAtWithFloat:(float)x
                    withFloat:(float)y {
  return [self getRowIndexAtWithRAREUIPoint:[[RAREUIPoint alloc] initWithFloat:x withFloat:y]];
}

- (id<JavaUtilList>)getRows {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getRows];
}

- (int)getSelectedIndex {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getSelectedIndex];
}

- (int)getSelectedIndexCount {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getSelectedIndexCount];
}

- (IOSIntArray *)getSelectedIndexes {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getSelectedIndexes];
}

- (IOSIntArray *)getCheckedIndexes {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getCheckedIndexes];
}

- (RARERenderableDataItem *)getSelectedItem {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getSelectedItem];
}

- (id)getSelection {
  if (selectAllAllowed_) {
    return [self getSelections];
  }
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getSelectedItem];
}

- (NSString *)getSelectionAsString {
  if (selectAllAllowed_) {
    return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getSelectionAsString];
  }
  RARERenderableDataItem *item = [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getSelectedItem];
  return (item == nil) ? nil : [item description];
}

- (id)getSelectionData {
  return [RAREDataItemCollection getSelectionDataWithRAREiListHandler:listComponent_ withBoolean:selectAllAllowed_ withInt:-1];
}

- (IOSObjectArray *)getSelections {
  return [RAREDataItemCollection getSelectionsWithRAREiListHandler:listComponent_ withInt:-1];
}

- (IOSObjectArray *)getSelectionsAsStrings {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getSelectionsAsStrings];
}

- (IOSObjectArray *)getSelectionsDataAsStrings {
  return [RAREDataItemCollection getSelectionsDataAsStringsWithRAREiListHandler:listComponent_ withInt:-1];
}

- (int)getVisibleRowCount {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) getVisibleRowCount];
}

- (BOOL)hasSelection {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) hasSelection];
}

- (BOOL)hasValue {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) hasSelection];
}

- (BOOL)isChangeEventsEnabled {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) isChangeEventsEnabled];
}

- (BOOL)isChangeSelColorOnLostFocus {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) isChangeSelColorOnLostFocus];
}

- (BOOL)isHandleFirstFocusSelection {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) isHandleFirstFocusSelection];
}

- (BOOL)isListSelectable {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) isListSelectable];
}

- (BOOL)isRowSelectedWithInt:(int)row {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) isRowSelectedWithInt:row];
}

- (BOOL)isRowSelectedWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) isRowSelectedWithRARERenderableDataItem:item];
}

- (BOOL)isSubmittable {
  return [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) hasSelection];
}

- (BOOL)isTabular {
  return NO;
}

- (void)finishedLoadingEx {
  if ([self isDisposed]) {
    return;
  }
  [self handleInitialStuff];
  [super finishedLoadingEx];
}

- (void)handleInitialStuff {
  [self refreshItems];
  if (itemAttributes_ != nil) {
    [RAREaWidget handleSelectionsWithRAREiListHandler:listComponent_ withRAREaWidget_ItemAttributes:itemAttributes_];
    if ((itemAttributes_->check_ == nil) && (([self getFormViewer] == nil) || ![((id<RAREiFormViewer>) nil_chk([self getFormViewer])) isRetainInitialWidgetValues])) {
      itemAttributes_ = nil;
    }
  }
  if ([self getSelectedIndex] == -1) {
    if ((initiallySelectedIndex_ > -1) && (initiallySelectedIndex_ < [self getItemCount])) {
      [self setSelectedIndexWithInt:initiallySelectedIndex_];
    }
  }
}

- (void)setListComponentWithRAREiPlatformListHandler:(id<RAREiPlatformListHandler>)comp {
  formComponent_ = [((id<RAREiPlatformListHandler>) nil_chk(comp)) getContainerComponent];
  dataComponent_ = [comp getListComponent];
  listComponent_ = comp;
}

- (void)initializeListenersWithRAREaWidgetListener:(RAREaWidgetListener *)listener {
  [super initializeListenersWithRAREaWidgetListener:listener];
  if (actionListener_ == nil) {
    actionListener_ = [[RAREaListWidget_$1 alloc] initWithRAREaListWidget:self];
    [((id<RAREiPlatformListHandler>) nil_chk(listComponent_)) addActionListenerWithRAREiActionListener:actionListener_];
  }
}

- (id<JavaUtilList>)getTempList {
  if (tempList_ == nil) {
    tempList_ = [[JavaUtilArrayList alloc] init];
  }
  return tempList_;
}

- (NSString *)getWidgetAttributeWithNSString:(NSString *)name {
  NSString *s = [RAREListHelper getWidgetAttributeWithRAREaWidget:self withRAREiListHandler:listComponent_ withNSString:name];
  return (s == [RAREListHelper CALL_SUPER_METHOD]) ? [super getWidgetAttributeWithNSString:name] : s;
}

- (RAREUIColor *)getAlternatingRowColor {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getFirstVisibleIndex {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getLastVisibleIndex {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getRowHeight {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isDataEventsEnabled {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isKeepSelectionVisible {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setAlternatingRowColorWithRAREUIColor:(RAREUIColor *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setAutoHilightWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setDataEventsEnabledWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setDeselectEventsDisabledWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setKeepSelectionVisibleWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setShowDividerWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setSingleClickActionWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)copyAllFieldsTo:(RAREaListWidget *)other {
  [super copyAllFieldsTo:other];
  other->alternatingColor_ = alternatingColor_;
  other->initiallySelectedIndex_ = initiallySelectedIndex_;
  other->itemDescription_ = itemDescription_;
  other->listComponent_ = listComponent_;
  other->submitValueType_ = submitValueType_;
  other->tempList_ = tempList_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addWithRARERenderableDataItem:", NULL, "Z", 0x1, NULL },
    { "addAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "addAllWithInt:withJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "deleteSelectedDataWithBoolean:", NULL, "LNSObject", 0x1, NULL },
    { "filterWithRAREUTiFilter:", NULL, "Z", 0x1, NULL },
    { "filterWithNSString:withBoolean:withBoolean:withBoolean:", NULL, "Z", 0x1, NULL },
    { "removeWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "removeWithId:", NULL, "Z", 0x1, NULL },
    { "removeAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "retainAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "setAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "getAlternatingHilightColor", NULL, "LRAREUIColor", 0x1, NULL },
    { "getIcon", NULL, "LRAREiPlatformIcon", 0x1, NULL },
    { "getItemAtWithRAREUIPoint:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getItemDescription", NULL, "LRAREColumn", 0x1, NULL },
    { "getItemRenderer", NULL, "LRAREiPlatformItemRenderer", 0x1, NULL },
    { "getListComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getListSelectionType", NULL, "LRAREiListHandler_SelectionTypeEnum", 0x1, NULL },
    { "getPopupLocationWithInt:", NULL, "LRAREUIPoint", 0x1, NULL },
    { "getContextMenuItem", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getRowBoundsWithInt:withInt:", NULL, "LRAREUIRectangle", 0x1, NULL },
    { "getRows", NULL, "LJavaUtilList", 0x1, NULL },
    { "getSelectedIndexes", NULL, "LIOSIntArray", 0x1, NULL },
    { "getCheckedIndexes", NULL, "LIOSIntArray", 0x1, NULL },
    { "getSelectedItem", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getSelection", NULL, "LNSObject", 0x1, NULL },
    { "getSelectionAsString", NULL, "LNSString", 0x1, NULL },
    { "getSelectionData", NULL, "LNSObject", 0x1, NULL },
    { "getSelections", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getSelectionsAsStrings", NULL, "LIOSObjectArray", 0x1, NULL },
    { "getSelectionsDataAsStrings", NULL, "LIOSObjectArray", 0x1, NULL },
    { "hasSelection", NULL, "Z", 0x1, NULL },
    { "hasValue", NULL, "Z", 0x1, NULL },
    { "isChangeEventsEnabled", NULL, "Z", 0x1, NULL },
    { "isChangeSelColorOnLostFocus", NULL, "Z", 0x1, NULL },
    { "isHandleFirstFocusSelection", NULL, "Z", 0x1, NULL },
    { "isListSelectable", NULL, "Z", 0x1, NULL },
    { "isRowSelectedWithInt:", NULL, "Z", 0x1, NULL },
    { "isRowSelectedWithRARERenderableDataItem:", NULL, "Z", 0x1, NULL },
    { "isSubmittable", NULL, "Z", 0x1, NULL },
    { "isTabular", NULL, "Z", 0x1, NULL },
    { "finishedLoadingEx", NULL, "V", 0x4, NULL },
    { "handleInitialStuff", NULL, "V", 0x4, NULL },
    { "setListComponentWithRAREiPlatformListHandler:", NULL, "V", 0x4, NULL },
    { "initializeListenersWithRAREaWidgetListener:", NULL, "V", 0x4, NULL },
    { "getTempList", NULL, "LJavaUtilList", 0x4, NULL },
    { "getWidgetAttributeWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "getAlternatingRowColor", NULL, "LRAREUIColor", 0x401, NULL },
    { "getFirstVisibleIndex", NULL, "I", 0x401, NULL },
    { "getLastVisibleIndex", NULL, "I", 0x401, NULL },
    { "getRowHeight", NULL, "I", 0x401, NULL },
    { "isDataEventsEnabled", NULL, "Z", 0x401, NULL },
    { "isKeepSelectionVisible", NULL, "Z", 0x401, NULL },
    { "setAlternatingRowColorWithRAREUIColor:", NULL, "V", 0x401, NULL },
    { "setAutoHilightWithBoolean:", NULL, "V", 0x401, NULL },
    { "setDataEventsEnabledWithBoolean:", NULL, "V", 0x401, NULL },
    { "setDeselectEventsDisabledWithBoolean:", NULL, "V", 0x401, NULL },
    { "setKeepSelectionVisibleWithBoolean:", NULL, "V", 0x401, NULL },
    { "setShowDividerWithBoolean:", NULL, "V", 0x401, NULL },
    { "setSingleClickActionWithBoolean:", NULL, "V", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "initiallySelectedIndex_", NULL, 0x4, "I" },
    { "alternatingColor_", NULL, 0x4, "LRAREUIColor" },
    { "itemDescription_", NULL, 0x4, "LRAREColumn" },
    { "listComponent_", NULL, 0x4, "LRAREiPlatformListHandler" },
    { "submitValueType_", NULL, 0x4, "I" },
    { "tempList_", NULL, 0x4, "LJavaUtilList" },
  };
  static J2ObjcClassInfo _RAREaListWidget = { "aListWidget", "com.appnativa.rare.widget", NULL, 0x401, 60, methods, 6, fields, 0, NULL};
  return &_RAREaListWidget;
}

@end
@implementation RAREaListWidget_$1

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  id<RAREiActionListener> l = nil;
  RARERenderableDataItem *row = [this$0_ getSelectedItem];
  l = (row == nil) ? nil : [row getActionListener];
  if (l != nil) {
    if ([(id) l isKindOfClass:[RAREActionLink class]]) {
      [((RAREActionLink *) check_class_cast(l, [RAREActionLink class])) setPopupLocationWithRAREUIPoint:[this$0_ getPopupLocationWithInt:[this$0_ getSelectedIndex]]];
    }
    [l actionPerformedWithRAREActionEvent:e];
  }
}

- (id)initWithRAREaListWidget:(RAREaListWidget *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaListWidget" },
  };
  static J2ObjcClassInfo _RAREaListWidget_$1 = { "$1", "com.appnativa.rare.widget", "aListWidget", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaListWidget_$1;
}

@end
