//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/scripting/ScriptingEvent.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/scripting/ScriptingEvent.h"
#include "com/appnativa/rare/scripting/WidgetContext.h"
#include "com/appnativa/rare/scripting/iScriptHandler.h"
#include "com/appnativa/rare/ui/event/DataEvent.h"
#include "com/appnativa/rare/ui/event/DataLoadEvent.h"
#include "com/appnativa/rare/ui/event/EventBase.h"
#include "com/appnativa/rare/ui/event/ItemChangeEvent.h"
#include "com/appnativa/rare/ui/event/KeyEvent.h"
#include "com/appnativa/rare/ui/event/MouseEvent.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/EventObject.h"

@implementation RAREScriptingEvent

- (id)initWithRAREiScriptHandler:(id<RAREiScriptHandler>)sh
                    withNSString:(NSString *)type
         withJavaUtilEventObject:(JavaUtilEventObject *)e
                          withId:(id)source
                          withId:(id)related {
  if (self = [super init]) {
    [self setEventWithRAREiScriptHandler:sh withNSString:type withJavaUtilEventObject:e withId:source withId:related];
  }
  return self;
}

- (id)init {
  return [super init];
}

- (void)consume {
  if ([uiEvent_ isKindOfClass:[RAREEventBase class]]) {
    [((RAREEventBase *) check_class_cast(uiEvent_, [RAREEventBase class])) consume];
  }
}

- (void)dispose {
  if (scriptingContext_ != nil) {
    [scriptingContext_ dispose];
  }
  scriptingContext_ = nil;
}

- (id)clone {
  @try {
    return [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *ignore) {
    return [[RAREScriptingEvent alloc] initWithRAREiScriptHandler:scriptHandler_ withNSString:eventType_ withJavaUtilEventObject:uiEvent_ withId:sourceWidget_ withId:relatedWidget_];
  }
}

- (NSString *)description {
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] initWithNSString:eventType_];
  (void) [sb appendWithNSString:@"->"];
  if ([sourceWidget_ conformsToProtocol: @protocol(RAREiWidget)]) {
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"src="])) appendWithNSString:[((id<RAREiWidget>) check_protocol_cast(sourceWidget_, @protocol(RAREiWidget))) getName]])) appendWithNSString:@" "];
  }
  if ([relatedWidget_ conformsToProtocol: @protocol(RAREiWidget)]) {
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"from="])) appendWithNSString:[((id<RAREiWidget>) check_protocol_cast(relatedWidget_, @protocol(RAREiWidget))) getName]];
  }
  if (uiEvent_ != nil) {
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\nuiEvent="])) appendWithNSString:[uiEvent_ description]];
  }
  return [sb description];
}

- (void)setInvokeLaterWithBoolean:(BOOL)invokeLater {
  self->invokeLater_ = invokeLater;
}

- (RAREActionLink *)getActionLink {
  if ([uiEvent_ isKindOfClass:[RAREDataLoadEvent class]]) {
    return [((RAREDataLoadEvent *) check_class_cast(uiEvent_, [RAREDataLoadEvent class])) getActionLink];
  }
  return nil;
}

- (BOOL)getAltKey {
  if ([uiEvent_ isKindOfClass:[RAREKeyEvent class]]) {
    return [((RAREKeyEvent *) check_class_cast(uiEvent_, [RAREKeyEvent class])) isAltKeyPressed];
  }
  return NO;
}

- (int)getButton {
  return 1;
}

- (int)getCharCode {
  if ([uiEvent_ isKindOfClass:[RAREKeyEvent class]]) {
    int n = [((RAREKeyEvent *) check_class_cast(uiEvent_, [RAREKeyEvent class])) getKeyChar];
    return (n == 10) ? 13 : n;
  }
  return -1;
}

- (int)getClickCount {
  if ([uiEvent_ isKindOfClass:[RAREMouseEvent class]]) {
    return [((RAREMouseEvent *) check_class_cast(uiEvent_, [RAREMouseEvent class])) getClickCount];
  }
  return 0;
}

- (float)getClientX {
  if ([uiEvent_ isKindOfClass:[RAREMouseEvent class]]) {
    RAREMouseEvent *e = (RAREMouseEvent *) check_class_cast(uiEvent_, [RAREMouseEvent class]);
    return [((RAREMouseEvent *) nil_chk(e)) getWindowX];
  }
  return -1;
}

- (float)getClientY {
  if ([uiEvent_ isKindOfClass:[RAREMouseEvent class]]) {
    RAREMouseEvent *e = (RAREMouseEvent *) check_class_cast(uiEvent_, [RAREMouseEvent class]);
    return [((RAREMouseEvent *) nil_chk(e)) getWindowY];
  }
  return -1;
}

- (id<RAREiPlatformComponent>)getComponent {
  return [RAREaPlatformHelper componentForEventWithJavaUtilEventObject:uiEvent_];
}

- (BOOL)getCtrlKey {
  return NO;
}

- (id)getData {
  if ([uiEvent_ isKindOfClass:[RAREItemChangeEvent class]]) {
    return [((RAREItemChangeEvent *) check_class_cast(uiEvent_, [RAREItemChangeEvent class])) getNewValue];
  }
  if ([uiEvent_ isKindOfClass:[RAREDataEvent class]]) {
    return [((RAREDataEvent *) check_class_cast(uiEvent_, [RAREDataEvent class])) getData];
  }
  if ([uiEvent_ isKindOfClass:[RAREDataLoadEvent class]]) {
    return [((RAREDataLoadEvent *) check_class_cast(uiEvent_, [RAREDataLoadEvent class])) getActionLink];
  }
  return nil;
}

- (id)getFromElement {
  return relatedWidget_;
}

- (int)getKeyCode {
  if ([uiEvent_ isKindOfClass:[RAREKeyEvent class]]) {
    int n = [((RAREKeyEvent *) check_class_cast(uiEvent_, [RAREKeyEvent class])) getKeyCode];
    return (n == 10) ? 13 : n;
  }
  return -1;
}

- (float)getOffsetLeft {
  if ([uiEvent_ isKindOfClass:[RAREMouseEvent class]]) {
    return [((RAREMouseEvent *) check_class_cast(uiEvent_, [RAREMouseEvent class])) getX];
  }
  return -1;
}

- (float)getOffsetTop {
  if ([uiEvent_ isKindOfClass:[RAREMouseEvent class]]) {
    return [((RAREMouseEvent *) check_class_cast(uiEvent_, [RAREMouseEvent class])) getY];
  }
  return -1;
}

- (float)getPageX {
  if ([uiEvent_ isKindOfClass:[RAREMouseEvent class]]) {
    RAREMouseEvent *e = (RAREMouseEvent *) check_class_cast(uiEvent_, [RAREMouseEvent class]);
    return [((RAREMouseEvent *) nil_chk(e)) getWindowX];
  }
  return -1;
}

- (float)getPageY {
  if ([uiEvent_ isKindOfClass:[RAREMouseEvent class]]) {
    RAREMouseEvent *e = (RAREMouseEvent *) check_class_cast(uiEvent_, [RAREMouseEvent class]);
    return [((RAREMouseEvent *) nil_chk(e)) getWindowY];
  }
  return -1;
}

- (id)getRelatedTarget {
  return relatedWidget_;
}

- (float)getSceeenY {
  if ([uiEvent_ isKindOfClass:[RAREMouseEvent class]]) {
    return [((RAREMouseEvent *) check_class_cast(uiEvent_, [RAREMouseEvent class])) getScreenY];
  }
  return -1;
}

- (float)getScreenX {
  if ([uiEvent_ isKindOfClass:[RAREMouseEvent class]]) {
    return [((RAREMouseEvent *) check_class_cast(uiEvent_, [RAREMouseEvent class])) getScreenX];
  }
  return -1;
}

- (id<RAREiScriptHandler>)getScriptHandler {
  return scriptHandler_;
}

- (BOOL)getShiftKey {
  if ([uiEvent_ isKindOfClass:[RAREKeyEvent class]]) {
    return [((RAREKeyEvent *) check_class_cast(uiEvent_, [RAREKeyEvent class])) isShiftKeyPressed];
  }
  return NO;
}

- (id)getSource {
  return sourceWidget_;
}

- (RAREWidgetContext *)getSourceContext {
  if ([sourceWidget_ conformsToProtocol: @protocol(RAREiWidget)]) {
    return [((id<RAREiWidget>) check_protocol_cast(sourceWidget_, @protocol(RAREiWidget))) getScriptingContext];
  }
  return nil;
}

- (id)getSrcElement {
  return sourceWidget_;
}

- (RAREWidgetContext *)getTargetContext {
  if ([relatedWidget_ conformsToProtocol: @protocol(RAREiWidget)]) {
    return [((id<RAREiWidget>) check_protocol_cast(relatedWidget_, @protocol(RAREiWidget))) getScriptingContext];
  }
  return nil;
}

- (id)getToElement {
  return sourceWidget_;
}

- (NSString *)getType {
  return eventType_;
}

- (JavaUtilEventObject *)getUIEvent {
  return uiEvent_;
}

- (NSString *)getUIEventName {
  return (uiEvent_ == nil) ? @"" : [[uiEvent_ getClass] getSimpleName];
}

- (int)getWhich {
  if ([uiEvent_ isKindOfClass:[RAREKeyEvent class]]) {
    return [((RAREKeyEvent *) check_class_cast(uiEvent_, [RAREKeyEvent class])) getWhich];
  }
  return -1;
}

- (BOOL)isInvokeLater {
  return invokeLater_;
}

- (BOOL)isLeftMouseButton {
  return ([self getButton] & 1) > 0;
}

- (BOOL)isMetaKey {
  if ([uiEvent_ isKindOfClass:[RAREKeyEvent class]]) {
    return [((RAREKeyEvent *) check_class_cast(uiEvent_, [RAREKeyEvent class])) isMetaKeyPressed];
  }
  return NO;
}

- (BOOL)isMiddleMouseButton {
  return ([self getButton] & 4) > 0;
}

- (BOOL)isReturnValue {
  return returnValue_;
}

- (BOOL)isRightMouseButton {
  return ([self getButton] & 2) > 0;
}

- (BOOL)isPopupTrigger {
  if ([uiEvent_ isKindOfClass:[RAREMouseEvent class]]) {
    return [((RAREMouseEvent *) check_class_cast(uiEvent_, [RAREMouseEvent class])) isPopupTrigger];
  }
  return NO;
}

- (int)getDetail {
  return [self getDetailY];
}

- (int)getDetailX {
  if ([uiEvent_ isKindOfClass:[RAREMouseEvent class]]) {
    RAREMouseEvent *e = (RAREMouseEvent *) check_class_cast(uiEvent_, [RAREMouseEvent class]);
    return (int) [((RAREMouseEvent *) nil_chk(e)) getGestureX];
  }
  return 0;
}

- (int)getDetailY {
  if ([uiEvent_ isKindOfClass:[RAREMouseEvent class]]) {
    RAREMouseEvent *e = (RAREMouseEvent *) check_class_cast(uiEvent_, [RAREMouseEvent class]);
    return (int) [((RAREMouseEvent *) nil_chk(e)) getGestureY];
  }
  return 0;
}

- (int)getWheelDelta {
  return [self getDetailY] * 120;
}

- (BOOL)isShiftKey {
  if ([uiEvent_ isKindOfClass:[RAREKeyEvent class]]) {
    return [((RAREKeyEvent *) check_class_cast(uiEvent_, [RAREKeyEvent class])) isShiftKeyPressed];
  }
  return NO;
}

- (BOOL)isEscapeKey {
  if ([uiEvent_ isKindOfClass:[RAREKeyEvent class]]) {
    return [((RAREKeyEvent *) check_class_cast(uiEvent_, [RAREKeyEvent class])) isEscapeKeyPressed];
  }
  return NO;
}

- (void)setEventWithRAREiScriptHandler:(id<RAREiScriptHandler>)sh
                          withNSString:(NSString *)type
               withJavaUtilEventObject:(JavaUtilEventObject *)e
                                withId:(id)source
                                withId:(id)related {
  scriptHandler_ = sh;
  eventType_ = type;
  uiEvent_ = e;
  returnValue_ = YES;
  sourceWidget_ = source;
  relatedWidget_ = related;
}

- (RAREWidgetContext *)getScriptingContext {
  if (scriptingContext_ == nil) {
    scriptingContext_ = [((id<RAREiScriptHandler>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getScriptingManager])) createScriptingContextWithId:self];
  }
  return scriptingContext_;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllFieldsTo:(RAREScriptingEvent *)other {
  [super copyAllFieldsTo:other];
  other->eventType_ = eventType_;
  other->invokeLater_ = invokeLater_;
  other->relatedWidget_ = relatedWidget_;
  other->returnValue_ = returnValue_;
  other->scriptHandler_ = scriptHandler_;
  other->scriptingContext_ = scriptingContext_;
  other->sourceWidget_ = sourceWidget_;
  other->uiEvent_ = uiEvent_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x4, NULL },
    { "clone", NULL, "LNSObject", 0x1, NULL },
    { "getActionLink", NULL, "LRAREActionLink", 0x1, NULL },
    { "getAltKey", NULL, "Z", 0x1, NULL },
    { "getComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getCtrlKey", NULL, "Z", 0x1, NULL },
    { "getData", NULL, "LNSObject", 0x1, NULL },
    { "getFromElement", NULL, "LNSObject", 0x1, NULL },
    { "getRelatedTarget", NULL, "LNSObject", 0x1, NULL },
    { "getScriptHandler", NULL, "LRAREiScriptHandler", 0x1, NULL },
    { "getShiftKey", NULL, "Z", 0x1, NULL },
    { "getSource", NULL, "LNSObject", 0x1, NULL },
    { "getSourceContext", NULL, "LRAREWidgetContext", 0x1, NULL },
    { "getSrcElement", NULL, "LNSObject", 0x1, NULL },
    { "getTargetContext", NULL, "LRAREWidgetContext", 0x1, NULL },
    { "getToElement", NULL, "LNSObject", 0x1, NULL },
    { "getType", NULL, "LNSString", 0x1, NULL },
    { "getUIEvent", NULL, "LJavaUtilEventObject", 0x1, NULL },
    { "getUIEventName", NULL, "LNSString", 0x1, NULL },
    { "isInvokeLater", NULL, "Z", 0x1, NULL },
    { "isLeftMouseButton", NULL, "Z", 0x1, NULL },
    { "isMetaKey", NULL, "Z", 0x1, NULL },
    { "isMiddleMouseButton", NULL, "Z", 0x1, NULL },
    { "isReturnValue", NULL, "Z", 0x1, NULL },
    { "isRightMouseButton", NULL, "Z", 0x1, NULL },
    { "isPopupTrigger", NULL, "Z", 0x1, NULL },
    { "isShiftKey", NULL, "Z", 0x1, NULL },
    { "isEscapeKey", NULL, "Z", 0x1, NULL },
    { "setEventWithRAREiScriptHandler:withNSString:withJavaUtilEventObject:withId:withId:", NULL, "V", 0x4, NULL },
    { "getScriptingContext", NULL, "LRAREWidgetContext", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "eventType_", NULL, 0x4, "LNSString" },
    { "relatedWidget_", NULL, 0x4, "LNSObject" },
    { "returnValue_", NULL, 0x4, "Z" },
    { "sourceWidget_", NULL, 0x4, "LNSObject" },
    { "uiEvent_", NULL, 0x4, "LJavaUtilEventObject" },
  };
  static J2ObjcClassInfo _RAREScriptingEvent = { "ScriptingEvent", "com.appnativa.rare.scripting", NULL, 0x1, 30, methods, 5, fields, 0, NULL};
  return &_RAREScriptingEvent;
}

@end
