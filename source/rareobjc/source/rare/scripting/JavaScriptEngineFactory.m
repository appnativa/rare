//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/scripting/JavaScriptEngineFactory.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSObjectArray.h"
#include "com/appnativa/rare/scripting/JavaScriptEngine.h"
#include "com/appnativa/rare/scripting/JavaScriptEngineFactory.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "javax/script/ScriptEngine.h"
#include "javax/script/ScriptEngineManager.h"

@implementation RAREJavaScriptEngineFactory

static id<JavaUtilList> RAREJavaScriptEngineFactory_extensions_;
static id<JavaUtilList> RAREJavaScriptEngineFactory_mimeTypes_;
static id<JavaUtilList> RAREJavaScriptEngineFactory_names_;

+ (id<JavaUtilList>)extensions {
  return RAREJavaScriptEngineFactory_extensions_;
}

+ (void)setExtensions:(id<JavaUtilList>)extensions {
  RAREJavaScriptEngineFactory_extensions_ = extensions;
}

+ (id<JavaUtilList>)mimeTypes {
  return RAREJavaScriptEngineFactory_mimeTypes_;
}

+ (void)setMimeTypes:(id<JavaUtilList>)mimeTypes {
  RAREJavaScriptEngineFactory_mimeTypes_ = mimeTypes;
}

+ (id<JavaUtilList>)names {
  return RAREJavaScriptEngineFactory_names_;
}

+ (void)setNames:(id<JavaUtilList>)names {
  RAREJavaScriptEngineFactory_names_ = names;
}

- (void)destroy {
  if (initialized_) {
    initialized_ = NO;
  }
}

- (void)initialize__ {
  if (!initialized_) {
    initialized_ = YES;
  }
}

- (void)registerWithEngineManagerWithJavaxScriptScriptEngineManager:(JavaxScriptScriptEngineManager *)manager {
  [((JavaxScriptScriptEngineManager *) nil_chk(manager)) registerEngineExtensionWithNSString:@"js" withJavaxScriptScriptEngineFactory:self];
  id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(RAREJavaScriptEngineFactory_mimeTypes_)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    [manager registerEngineMimeTypeWithNSString:[it next] withJavaxScriptScriptEngineFactory:self];
  }
  it = [((id<JavaUtilList>) nil_chk(RAREJavaScriptEngineFactory_names_)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    [manager registerEngineNameWithNSString:[it next] withJavaxScriptScriptEngineFactory:self];
  }
}

- (NSString *)getEngineName {
  return @"JAvaScriptCore-embedded";
}

- (NSString *)getEngineVersion {
  return @"1.0";
}

- (id<JavaUtilList>)getExtensions {
  return RAREJavaScriptEngineFactory_extensions_;
}

- (NSString *)getLanguageName {
  return @"ECMAScript";
}

- (NSString *)getLanguageVersion {
  return @"1.8";
}

- (NSString *)getMethodCallSyntaxWithNSString:(NSString *)obj
                                 withNSString:(NSString *)method
                            withNSStringArray:(IOSObjectArray *)args {
  NSString *ret = [NSString stringWithFormat:@"%@.%@(", obj, method];
  int len = (int) [((IOSObjectArray *) nil_chk(args)) count];
  if (len == 0) {
    ret = [NSString stringWithFormat:@"%@)", ret];
    return ret;
  }
  for (int i = 0; i < len; i++) {
    ret = [NSString stringWithFormat:@"%@%@", ret, IOSObjectArray_Get(args, i)];
    if (i != len - 1) {
      ret = [NSString stringWithFormat:@"%@,", ret];
    }
    else {
      ret = [NSString stringWithFormat:@"%@)", ret];
    }
  }
  return ret;
}

- (id<JavaUtilList>)getMimeTypes {
  return RAREJavaScriptEngineFactory_mimeTypes_;
}

- (id<JavaUtilList>)getNames {
  return RAREJavaScriptEngineFactory_names_;
}

- (NSString *)getOutputStatementWithNSString:(NSString *)toDisplay {
  return [NSString stringWithFormat:@"print(%@)", toDisplay];
}

- (id)getParameterWithNSString:(NSString *)key {
  if ([((NSString *) nil_chk(key)) isEqual:[JavaxScriptScriptEngine NAME]]) {
    return @"javascript";
  }
  else if ([key isEqual:[JavaxScriptScriptEngine ENGINE]]) {
    return @"JavaScriptCore for Rare";
  }
  else if ([key isEqual:[JavaxScriptScriptEngine ENGINE_VERSION]]) {
    return @"1.8";
  }
  else if ([key isEqual:[JavaxScriptScriptEngine LANGUAGE]]) {
    return @"ECMAScript";
  }
  else if ([key isEqual:[JavaxScriptScriptEngine LANGUAGE_VERSION]]) {
    return @"1.8";
  }
  else if ([key isEqual:@"THREADING"]) {
    return @"MULTITHREADED";
  }
  else {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Invalid key"];
  }
}

- (NSString *)getProgramWithNSStringArray:(IOSObjectArray *)statements {
  int len = (int) [((IOSObjectArray *) nil_chk(statements)) count];
  NSString *ret = @"";
  for (int i = 0; i < len; i++) {
    ret = [NSString stringWithFormat:@"%@%@", ret, [NSString stringWithFormat:@"%@;", IOSObjectArray_Get(statements, i)]];
  }
  return ret;
}

- (id<JavaxScriptScriptEngine>)getScriptEngine {
  RAREJavaScriptEngine *ret = [[RAREJavaScriptEngine alloc] initWithRAREJavaScriptEngineFactory:self];
  return ret;
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [RAREJavaScriptEngineFactory class]) {
    {
      RAREJavaScriptEngineFactory_names_ = [[JavaUtilArrayList alloc] initWithInt:7];
      [RAREJavaScriptEngineFactory_names_ addWithId:@"js"];
      [RAREJavaScriptEngineFactory_names_ addWithId:@"JavaScript"];
      [RAREJavaScriptEngineFactory_names_ addWithId:@"javascript"];
      [RAREJavaScriptEngineFactory_names_ addWithId:@"ECMAScript"];
      [RAREJavaScriptEngineFactory_names_ addWithId:@"ecmascript"];
      RAREJavaScriptEngineFactory_names_ = [JavaUtilCollections unmodifiableListWithJavaUtilList:RAREJavaScriptEngineFactory_names_];
      RAREJavaScriptEngineFactory_mimeTypes_ = [[JavaUtilArrayList alloc] initWithInt:4];
      [RAREJavaScriptEngineFactory_mimeTypes_ addWithId:@"application/javascript"];
      [RAREJavaScriptEngineFactory_mimeTypes_ addWithId:@"application/ecmascript"];
      [RAREJavaScriptEngineFactory_mimeTypes_ addWithId:@"text/javascript"];
      [RAREJavaScriptEngineFactory_mimeTypes_ addWithId:@"text/ecmascript"];
      RAREJavaScriptEngineFactory_mimeTypes_ = [JavaUtilCollections unmodifiableListWithJavaUtilList:RAREJavaScriptEngineFactory_mimeTypes_];
      RAREJavaScriptEngineFactory_extensions_ = [[JavaUtilArrayList alloc] initWithInt:1];
      [RAREJavaScriptEngineFactory_extensions_ addWithId:@"js"];
      RAREJavaScriptEngineFactory_extensions_ = [JavaUtilCollections unmodifiableListWithJavaUtilList:RAREJavaScriptEngineFactory_extensions_];
    }
  }
}

- (void)copyAllFieldsTo:(RAREJavaScriptEngineFactory *)other {
  [super copyAllFieldsTo:other];
  other->initialized_ = initialized_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getEngineName", NULL, "LNSString", 0x1, NULL },
    { "getEngineVersion", NULL, "LNSString", 0x1, NULL },
    { "getExtensions", NULL, "LJavaUtilList", 0x1, NULL },
    { "getLanguageName", NULL, "LNSString", 0x1, NULL },
    { "getLanguageVersion", NULL, "LNSString", 0x1, NULL },
    { "getMethodCallSyntaxWithNSString:withNSString:withNSStringArray:", NULL, "LNSString", 0x1, NULL },
    { "getMimeTypes", NULL, "LJavaUtilList", 0x1, NULL },
    { "getNames", NULL, "LJavaUtilList", 0x1, NULL },
    { "getOutputStatementWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "getParameterWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "getProgramWithNSStringArray:", NULL, "LNSString", 0x1, NULL },
    { "getScriptEngine", NULL, "LJavaxScriptScriptEngine", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "extensions_", NULL, 0xa, "LJavaUtilList" },
    { "mimeTypes_", NULL, 0xa, "LJavaUtilList" },
    { "names_", NULL, 0xa, "LJavaUtilList" },
  };
  static J2ObjcClassInfo _RAREJavaScriptEngineFactory = { "JavaScriptEngineFactory", "com.appnativa.rare.scripting", NULL, 0x1, 12, methods, 3, fields, 0, NULL};
  return &_RAREJavaScriptEngineFactory;
}

@end
