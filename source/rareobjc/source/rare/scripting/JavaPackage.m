//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/scripting/JavaPackage.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/scripting/JavaPackage.h"
#include "com/appnativa/rare/scripting/WidgetContext.h"
#include "com/appnativa/rare/scripting/iScriptHandler.h"
#include "com/appnativa/util/CharScanner.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/concurrent/ConcurrentHashMap.h"

@implementation RAREJavaPackage

static id<JavaUtilMap> RAREJavaPackage_packages_;

+ (id<JavaUtilMap>)packages {
  return RAREJavaPackage_packages_;
}

+ (void)setPackages:(id<JavaUtilMap>)packages {
  RAREJavaPackage_packages_ = packages;
}

- (id)initWithNSString:(NSString *)name {
  if (self = [super init]) {
    children_ = [[JavaUtilConcurrentConcurrentHashMap alloc] init];
    self->name_ = name;
  }
  return self;
}

- (id)initWithNSString:(NSString *)name
   withRAREJavaPackage:(RAREJavaPackage *)parent {
  if (self = [super init]) {
    children_ = [[JavaUtilConcurrentConcurrentHashMap alloc] init];
    self->name_ = name;
    self->parent_ = parent;
  }
  return self;
}

+ (RAREJavaPackage *)importPackageWithNSString:(NSString *)name {
  if ([((NSString *) nil_chk(name)) indexOf:','] == -1) {
    return [RAREJavaPackage addPackageWithNSString:name];
  }
  id<JavaUtilList> list = [RAREUTCharScanner getTokensWithNSString:name withChar:',' withBoolean:YES];
  int len = [((id<JavaUtilList>) nil_chk(list)) size];
  name = [list getWithInt:0];
  if ([((NSString *) nil_chk(name)) sequenceLength] == 0) {
    return nil;
  }
  RAREJavaPackage *p = [RAREJavaPackage addPackageWithNSString:name];
  for (int i = 1; i < len; i++) {
    name = [list getWithInt:i];
    if ([((NSString *) nil_chk(name)) sequenceLength] == 0) {
      return p;
    }
    p = [((RAREJavaPackage *) nil_chk(p)) addChildPackageWithNSString:name];
  }
  return p;
}

- (NSString *)description {
  if (parent_ == nil) {
    return name_;
  }
  return [NSString stringWithFormat:@"%@.%@", [((RAREJavaPackage *) nil_chk(parent_)) description], name_];
}

+ (RAREJavaPackage *)getPackageWithNSString:(NSString *)name {
  return [((id<JavaUtilMap>) nil_chk(RAREJavaPackage_packages_)) getWithId:name];
}

- (id)getPropertyWithNSString:(NSString *)name {
  NSString *lc = [((NSString *) nil_chk(name)) lowercaseStringWithJRELocale:[JavaUtilLocale getDefault]];
  if (![((NSString *) nil_chk(lc)) isEqual:name]) {
    @try {
      return [RAREaPlatformHelper loadClassWithNSString:[NSString stringWithFormat:@"%@.%@", [self description], name]];
    }
    @catch (JavaLangClassNotFoundException *e) {
      return nil;
    }
  }
  RAREJavaPackage *p = [((id<JavaUtilMap>) nil_chk(children_)) getWithId:name];
  if (p == nil) {
    p = [[RAREJavaPackage alloc] initWithNSString:name withRAREJavaPackage:self];
    (void) [children_ putWithId:name withId:p];
  }
  return p;
}

- (RAREJavaPackage *)addChildPackageWithNSString:(NSString *)name {
  RAREJavaPackage *p = [((id<JavaUtilMap>) nil_chk(children_)) getWithId:name];
  if (p == nil) {
    p = [[RAREJavaPackage alloc] initWithNSString:name];
    (void) [children_ putWithId:name withId:p];
  }
  return p;
}

+ (RAREJavaPackage *)addPackageWithNSString:(NSString *)name {
  RAREJavaPackage *p = [((id<JavaUtilMap>) nil_chk(RAREJavaPackage_packages_)) getWithId:name];
  if (p == nil) {
    p = [[RAREJavaPackage alloc] initWithNSString:name];
    (void) [RAREJavaPackage_packages_ putWithId:name withId:p];
  }
  return p;
}

- (RAREWidgetContext *)getScriptingContext {
  if (scriptingContext_ == nil) {
    scriptingContext_ = [((id<RAREiScriptHandler>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getScriptingManager])) createScriptingContextWithId:self];
  }
  return scriptingContext_;
}

+ (void)initialize {
  if (self == [RAREJavaPackage class]) {
    RAREJavaPackage_packages_ = [[JavaUtilConcurrentConcurrentHashMap alloc] init];
    {
      (void) [RAREJavaPackage_packages_ putWithId:@"com" withId:[[RAREJavaPackage alloc] initWithNSString:@"com"]];
      (void) [RAREJavaPackage_packages_ putWithId:@"org" withId:[[RAREJavaPackage alloc] initWithNSString:@"org"]];
      (void) [RAREJavaPackage_packages_ putWithId:@"java" withId:[[RAREJavaPackage alloc] initWithNSString:@"java"]];
      (void) [RAREJavaPackage_packages_ putWithId:@"javax" withId:[[RAREJavaPackage alloc] initWithNSString:@"javax"]];
    }
  }
}

- (void)copyAllFieldsTo:(RAREJavaPackage *)other {
  [super copyAllFieldsTo:other];
  other->children_ = children_;
  other->name_ = name_;
  other->parent_ = parent_;
  other->scriptingContext_ = scriptingContext_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "importPackageWithNSString:", NULL, "LRAREJavaPackage", 0x9, NULL },
    { "getPackageWithNSString:", NULL, "LRAREJavaPackage", 0x9, NULL },
    { "getPropertyWithNSString:", NULL, "LNSObject", 0x1, NULL },
    { "addChildPackageWithNSString:", NULL, "LRAREJavaPackage", 0x2, NULL },
    { "addPackageWithNSString:", NULL, "LRAREJavaPackage", 0xa, NULL },
    { "getScriptingContext", NULL, "LRAREWidgetContext", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "packages_", NULL, 0x8, "LJavaUtilMap" },
    { "children_", NULL, 0x0, "LJavaUtilMap" },
    { "name_", NULL, 0x0, "LNSString" },
    { "parent_", NULL, 0x0, "LRAREJavaPackage" },
  };
  static J2ObjcClassInfo _RAREJavaPackage = { "JavaPackage", "com.appnativa.rare.scripting", NULL, 0x1, 6, methods, 4, fields, 0, NULL};
  return &_RAREJavaPackage;
}

@end
