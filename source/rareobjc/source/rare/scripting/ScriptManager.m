//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/scripting/ScriptManager.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/ErrorInformation.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/platform/apple/AppContext.h"
#include "com/appnativa/rare/scripting/DynamicBindings.h"
#include "com/appnativa/rare/scripting/JSScriptContext.h"
#include "com/appnativa/rare/scripting/JavaScriptEngine.h"
#include "com/appnativa/rare/scripting/JavaScriptEngineFactory.h"
#include "com/appnativa/rare/scripting/ScriptManager.h"
#include "com/appnativa/rare/scripting/WidgetContext.h"
#include "com/appnativa/rare/scripting/WidgetContextEx.h"
#include "com/appnativa/rare/scripting/aScriptManager.h"
#include "com/appnativa/rare/scripting/iScriptHandler.h"
#include "com/appnativa/rare/spot/Application.h"
#include "com/appnativa/rare/ui/Frame.h"
#include "com/appnativa/rare/ui/iWindow.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/util/Streams.h"
#include "java/io/FileInputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "java/net/URL.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "javax/script/Bindings.h"
#include "javax/script/ScriptContext.h"
#include "javax/script/ScriptEngine.h"
#include "javax/script/ScriptEngineFactory.h"
#include "javax/script/ScriptEngineManager.h"
#include "javax/script/SimpleBindings.h"
#import "RAREJSFunction.h"
#import "AppleHelper.h"
#import <javax/script/ScriptException.h>

@implementation RAREScriptManager

- (id)init {
  return [super init];
}

- (id)initWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)ctx
              withRARESPOTApplication:(RARESPOTApplication *)app {
  if (self = [super initWithRAREiPlatformAppContext:ctx withRARESPOTApplication:app withJavaxScriptBindings:[[JavaxScriptSimpleBindings alloc] init]]) {
    id<JavaxScriptScriptEngineFactory> f = (id<JavaxScriptScriptEngineFactory>) check_protocol_cast([((id<JavaUtilList>) nil_chk([((JavaxScriptScriptEngineManager *) nil_chk([RAREaScriptManager engineManager])) getEngineFactories])) getWithInt:0], @protocol(JavaxScriptScriptEngineFactory));
    (void) [((id<JavaxScriptBindings>) nil_chk([RAREaScriptManager globalBindings])) putWithId:[JavaxScriptScriptEngine LANGUAGE] withId:[((id<JavaxScriptScriptEngineFactory>) nil_chk(f)) getLanguageName]];
    (void) [[RAREaScriptManager globalBindings] putWithId:[JavaxScriptScriptEngine ENGINE_VERSION] withId:[f getEngineVersion]];
    (void) [[RAREaScriptManager globalBindings] putWithId:[JavaxScriptScriptEngine LANGUAGE_VERSION] withId:[f getLanguageVersion]];
    (void) [[RAREaScriptManager globalBindings] putWithId:[JavaxScriptScriptEngine NAME] withId:[f getLanguageName]];
  }
  return self;
}

- (id)initWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
          withJavaxScriptScriptEngine:(id<JavaxScriptScriptEngine>)engine
              withJavaxScriptBindings:(id<JavaxScriptBindings>)bindings
                        withRAREFrame:(RAREFrame *)frame
                         withNSString:(NSString *)scriptName
                         withNSString:(NSString *)source {
  return [super initWithRAREiPlatformAppContext:app withJavaxScriptScriptEngine:engine withJavaxScriptBindings:bindings withId:frame withNSString:scriptName withNSString:source];
}

- (id)InvokeNativeScriptFunctionObjectWithId:(id)sparJSFunction
                           withNSObjectArray:(IOSObjectArray *)args {
  return [((RAREJavaScriptEngine *) check_class_cast(scriptEngine_, [RAREJavaScriptEngine class])) InvokeNativeScriptFunctionObjectWithId:sparJSFunction withNSObjectArray:args];
}

- (id)InvokeNativeScriptFunctionObjectExWithId:(id)sparJSFunction
                                        withId:(id)nsArray {
  return [((RAREJavaScriptEngine *) check_class_cast(scriptEngine_, [RAREJavaScriptEngine class])) InvokeNativeScriptFunctionObjectExWithId:sparJSFunction withId:nsArray];
}

+ (void)createEngineManager {
  (void) [RAREaScriptManager setEngineManager:[[JavaxScriptScriptEngineManager alloc] init]];
  RAREJavaScriptEngineFactory *f = [[RAREJavaScriptEngineFactory alloc] init];
  [f registerWithEngineManagerWithJavaxScriptScriptEngineManager:[RAREaScriptManager engineManager]];
}

- (id)createVariableValueWithRAREWidgetContext:(RAREWidgetContext *)context
                                        withId:(id)javaobj {
  return javaobj;
}

- (id)unwrapWithId:(id)o {
  return o;
}

- (void)setGlobalVariableWithNSString:(NSString *)name
                               withId:(id)value {
  [super setGlobalVariableWithNSString:name withId:value];
  RAREJavaScriptEngine *je = (RAREJavaScriptEngine *) check_class_cast(scriptEngine_, [RAREJavaScriptEngine class]);
  [((RAREJavaScriptEngine *) nil_chk(je)) setPopulatingConstantsWithBoolean:YES];
  [je setConstantValueWithNSString:name withId:value];
  [je setPopulatingConstantsWithBoolean:NO];
}

- (id<RAREiScriptHandler>)getRootHandlerWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                                    withRAREiWindow:(id<RAREiWindow>)frame
                                                       withNSString:(NSString *)type
                                                       withNSString:(NSString *)name
                                                       withNSString:(NSString *)source
                                                        withBoolean:(BOOL)share {
  id<JavaxScriptScriptEngine> engine = [self getEngineWithNSString:type withBoolean:NO withJavaxScriptScriptContext:nil];
  if (name == nil) {
    if (source == nil) {
      name = scriptName_;
    }
    else {
      name = @"window";
    }
  }
  return [[RAREScriptManager alloc] initWithRAREiPlatformAppContext:app withJavaxScriptScriptEngine:engine withJavaxScriptBindings:share ? mainWindowBindings_ : nil withRAREFrame:(RAREFrame *) check_class_cast(frame, [RAREFrame class]) withNSString:name withNSString:source];
}

- (id)InvokeNativeScriptFunctionObjectWithId:(id)function
                 withJavaxScriptScriptEngine:(id<JavaxScriptScriptEngine>)engine
                withJavaxScriptScriptContext:(id<JavaxScriptScriptContext>)context
                                      withId:(id)scriptObject {
  return [((RAREJavaScriptEngine *) check_class_cast(engine, [RAREJavaScriptEngine class])) InvokeNativeScriptFunctionObjectWithId:function withJavaxScriptScriptEngine:engine withJavaxScriptScriptContext:context withId:scriptObject];
}

- (void)addLoadedScriptWithNSString:(NSString *)name {
}

- (void)configureDebuggingInfoWithJavaxScriptScriptEngine:(id<JavaxScriptScriptEngine>)engine
                             withJavaxScriptScriptContext:(id<JavaxScriptScriptContext>)ctx
                                             withNSString:(NSString *)name
                                             withNSString:(NSString *)source {
}

- (id<JavaxScriptScriptContext>)createScriptContextWithJavaxScriptScriptEngine:(id<JavaxScriptScriptEngine>)e {
  return [[RAREJSScriptContext alloc] initWithJavaxScriptBindings:[((RAREJavaScriptEngine *) check_class_cast(e, [RAREJavaScriptEngine class])) createBindings]];
}

- (RAREWindowViewer *)createWindowViewerWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)ctx
                                                       withNSString:(NSString *)name
                                                             withId:(id)win
                                               withRAREWindowViewer:(RAREWindowViewer *)parent
                                             withRAREiScriptHandler:(id<RAREiScriptHandler>)sh {
  return [[RAREWindowViewer alloc] initWithRAREiPlatformAppContext:ctx withNSString:name withRAREiWindowManager_iFrame:(RAREFrame *) check_class_cast(win, [RAREFrame class]) withRAREWindowViewer:parent withRAREiScriptHandler:sh];
}

- (void)initializeEngineWithJavaxScriptScriptEngine:(id<JavaxScriptScriptEngine>)engine
                       withJavaxScriptScriptContext:(id<JavaxScriptScriptContext>)context {
  if (context == nil) {
    return;
  }
  RAREJavaScriptEngine *je = (RAREJavaScriptEngine *) check_class_cast(engine, [RAREJavaScriptEngine class]);
  [((id<JavaxScriptScriptContext>) nil_chk(context)) setBindingsWithJavaxScriptBindings:[((RAREJavaScriptEngine *) nil_chk(je)) createBindings] withInt:JavaxScriptScriptContext_ENGINE_SCOPE];
  [context setAttributeWithNSString:[RAREDynamicBindings FORM] withId:theWindow_ withInt:JavaxScriptScriptContext_ENGINE_SCOPE];
  [context setAttributeWithNSString:[RAREDynamicBindings WIDGET] withId:theWindow_ withInt:JavaxScriptScriptContext_ENGINE_SCOPE];
  [je setPopulatingConstantsWithBoolean:YES];
  id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaxScriptBindings>) nil_chk([RAREaScriptManager globalBindings])) entrySet])) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id<JavaUtilMap_Entry> e = [it next];
    [je setConstantValueWithNSString:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey] withId:[e getValue]];
  }
  [je setPopulatingConstantsWithBoolean:NO];
  if (![@"false" equalsIgnoreCase:[RAREPlatform getPropertyWithNSString:@"rare.scriptingRunInit" withNSString:[RAREPlatform getPropertyWithNSString:@"jnlp.rare.scriptingRunInit" withNSString:nil]]]) {
    NSString *fileName = (NSString *) check_class_cast([context getAttributeWithNSString:[JavaxScriptScriptEngine FILENAME] withInt:JavaxScriptScriptContext_ENGINE_SCOPE], [NSString class]);
    @try {
      NSString *source = [NSString stringWithFormat:@"%@.init", [((NSString *) nil_chk([((id<JavaxScriptScriptEngineFactory>) nil_chk([((id<JavaxScriptScriptEngine>) nil_chk(engine)) getFactory])) getLanguageName])) lowercaseString]];
      NSString *code = [self getResourceStreamAsStringWithNSString:source];
      if (code != nil) {
        [context setAttributeWithNSString:[JavaxScriptScriptEngine FILENAME] withId:source withInt:JavaxScriptScriptContext_ENGINE_SCOPE];
        (void) [engine evalWithNSString:code withJavaxScriptScriptContext:context];
      }
    }
    @catch (JavaLangThrowable *e) {
      [context setAttributeWithNSString:[JavaxScriptScriptEngine FILENAME] withId:fileName withInt:JavaxScriptScriptContext_ENGINE_SCOPE];
      [RAREPlatform debugLogWithNSString:[((JavaLangThrowable *) nil_chk(e)) description]];
    }
  }
}

- (void)invokeAndWaitWithRAREiScriptHandler_iScriptRunnable:(id<RAREiScriptHandler_iScriptRunnable>)r {
  [AppleHelper invokeAndWait: r];
}

- (void)loadDebugger {
}

- (RAREWidgetContext *)newWidgetContext {
  return [[RAREWidgetContextEx alloc] init];
}

- (void)saveSourceForDebuggingWithNSString:(NSString *)scriptName
                              withNSString:(NSString *)source {
}

- (void)setupDebugger {
}

- (void)setupDynamicBindingsWithJavaxScriptScriptEngine:(id<JavaxScriptScriptEngine>)e
                           withJavaxScriptScriptContext:(id<JavaxScriptScriptContext>)sc {
  [sc setBindingsWithJavaxScriptBindings:[[RAREDynamicBindings alloc] initWithJavaxScriptBindings:[((id<JavaxScriptScriptContext>) nil_chk(sc)) getBindingsWithInt:JavaxScriptScriptContext_GLOBAL_SCOPE] withJavaxScriptBindings:[sc getBindingsWithInt:JavaxScriptScriptContext_ENGINE_SCOPE]] withInt:JavaxScriptScriptContext_GLOBAL_SCOPE];
}

- (void)setupScriptingShellWithJavaxScriptScriptEngine:(id<JavaxScriptScriptEngine>)engine {
}

- (NSString *)spiClassNameForJavascripEngineFactory {
  return nil;
}

- (RAREErrorInformation *)getNativeScriptErrorInformationWithId:(id)error {
  if ([error isKindOfClass:[JavaLangThrowable class]]) {
    return [[RAREErrorInformation alloc] initWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(error, [JavaLangThrowable class])];
  }
  return [self getNativeScriptErrorInformationExWithId:error];
}

- (RAREErrorInformation *)getNativeScriptErrorInformationExWithId:(id)error {
  NSString* msg=@"Unknown Error!!!";
  if (error != nil) {
    if([error isKindOfClass: [NSDictionary class]]) {
      NSDictionary* d=(NSDictionary*)error;
      NSString* source=d[@"sourceURL"];
      NSNumber* line=d[@"line"];
      NSString* stack=d[@"stack"];
      msg=@"Script Error";
      if(source && line) {
        msg=[NSString stringWithFormat:@"Script Error in '%@' on line:%@", source,line];
      }
      else if(source){
        msg=[NSString stringWithFormat:@"Script Error in '%@'", source];
      }
      RAREErrorInformation *ei= [[RAREErrorInformation alloc] initWithNSString:msg withNSString:msg];
      [ei setScriptStackTraceWithNSString:stack];
      return ei;
    }
    msg = [error description];
  }
  return [[RAREErrorInformation alloc] initWithId:error withNSString:nil withNSString:nil];
}

- (BOOL)isNativeScriptFunctionObjectWithId:(id)function {
  return [function isKindOfClass: [RAREJSFunction class]];
}

- (NSString *)getInitScriptWithNSString:(NSString *)name {
  NSString *s = [NSString stringWithFormat:@"raw/rare_raw_%@", name];
  @try {
    s = [((RAREAppContext *) check_class_cast(appContext_, [RAREAppContext class])) makeResourcePathWithNSString:s withNSString:nil];
    if (s != nil) {
      JavaIoFileInputStream *fin = [[JavaIoFileInputStream alloc] initWithNSString:s];
      return [RAREUTStreams streamToStringWithJavaIoInputStream:fin];
    }
  }
  @catch (JavaLangException *e) {
    [RAREPlatform ignoreExceptionWithNSString:s withJavaLangThrowable:e];
  }
  return nil;
}

- (NSString *)getResourceStreamAsStringWithNSString:(NSString *)source {
  @try {
    JavaNetURL *url = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getResourceURLWithNSString:source];
    if (url != nil) {
      RAREActionLink *l = [[RAREActionLink alloc] initWithRAREiWidget:nil withJavaNetURL:url];
      return [l getContentAsString];
    }
  }
  @catch (JavaLangException *e) {
    [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
  }
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "InvokeNativeScriptFunctionObjectWithId:withNSObjectArray:", NULL, "LNSObject", 0x81, NULL },
    { "InvokeNativeScriptFunctionObjectExWithId:withId:", NULL, "LNSObject", 0x1, NULL },
    { "createVariableValueWithRAREWidgetContext:withId:", NULL, "LNSObject", 0x1, NULL },
    { "unwrapWithId:", NULL, "LNSObject", 0x1, NULL },
    { "getRootHandlerWithRAREiPlatformAppContext:withRAREiWindow:withNSString:withNSString:withNSString:withBoolean:", NULL, "LRAREiScriptHandler", 0x1, NULL },
    { "InvokeNativeScriptFunctionObjectWithId:withJavaxScriptScriptEngine:withJavaxScriptScriptContext:withId:", NULL, "LNSObject", 0x4, NULL },
    { "addLoadedScriptWithNSString:", NULL, "V", 0x4, NULL },
    { "configureDebuggingInfoWithJavaxScriptScriptEngine:withJavaxScriptScriptContext:withNSString:withNSString:", NULL, "V", 0x4, NULL },
    { "createScriptContextWithJavaxScriptScriptEngine:", NULL, "LJavaxScriptScriptContext", 0x4, NULL },
    { "createWindowViewerWithRAREiPlatformAppContext:withNSString:withId:withRAREWindowViewer:withRAREiScriptHandler:", NULL, "LRAREWindowViewer", 0x4, NULL },
    { "initializeEngineWithJavaxScriptScriptEngine:withJavaxScriptScriptContext:", NULL, "V", 0x4, NULL },
    { "invokeAndWaitWithRAREiScriptHandler_iScriptRunnable:", NULL, "V", 0x104, NULL },
    { "loadDebugger", NULL, "V", 0x4, NULL },
    { "newWidgetContext", NULL, "LRAREWidgetContext", 0x4, NULL },
    { "saveSourceForDebuggingWithNSString:withNSString:", NULL, "V", 0x4, NULL },
    { "setupDebugger", NULL, "V", 0x4, NULL },
    { "setupDynamicBindingsWithJavaxScriptScriptEngine:withJavaxScriptScriptContext:", NULL, "V", 0x4, NULL },
    { "setupScriptingShellWithJavaxScriptScriptEngine:", NULL, "V", 0x4, NULL },
    { "spiClassNameForJavascripEngineFactory", NULL, "LNSString", 0x4, NULL },
    { "getNativeScriptErrorInformationWithId:", NULL, "LRAREErrorInformation", 0x4, NULL },
    { "getNativeScriptErrorInformationExWithId:", NULL, "LRAREErrorInformation", 0x104, NULL },
    { "isNativeScriptFunctionObjectWithId:", NULL, "Z", 0x104, NULL },
    { "getInitScriptWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "getResourceStreamAsStringWithNSString:", NULL, "LNSString", 0x2, NULL },
  };
  static J2ObjcClassInfo _RAREScriptManager = { "ScriptManager", "com.appnativa.rare.scripting", NULL, 0x1, 24, methods, 0, NULL, 0, NULL};
  return &_RAREScriptManager;
}

@end
