//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/scripting/JSCocoaBindings.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "com/appnativa/rare/scripting/DynamicBindings.h"
#include "com/appnativa/rare/scripting/JSCocoaBindings.h"
#include "com/appnativa/rare/scripting/JavaScriptEngine.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "javax/script/ScriptEngine.h"
#import "RAREJSEngine.h"

@implementation RAREJSCocoaBindings

- (id)initWithId:(id)engineProxy {
  if (self = [super init]) {
    engineVars_ = [[RAREJSCocoaBindings_GlobalVariables alloc] init];
    proxy_ = engineProxy;
    iterator_ = [[RAREJSCocoaBindings_BindingsIterator alloc] initWithId:proxy_ withId:nil];
  }
  return self;
}

- (void)clear {
  [super clear];
  [((RAREJSCocoaBindings_GlobalVariables *) nil_chk(engineVars_)) clear];
}

- (BOOL)containsKeyWithId:(id)key {
  RAREJSCocoaBindings_GlobalVariables *gv = engineVars_;
  if (key == [RAREDynamicBindings WIDGET]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->widget_ != nil;
  }
  if (key == [RAREDynamicBindings WINDOW]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->window_ != nil;
  }
  if (key == [RAREDynamicBindings FORM]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->form_ != nil;
  }
  if (key == [JavaxScriptScriptEngine FILENAME]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->fileName_ != nil;
  }
  if ([nil_chk(key) isEqual:[RAREDynamicBindings WIDGET]]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->widget_ != nil;
  }
  if ([key isEqual:[RAREDynamicBindings WINDOW]]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->window_ != nil;
  }
  if ([key isEqual:[RAREDynamicBindings FORM]]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->form_ != nil;
  }
  if ([key isEqual:[JavaxScriptScriptEngine FILENAME]]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->fileName_ != nil;
  }
  return [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) containsKeyWithNSString:(NSString *) check_class_cast(key, [NSString class])];
}

- (id<JavaUtilSet>)entrySet {
  return [[RAREJSCocoaBindings_BindingsEntrySet alloc] initWithId:proxy_];
}

- (id)putWithId:(NSString *)key
         withId:(id)value {
  RAREJSCocoaBindings_GlobalVariables *gv = engineVars_;
  id ov;
  if (key == [RAREDynamicBindings WIDGET]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->widget_;
    gv->widget_ = value;
    if (ov != value) {
      ov = [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) setValueWithNSString:key withId:value];
    }
  }
  else if (key == [RAREDynamicBindings WINDOW]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->window_;
    gv->window_ = value;
    if (ov != value) {
      ov = [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) setValueWithNSString:key withId:value];
    }
  }
  else if (key == [RAREDynamicBindings FORM]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->form_;
    gv->form_ = value;
    if (ov != value) {
      ov = [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) setValueWithNSString:key withId:value];
    }
  }
  else if (key == [JavaxScriptScriptEngine FILENAME]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->fileName_;
    gv->fileName_ = value;
  }
  else if ([((NSString *) nil_chk(key)) isEqual:[RAREDynamicBindings WIDGET]]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->widget_;
    gv->widget_ = value;
    if (ov != value) {
      ov = [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) setValueWithNSString:key withId:value];
    }
  }
  else if ([key isEqual:[RAREDynamicBindings WINDOW]]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->window_;
    gv->window_ = value;
    if (ov != value) {
      ov = [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) setValueWithNSString:key withId:value];
    }
  }
  else if ([key isEqual:[RAREDynamicBindings FORM]]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->form_;
    gv->form_ = value;
    if (ov != value) {
      ov = [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) setValueWithNSString:key withId:value];
    }
  }
  else if ([key isEqual:[JavaxScriptScriptEngine FILENAME]]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->fileName_;
    gv->fileName_ = value;
  }
  else {
    ov = [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) setValueWithNSString:key withId:value];
  }
  return ov;
}

- (id)removeWithId:(id)key {
  RAREJSCocoaBindings_GlobalVariables *gv = engineVars_;
  id ov;
  if (key == [RAREDynamicBindings WIDGET]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->widget_;
    gv->widget_ = nil;
    if (ov != nil) {
      (void) [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) removeWithNSString:(NSString *) check_class_cast(key, [NSString class])];
    }
  }
  else if (key == [RAREDynamicBindings WINDOW]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->window_;
    gv->window_ = nil;
    if (ov != nil) {
      (void) [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) removeWithNSString:(NSString *) check_class_cast(key, [NSString class])];
    }
  }
  else if (key == [RAREDynamicBindings FORM]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->form_;
    gv->form_ = nil;
    if (ov != nil) {
      (void) [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) removeWithNSString:(NSString *) check_class_cast(key, [NSString class])];
    }
  }
  else if (key == [JavaxScriptScriptEngine FILENAME]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->fileName_;
    gv->fileName_ = nil;
  }
  else if ([nil_chk(key) isEqual:[RAREDynamicBindings WIDGET]]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->widget_;
    gv->widget_ = nil;
    if (ov != nil) {
      (void) [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) removeWithNSString:(NSString *) check_class_cast(key, [NSString class])];
    }
  }
  else if ([key isEqual:[RAREDynamicBindings WINDOW]]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->window_;
    gv->window_ = nil;
    if (ov != nil) {
      (void) [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) removeWithNSString:(NSString *) check_class_cast(key, [NSString class])];
    }
  }
  else if ([key isEqual:[RAREDynamicBindings FORM]]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->form_;
    gv->form_ = nil;
    if (ov != nil) {
      (void) [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) removeWithNSString:(NSString *) check_class_cast(key, [NSString class])];
    }
  }
  else if ([key isEqual:[JavaxScriptScriptEngine FILENAME]]) {
    ov = ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->fileName_;
    gv->fileName_ = nil;
  }
  else {
    ov = [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) removeWithNSString:(NSString *) check_class_cast(key, [NSString class])];
  }
  return ov;
}

- (void)setEngineWithRAREJavaScriptEngine:(RAREJavaScriptEngine *)e {
  self->proxy_ = ((RAREJavaScriptEngine *) nil_chk(e))->proxy_;
}

- (id)getWithId:(id)key {
  RAREJSCocoaBindings_GlobalVariables *gv = engineVars_;
  if (key == [RAREDynamicBindings WIDGET]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->widget_;
  }
  if (key == [RAREDynamicBindings WINDOW]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->window_;
  }
  if (key == [RAREDynamicBindings FORM]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->form_;
  }
  if (key == [JavaxScriptScriptEngine FILENAME]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->fileName_;
  }
  if ([nil_chk(key) isEqual:[RAREDynamicBindings WIDGET]]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->widget_;
  }
  if ([key isEqual:[RAREDynamicBindings WINDOW]]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->window_;
  }
  if ([key isEqual:[RAREDynamicBindings FORM]]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->form_;
  }
  if ([key isEqual:[JavaxScriptScriptEngine FILENAME]]) {
    return ((RAREJSCocoaBindings_GlobalVariables *) nil_chk(gv))->fileName_;
  }
  return [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) getValueWithNSString:(NSString *) check_class_cast(key, [NSString class])];
}

- (void)copyAllFieldsTo:(RAREJSCocoaBindings *)other {
  [super copyAllFieldsTo:other];
  other->engineVars_ = engineVars_;
  other->iterator_ = iterator_;
  other->proxy_ = proxy_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "containsKeyWithId:", NULL, "Z", 0x1, NULL },
    { "entrySet", NULL, "LJavaUtilSet", 0x1, NULL },
    { "putWithNSString:withId:", NULL, "LNSObject", 0x1, NULL },
    { "removeWithId:", NULL, "LNSObject", 0x1, NULL },
    { "getWithId:", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "iterator_", NULL, 0x0, "LRAREJSCocoaBindings_BindingsIterator" },
    { "proxy_", NULL, 0x0, "LNSObject" },
    { "engineVars_", NULL, 0x0, "LRAREJSCocoaBindings_GlobalVariables" },
  };
  static const char *superclass_type_args[] = {"LNSString", "LNSObject"};
  static J2ObjcClassInfo _RAREJSCocoaBindings = { "JSCocoaBindings", "com.appnativa.rare.scripting", NULL, 0x1, 5, methods, 3, fields, 2, superclass_type_args};
  return &_RAREJSCocoaBindings;
}

@end
@implementation RAREJSCocoaBindings_BindingsEntrySet

- (id)initWithId:(id)engine {
  if (self = [super init]) {
    self->engine_ = engine;
  }
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return [[RAREJSCocoaBindings_BindingsIterator alloc] initWithId:engine_ withId:(iterator__ == nil) ? nil : iterator__->namesArray_];
}

- (int)size {
  if (iterator__ == nil) {
    iterator__ = [[RAREJSCocoaBindings_BindingsIterator alloc] initWithId:engine_ withId:nil];
  }
  return [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator__)) size];
}

- (void)copyAllFieldsTo:(RAREJSCocoaBindings_BindingsEntrySet *)other {
  [super copyAllFieldsTo:other];
  other->engine_ = engine_;
  other->iterator__ = iterator__;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "iterator", NULL, "LJavaUtilIterator", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "engine_", NULL, 0x0, "LNSObject" },
    { "iterator__", "iterator", 0x0, "LRAREJSCocoaBindings_BindingsIterator" },
  };
  static const char *superclass_type_args[] = {"LJavaUtilMap_Entry"};
  static J2ObjcClassInfo _RAREJSCocoaBindings_BindingsEntrySet = { "BindingsEntrySet", "com.appnativa.rare.scripting", "JSCocoaBindings", 0x8, 1, methods, 2, fields, 1, superclass_type_args};
  return &_RAREJSCocoaBindings_BindingsEntrySet;
}

@end
@implementation RAREJSCocoaBindings_BindingsIterator

- (id)initWithId:(id)engine
          withId:(id)namesArray {
  if (self = [super init]) {
    self->engine_ = engine;
    self->namesArray_ = namesArray;
  }
  return self;
}

- (id<JavaUtilMap_Entry>)next {
  if (pos_ >= count_) {
    @throw [[JavaUtilNoSuchElementException alloc] init];
  }
  currentName_ = [self getNameWithInt:pos_++];
  currentDeleted_ = NO;
  return [[RAREJSCocoaBindings_JSEntry alloc] initWithNSString:currentName_ withRAREJSCocoaBindings_BindingsIterator:self];
}

- (void)remove {
  if ((pos_ >= count_) || (currentName_ == nil)) {
    @throw [[JavaUtilNoSuchElementException alloc] init];
  }
  (void) [self removeWithNSString:currentName_];
  currentDeleted_ = YES;
}

- (void)reset {
  namesArray_ = nil;
  pos_ = 0;
  count_ = 0;
  currentName_ = nil;
  currentDeleted_ = NO;
}

- (int)size {
  if (namesArray_ == nil) {
    [self loadNames];
  }
  return count_;
}

- (BOOL)hasNext {
  if (namesArray_ == nil) {
    [self loadNames];
  }
  return pos_ < count_;
}

- (BOOL)containsKeyWithNSString:(NSString *)name {
  return [((RAREJSEngine*)engine_) hasProperty: name];
}

- (void)loadNames {
  namesArray_=[((RAREJSEngine*)engine_) getPropertyNames];
  count_=(int)[((NSArray*)namesArray_) count];
}

- (id)removeWithNSString:(NSString *)name {
  [((RAREJSEngine*)engine_) deleteValue: name];
  return nil;
}

- (id)setValueWithNSString:(NSString *)name
                    withId:(id)value {
  [((RAREJSEngine*)engine_) setValue: value withName: name];
  return nil;
}

- (NSString *)getNameWithInt:(int)pos {
  return (NSString*)[((NSArray*)namesArray_) objectAtIndex: pos];
}

- (id)getValueWithNSString:(NSString *)name {
  return (NSObject*)[((RAREJSEngine*)engine_) getValue: name];
}

- (void)copyAllFieldsTo:(RAREJSCocoaBindings_BindingsIterator *)other {
  [super copyAllFieldsTo:other];
  other->count_ = count_;
  other->currentDeleted_ = currentDeleted_;
  other->currentName_ = currentName_;
  other->engine_ = engine_;
  other->namesArray_ = namesArray_;
  other->pos_ = pos_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "next", NULL, "LJavaUtilMap_Entry", 0x1, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL },
    { "containsKeyWithNSString:", NULL, "Z", 0x100, NULL },
    { "loadNames", NULL, "V", 0x104, NULL },
    { "removeWithNSString:", NULL, "LNSObject", 0x104, NULL },
    { "setValueWithNSString:withId:", NULL, "LNSObject", 0x104, NULL },
    { "getNameWithInt:", NULL, "LNSString", 0x104, NULL },
    { "getValueWithNSString:", NULL, "LNSObject", 0x100, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "count_", NULL, 0x0, "I" },
    { "currentDeleted_", NULL, 0x0, "Z" },
    { "currentName_", NULL, 0x0, "LNSString" },
    { "engine_", NULL, 0x0, "LNSObject" },
    { "namesArray_", NULL, 0x0, "LNSObject" },
    { "pos_", NULL, 0x0, "I" },
  };
  static J2ObjcClassInfo _RAREJSCocoaBindings_BindingsIterator = { "BindingsIterator", "com.appnativa.rare.scripting", "JSCocoaBindings", 0x8, 8, methods, 6, fields, 0, NULL};
  return &_RAREJSCocoaBindings_BindingsIterator;
}

@end
@implementation RAREJSCocoaBindings_JSEntry

- (id)initWithNSString:(NSString *)key
withRAREJSCocoaBindings_BindingsIterator:(RAREJSCocoaBindings_BindingsIterator *)iterator {
  if (self = [super init]) {
    self->key_ = key;
    self->iterator_ = iterator;
  }
  return self;
}

- (id)setValueWithId:(id)value {
  id v = [self getValue];
  (void) [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) setValueWithNSString:key_ withId:value];
  return v;
}

- (NSString *)getKey {
  return key_;
}

- (id)getValue {
  if (!gotValue_) {
    gotValue_ = YES;
    value_ = [((RAREJSCocoaBindings_BindingsIterator *) nil_chk(iterator_)) getValueWithNSString:key_];
  }
  return value_;
}

- (void)copyAllFieldsTo:(RAREJSCocoaBindings_JSEntry *)other {
  [super copyAllFieldsTo:other];
  other->gotValue_ = gotValue_;
  other->iterator_ = iterator_;
  other->key_ = key_;
  other->value_ = value_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "setValueWithId:", NULL, "LNSObject", 0x1, NULL },
    { "getKey", NULL, "LNSString", 0x1, NULL },
    { "getValue", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "gotValue_", NULL, 0x0, "Z" },
    { "iterator_", NULL, 0x0, "LRAREJSCocoaBindings_BindingsIterator" },
    { "key_", NULL, 0x0, "LNSString" },
    { "value_", NULL, 0x0, "LNSObject" },
  };
  static J2ObjcClassInfo _RAREJSCocoaBindings_JSEntry = { "JSEntry", "com.appnativa.rare.scripting", "JSCocoaBindings", 0x8, 3, methods, 4, fields, 0, NULL};
  return &_RAREJSCocoaBindings_JSEntry;
}

@end
@implementation RAREJSCocoaBindings_GlobalVariables

- (void)clear {
  widget_ = nil;
  form_ = nil;
  window_ = nil;
  fileName_ = nil;
}

- (id)init {
  return [super init];
}

- (void)copyAllFieldsTo:(RAREJSCocoaBindings_GlobalVariables *)other {
  [super copyAllFieldsTo:other];
  other->fileName_ = fileName_;
  other->form_ = form_;
  other->widget_ = widget_;
  other->window_ = window_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "clear", NULL, "V", 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "widget_", NULL, 0x0, "LNSObject" },
    { "form_", NULL, 0x0, "LNSObject" },
    { "window_", NULL, 0x0, "LNSObject" },
    { "fileName_", NULL, 0x0, "LNSObject" },
  };
  static J2ObjcClassInfo _RAREJSCocoaBindings_GlobalVariables = { "GlobalVariables", "com.appnativa.rare.scripting", "JSCocoaBindings", 0x8, 1, methods, 4, fields, 0, NULL};
  return &_RAREJSCocoaBindings_GlobalVariables;
}

@end
