//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/spot/Tree.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/spot/DataItem.h"
#include "com/appnativa/rare/spot/GridCell.h"
#include "com/appnativa/rare/spot/ItemDescription.h"
#include "com/appnativa/rare/spot/ScrollPane.h"
#include "com/appnativa/rare/spot/Tree.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTEnumerated.h"
#include "com/appnativa/spot/SPOTInteger.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSequence.h"
#include "com/appnativa/spot/aSPOTElement.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "java/lang/Boolean.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Integer.h"

@implementation RARESPOTTree

- (id)init {
  return [self initRARESPOTTreeWithBoolean:YES];
}

- (id)initRARESPOTTreeWithBoolean:(BOOL)optional {
  if (self = [super initWithBoolean:optional withBoolean:NO]) {
    selectionMode_ = [[RARESPOTTree_CSelectionMode alloc] initWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:[JavaLangInteger valueOfWithInt:RARESPOTTree_CSelectionMode_single] withNSString:@"single" withBoolean:YES];
    editingMode_ = [[RARESPOTTree_CEditingMode alloc] initWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:[JavaLangInteger valueOfWithInt:RARESPOTTree_CEditingMode_none] withNSString:@"none" withBoolean:NO];
    rootNode_ = nil;
    showRootHandles_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    showRootNode_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    rootNodeCollapsible_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    parentItemsSelectable_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    toggleOnTwistyOnly_ = [[SPOTBoolean alloc] init];
    indentBy_ = [[SPOTInteger alloc] initWithNSNumber:nil withNSNumber:[JavaLangInteger valueOfWithInt:-1] withNSNumber:[JavaLangInteger valueOfWithInt:100] withNSNumber:[JavaLangInteger valueOfWithInt:16] withBoolean:NO];
    changeSelColorOnLostFocus_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    deselectEventsEnabled_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    itemCursorsSupported_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    singleClickActionEnabled_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    leafIcon_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:255 withBoolean:YES];
    folderOpenIcon_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:255 withBoolean:YES];
    folderClosedIcon_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:255 withBoolean:YES];
    itemDescription_ = nil;
    selectedIndex_ = [[SPOTInteger alloc] initWithNSNumber:nil withNSNumber:[JavaLangInteger valueOfWithInt:-1] withNSNumber:nil withNSNumber:[JavaLangInteger valueOfWithInt:-1] withBoolean:NO];
    handleFirstFocusSelection_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    submitValue_ = [[RARESPOTTree_CSubmitValue alloc] initWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:[JavaLangInteger valueOfWithInt:RARESPOTTree_CSubmitValue_selected_value_text] withNSString:@"selected_value_text" withBoolean:NO];
    minVisibleRowCount_ = [[SPOTInteger alloc] initWithNSString:nil withLong:1 withBoolean:NO];
    visibleRowCount_ = [[SPOTInteger alloc] init];
    rowHeight_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:32 withNSString:@"1ln" withBoolean:NO];
    alternatingHighlightColor_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:64 withBoolean:YES];
    selectionGroupName_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:64 withBoolean:YES];
    scrollPane_ = nil;
    overlapAutoToolTips_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    expandAll_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    autoScrollOnExpansion_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    autoSizeRowsToFit_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    showDividerLine_ = [[SPOTBoolean alloc] init];
    dividerLineStyle_ = [[RARESPOTTree_CDividerLineStyle alloc] initWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:[JavaLangInteger valueOfWithInt:RARESPOTTree_CDividerLineStyle_solid] withNSString:@"solid" withBoolean:NO];
    dividerLineColor_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:64 withBoolean:YES];
    selectionPainter_ = nil;
    lostFocusSelectionPainter_ = nil;
    [self spot_setElements];
  }
  return self;
}

- (id)initWithBoolean:(BOOL)optional {
  return [self initRARESPOTTreeWithBoolean:optional];
}

- (id)initWithBoolean:(BOOL)optional
          withBoolean:(BOOL)setElements {
  if (self = [super initWithBoolean:optional withBoolean:setElements]) {
    selectionMode_ = [[RARESPOTTree_CSelectionMode alloc] initWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:[JavaLangInteger valueOfWithInt:RARESPOTTree_CSelectionMode_single] withNSString:@"single" withBoolean:YES];
    editingMode_ = [[RARESPOTTree_CEditingMode alloc] initWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:[JavaLangInteger valueOfWithInt:RARESPOTTree_CEditingMode_none] withNSString:@"none" withBoolean:NO];
    rootNode_ = nil;
    showRootHandles_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    showRootNode_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    rootNodeCollapsible_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    parentItemsSelectable_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    toggleOnTwistyOnly_ = [[SPOTBoolean alloc] init];
    indentBy_ = [[SPOTInteger alloc] initWithNSNumber:nil withNSNumber:[JavaLangInteger valueOfWithInt:-1] withNSNumber:[JavaLangInteger valueOfWithInt:100] withNSNumber:[JavaLangInteger valueOfWithInt:16] withBoolean:NO];
    changeSelColorOnLostFocus_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    deselectEventsEnabled_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    itemCursorsSupported_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    singleClickActionEnabled_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    leafIcon_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:255 withBoolean:YES];
    folderOpenIcon_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:255 withBoolean:YES];
    folderClosedIcon_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:255 withBoolean:YES];
    itemDescription_ = nil;
    selectedIndex_ = [[SPOTInteger alloc] initWithNSNumber:nil withNSNumber:[JavaLangInteger valueOfWithInt:-1] withNSNumber:nil withNSNumber:[JavaLangInteger valueOfWithInt:-1] withBoolean:NO];
    handleFirstFocusSelection_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    submitValue_ = [[RARESPOTTree_CSubmitValue alloc] initWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:[JavaLangInteger valueOfWithInt:RARESPOTTree_CSubmitValue_selected_value_text] withNSString:@"selected_value_text" withBoolean:NO];
    minVisibleRowCount_ = [[SPOTInteger alloc] initWithNSString:nil withLong:1 withBoolean:NO];
    visibleRowCount_ = [[SPOTInteger alloc] init];
    rowHeight_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:32 withNSString:@"1ln" withBoolean:NO];
    alternatingHighlightColor_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:64 withBoolean:YES];
    selectionGroupName_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:64 withBoolean:YES];
    scrollPane_ = nil;
    overlapAutoToolTips_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    expandAll_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    autoScrollOnExpansion_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    autoSizeRowsToFit_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    showDividerLine_ = [[SPOTBoolean alloc] init];
    dividerLineStyle_ = [[RARESPOTTree_CDividerLineStyle alloc] initWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:[JavaLangInteger valueOfWithInt:RARESPOTTree_CDividerLineStyle_solid] withNSString:@"solid" withBoolean:NO];
    dividerLineColor_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:64 withBoolean:YES];
    selectionPainter_ = nil;
    lostFocusSelectionPainter_ = nil;
  }
  return self;
}

- (void)spot_setElements {
  self->elementsSizeHint_ += 35;
  self->attributeSizeHint_ += 8;
  [super spot_setElements];
  [self spot_defineAttributeWithNSString:@"onAction" withNSString:nil];
  [self spot_defineAttributeWithNSString:@"onChange" withNSString:nil];
  [self spot_defineAttributeWithNSString:@"onWillExpand" withNSString:nil];
  [self spot_defineAttributeWithNSString:@"onWillCollapse" withNSString:nil];
  [self spot_defineAttributeWithNSString:@"onHasCollapsed" withNSString:nil];
  [self spot_defineAttributeWithNSString:@"onHasExpanded" withNSString:nil];
  [self spot_defineAttributeWithNSString:@"onItemChanged" withNSString:nil];
  [self spot_defineAttributeWithNSString:@"onItemDeleted" withNSString:nil];
  [self spot_addElementWithNSString:@"selectionMode" withISPOTElement:selectionMode_];
  [((RARESPOTTree_CSelectionMode *) nil_chk(selectionMode_)) spot_defineAttributeWithNSString:@"paintRow" withNSString:nil];
  [self spot_addElementWithNSString:@"editingMode" withISPOTElement:editingMode_];
  [self spot_addElementWithNSString:@"rootNode" withISPOTElement:rootNode_];
  [self spot_addElementWithNSString:@"showRootHandles" withISPOTElement:showRootHandles_];
  [self spot_addElementWithNSString:@"showRootNode" withISPOTElement:showRootNode_];
  [self spot_addElementWithNSString:@"rootNodeCollapsible" withISPOTElement:rootNodeCollapsible_];
  [self spot_addElementWithNSString:@"parentItemsSelectable" withISPOTElement:parentItemsSelectable_];
  [self spot_addElementWithNSString:@"toggleOnTwistyOnly" withISPOTElement:toggleOnTwistyOnly_];
  [self spot_addElementWithNSString:@"indentBy" withISPOTElement:indentBy_];
  [self spot_addElementWithNSString:@"changeSelColorOnLostFocus" withISPOTElement:changeSelColorOnLostFocus_];
  [self spot_addElementWithNSString:@"deselectEventsEnabled" withISPOTElement:deselectEventsEnabled_];
  [self spot_addElementWithNSString:@"itemCursorsSupported" withISPOTElement:itemCursorsSupported_];
  [((SPOTBoolean *) nil_chk(itemCursorsSupported_)) spot_defineAttributeWithNSString:@"whenNonNull" withNSString:@"true"];
  [itemCursorsSupported_ spot_defineAttributeWithNSString:@"script" withNSString:nil];
  [self spot_addElementWithNSString:@"singleClickActionEnabled" withISPOTElement:singleClickActionEnabled_];
  [self spot_addElementWithNSString:@"leafIcon" withISPOTElement:leafIcon_];
  [((SPOTPrintableString *) nil_chk(leafIcon_)) spot_defineAttributeWithNSString:@"alt" withNSString:nil];
  [leafIcon_ spot_defineAttributeWithNSString:@"slice" withNSString:nil];
  [leafIcon_ spot_defineAttributeWithNSString:@"size" withNSString:nil];
  [leafIcon_ spot_defineAttributeWithNSString:@"scaling" withNSString:nil];
  [leafIcon_ spot_defineAttributeWithNSString:@"density" withNSString:nil];
  [self spot_addElementWithNSString:@"folderOpenIcon" withISPOTElement:folderOpenIcon_];
  [((SPOTPrintableString *) nil_chk(folderOpenIcon_)) spot_defineAttributeWithNSString:@"alt" withNSString:nil];
  [folderOpenIcon_ spot_defineAttributeWithNSString:@"slice" withNSString:nil];
  [folderOpenIcon_ spot_defineAttributeWithNSString:@"size" withNSString:nil];
  [folderOpenIcon_ spot_defineAttributeWithNSString:@"scaling" withNSString:nil];
  [folderOpenIcon_ spot_defineAttributeWithNSString:@"density" withNSString:nil];
  [self spot_addElementWithNSString:@"folderClosedIcon" withISPOTElement:folderClosedIcon_];
  [((SPOTPrintableString *) nil_chk(folderClosedIcon_)) spot_defineAttributeWithNSString:@"alt" withNSString:nil];
  [folderClosedIcon_ spot_defineAttributeWithNSString:@"slice" withNSString:nil];
  [folderClosedIcon_ spot_defineAttributeWithNSString:@"size" withNSString:nil];
  [folderClosedIcon_ spot_defineAttributeWithNSString:@"scaling" withNSString:nil];
  [self spot_addElementWithNSString:@"itemDescription" withISPOTElement:itemDescription_];
  [self spot_addElementWithNSString:@"selectedIndex" withISPOTElement:selectedIndex_];
  [self spot_addElementWithNSString:@"handleFirstFocusSelection" withISPOTElement:handleFirstFocusSelection_];
  [self spot_addElementWithNSString:@"submitValue" withISPOTElement:submitValue_];
  [self spot_addElementWithNSString:@"minVisibleRowCount" withISPOTElement:minVisibleRowCount_];
  [self spot_addElementWithNSString:@"visibleRowCount" withISPOTElement:visibleRowCount_];
  [self spot_addElementWithNSString:@"rowHeight" withISPOTElement:rowHeight_];
  [self spot_addElementWithNSString:@"alternatingHighlightColor" withISPOTElement:alternatingHighlightColor_];
  [self spot_addElementWithNSString:@"selectionGroupName" withISPOTElement:selectionGroupName_];
  [((SPOTPrintableString *) nil_chk(selectionGroupName_)) spot_defineAttributeWithNSString:@"position" withNSString:nil];
  [self spot_addElementWithNSString:@"scrollPane" withISPOTElement:scrollPane_];
  [self spot_addElementWithNSString:@"overlapAutoToolTips" withISPOTElement:overlapAutoToolTips_];
  [self spot_addElementWithNSString:@"expandAll" withISPOTElement:expandAll_];
  [self spot_addElementWithNSString:@"autoScrollOnExpansion" withISPOTElement:autoScrollOnExpansion_];
  [self spot_addElementWithNSString:@"autoSizeRowsToFit" withISPOTElement:autoSizeRowsToFit_];
  [self spot_addElementWithNSString:@"showDividerLine" withISPOTElement:showDividerLine_];
  [self spot_addElementWithNSString:@"dividerLineStyle" withISPOTElement:dividerLineStyle_];
  [self spot_addElementWithNSString:@"dividerLineColor" withISPOTElement:dividerLineColor_];
  [self spot_addElementWithNSString:@"selectionPainter" withISPOTElement:selectionPainter_];
  [self spot_addElementWithNSString:@"lostFocusSelectionPainter" withISPOTElement:lostFocusSelectionPainter_];
}

- (RARESPOTDataItem *)getRootNode {
  return rootNode_;
}

- (RARESPOTDataItem *)getRootNodeReference {
  if (rootNode_ == nil) {
    rootNode_ = [[RARESPOTDataItem alloc] initWithBoolean:YES];
    (void) [super spot_setReferenceWithNSString:@"rootNode" withISPOTElement:rootNode_];
  }
  return rootNode_;
}

- (void)setRootNodeWithISPOTElement:(id<iSPOTElement>)reference {
  rootNode_ = (RARESPOTDataItem *) check_class_cast(reference, [RARESPOTDataItem class]);
  (void) [self spot_setReferenceWithNSString:@"rootNode" withISPOTElement:reference];
}

- (RARESPOTItemDescription *)getItemDescription {
  return itemDescription_;
}

- (RARESPOTItemDescription *)getItemDescriptionReference {
  if (itemDescription_ == nil) {
    itemDescription_ = [[RARESPOTItemDescription alloc] initWithBoolean:YES];
    (void) [super spot_setReferenceWithNSString:@"itemDescription" withISPOTElement:itemDescription_];
  }
  return itemDescription_;
}

- (void)setItemDescriptionWithISPOTElement:(id<iSPOTElement>)reference {
  itemDescription_ = (RARESPOTItemDescription *) check_class_cast(reference, [RARESPOTItemDescription class]);
  (void) [self spot_setReferenceWithNSString:@"itemDescription" withISPOTElement:reference];
}

- (RARESPOTScrollPane *)getScrollPane {
  return scrollPane_;
}

- (RARESPOTScrollPane *)getScrollPaneReference {
  if (scrollPane_ == nil) {
    scrollPane_ = [[RARESPOTScrollPane alloc] initWithBoolean:YES];
    (void) [super spot_setReferenceWithNSString:@"scrollPane" withISPOTElement:scrollPane_];
  }
  return scrollPane_;
}

- (void)setScrollPaneWithISPOTElement:(id<iSPOTElement>)reference {
  scrollPane_ = (RARESPOTScrollPane *) check_class_cast(reference, [RARESPOTScrollPane class]);
  (void) [self spot_setReferenceWithNSString:@"scrollPane" withISPOTElement:reference];
}

- (RARESPOTGridCell *)getSelectionPainter {
  return selectionPainter_;
}

- (RARESPOTGridCell *)getSelectionPainterReference {
  if (selectionPainter_ == nil) {
    selectionPainter_ = [[RARESPOTGridCell alloc] initWithBoolean:YES];
    (void) [super spot_setReferenceWithNSString:@"selectionPainter" withISPOTElement:selectionPainter_];
    [selectionPainter_ spot_defineAttributeWithNSString:@"foreground" withNSString:nil];
    [selectionPainter_ spot_defineAttributeWithNSString:@"foreground" withNSString:nil];
    [selectionPainter_ spot_defineAttributeWithNSString:@"foreground" withNSString:nil];
  }
  return selectionPainter_;
}

- (void)setSelectionPainterWithISPOTElement:(id<iSPOTElement>)reference {
  selectionPainter_ = (RARESPOTGridCell *) check_class_cast(reference, [RARESPOTGridCell class]);
  (void) [self spot_setReferenceWithNSString:@"selectionPainter" withISPOTElement:reference];
}

- (RARESPOTGridCell *)getLostFocusSelectionPainter {
  return lostFocusSelectionPainter_;
}

- (RARESPOTGridCell *)getLostFocusSelectionPainterReference {
  if (lostFocusSelectionPainter_ == nil) {
    lostFocusSelectionPainter_ = [[RARESPOTGridCell alloc] initWithBoolean:YES];
    (void) [super spot_setReferenceWithNSString:@"lostFocusSelectionPainter" withISPOTElement:lostFocusSelectionPainter_];
    [lostFocusSelectionPainter_ spot_defineAttributeWithNSString:@"foreground" withNSString:nil];
    [lostFocusSelectionPainter_ spot_defineAttributeWithNSString:@"os" withNSString:nil];
    [lostFocusSelectionPainter_ spot_defineAttributeWithNSString:@"foreground" withNSString:nil];
    [lostFocusSelectionPainter_ spot_defineAttributeWithNSString:@"foreground" withNSString:nil];
  }
  return lostFocusSelectionPainter_;
}

- (void)setLostFocusSelectionPainterWithISPOTElement:(id<iSPOTElement>)reference {
  lostFocusSelectionPainter_ = (RARESPOTGridCell *) check_class_cast(reference, [RARESPOTGridCell class]);
  (void) [self spot_setReferenceWithNSString:@"lostFocusSelectionPainter" withISPOTElement:reference];
}

- (void)copyAllFieldsTo:(RARESPOTTree *)other {
  [super copyAllFieldsTo:other];
  other->alternatingHighlightColor_ = alternatingHighlightColor_;
  other->autoScrollOnExpansion_ = autoScrollOnExpansion_;
  other->autoSizeRowsToFit_ = autoSizeRowsToFit_;
  other->changeSelColorOnLostFocus_ = changeSelColorOnLostFocus_;
  other->deselectEventsEnabled_ = deselectEventsEnabled_;
  other->dividerLineColor_ = dividerLineColor_;
  other->dividerLineStyle_ = dividerLineStyle_;
  other->editingMode_ = editingMode_;
  other->expandAll_ = expandAll_;
  other->folderClosedIcon_ = folderClosedIcon_;
  other->folderOpenIcon_ = folderOpenIcon_;
  other->handleFirstFocusSelection_ = handleFirstFocusSelection_;
  other->indentBy_ = indentBy_;
  other->itemCursorsSupported_ = itemCursorsSupported_;
  other->itemDescription_ = itemDescription_;
  other->leafIcon_ = leafIcon_;
  other->lostFocusSelectionPainter_ = lostFocusSelectionPainter_;
  other->minVisibleRowCount_ = minVisibleRowCount_;
  other->overlapAutoToolTips_ = overlapAutoToolTips_;
  other->parentItemsSelectable_ = parentItemsSelectable_;
  other->rootNode_ = rootNode_;
  other->rootNodeCollapsible_ = rootNodeCollapsible_;
  other->rowHeight_ = rowHeight_;
  other->scrollPane_ = scrollPane_;
  other->selectedIndex_ = selectedIndex_;
  other->selectionGroupName_ = selectionGroupName_;
  other->selectionMode_ = selectionMode_;
  other->selectionPainter_ = selectionPainter_;
  other->showDividerLine_ = showDividerLine_;
  other->showRootHandles_ = showRootHandles_;
  other->showRootNode_ = showRootNode_;
  other->singleClickActionEnabled_ = singleClickActionEnabled_;
  other->submitValue_ = submitValue_;
  other->toggleOnTwistyOnly_ = toggleOnTwistyOnly_;
  other->visibleRowCount_ = visibleRowCount_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:withBoolean:", NULL, NULL, 0x4, NULL },
    { "spot_setElements", NULL, "V", 0x4, NULL },
    { "getRootNode", NULL, "LRARESPOTDataItem", 0x1, NULL },
    { "getRootNodeReference", NULL, "LRARESPOTDataItem", 0x1, NULL },
    { "setRootNodeWithISPOTElement:", NULL, "V", 0x1, "JavaLangClassCastException" },
    { "getItemDescription", NULL, "LRARESPOTItemDescription", 0x1, NULL },
    { "getItemDescriptionReference", NULL, "LRARESPOTItemDescription", 0x1, NULL },
    { "setItemDescriptionWithISPOTElement:", NULL, "V", 0x1, "JavaLangClassCastException" },
    { "getScrollPane", NULL, "LRARESPOTScrollPane", 0x1, NULL },
    { "getScrollPaneReference", NULL, "LRARESPOTScrollPane", 0x1, NULL },
    { "setScrollPaneWithISPOTElement:", NULL, "V", 0x1, "JavaLangClassCastException" },
    { "getSelectionPainter", NULL, "LRARESPOTGridCell", 0x1, NULL },
    { "getSelectionPainterReference", NULL, "LRARESPOTGridCell", 0x1, NULL },
    { "setSelectionPainterWithISPOTElement:", NULL, "V", 0x1, "JavaLangClassCastException" },
    { "getLostFocusSelectionPainter", NULL, "LRARESPOTGridCell", 0x1, NULL },
    { "getLostFocusSelectionPainterReference", NULL, "LRARESPOTGridCell", 0x1, NULL },
    { "setLostFocusSelectionPainterWithISPOTElement:", NULL, "V", 0x1, "JavaLangClassCastException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "selectionMode_", NULL, 0x1, "LRARESPOTTree_CSelectionMode" },
    { "editingMode_", NULL, 0x1, "LRARESPOTTree_CEditingMode" },
    { "rootNode_", NULL, 0x4, "LRARESPOTDataItem" },
    { "showRootHandles_", NULL, 0x1, "LSPOTBoolean" },
    { "showRootNode_", NULL, 0x1, "LSPOTBoolean" },
    { "rootNodeCollapsible_", NULL, 0x1, "LSPOTBoolean" },
    { "parentItemsSelectable_", NULL, 0x1, "LSPOTBoolean" },
    { "toggleOnTwistyOnly_", NULL, 0x1, "LSPOTBoolean" },
    { "indentBy_", NULL, 0x1, "LSPOTInteger" },
    { "changeSelColorOnLostFocus_", NULL, 0x1, "LSPOTBoolean" },
    { "deselectEventsEnabled_", NULL, 0x1, "LSPOTBoolean" },
    { "itemCursorsSupported_", NULL, 0x1, "LSPOTBoolean" },
    { "singleClickActionEnabled_", NULL, 0x1, "LSPOTBoolean" },
    { "leafIcon_", NULL, 0x1, "LSPOTPrintableString" },
    { "folderOpenIcon_", NULL, 0x1, "LSPOTPrintableString" },
    { "folderClosedIcon_", NULL, 0x1, "LSPOTPrintableString" },
    { "itemDescription_", NULL, 0x4, "LRARESPOTItemDescription" },
    { "selectedIndex_", NULL, 0x1, "LSPOTInteger" },
    { "handleFirstFocusSelection_", NULL, 0x1, "LSPOTBoolean" },
    { "submitValue_", NULL, 0x1, "LRARESPOTTree_CSubmitValue" },
    { "minVisibleRowCount_", NULL, 0x1, "LSPOTInteger" },
    { "visibleRowCount_", NULL, 0x1, "LSPOTInteger" },
    { "rowHeight_", NULL, 0x1, "LSPOTPrintableString" },
    { "alternatingHighlightColor_", NULL, 0x1, "LSPOTPrintableString" },
    { "selectionGroupName_", NULL, 0x1, "LSPOTPrintableString" },
    { "scrollPane_", NULL, 0x4, "LRARESPOTScrollPane" },
    { "overlapAutoToolTips_", NULL, 0x1, "LSPOTBoolean" },
    { "expandAll_", NULL, 0x1, "LSPOTBoolean" },
    { "autoScrollOnExpansion_", NULL, 0x1, "LSPOTBoolean" },
    { "autoSizeRowsToFit_", NULL, 0x1, "LSPOTBoolean" },
    { "showDividerLine_", NULL, 0x1, "LSPOTBoolean" },
    { "dividerLineStyle_", NULL, 0x1, "LRARESPOTTree_CDividerLineStyle" },
    { "dividerLineColor_", NULL, 0x1, "LSPOTPrintableString" },
    { "selectionPainter_", NULL, 0x4, "LRARESPOTGridCell" },
    { "lostFocusSelectionPainter_", NULL, 0x4, "LRARESPOTGridCell" },
  };
  static J2ObjcClassInfo _RARESPOTTree = { "Tree", "com.appnativa.rare.spot", NULL, 0x1, 17, methods, 35, fields, 0, NULL};
  return &_RARESPOTTree;
}

@end
@implementation RARESPOTTree_CSelectionMode

static IOSIntArray * RARESPOTTree_CSelectionMode__nchoices_;
static IOSObjectArray * RARESPOTTree_CSelectionMode__schoices_;

+ (int)none {
  return RARESPOTTree_CSelectionMode_none;
}

+ (int)single {
  return RARESPOTTree_CSelectionMode_single;
}

+ (int)multiple {
  return RARESPOTTree_CSelectionMode_multiple;
}

+ (int)block {
  return RARESPOTTree_CSelectionMode_block;
}

+ (int)single_auto {
  return RARESPOTTree_CSelectionMode_single_auto;
}

+ (int)invisible {
  return RARESPOTTree_CSelectionMode_invisible;
}

+ (IOSIntArray *)_nchoices {
  return RARESPOTTree_CSelectionMode__nchoices_;
}

+ (IOSObjectArray *)_schoices {
  return RARESPOTTree_CSelectionMode__schoices_;
}

- (id)init {
  return [self initRARESPOTTree_CSelectionModeWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:nil withNSString:nil withBoolean:YES];
}

- (id)initWithInt:(int)val {
  if (self = [super init]) {
    _sChoices_ = RARESPOTTree_CSelectionMode__schoices_;
    _nChoices_ = RARESPOTTree_CSelectionMode__nchoices_;
    [self spot_setAttributes];
    [self setValueWithInt:val];
  }
  return self;
}

- (id)initRARESPOTTree_CSelectionModeWithJavaLangInteger:(JavaLangInteger *)ival
                                            withNSString:(NSString *)sval
                                     withJavaLangInteger:(JavaLangInteger *)idefaultval
                                            withNSString:(NSString *)sdefaultval
                                             withBoolean:(BOOL)optional {
  if (self = [super initWithJavaLangInteger:ival withNSString:sval withJavaLangInteger:idefaultval withNSString:sdefaultval withBoolean:optional]) {
    _sChoices_ = RARESPOTTree_CSelectionMode__schoices_;
    _nChoices_ = RARESPOTTree_CSelectionMode__nchoices_;
    [self spot_setAttributes];
  }
  return self;
}

- (id)initWithJavaLangInteger:(JavaLangInteger *)ival
                 withNSString:(NSString *)sval
          withJavaLangInteger:(JavaLangInteger *)idefaultval
                 withNSString:(NSString *)sdefaultval
                  withBoolean:(BOOL)optional {
  return [self initRARESPOTTree_CSelectionModeWithJavaLangInteger:ival withNSString:sval withJavaLangInteger:idefaultval withNSString:sdefaultval withBoolean:optional];
}

- (NSString *)spot_getValidityRange {
  return @"{none(0), single(1), multiple(2), block(3), single_auto(4), invisible(5) }";
}

- (void)spot_setAttributes {
  self->attributeSizeHint_ += 1;
  [self spot_defineAttributeWithNSString:@"paintRow" withNSString:nil];
}

+ (void)initialize {
  if (self == [RARESPOTTree_CSelectionMode class]) {
    RARESPOTTree_CSelectionMode__nchoices_ = [IOSIntArray arrayWithInts:(int[]){ 0, 1, 2, 3, 4, 5 } count:6];
    RARESPOTTree_CSelectionMode__schoices_ = [IOSObjectArray arrayWithObjects:(id[]){ @"none", @"single", @"multiple", @"block", @"single_auto", @"invisible" } count:6 type:[IOSClass classWithClass:[NSString class]]];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "spot_getValidityRange", NULL, "LNSString", 0x1, NULL },
    { "spot_setAttributes", NULL, "V", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "none_", NULL, 0x19, "I" },
    { "single_", NULL, 0x19, "I" },
    { "multiple_", NULL, 0x19, "I" },
    { "block_", NULL, 0x19, "I" },
    { "single_auto_", NULL, 0x19, "I" },
    { "invisible_", NULL, 0x19, "I" },
    { "_nchoices_", NULL, 0x1a, "LIOSIntArray" },
    { "_schoices_", NULL, 0x1a, "LIOSObjectArray" },
  };
  static J2ObjcClassInfo _RARESPOTTree_CSelectionMode = { "CSelectionMode", "com.appnativa.rare.spot", "Tree", 0x9, 2, methods, 8, fields, 0, NULL};
  return &_RARESPOTTree_CSelectionMode;
}

@end
@implementation RARESPOTTree_CEditingMode

static IOSIntArray * RARESPOTTree_CEditingMode__nchoices_;
static IOSObjectArray * RARESPOTTree_CEditingMode__schoices_;

+ (int)none {
  return RARESPOTTree_CEditingMode_none;
}

+ (int)leaves {
  return RARESPOTTree_CEditingMode_leaves;
}

+ (int)branches {
  return RARESPOTTree_CEditingMode_branches;
}

+ (int)leaves_and_branches {
  return RARESPOTTree_CEditingMode_leaves_and_branches;
}

+ (IOSIntArray *)_nchoices {
  return RARESPOTTree_CEditingMode__nchoices_;
}

+ (IOSObjectArray *)_schoices {
  return RARESPOTTree_CEditingMode__schoices_;
}

- (id)init {
  return [self initRARESPOTTree_CEditingModeWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:nil withNSString:nil withBoolean:YES];
}

- (id)initWithInt:(int)val {
  if (self = [super init]) {
    _sChoices_ = RARESPOTTree_CEditingMode__schoices_;
    _nChoices_ = RARESPOTTree_CEditingMode__nchoices_;
    [self setValueWithInt:val];
  }
  return self;
}

- (id)initRARESPOTTree_CEditingModeWithJavaLangInteger:(JavaLangInteger *)ival
                                          withNSString:(NSString *)sval
                                   withJavaLangInteger:(JavaLangInteger *)idefaultval
                                          withNSString:(NSString *)sdefaultval
                                           withBoolean:(BOOL)optional {
  if (self = [super initWithJavaLangInteger:ival withNSString:sval withJavaLangInteger:idefaultval withNSString:sdefaultval withBoolean:optional]) {
    _sChoices_ = RARESPOTTree_CEditingMode__schoices_;
    _nChoices_ = RARESPOTTree_CEditingMode__nchoices_;
  }
  return self;
}

- (id)initWithJavaLangInteger:(JavaLangInteger *)ival
                 withNSString:(NSString *)sval
          withJavaLangInteger:(JavaLangInteger *)idefaultval
                 withNSString:(NSString *)sdefaultval
                  withBoolean:(BOOL)optional {
  return [self initRARESPOTTree_CEditingModeWithJavaLangInteger:ival withNSString:sval withJavaLangInteger:idefaultval withNSString:sdefaultval withBoolean:optional];
}

- (NSString *)spot_getValidityRange {
  return @"{none(0), leaves(1), branches(2), leaves_and_branches(3) }";
}

+ (void)initialize {
  if (self == [RARESPOTTree_CEditingMode class]) {
    RARESPOTTree_CEditingMode__nchoices_ = [IOSIntArray arrayWithInts:(int[]){ 0, 1, 2, 3 } count:4];
    RARESPOTTree_CEditingMode__schoices_ = [IOSObjectArray arrayWithObjects:(id[]){ @"none", @"leaves", @"branches", @"leaves_and_branches" } count:4 type:[IOSClass classWithClass:[NSString class]]];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "spot_getValidityRange", NULL, "LNSString", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "none_", NULL, 0x19, "I" },
    { "leaves_", NULL, 0x19, "I" },
    { "branches_", NULL, 0x19, "I" },
    { "leaves_and_branches_", NULL, 0x19, "I" },
    { "_nchoices_", NULL, 0x1a, "LIOSIntArray" },
    { "_schoices_", NULL, 0x1a, "LIOSObjectArray" },
  };
  static J2ObjcClassInfo _RARESPOTTree_CEditingMode = { "CEditingMode", "com.appnativa.rare.spot", "Tree", 0x9, 1, methods, 6, fields, 0, NULL};
  return &_RARESPOTTree_CEditingMode;
}

@end
@implementation RARESPOTTree_CSubmitValue

static IOSIntArray * RARESPOTTree_CSubmitValue__nchoices_;
static IOSObjectArray * RARESPOTTree_CSubmitValue__schoices_;

+ (int)selected_value_text {
  return RARESPOTTree_CSubmitValue_selected_value_text;
}

+ (int)selected_value {
  return RARESPOTTree_CSubmitValue_selected_value;
}

+ (int)selected_linked_data {
  return RARESPOTTree_CSubmitValue_selected_linked_data;
}

+ (int)selected_index {
  return RARESPOTTree_CSubmitValue_selected_index;
}

+ (int)checked_value_text {
  return RARESPOTTree_CSubmitValue_checked_value_text;
}

+ (int)checked_index {
  return RARESPOTTree_CSubmitValue_checked_index;
}

+ (int)checked_linked_data {
  return RARESPOTTree_CSubmitValue_checked_linked_data;
}

+ (IOSIntArray *)_nchoices {
  return RARESPOTTree_CSubmitValue__nchoices_;
}

+ (IOSObjectArray *)_schoices {
  return RARESPOTTree_CSubmitValue__schoices_;
}

- (id)init {
  return [self initRARESPOTTree_CSubmitValueWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:nil withNSString:nil withBoolean:YES];
}

- (id)initWithInt:(int)val {
  if (self = [super init]) {
    _sChoices_ = RARESPOTTree_CSubmitValue__schoices_;
    _nChoices_ = RARESPOTTree_CSubmitValue__nchoices_;
    [self setValueWithInt:val];
  }
  return self;
}

- (id)initRARESPOTTree_CSubmitValueWithJavaLangInteger:(JavaLangInteger *)ival
                                          withNSString:(NSString *)sval
                                   withJavaLangInteger:(JavaLangInteger *)idefaultval
                                          withNSString:(NSString *)sdefaultval
                                           withBoolean:(BOOL)optional {
  if (self = [super initWithJavaLangInteger:ival withNSString:sval withJavaLangInteger:idefaultval withNSString:sdefaultval withBoolean:optional]) {
    _sChoices_ = RARESPOTTree_CSubmitValue__schoices_;
    _nChoices_ = RARESPOTTree_CSubmitValue__nchoices_;
  }
  return self;
}

- (id)initWithJavaLangInteger:(JavaLangInteger *)ival
                 withNSString:(NSString *)sval
          withJavaLangInteger:(JavaLangInteger *)idefaultval
                 withNSString:(NSString *)sdefaultval
                  withBoolean:(BOOL)optional {
  return [self initRARESPOTTree_CSubmitValueWithJavaLangInteger:ival withNSString:sval withJavaLangInteger:idefaultval withNSString:sdefaultval withBoolean:optional];
}

- (NSString *)spot_getValidityRange {
  return @"{selected_value_text(0), selected_value(1), selected_linked_data(2), selected_index(3), checked_value_text(4), checked_index(5), checked_linked_data(6) }";
}

+ (void)initialize {
  if (self == [RARESPOTTree_CSubmitValue class]) {
    RARESPOTTree_CSubmitValue__nchoices_ = [IOSIntArray arrayWithInts:(int[]){ 0, 1, 2, 3, 4, 5, 6 } count:7];
    RARESPOTTree_CSubmitValue__schoices_ = [IOSObjectArray arrayWithObjects:(id[]){ @"selected_value_text", @"selected_value", @"selected_linked_data", @"selected_index", @"checked_value_text", @"checked_index", @"checked_linked_data" } count:7 type:[IOSClass classWithClass:[NSString class]]];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "spot_getValidityRange", NULL, "LNSString", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "selected_value_text_", NULL, 0x19, "I" },
    { "selected_value_", NULL, 0x19, "I" },
    { "selected_linked_data_", NULL, 0x19, "I" },
    { "selected_index_", NULL, 0x19, "I" },
    { "checked_value_text_", NULL, 0x19, "I" },
    { "checked_index_", NULL, 0x19, "I" },
    { "checked_linked_data_", NULL, 0x19, "I" },
    { "_nchoices_", NULL, 0x1a, "LIOSIntArray" },
    { "_schoices_", NULL, 0x1a, "LIOSObjectArray" },
  };
  static J2ObjcClassInfo _RARESPOTTree_CSubmitValue = { "CSubmitValue", "com.appnativa.rare.spot", "Tree", 0x9, 1, methods, 9, fields, 0, NULL};
  return &_RARESPOTTree_CSubmitValue;
}

@end
@implementation RARESPOTTree_CDividerLineStyle

static IOSIntArray * RARESPOTTree_CDividerLineStyle__nchoices_;
static IOSObjectArray * RARESPOTTree_CDividerLineStyle__schoices_;

+ (int)dotted {
  return RARESPOTTree_CDividerLineStyle_dotted;
}

+ (int)dashed {
  return RARESPOTTree_CDividerLineStyle_dashed;
}

+ (int)solid {
  return RARESPOTTree_CDividerLineStyle_solid;
}

+ (IOSIntArray *)_nchoices {
  return RARESPOTTree_CDividerLineStyle__nchoices_;
}

+ (IOSObjectArray *)_schoices {
  return RARESPOTTree_CDividerLineStyle__schoices_;
}

- (id)init {
  return [self initRARESPOTTree_CDividerLineStyleWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:nil withNSString:nil withBoolean:YES];
}

- (id)initWithInt:(int)val {
  if (self = [super init]) {
    _sChoices_ = RARESPOTTree_CDividerLineStyle__schoices_;
    _nChoices_ = RARESPOTTree_CDividerLineStyle__nchoices_;
    [self setValueWithInt:val];
  }
  return self;
}

- (id)initRARESPOTTree_CDividerLineStyleWithJavaLangInteger:(JavaLangInteger *)ival
                                               withNSString:(NSString *)sval
                                        withJavaLangInteger:(JavaLangInteger *)idefaultval
                                               withNSString:(NSString *)sdefaultval
                                                withBoolean:(BOOL)optional {
  if (self = [super initWithJavaLangInteger:ival withNSString:sval withJavaLangInteger:idefaultval withNSString:sdefaultval withBoolean:optional]) {
    _sChoices_ = RARESPOTTree_CDividerLineStyle__schoices_;
    _nChoices_ = RARESPOTTree_CDividerLineStyle__nchoices_;
  }
  return self;
}

- (id)initWithJavaLangInteger:(JavaLangInteger *)ival
                 withNSString:(NSString *)sval
          withJavaLangInteger:(JavaLangInteger *)idefaultval
                 withNSString:(NSString *)sdefaultval
                  withBoolean:(BOOL)optional {
  return [self initRARESPOTTree_CDividerLineStyleWithJavaLangInteger:ival withNSString:sval withJavaLangInteger:idefaultval withNSString:sdefaultval withBoolean:optional];
}

- (NSString *)spot_getValidityRange {
  return @"{dotted(1), dashed(2), solid(3) }";
}

+ (void)initialize {
  if (self == [RARESPOTTree_CDividerLineStyle class]) {
    RARESPOTTree_CDividerLineStyle__nchoices_ = [IOSIntArray arrayWithInts:(int[]){ 1, 2, 3 } count:3];
    RARESPOTTree_CDividerLineStyle__schoices_ = [IOSObjectArray arrayWithObjects:(id[]){ @"dotted", @"dashed", @"solid" } count:3 type:[IOSClass classWithClass:[NSString class]]];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "spot_getValidityRange", NULL, "LNSString", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "dotted_", NULL, 0x19, "I" },
    { "dashed_", NULL, 0x19, "I" },
    { "solid_", NULL, 0x19, "I" },
    { "_nchoices_", NULL, 0x1a, "LIOSIntArray" },
    { "_schoices_", NULL, 0x1a, "LIOSObjectArray" },
  };
  static J2ObjcClassInfo _RARESPOTTree_CDividerLineStyle = { "CDividerLineStyle", "com.appnativa.rare.spot", "Tree", 0x9, 1, methods, 5, fields, 0, NULL};
  return &_RARESPOTTree_CDividerLineStyle;
}

@end
