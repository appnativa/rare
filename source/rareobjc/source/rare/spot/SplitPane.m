//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/spot/SplitPane.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "IOSDoubleArray.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/spot/GridPane.h"
#include "com/appnativa/rare/spot/GroupBox.h"
#include "com/appnativa/rare/spot/Region.h"
#include "com/appnativa/rare/spot/ScrollPane.h"
#include "com/appnativa/rare/spot/SplitPane.h"
#include "com/appnativa/rare/spot/StackPane.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/spot/SPOTAny.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTEnumerated.h"
#include "com/appnativa/spot/SPOTInteger.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTReal.h"
#include "com/appnativa/spot/SPOTSequence.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "java/lang/Boolean.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Integer.h"

@implementation RARESPOTSplitPane

- (id)init {
  return [self initRARESPOTSplitPaneWithBoolean:YES];
}

- (id)initRARESPOTSplitPaneWithBoolean:(BOOL)optional {
  if (self = [super initWithBoolean:optional withBoolean:NO]) {
    splitOrientation_ = [[RARESPOTSplitPane_CSplitOrientation alloc] initWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:[JavaLangInteger valueOfWithInt:RARESPOTSplitPane_CSplitOrientation_left_to_right] withNSString:@"left_to_right" withBoolean:YES];
    oneTouchExpandable_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    autoAdjustProportions_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    showGripper_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    dividerSize_ = [[SPOTInteger alloc] initWithJavaLangInteger:nil withJavaLangInteger:[JavaLangInteger valueOfWithInt:0] withJavaLangInteger:[JavaLangInteger valueOfWithInt:100] withBoolean:YES];
    continuousLayout_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    actAsFormViewer_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    splitProportions_ = nil;
    regions_ = [[SPOTSet alloc] initWithNSString:@"region" withISPOTElement:[[RARESPOTRegion alloc] init] withInt:-1 withInt:-1 withBoolean:NO];
    transitionAnimator_ = [[SPOTPrintableString alloc] init];
    scrollPane_ = nil;
    [self spot_setElements];
  }
  return self;
}

- (id)initWithBoolean:(BOOL)optional {
  return [self initRARESPOTSplitPaneWithBoolean:optional];
}

- (id)initWithBoolean:(BOOL)optional
          withBoolean:(BOOL)setElements {
  if (self = [super initWithBoolean:optional withBoolean:setElements]) {
    splitOrientation_ = [[RARESPOTSplitPane_CSplitOrientation alloc] initWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:[JavaLangInteger valueOfWithInt:RARESPOTSplitPane_CSplitOrientation_left_to_right] withNSString:@"left_to_right" withBoolean:YES];
    oneTouchExpandable_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:NO] withBoolean:NO];
    autoAdjustProportions_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    showGripper_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    dividerSize_ = [[SPOTInteger alloc] initWithJavaLangInteger:nil withJavaLangInteger:[JavaLangInteger valueOfWithInt:0] withJavaLangInteger:[JavaLangInteger valueOfWithInt:100] withBoolean:YES];
    continuousLayout_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    actAsFormViewer_ = [[SPOTBoolean alloc] initWithJavaLangBoolean:nil withJavaLangBoolean:[JavaLangBoolean valueOfWithBoolean:YES] withBoolean:NO];
    splitProportions_ = nil;
    regions_ = [[SPOTSet alloc] initWithNSString:@"region" withISPOTElement:[[RARESPOTRegion alloc] init] withInt:-1 withInt:-1 withBoolean:NO];
    transitionAnimator_ = [[SPOTPrintableString alloc] init];
    scrollPane_ = nil;
  }
  return self;
}

- (void)spot_setElements {
  self->elementsSizeHint_ += 11;
  self->attributeSizeHint_ += 1;
  [super spot_setElements];
  [self spot_defineAttributeWithNSString:@"onChange" withNSString:nil];
  [self spot_addElementWithNSString:@"splitOrientation" withISPOTElement:splitOrientation_];
  [self spot_addElementWithNSString:@"oneTouchExpandable" withISPOTElement:oneTouchExpandable_];
  [self spot_addElementWithNSString:@"autoAdjustProportions" withISPOTElement:autoAdjustProportions_];
  [self spot_addElementWithNSString:@"showGripper" withISPOTElement:showGripper_];
  [self spot_addElementWithNSString:@"dividerSize" withISPOTElement:dividerSize_];
  [self spot_addElementWithNSString:@"continuousLayout" withISPOTElement:continuousLayout_];
  [self spot_addElementWithNSString:@"actAsFormViewer" withISPOTElement:actAsFormViewer_];
  [self spot_addElementWithNSString:@"splitProportions" withISPOTElement:splitProportions_];
  [self spot_addElementWithNSString:@"regions" withISPOTElement:regions_];
  [self spot_addElementWithNSString:@"transitionAnimator" withISPOTElement:transitionAnimator_];
  [((SPOTPrintableString *) nil_chk(transitionAnimator_)) spot_defineAttributeWithNSString:@"duration" withNSString:nil];
  [transitionAnimator_ spot_defineAttributeWithNSString:@"direction" withNSString:nil];
  [transitionAnimator_ spot_defineAttributeWithNSString:@"acceleration" withNSString:nil];
  [transitionAnimator_ spot_defineAttributeWithNSString:@"deceleration" withNSString:nil];
  [transitionAnimator_ spot_defineAttributeWithNSString:@"horizontal" withNSString:nil];
  [transitionAnimator_ spot_defineAttributeWithNSString:@"fadeIn" withNSString:nil];
  [transitionAnimator_ spot_defineAttributeWithNSString:@"fadeOut" withNSString:nil];
  [transitionAnimator_ spot_defineAttributeWithNSString:@"diagonal" withNSString:nil];
  [transitionAnimator_ spot_defineAttributeWithNSString:@"diagonalAnchor" withNSString:nil];
  [transitionAnimator_ spot_defineAttributeWithNSString:@"autoOrient" withNSString:nil];
  [transitionAnimator_ spot_defineAttributeWithNSString:@"customProperties" withNSString:nil];
  [self spot_addElementWithNSString:@"scrollPane" withISPOTElement:scrollPane_];
}

- (SPOTSet *)getSplitProportions {
  return splitProportions_;
}

- (SPOTSet *)getSplitProportionsReference {
  if (splitProportions_ == nil) {
    splitProportions_ = [[SPOTSet alloc] initWithNSString:@"splitProportion" withISPOTElement:[[SPOTReal alloc] initWithNSString:nil withNSString:@"0" withNSString:@"1" withBoolean:NO] withInt:-1 withInt:-1 withBoolean:YES];
    (void) [super spot_setReferenceWithNSString:@"splitProportions" withISPOTElement:splitProportions_];
  }
  return splitProportions_;
}

- (void)setSplitProportionsWithISPOTElement:(id<iSPOTElement>)reference {
  splitProportions_ = (SPOTSet *) check_class_cast(reference, [SPOTSet class]);
  (void) [self spot_setReferenceWithNSString:@"splitProportions" withISPOTElement:reference];
}

- (RARESPOTScrollPane *)getScrollPane {
  return scrollPane_;
}

- (RARESPOTScrollPane *)getScrollPaneReference {
  if (scrollPane_ == nil) {
    scrollPane_ = [[RARESPOTScrollPane alloc] initWithBoolean:YES];
    (void) [super spot_setReferenceWithNSString:@"scrollPane" withISPOTElement:scrollPane_];
  }
  return scrollPane_;
}

- (void)setScrollPaneWithISPOTElement:(id<iSPOTElement>)reference {
  scrollPane_ = (RARESPOTScrollPane *) check_class_cast(reference, [RARESPOTScrollPane class]);
  (void) [self spot_setReferenceWithNSString:@"scrollPane" withISPOTElement:reference];
}

- (void)setSplitProportionsWithDoubleArray:(IOSDoubleArray *)props {
  SPOTSet *set = [self getSplitProportionsReference];
  [((SPOTSet *) nil_chk(set)) clear];
  int len = (props == nil) ? 0 : (int) [props count];
  for (int i = 0; i < len; i++) {
    [set addWithDouble:IOSDoubleArray_Get(nil_chk(props), i)];
  }
}

- (RARESPOTWidget *)findWidgetWithNSString:(NSString *)name
                               withBoolean:(BOOL)useNameMap {
  int len = [((SPOTSet *) nil_chk(regions_)) size];
  for (int i = 0; i < len; i++) {
    RARESPOTRegion *r = (RARESPOTRegion *) check_class_cast([regions_ getWithInt:i], [RARESPOTRegion class]);
    id<iSPOTElement> v = [((SPOTAny *) nil_chk(((RARESPOTRegion *) nil_chk(r))->viewer_)) getValue];
    if ([(id) v isKindOfClass:[RARESPOTGroupBox class]]) {
      RARESPOTWidget *w = [((RARESPOTGroupBox *) check_class_cast(v, [RARESPOTGroupBox class])) findWidgetWithNSString:name withBoolean:useNameMap];
      if (w != nil) {
        return w;
      }
    }
    else if ([(id) v isKindOfClass:[RARESPOTGridPane class]]) {
      RARESPOTWidget *w = [((RARESPOTGridPane *) check_class_cast(v, [RARESPOTGridPane class])) findWidgetWithNSString:name withBoolean:useNameMap];
      if (w != nil) {
        return w;
      }
    }
    else if ([(id) v isKindOfClass:[RARESPOTSplitPane class]]) {
      RARESPOTWidget *w = [((RARESPOTSplitPane *) check_class_cast(v, [RARESPOTSplitPane class])) findWidgetWithNSString:name withBoolean:useNameMap];
      if (w != nil) {
        return w;
      }
    }
    else if ([(id) v isKindOfClass:[RARESPOTStackPane class]]) {
      RARESPOTWidget *w = [((RARESPOTStackPane *) check_class_cast(v, [RARESPOTStackPane class])) findWidgetWithNSString:name withBoolean:useNameMap];
      if (w != nil) {
        return w;
      }
    }
  }
  return nil;
}

- (void)copyAllFieldsTo:(RARESPOTSplitPane *)other {
  [super copyAllFieldsTo:other];
  other->actAsFormViewer_ = actAsFormViewer_;
  other->autoAdjustProportions_ = autoAdjustProportions_;
  other->continuousLayout_ = continuousLayout_;
  other->dividerSize_ = dividerSize_;
  other->oneTouchExpandable_ = oneTouchExpandable_;
  other->regions_ = regions_;
  other->scrollPane_ = scrollPane_;
  other->showGripper_ = showGripper_;
  other->splitOrientation_ = splitOrientation_;
  other->splitProportions_ = splitProportions_;
  other->transitionAnimator_ = transitionAnimator_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:withBoolean:", NULL, NULL, 0x4, NULL },
    { "spot_setElements", NULL, "V", 0x4, NULL },
    { "getSplitProportions", NULL, "LSPOTSet", 0x1, NULL },
    { "getSplitProportionsReference", NULL, "LSPOTSet", 0x1, NULL },
    { "setSplitProportionsWithISPOTElement:", NULL, "V", 0x1, "JavaLangClassCastException" },
    { "getScrollPane", NULL, "LRARESPOTScrollPane", 0x1, NULL },
    { "getScrollPaneReference", NULL, "LRARESPOTScrollPane", 0x1, NULL },
    { "setScrollPaneWithISPOTElement:", NULL, "V", 0x1, "JavaLangClassCastException" },
    { "setSplitProportionsWithDoubleArray:", NULL, "V", 0x81, NULL },
    { "findWidgetWithNSString:withBoolean:", NULL, "LRARESPOTWidget", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "splitOrientation_", NULL, 0x1, "LRARESPOTSplitPane_CSplitOrientation" },
    { "oneTouchExpandable_", NULL, 0x1, "LSPOTBoolean" },
    { "autoAdjustProportions_", NULL, 0x1, "LSPOTBoolean" },
    { "showGripper_", NULL, 0x1, "LSPOTBoolean" },
    { "dividerSize_", NULL, 0x1, "LSPOTInteger" },
    { "continuousLayout_", NULL, 0x1, "LSPOTBoolean" },
    { "actAsFormViewer_", NULL, 0x1, "LSPOTBoolean" },
    { "splitProportions_", NULL, 0x4, "LSPOTSet" },
    { "regions_", NULL, 0x1, "LSPOTSet" },
    { "transitionAnimator_", NULL, 0x1, "LSPOTPrintableString" },
    { "scrollPane_", NULL, 0x4, "LRARESPOTScrollPane" },
  };
  static J2ObjcClassInfo _RARESPOTSplitPane = { "SplitPane", "com.appnativa.rare.spot", NULL, 0x1, 10, methods, 11, fields, 0, NULL};
  return &_RARESPOTSplitPane;
}

@end
@implementation RARESPOTSplitPane_CSplitOrientation

static IOSIntArray * RARESPOTSplitPane_CSplitOrientation__nchoices_;
static IOSObjectArray * RARESPOTSplitPane_CSplitOrientation__schoices_;

+ (int)top_to_bottom {
  return RARESPOTSplitPane_CSplitOrientation_top_to_bottom;
}

+ (int)left_to_right {
  return RARESPOTSplitPane_CSplitOrientation_left_to_right;
}

+ (IOSIntArray *)_nchoices {
  return RARESPOTSplitPane_CSplitOrientation__nchoices_;
}

+ (IOSObjectArray *)_schoices {
  return RARESPOTSplitPane_CSplitOrientation__schoices_;
}

- (id)init {
  return [self initRARESPOTSplitPane_CSplitOrientationWithJavaLangInteger:nil withNSString:nil withJavaLangInteger:nil withNSString:nil withBoolean:YES];
}

- (id)initWithInt:(int)val {
  if (self = [super init]) {
    _sChoices_ = RARESPOTSplitPane_CSplitOrientation__schoices_;
    _nChoices_ = RARESPOTSplitPane_CSplitOrientation__nchoices_;
    [self setValueWithInt:val];
  }
  return self;
}

- (id)initRARESPOTSplitPane_CSplitOrientationWithJavaLangInteger:(JavaLangInteger *)ival
                                                    withNSString:(NSString *)sval
                                             withJavaLangInteger:(JavaLangInteger *)idefaultval
                                                    withNSString:(NSString *)sdefaultval
                                                     withBoolean:(BOOL)optional {
  if (self = [super initWithJavaLangInteger:ival withNSString:sval withJavaLangInteger:idefaultval withNSString:sdefaultval withBoolean:optional]) {
    _sChoices_ = RARESPOTSplitPane_CSplitOrientation__schoices_;
    _nChoices_ = RARESPOTSplitPane_CSplitOrientation__nchoices_;
  }
  return self;
}

- (id)initWithJavaLangInteger:(JavaLangInteger *)ival
                 withNSString:(NSString *)sval
          withJavaLangInteger:(JavaLangInteger *)idefaultval
                 withNSString:(NSString *)sdefaultval
                  withBoolean:(BOOL)optional {
  return [self initRARESPOTSplitPane_CSplitOrientationWithJavaLangInteger:ival withNSString:sval withJavaLangInteger:idefaultval withNSString:sdefaultval withBoolean:optional];
}

- (NSString *)spot_getValidityRange {
  return @"{top_to_bottom(0), left_to_right(1) }";
}

+ (void)initialize {
  if (self == [RARESPOTSplitPane_CSplitOrientation class]) {
    RARESPOTSplitPane_CSplitOrientation__nchoices_ = [IOSIntArray arrayWithInts:(int[]){ 0, 1 } count:2];
    RARESPOTSplitPane_CSplitOrientation__schoices_ = [IOSObjectArray arrayWithObjects:(id[]){ @"top_to_bottom", @"left_to_right" } count:2 type:[IOSClass classWithClass:[NSString class]]];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "spot_getValidityRange", NULL, "LNSString", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "top_to_bottom_", NULL, 0x19, "I" },
    { "left_to_right_", NULL, 0x19, "I" },
    { "_nchoices_", NULL, 0x1a, "LIOSIntArray" },
    { "_schoices_", NULL, 0x1a, "LIOSObjectArray" },
  };
  static J2ObjcClassInfo _RARESPOTSplitPane_CSplitOrientation = { "CSplitOrientation", "com.appnativa.rare.spot", "SplitPane", 0x9, 1, methods, 4, fields, 0, NULL};
  return &_RARESPOTSplitPane_CSplitOrientation;
}

@end
