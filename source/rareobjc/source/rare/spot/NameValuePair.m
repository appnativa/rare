//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/spot/NameValuePair.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/spot/NameValuePair.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSequence.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@implementation RARESPOTNameValuePair

- (id)init {
  return [self initRARESPOTNameValuePairWithBoolean:YES];
}

- (id)initRARESPOTNameValuePairWithBoolean:(BOOL)optional {
  if (self = [super initWithBoolean:optional withBoolean:NO]) {
    name_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:255 withBoolean:NO];
    value_ = [[SPOTPrintableString alloc] init];
    [self spot_setElements];
  }
  return self;
}

- (id)initWithBoolean:(BOOL)optional {
  return [self initRARESPOTNameValuePairWithBoolean:optional];
}

- (id)initWithBoolean:(BOOL)optional
          withBoolean:(BOOL)setElements {
  if (self = [super initWithBoolean:optional withBoolean:setElements]) {
    name_ = [[SPOTPrintableString alloc] initWithNSString:nil withInt:0 withInt:255 withBoolean:NO];
    value_ = [[SPOTPrintableString alloc] init];
  }
  return self;
}

- (void)spot_setElements {
  self->elementsSizeHint_ += 2;
  self->attributeSizeHint_ += 3;
  [super spot_setElements];
  [self spot_defineAttributeWithNSString:@"type" withNSString:nil];
  [self spot_defineAttributeWithNSString:@"converterClass" withNSString:nil];
  [self spot_defineAttributeWithNSString:@"converterContext" withNSString:nil];
  [self spot_addElementWithNSString:@"name" withISPOTElement:name_];
  [self spot_addElementWithNSString:@"value" withISPOTElement:value_];
}

- (NSString *)getName {
  return [((SPOTPrintableString *) nil_chk(name_)) getValue];
}

- (NSString *)getValue {
  return [((SPOTPrintableString *) nil_chk(value_)) getValue];
}

- (id)initWithNSString:(NSString *)name
          withNSString:(NSString *)value {
  if (self = [self initRARESPOTNameValuePairWithBoolean:NO]) {
    [((SPOTPrintableString *) nil_chk(self->name_)) setValueWithNSString:name];
    [((SPOTPrintableString *) nil_chk(self->value_)) setValueWithNSString:value];
  }
  return self;
}

- (NSString *)description {
  NSString *s = [((SPOTPrintableString *) nil_chk(name_)) getValue];
  NSString *v = [((SPOTPrintableString *) nil_chk(value_)) getValue];
  if ((v == nil) && (s == nil)) {
    return @"";
  }
  if (v == nil) {
    v = @"";
  }
  if (s == nil) {
    s = @"";
  }
  return [NSString stringWithFormat:@"%@=%@", s, v];
}

+ (id<JavaUtilMap>)toMapWithSPOTSet:(SPOTSet *)set {
  int len = (set == nil) ? 0 : [set size];
  if (len == 0) {
    return nil;
  }
  RARESPOTNameValuePair *p;
  id<JavaUtilMap> map = [[JavaUtilHashMap alloc] initWithInt:len];
  for (int i = 0; i < len; i++) {
    p = (RARESPOTNameValuePair *) check_class_cast([((SPOTSet *) nil_chk(set)) getExWithInt:i], [RARESPOTNameValuePair class]);
    (void) [map putWithId:[((RARESPOTNameValuePair *) nil_chk(p)) getName] withId:[p getValue]];
  }
  return map;
}

+ (void)addToSetWithSPOTSet:(SPOTSet *)set
            withJavaUtilMap:(id<JavaUtilMap>)map {
  if ((set == nil) || (map == nil)) {
    return;
  }
  id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(map)) entrySet])) iterator];
  id value;
  id name;
  id<JavaUtilMap_Entry> e;
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    e = (id<JavaUtilMap_Entry>) check_protocol_cast([it next], @protocol(JavaUtilMap_Entry));
    name = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
    value = [e getValue];
    if (name != nil) {
      [((SPOTSet *) nil_chk(set)) addWithISPOTElement:[[RARESPOTNameValuePair alloc] initWithNSString:[name description] withNSString:(value == nil) ? nil : [value description]]];
    }
  }
}

- (void)copyAllFieldsTo:(RARESPOTNameValuePair *)other {
  [super copyAllFieldsTo:other];
  other->name_ = name_;
  other->value_ = value_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:withBoolean:", NULL, NULL, 0x4, NULL },
    { "spot_setElements", NULL, "V", 0x4, NULL },
    { "getName", NULL, "LNSString", 0x1, NULL },
    { "getValue", NULL, "LNSString", 0x1, NULL },
    { "toMapWithSPOTSet:", NULL, "LJavaUtilMap", 0x9, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x1, "LSPOTPrintableString" },
    { "value_", NULL, 0x1, "LSPOTPrintableString" },
  };
  static J2ObjcClassInfo _RARESPOTNameValuePair = { "NameValuePair", "com.appnativa.rare.spot", NULL, 0x1, 5, methods, 2, fields, 0, NULL};
  return &_RARESPOTNameValuePair;
}

@end
