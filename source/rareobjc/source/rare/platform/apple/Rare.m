//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/platform/apple/Rare.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/converters/aConverter.h"
#include "com/appnativa/rare/converters/iDataConverter.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iExceptionHandler.h"
#include "com/appnativa/rare/iFunctionHandler.h"
#include "com/appnativa/rare/iPlatform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/iResourceFinder.h"
#include "com/appnativa/rare/net/JavaURLConnection.h"
#include "com/appnativa/rare/net/iURLConnection.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/platform/aRare.h"
#include "com/appnativa/rare/platform/apple/AppContext.h"
#include "com/appnativa/rare/platform/apple/PlatformImpl.h"
#include "com/appnativa/rare/platform/apple/Rare.h"
#include "com/appnativa/rare/scripting/Functions.h"
#include "com/appnativa/rare/scripting/ScriptManager.h"
#include "com/appnativa/rare/scripting/iScriptHandler.h"
#include "com/appnativa/rare/spot/Application.h"
#include "com/appnativa/rare/spot/MainWindow.h"
#include "com/appnativa/rare/spot/NameValuePair.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/ui/FontUtils.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/WindowManager.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformWindowManager.h"
#include "com/appnativa/rare/ui/iWindowManager.h"
#include "com/appnativa/rare/util/DataParser.h"
#include "com/appnativa/rare/util/MIMEMap.h"
#include "com/appnativa/rare/viewer/ExternalBrowserViewer.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/spot/SPOTAny.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSequence.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/OrderedProperties.h"
#include "com/appnativa/util/PropertyResourceBundle.h"
#include "com/appnativa/util/Streams.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/PrintStream.h"
#include "java/io/Reader.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"
#include "java/util/Map.h"
#include "java/util/ResourceBundle.h"
#include "java/util/concurrent/ConcurrentHashMap.h"

@implementation RARERare

static long long int RARERare_startTime_;
static BOOL RARERare_debuggingEnabled_;

+ (long long int)startTime {
  return RARERare_startTime_;
}

+ (long long int *)startTimeRef {
  return &RARERare_startTime_;
}

+ (BOOL)debuggingEnabled {
  return RARERare_debuggingEnabled_;
}

+ (BOOL *)debuggingEnabledRef {
  return &RARERare_debuggingEnabled_;
}

- (id)init {
  if (self = [super init]) {
    appContext_ = [[RAREAppContext alloc] initWithRAREaRare:self];
    RAREUTOrderedProperties *p = [[RAREUTOrderedProperties alloc] init];
    @try {
      [p load__WithJavaIoInputStream:[[JavaIoFileInputStream alloc] initWithNSString:[((RAREAppContext *) check_class_cast(appContext_, [RAREAppContext class])) makeResourcePathWithNSString:@"raw/rare_raw_bundle" withNSString:@"properties"]]];
    }
    @catch (JavaLangException *e) {
      [((JavaLangException *) nil_chk(e)) printStackTrace];
      [JavaLangSystem exitWithInt:1];
    }
    (void) [RAREaRare setResources:[[RAREUTPropertyResourceBundle alloc] initWithRAREUTOrderedProperties:p]];
    [RAREPlatform setPlatformWithRAREiPlatform:[[RAREPlatformImpl alloc] initWithRAREaAppContextImpl:(RAREAppContext *) check_class_cast(appContext_, [RAREAppContext class])]];
    [self initialize__];
  }
  return self;
}

- (void)ignoreExceptionWithNSString:(NSString *)msg
              withJavaLangThrowable:(JavaLangThrowable *)e {
  if ([RARERare isDebugEnabled]) {
    if ((msg != nil) && (e == nil)) {
      [((JavaIoPrintStream *) nil_chk([JavaLangSystem err])) printlnWithNSString:msg];
    }
    else if (e != nil) {
      if (msg == nil) {
        msg = @"ignoreException";
      }
      [((JavaIoPrintStream *) nil_chk([JavaLangSystem err])) printlnWithNSString:msg];
      [e printStackTrace];
    }
  }
}

- (void)setupApplicationObjectExWithRAREiURLConnection:(id<RAREiURLConnection>)ic
                                          withNSString:(NSString *)local {
  NSString *mime = nil;
  BOOL xml = NO;
  BOOL sdf = NO;
  JavaIoReader *stream = nil;
  [((id<RAREiURLConnection>) nil_chk(ic)) open];
  JavaNetURL *url = [ic getURL];
  NSString *file = [((JavaNetURL *) nil_chk(url)) getFile];
  mime = [ic getContentType];
  if (mime == nil) {
    mime = @"text/x-sdf";
  }
  int n = [((NSString *) nil_chk(mime)) indexOf:';'];
  if (n > 0) {
    mime = [mime substring:0 endIndex:n];
  }
  if ([((NSString *) nil_chk(mime)) hasPrefix:[RAREiConstants XML_MIME_TYPE]]) {
    xml = YES;
  }
  else if ([mime hasPrefix:[RAREiConstants SDF_MIME_TYPE]]) {
    sdf = YES;
  }
  else if ([((NSString *) nil_chk(file)) hasSuffix:@".xml"] || [file hasSuffix:@".sxdf"]) {
    xml = YES;
  }
  else if ([file hasSuffix:@".sdf"]) {
    sdf = YES;
  }
  if (xml || sdf) {
    stream = [ic getReader];
  }
  SPOTSequence *spot = nil;
  [self setContextURLWithJavaNetURL:url];
  if (xml) {
    @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"XML format not supported"];
  }
  else if (sdf) {
    spot = (SPOTSequence *) check_class_cast([RAREDataParser loadSPOTObjectSDFWithRAREiWidget:[self getRootViewer] withJavaIoReader:stream withISPOTElement:nil withNSString:mime withJavaNetURL:url], [SPOTSequence class]);
  }
  [ic dispose];
  [self setupApplicationObjectWithJavaNetURL:url withSPOTSequence:spot withNSString:mime];
}

+ (id<RAREiDataConverter>)getDataConverterWithIOSClass:(IOSClass *)cls {
  if ([RAREaRare dataConverters] == nil) {
    (void) [RAREaRare setDataConverters:[[JavaUtilConcurrentConcurrentHashMap alloc] init]];
  }
  id<RAREiDataConverter> cvt = [((id<JavaUtilMap>) nil_chk([RAREaRare dataConverters])) getWithId:cls];
  if (cvt == nil) {
    @try {
      id o = [((IOSClass *) nil_chk(cls)) newInstance];
      if ([o conformsToProtocol: @protocol(RAREiDataConverter)]) {
        cvt = (id<RAREiDataConverter>) check_protocol_cast(o, @protocol(RAREiDataConverter));
      }
    }
    @catch (JavaLangException *ex) {
      [((id<RAREiExceptionHandler>) nil_chk([RAREaAppContext getDefaultExceptionHandlerWithRAREiWidget:nil])) handleExceptionWithJavaLangThrowable:ex];
      return nil;
    }
    (void) [[RAREaRare dataConverters] putWithId:cls withId:cvt];
  }
  return cvt;
}

+ (IOSClass *)getDataConverterClassWithNSString:(NSString *)name {
  if (name == nil) {
    return nil;
  }
  if ([((NSString *) nil_chk(name)) indexOf:'.'] == -1) {
    NSString *s = [[IOSClass classWithClass:[RAREaConverter class]] getName];
    int n = [((NSString *) nil_chk(s)) lastIndexOf:'.'];
    if (n != -1) {
      s = [s substring:0 endIndex:n];
    }
    if (![name hasSuffix:@"Converter"]) {
      name = [NSString stringWithFormat:@"%@.%@Converter", s, name];
    }
    else {
      name = [NSString stringWithFormat:@"%@.%@", s, name];
    }
  }
  return [RAREaPlatformHelper loadClassWithNSString:name];
}

- (id<RAREiFunctionHandler>)getFunctionHandler {
  if ([RAREaRare functionHandler] == nil) {
    (void) [RAREaRare setFunctionHandler:[[RAREFunctions alloc] init]];
  }
  return [RAREaRare functionHandler];
}

+ (JavaIoReader *)getReaderWithJavaNetURLConnection:(JavaNetURLConnection *)conn {
  NSString *type = [((JavaNetURLConnection *) nil_chk(conn)) getContentType];
  @try {
    return [[JavaIoInputStreamReader alloc] initWithJavaIoInputStream:[conn getInputStream] withNSString:[RAREJavaURLConnection getCharsetWithNSString:type withNSString:nil]];
  }
  @catch (JavaIoUnsupportedEncodingException *ex) {
    [RAREaAppContextImpl ignoreExceptionWithNSString:nil withJavaLangThrowable:ex];
  }
  return [[RAREUTStreams_ISO88591Reader alloc] initWithJavaIoInputStream:[conn getInputStream]];
}

+ (long long int)getStartTime {
  return RARERare_startTime_;
}

+ (long long int)getTimeSinceStarted {
  return [JavaLangSystem currentTimeMillis] - RARERare_startTime_;
}

+ (NSString *)getUserAgent {
  return [RAREaRare RARE_USER_AGENT];
}

+ (BOOL)isDebugEnabled {
  return [RAREaRare debugEnabled];
}

+ (BOOL)isInSandbox {
  return NO;
}

- (void)abortWithJavaLangThrowable:(JavaLangThrowable *)e {
  [self handleFatalEexceptionWithJavaLangThrowable:e];
  shuttingDown_ = YES;
  [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) dispose];
}

- (void)argsInitialized {
  [RAREScriptManager createEngineManager];
  NSString *appName = [RAREPlatform getPropertyWithNSString:@"rare.userAgentAppName"];
  if (appName == nil) {
    appName = [RAREPlatform getPropertyWithNSString:@"jnlp.rare.userAgentAppName"];
  }
  NSString *s = [JavaLangFloat toStringWithFloat:[RAREPlatform getOsVersion]];
  int n = [((NSString *) nil_chk(s)) indexOf:'.'];
  if (n + 1 < [s sequenceLength]) {
    s = [s substring:0 endIndex:n + 1];
  }
  [self createUserAgentStringWithNSString:[NSString stringWithFormat:@"%@ %@", [RAREPlatform getOsType], s] withNSString:appName];
}

- (void)configureWithRARESPOTApplication:(RARESPOTApplication *)app
                          withJavaNetURL:(JavaNetURL *)context {
  [super configureWithRARESPOTApplication:app withJavaNetURL:context];
  windowManager_ = [[RAREWindowManager alloc] initWithRAREAppContext:((RAREAppContext *) check_class_cast(appContext_, [RAREAppContext class]))];
  [windowManager_ setContextURLWithJavaNetURL:context];
  [windowManager_ configureWithRARESPOTMainWindow:[((RARESPOTApplication *) nil_chk(sageApplication_)) getMainWindowReference]];
  [self fireApplicationDidInit];
}

- (void)createCellRenderingDefaults {
}

- (id<RAREiContainer>)createNullViewer {
  return [[RARERare_NullViewer alloc] initWithRAREiPlatformAppContext:appContext_];
}

- (id<RAREiScriptHandler>)createScriptHandlerWithRARESPOTApplication:(RARESPOTApplication *)app {
  return [[RAREScriptManager alloc] initWithRAREiPlatformAppContext:appContext_ withRARESPOTApplication:app];
}

- (void)exitEx {
  @try {
    if (!shuttingDown_ && [self listenersCanExit]) {
      shuttingDown_ = YES;
      [self fireApplicationExiting];
      if (windowManager_ != nil) {
        [windowManager_ dispose];
        windowManager_ = nil;
      }
      [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) dispose];
      appContext_ = nil;
    }
  }
  @catch (JavaLangThrowable *e) {
    [self ignoreExceptionWithNSString:@"Shutdown Error" withJavaLangThrowable:e];
  }
}

- (void)handleAuthFailureWithJavaNetURL:(JavaNetURL *)url
                                withInt:(int)retries
                           withNSString:(NSString *)local {
}

- (void)handleFatalEexceptionWithJavaLangThrowable:(JavaLangThrowable *)e {
  [((JavaLangThrowable *) nil_chk(e)) printStackTrace];
}

- (id<RAREiURLConnection>)handleIfFileOrLibURLWithJavaNetURL:(JavaNetURL *)url
                                                withNSString:(NSString *)mimeType {
  return nil;
}

- (void)initApplicationWithRARESPOTApplication:(RARESPOTApplication *)app {
  [super initApplicationWithRARESPOTApplication:app];
  SPOTSet *set = [((RARESPOTApplication *) nil_chk(app)) getSupplementalJars];
  [self registerJARsWithSPOTSet:set];
  set = [self resolveSetWithSPOTSet:[app getSupplementalFonts] withIOSClass:[IOSClass classWithClass:[RARESPOTNameValuePair class]]];
  int len = (set == nil) ? 0 : [set getCount];
  RARESPOTNameValuePair *pair;
  NSString *value, *s;
  for (int i = 0; i < len; i++) {
    pair = (RARESPOTNameValuePair *) check_class_cast([((SPOTSet *) nil_chk(set)) getWithInt:i], [RARESPOTNameValuePair class]);
    s = [((RARESPOTNameValuePair *) nil_chk(pair)) getName];
    value = [pair getValue];
    if ((value != nil) && ([value sequenceLength] > 0) && (s != nil) && ([s sequenceLength] > 0)) {
      @try {
        [RAREFontUtils loadFontWithNSString:s withJavaNetURL:[self getURLWithNSString:value] withNSString:[pair spot_getAttributeWithNSString:@"type"]];
      }
      @catch (JavaLangException *ex) {
        [((id<RAREiExceptionHandler>) nil_chk([self getDefaultExceptionHandler])) ignoreExceptionWithNSString:nil withJavaLangThrowable:ex];
      }
    }
  }
}

- (void)registerJARsWithSPOTSet:(SPOTSet *)set {
  int len = (set == nil) ? 0 : [set getCount];
  if (len == 0) {
    return;
  }
  JavaNetURL *url;
  JavaNetURL *context = contextURL_;
  SPOTPrintableString *ss;
  NSString *ar = [self getApplicationRoot];
  for (int i = 0; i < len; i++) {
    @try {
      ss = (SPOTPrintableString *) check_class_cast([((SPOTSet *) nil_chk(set)) getWithInt:i], [SPOTPrintableString class]);
      if ([self okForOSWithISPOTElement:ss]) {
        NSString *s = [((SPOTPrintableString *) nil_chk(ss)) getValue];
        if ((ar != nil) && [((NSString *) nil_chk(s)) hasPrefix:@"/"]) {
          s = [NSString stringWithFormat:@"%@%@", ar, s];
        }
        url = [[JavaNetURL alloc] initWithJavaNetURL:context withNSString:s];
        [((id<RAREiPlatform>) nil_chk([RAREPlatform getPlatform])) addJarURLWithJavaNetURL:url];
      }
    }
    @catch (JavaLangThrowable *ex) {
      [((id<RAREiExceptionHandler>) nil_chk([self getDefaultExceptionHandler])) handleExceptionWithJavaLangThrowable:ex];
    }
  }
}

- (void)setupOsSpecificInfoWithRARESPOTApplication:(RARESPOTApplication *)app
                                    withJavaNetURL:(JavaNetURL *)url
                                      withNSString:(NSString *)mime {
  if (app == nil) {
    if (mime != nil) {
      IOSClass *cls = [self getWidgetHandlerWithNSString:mime];
      if (cls != nil) {
        if (cls == [IOSClass classWithClass:[RAREExternalBrowserViewer class]]) {
          if ([RAREPlatform browseURLWithJavaNetURL:url]) {
            [JavaLangSystem exitWithInt:0];
          }
        }
        else {
          sageApplication_ = [[RARESPOTApplication alloc] init];
          [((SPOTAny *) nil_chk(((RARESPOTMainWindow *) nil_chk([sageApplication_ getMainWindowReference]))->viewer_)) spot_setAttributeWithNSString:@"url" withNSString:[RAREJavaURLConnection toExternalFormWithJavaNetURL:url]];
          app = sageApplication_;
        }
      }
    }
  }
  if (app == nil) {
    @throw [[RAREApplicationException alloc] initWithNSString:[RAREaPlatformHelper formatWithNSString:[((id<RAREiPlatformAppContext>) nil_chk(appContext_)) getResourceAsStringWithNSString:@"Rare.runtime.text.unknownApplication"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [RAREJavaURLConnection toExternalFormWithJavaNetURL:url] } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  [((RAREAppContext *) check_class_cast(appContext_, [RAREAppContext class])) setupUIDefaults];
}

- (void)start {
  if ((sageApplication_ == nil) && (info_ != nil)) {
    if (info_->dumpSDF_ || info_->dumpXML_) {
      [JavaLangSystem exitWithInt:1];
      return;
    }
    [self promptForURLWithRAREaRare_StartupInfo:info_ withNSString:info_->applicationFile_];
    return;
  }
  [self startApplication];
}

- (void)startApplication {
  [self configureWithRARESPOTApplication:sageApplication_ withJavaNetURL:contextURL_];
  if (!shuttingDown_) {
    if ([RARERare isDebugEnabled]) {
      [((JavaIoPrintStream *) nil_chk([JavaLangSystem err])) printlnWithNSString:[NSString stringWithFormat:@"Application initialized in %f secs", (((double) [RARERare getTimeSinceStarted]) / 1000.0f)]];
    }
    if ([((SPOTBoolean *) nil_chk(((RARESPOTMainWindow *) nil_chk([((RARESPOTApplication *) nil_chk(sageApplication_)) getMainWindowReference]))->visible_)) booleanValue]) {
      [((id<RAREiPlatformWindowManager>) nil_chk(windowManager_)) showWindow];
    }
  }
  sageApplication_ = nil;
}

- (BOOL)isImageLoaderUsefull {
  return YES;
}

+ (void)staticInitialize {
  [JavaNetURLConnection setFileNameMapWithJavaNetFileNameMap:[[RAREMIMEMap alloc] init]];
  (*[RAREaRare debugEnabledRef]) = [RARERare isDebugBuild];
  [RAREPlatformHelper setup];
}

- (NSString *)getApplicationRoot {
  id<RAREiResourceFinder> rf = [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) getResourceFinder];
  return (rf != nil) ? [rf getApplicationRoot] : applicationRoot_;
}

+ (BOOL)isDebugBuild {
  #if DEBUG
  return YES;
  #else
  return NO;
  #endif
}

+ (void)initialize {
  if (self == [RARERare class]) {
    RARERare_startTime_ = [JavaLangSystem currentTimeMillis];
    {
      [RARERare staticInitialize];
    }
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "setupApplicationObjectExWithRAREiURLConnection:withNSString:", NULL, "V", 0x1, "JavaLangException" },
    { "getDataConverterWithIOSClass:", NULL, "LRAREiDataConverter", 0x9, NULL },
    { "getDataConverterClassWithNSString:", NULL, "LIOSClass", 0x9, "JavaLangClassNotFoundException" },
    { "getFunctionHandler", NULL, "LRAREiFunctionHandler", 0x1, NULL },
    { "getReaderWithJavaNetURLConnection:", NULL, "LJavaIoReader", 0x9, "JavaIoIOException" },
    { "getUserAgent", NULL, "LNSString", 0x9, NULL },
    { "isDebugEnabled", NULL, "Z", 0x9, NULL },
    { "isInSandbox", NULL, "Z", 0x9, NULL },
    { "abortWithJavaLangThrowable:", NULL, "V", 0x4, NULL },
    { "argsInitialized", NULL, "V", 0x4, NULL },
    { "configureWithRARESPOTApplication:withJavaNetURL:", NULL, "V", 0x4, NULL },
    { "createCellRenderingDefaults", NULL, "V", 0x4, NULL },
    { "createNullViewer", NULL, "LRAREiContainer", 0x4, NULL },
    { "createScriptHandlerWithRARESPOTApplication:", NULL, "LRAREiScriptHandler", 0x4, NULL },
    { "exitEx", NULL, "V", 0x4, NULL },
    { "handleAuthFailureWithJavaNetURL:withInt:withNSString:", NULL, "V", 0x4, NULL },
    { "handleFatalEexceptionWithJavaLangThrowable:", NULL, "V", 0x4, NULL },
    { "handleIfFileOrLibURLWithJavaNetURL:withNSString:", NULL, "LRAREiURLConnection", 0x4, "JavaIoIOException" },
    { "initApplicationWithRARESPOTApplication:", NULL, "V", 0x4, NULL },
    { "registerJARsWithSPOTSet:", NULL, "V", 0x4, NULL },
    { "setupOsSpecificInfoWithRARESPOTApplication:withJavaNetURL:withNSString:", NULL, "V", 0x4, NULL },
    { "start", NULL, "V", 0x4, NULL },
    { "startApplication", NULL, "V", 0x4, NULL },
    { "isImageLoaderUsefull", NULL, "Z", 0x4, NULL },
    { "staticInitialize", NULL, "V", 0xa, NULL },
    { "getApplicationRoot", NULL, "LNSString", 0x2, NULL },
    { "isDebugBuild", NULL, "Z", 0x10a, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "startTime_", NULL, 0xa, "J" },
    { "debuggingEnabled_", NULL, 0xa, "Z" },
  };
  static J2ObjcClassInfo _RARERare = { "Rare", "com.appnativa.rare.platform.apple", NULL, 0x1, 27, methods, 2, fields, 0, NULL};
  return &_RARERare;
}

@end
@implementation RARERare_NullViewer

- (id)initWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app {
  if (self = [super initWithRAREiContainer:nil]) {
    appContext_ = app;
  }
  return self;
}

- (void)clearContents {
}

- (void)configureWithRARESPOTViewer:(RARESPOTViewer *)vcfg {
}

- (void)dispose {
  disposed_ = YES;
}

- (void)imageLoadedWithRAREUIImage:(RAREUIImage *)image {
}

- (void)repaint {
}

- (void)update {
}

- (id<RAREiPlatformComponent>)getContainerComponent {
  return nil;
}

- (id<RAREiContainer>)getParent {
  id<RAREiWindowManager> wm = [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) getWindowManager];
  return (wm == nil) ? nil : [wm getRootViewer];
}

- (RAREWindowViewer *)getWindow {
  return [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) getWindowViewer];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithRAREiPlatformAppContext:", NULL, NULL, 0x0, NULL },
    { "getContainerComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getParent", NULL, "LRAREiContainer", 0x1, NULL },
    { "getWindow", NULL, "LRAREWindowViewer", 0x1, NULL },
  };
  static J2ObjcClassInfo _RARERare_NullViewer = { "NullViewer", "com.appnativa.rare.platform.apple", "Rare", 0xa, 4, methods, 0, NULL, 0, NULL};
  return &_RARERare_NullViewer;
}

@end
