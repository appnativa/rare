//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/platform/apple/ui/view/aWindow.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/platform/apple/ui/view/aView.h"
#include "com/appnativa/rare/platform/apple/ui/view/aWindow.h"
#include "com/appnativa/rare/ui/Component.h"
#include "com/appnativa/rare/ui/Frame.h"
#include "com/appnativa/rare/ui/TitlePane.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIPoint.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/WindowPane.h"
#include "com/appnativa/rare/ui/WindowTarget.h"
#include "com/appnativa/rare/ui/border/SharedLineBorder.h"
#include "com/appnativa/rare/ui/border/UIEmptyBorder.h"
#include "com/appnativa/rare/ui/effects/aAnimator.h"
#include "com/appnativa/rare/ui/effects/iAnimator.h"
#include "com/appnativa/rare/ui/effects/iPlatformAnimator.h"
#include "com/appnativa/rare/ui/event/ActionEvent.h"
#include "com/appnativa/rare/ui/event/iWindowListener.h"
#include "com/appnativa/rare/ui/iParentComponent.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/iPlatformMenuBar.h"
#include "com/appnativa/rare/ui/iStatusBar.h"
#include "com/appnativa/rare/ui/iToolBarHolder.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iTarget.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "java/lang/Integer.h"
#import "AppleHelper.h"
 #import "APView+Component.h"
 #import "RAREAPWindow.h"

@implementation RAREaWindow

- (id)initWithBoolean:(BOOL)decorated {
  if (self = [self initRAREaWindowWithId:[RAREaWindow createProxy]]) {
    if (decorated) {
      [self setDecoratedWithBoolean:decorated];
      self->decorated_ = YES;
    }
  }
  return self;
}

- (id)initRAREaWindowWithId:(id)nswindow {
  if (self = [super initWithId:nswindow]) {
    [self associateWindow];
    rootPane_ = [self createRootPane];
  }
  return self;
}

- (id)initWithId:(id)nswindow {
  return [self initRAREaWindowWithId:nswindow];
}

- (void)createDialogTitleBarWithRAREWindowViewer:(RAREWindowViewer *)win
                                     withBoolean:(BOOL)showCloseButton {
  RARETitlePane *bar = [((RAREWindowPane *) nil_chk(rootPane_)) createDialogTitleBarWithRAREiWidget:win withRAREiActionListener:[[RAREaWindow_$1 alloc] initWithRAREWindowViewer:win]];
  [((RAREWindowViewer *) nil_chk(win)) addWindowDraggerWithRAREiPlatformComponent:bar];
}

- (void)addViewToGlassWithRAREView:(RAREView *)view {
  [((RAREAPWindow*)proxy_) addViewToGlass: view ];
}

- (void)centerOnScreen {
  [((RAREAPWindow*)proxy_) centerEx];
}

- (void)close {
  [((RAREAPWindow*)proxy_) closeEx];
}

- (void)dispose {
  [((RAREUTIdentityArrayList *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getActiveWindows])) removeWithId:self];
  [self disposeEx];
  [super dispose];
  if (target_ != nil) {
    [target_ disposeWithBoolean:NO];
    if (rootPane_ != nil) {
      [rootPane_ dispose];
    }
  }
  else if (rootPane_ != nil) {
    id<RAREiViewer> v = [self setViewerWithRAREiViewer:nil];
    if ((v != nil) && [v isAutoDispose]) {
      [v dispose];
    }
    [rootPane_ dispose];
  }
  content_ = nil;
  rootPane_ = nil;
  target_ = nil;
  animationComponent_ = nil;
  animator_ = nil;
}

- (void)disposeEx {
  [((RAREAPWindow*)proxy_) disposeEx];
}

- (RAREUIRectangle *)getBounds {
  #if TARGET_OS_IPHONE
  CGRect frame= [((RAREAPWindow*)proxy_) frame];
  #else
  NSRect frame= [((RAREAPWindow*)proxy_) frame];
  frame.origin.y-=frame.size.height;
  #endif
  return [[RAREUIRectangle alloc]initWithFloat:frame.origin.x
  withFloat:frame.origin.y
  withFloat:frame.size.width
  withFloat:frame.size.height];
}

- (id<RAREiPlatformComponent>)getContent {
  return content_;
}

- (float)getHeight {
  return ceilf([((RAREAPWindow*)proxy_) orientedSize].height);
}

- (RAREUIRectangle *)getInnerBoundsWithRAREUIRectangle:(RAREUIRectangle *)rect {
  return [((RAREWindowPane *) nil_chk(rootPane_)) getInnerBoundsWithRAREUIRectangle:rect];
}

- (RAREUIPoint *)getLocationWithRAREUIPoint:(RAREUIPoint *)loc {
  #if TARGET_OS_IPHONE
  CGPoint p= [((RAREAPWindow*)proxy_) orientedLocation];
  #else
  NSPoint p= [((RAREAPWindow*)proxy_) orientedLocation];
  #endif
  if(loc==nil) {
    loc=[[RAREUIPoint alloc] initWithFloat:p.x withFloat:p.y];
  }
  else {
    [loc setLocationWithFloat:p.x withFloat:p.y];
  }
  return loc;
}

- (void)getMinimumSizeWithRAREUIDimension:(RAREUIDimension *)size
                                withFloat:(float)maxWidth {
  [self getPreferredSizeWithRAREUIDimension:size withFloat:maxWidth];
}

- (void)getPreferredSizeWithRAREUIDimension:(RAREUIDimension *)size
                                  withFloat:(float)maxWidth {
  (void) [((RAREWindowPane *) nil_chk(rootPane_)) getPreferredSizeWithRAREUIDimension:size withFloat:maxWidth];
}

- (id<RAREiPlatformComponent>)getRootPane {
  return rootPane_;
}

- (id<RAREiPlatformMenuBar>)getMenuBar {
  return [((RAREWindowPane *) nil_chk(rootPane_)) getMenuBar];
}

- (id<RAREiStatusBar>)getStatusBar {
  return [((RAREWindowPane *) nil_chk(rootPane_)) getStatusBar];
}

- (id<RAREiToolBarHolder>)getiToolBarHolder {
  return [((RAREWindowPane *) nil_chk(rootPane_)) getToolBarHolder];
}

- (RAREUIDimension *)getSize {
  RAREUIDimension *d = [[RAREUIDimension alloc] init];
  [self getSizeWithRAREUIDimension:d];
  return d;
}

- (void)getSizeWithRAREUIDimension:(RAREUIDimension *)size {
  #if TARGET_OS_IPHONE
  CGSize s= [((RAREAPWindow*)proxy_) orientedSize];
  #else
  NSSize s= [((RAREAPWindow*)proxy_) orientedSize];
  #endif
  size->width_=(int)ceilf(s.width);
  size->height_=(int)ceilf(s.height);
}

- (NSString *)getTitle {
  return [((RAREAPWindow*)proxy_) getTitle];
}

- (float)getWidth {
  return ceilf([((RAREAPWindow*)proxy_) orientedSize].width);
}

- (RAREWindowPane *)getWindowPane {
  return rootPane_;
}

- (float)getX {
  return [((RAREAPWindow*)proxy_) orientedLocation].x;
}

- (float)getY {
  return [((RAREAPWindow*)proxy_) orientedLocation].y;
}

- (BOOL)isDescendantOfWithRAREView:(RAREView *)view {
  return NO;
}

- (BOOL)isEnabled {
  return [((RAREAPWindow*)proxy_) isEnabled];
}

- (BOOL)isFocusable {
  return YES;
}

- (BOOL)isFocused {
  return [((RAREAPWindow*)proxy_) isKeyWindow];
}

- (BOOL)isFocusedOrChildOfFocused {
  return [self isFocused];
}

- (BOOL)isMovable {
  return [((RAREAPWindow*)proxy_) isMovable];
}

- (BOOL)isOpaque {
  return ![((RAREAPWindow*)proxy_) isOpaque];
}

- (BOOL)isResizable {
  return [((RAREAPWindow*)proxy_) isResizable];
}

- (BOOL)isShowing {
  return [self isVisible];
}

- (BOOL)isVisible {
  return [((RAREAPWindow*)proxy_) isVisible];
}

- (void)moveByWithFloat:(float)x
              withFloat:(float)y {
  [((RAREAPWindow*)proxy_)  moveByX: x andY:  y];
}

- (void)pack {
  RAREUIDimension *size = [[RAREUIDimension alloc] init];
  (void) [((RAREWindowPane *) nil_chk(rootPane_)) getPreferredSizeWithRAREUIDimension:size];
  RAREUIDimension *ss = [RAREUIScreen getUsableSize];
  ((RAREUIDimension *) nil_chk(ss))->width_ -= 10;
  ss->height_ -= 10;
  if (size->width_ > ss->width_) {
    size->width_ = ss->width_;
  }
  if (size->height_ > ss->height_) {
    size->height_ = ss->height_;
  }
  [self setSizeExWithFloat:size->width_ withFloat:size->height_];
}

- (void)removeViewFromGlassWithRAREView:(RAREView *)view {
  [((RAREAPWindow*)proxy_) removeViewFromGlass: view ];
}

- (void)revalidate {
  [super revalidate];
  [((RAREWindowPane *) nil_chk(rootPane_)) revalidate];
}

- (void)setAnimatorWithRAREiPlatformAnimator:(id<RAREiPlatformAnimator>)animator {
  self->animator_ = animator;
  if (self->animator_ != nil) {
    visibleIsforward_ = [((id<RAREiPlatformAnimator>) nil_chk(animator)) getDirection] == [RAREiAnimator_DirectionEnum FORWARD];
    if (animationComponent_ == nil) {
      [((RAREWindowPane *) nil_chk(rootPane_)) removeFromParent];
      animationComponent_ = [self createAnimationContainer];
      [self setContentViewWithId:((RAREView *) nil_chk([((id<RAREiParentComponent>) nil_chk(animationComponent_)) getView]))->proxy_];
      [animationComponent_ addWithRAREiPlatformComponent:rootPane_];
    }
  }
}

- (void)setBackgroundColorWithRAREUIColor:(RAREUIColor *)bg {
  [self setBackgroundColorExWithRAREUIColor:bg];
  [((RAREWindowPane *) nil_chk(rootPane_)) setBackgroundWithRAREUIColor:bg];
}

- (void)setBoundsWithFloat:(float)x
                 withFloat:(float)y
                 withFloat:(float)width
                 withFloat:(float)height {
  [self setLocationWithFloat:x withFloat:y];
  [self setSizeWithFloat:width withFloat:height];
}

- (void)setBoundsWithInt:(int)x
                 withInt:(int)y
                 withInt:(int)width
                 withInt:(int)height {
  [self setLocationWithFloat:x withFloat:y];
  [self setSizeWithFloat:width withFloat:height];
}

- (void)setComponentWithRAREComponent:(RAREComponent *)component {
  self->component_ = component;
}

- (void)setComponentPainterWithRAREiPlatformComponentPainter:(id<RAREiPlatformComponentPainter>)cp {
  [((RAREWindowPane *) nil_chk(rootPane_)) setComponentPainterWithRAREiPlatformComponentPainter:cp];
}

- (void)setContentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)content {
  self->content_ = content;
  [((RAREWindowPane *) nil_chk(rootPane_)) setContentWithRAREiPlatformComponent:content];
}

- (void)setDecoratedWithBoolean:(BOOL)decorated {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setEnabledWithBoolean:(BOOL)enabled {
  [((RAREAPWindow*)proxy_) setEnabled: enabled];
}

- (void)setFocusableWithBoolean:(BOOL)focusable {
  [((RAREAPWindow*)proxy_) setEnabled: focusable];
}

- (void)setIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  [((RAREWindowPane *) nil_chk(rootPane_)) setIconWithRAREiPlatformIcon:icon];
}

- (void)setMenuBarWithRAREiPlatformMenuBar:(id<RAREiPlatformMenuBar>)mb {
  [((RAREWindowPane *) nil_chk(rootPane_)) setMenuBarWithRAREiPlatformMenuBar:mb];
}

- (void)setModalWithBoolean:(BOOL)modal {
  [((RAREAPWindow*)proxy_) setModal:modal];
}

- (void)setMovableWithBoolean:(BOOL)movable {
  [((RAREAPWindow*)proxy_) setMovable: movable ];
}

- (void)setResizableWithBoolean:(BOOL)resizable {
  [((RAREAPWindow*)proxy_) setResizable: resizable ];
}

- (void)setSizeWithFloat:(float)width
               withFloat:(float)height {
  sizeSet_ = YES;
  [self setSizeExWithFloat:width withFloat:height];
  if (rootPane_ != nil) {
    [rootPane_ setSizeWithFloat:width withFloat:height];
    [rootPane_ revalidate];
  }
  if (animationComponent_ != nil) {
    [animationComponent_ setBoundsWithFloat:0 withFloat:0 withFloat:width withFloat:height];
    [animationComponent_ revalidate];
  }
  else if (rootPane_ != nil) {
    [rootPane_ setSizeWithFloat:width withFloat:height];
    [rootPane_ revalidate];
  }
}

- (void)setStatusBarWithRAREiStatusBar:(id<RAREiStatusBar>)sb {
  [((RAREWindowPane *) nil_chk(rootPane_)) setStatusBarWithRAREiStatusBar:sb];
}

- (void)setTitleWithNSString:(NSString *)title {
  [rootPane_ setTitleWithNSString: title];
  [((RAREAPWindow*)proxy_) setTitle:title];
}

- (void)setTitleViewWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  [((RAREWindowPane *) nil_chk(rootPane_)) setTitileBarWithRAREiPlatformComponent:c];
}

- (void)setToolBarHolderWithRAREiToolBarHolder:(id<RAREiToolBarHolder>)tb {
  [((RAREWindowPane *) nil_chk(rootPane_)) setToolBarHolderWithRAREiToolBarHolder:tb];
}

- (id<RAREiViewer>)setViewerWithRAREiViewer:(id<RAREiViewer>)viewer {
  id<RAREiViewer> v = nil;
  if (viewer != nil) {
    if (target_ == nil) {
      [self createTarget];
    }
    v = [((id<RAREiTarget>) nil_chk(target_)) setViewerWithRAREiViewer:viewer];
  }
  else {
    [self setContentWithRAREiPlatformComponent:nil];
  }
  return v;
}

- (void)setVisibleWithBoolean:(BOOL)visible {
  if (visible == [self isVisible]) {
    return;
  }
  if (animator_ == nil) {
    [self setWindowVisibleWithBoolean:visible];
  }
  else {
    if (visible) {
      [self setWindowVisibleWithBoolean:visible];
    }
    [animator_ addListenerWithRAREiAnimatorListener:[[RAREaWindow_$2 alloc] initWithRAREaWindow:self withBoolean:visible]];
    [RAREaAnimator setupTogglingAnimatorWithRAREiPlatformComponent:animationComponent_ withRAREiPlatformAnimator:animator_ withBoolean:visible withBoolean:visibleIsforward_];
    [animator_ animateWithRAREiPlatformComponent:animationComponent_ withId:nil];
  }
}

- (void)associateWindow {
  RAREAPWindow* win=(RAREAPWindow*)proxy_;
  win.sparWindow=(RAREWindow*)self;
}

- (id<RAREiParentComponent>)createAnimationContainer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (RAREWindowPane *)createRootPane {
  RAREWindowPane *p = [[RAREWindowPane alloc] initWithRAREiWidget:[RAREPlatform getContextRootViewer]];
  [self setContentViewWithId:((RAREView *) nil_chk([p getView]))->proxy_];
  return p;
}

- (void)createTarget {
  NSString *name = [NSString stringWithFormat:@"_new_window_%@", [JavaLangInteger toHexStringWithInt:(int) [self hash]]];
  target_ = [[RAREWindowTarget alloc] initWithRAREiPlatformAppContext:[RAREPlatform getAppContext] withNSString:name withRAREiParentComponent:rootPane_];
}

- (BOOL)handleOutsideTouch {
  return NO;
}

- (void)setContentViewWithId:(id)nativeview {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setSizeExWithFloat:(float)width
                 withFloat:(float)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setTitleExWithNSString:(NSString *)title {
  [((RAREAPWindow*)proxy_) setTitle:title];
}

- (void)setVisibleExWithBoolean:(BOOL)visible {
  [((RAREAPWindow*)proxy_) setVisible:visible];
}

- (void)setWindowListenerWithRAREiWindowListener:(id<RAREiWindowListener>)l {
  [((RAREAPWindow*)proxy_) setWindowListener: l];
}

- (void)setWindowVisibleWithBoolean:(BOOL)visible {
  [self setVisibleExWithBoolean:visible];
  if (visible) {
    [((RAREUTIdentityArrayList *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getActiveWindows])) addIfNotPresentWithId:self];
  }
  else {
    [((RAREUTIdentityArrayList *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getActiveWindows])) removeWithId:self];
  }
}

- (void)resizeAndCenter {
  id<RAREiPlatformComponent> c = [self getComponent];
  if ([(id) c isKindOfClass:[RAREFrame class]]) {
    RAREFrame *f = (RAREFrame *) check_class_cast(c, [RAREFrame class]);
    [((RAREWindowViewer *) nil_chk([((RAREFrame *) nil_chk(f)) getWindowViewer])) onConfigurationChangedWithBoolean:YES];
    [f pack];
    [f center];
  }
}

+ (id)createProxy {
  return [RAREAPWindow new];
}

- (void)copyAllFieldsTo:(RAREaWindow *)other {
  [super copyAllFieldsTo:other];
  other->animationComponent_ = animationComponent_;
  other->animator_ = animator_;
  other->canceled_ = canceled_;
  other->content_ = content_;
  other->decorated_ = decorated_;
  other->paddingBorder_ = paddingBorder_;
  other->rootPane_ = rootPane_;
  other->sizeSet_ = sizeSet_;
  other->target_ = target_;
  other->visibleIsforward_ = visibleIsforward_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addViewToGlassWithRAREView:", NULL, "V", 0x101, NULL },
    { "centerOnScreen", NULL, "V", 0x101, NULL },
    { "close", NULL, "V", 0x101, NULL },
    { "disposeEx", NULL, "V", 0x101, NULL },
    { "getBounds", NULL, "LRAREUIRectangle", 0x101, NULL },
    { "getContent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getHeight", NULL, "F", 0x101, NULL },
    { "getInnerBoundsWithRAREUIRectangle:", NULL, "LRAREUIRectangle", 0x1, NULL },
    { "getLocationWithRAREUIPoint:", NULL, "LRAREUIPoint", 0x101, NULL },
    { "getRootPane", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getMenuBar", NULL, "LRAREiPlatformMenuBar", 0x1, NULL },
    { "getStatusBar", NULL, "LRAREiStatusBar", 0x1, NULL },
    { "getiToolBarHolder", NULL, "LRAREiToolBarHolder", 0x1, NULL },
    { "getSize", NULL, "LRAREUIDimension", 0x1, NULL },
    { "getSizeWithRAREUIDimension:", NULL, "V", 0x101, NULL },
    { "getTitle", NULL, "LNSString", 0x101, NULL },
    { "getWidth", NULL, "F", 0x101, NULL },
    { "getWindowPane", NULL, "LRAREWindowPane", 0x1, NULL },
    { "getX", NULL, "F", 0x101, NULL },
    { "getY", NULL, "F", 0x101, NULL },
    { "isDescendantOfWithRAREView:", NULL, "Z", 0x1, NULL },
    { "isEnabled", NULL, "Z", 0x101, NULL },
    { "isFocusable", NULL, "Z", 0x1, NULL },
    { "isFocused", NULL, "Z", 0x101, NULL },
    { "isFocusedOrChildOfFocused", NULL, "Z", 0x1, NULL },
    { "isMovable", NULL, "Z", 0x101, NULL },
    { "isOpaque", NULL, "Z", 0x101, NULL },
    { "isResizable", NULL, "Z", 0x101, NULL },
    { "isShowing", NULL, "Z", 0x1, NULL },
    { "isVisible", NULL, "Z", 0x101, NULL },
    { "moveByWithFloat:withFloat:", NULL, "V", 0x101, NULL },
    { "removeViewFromGlassWithRAREView:", NULL, "V", 0x101, NULL },
    { "setDecoratedWithBoolean:", NULL, "V", 0x401, NULL },
    { "setEnabledWithBoolean:", NULL, "V", 0x101, NULL },
    { "setFocusableWithBoolean:", NULL, "V", 0x101, NULL },
    { "setModalWithBoolean:", NULL, "V", 0x101, NULL },
    { "setMovableWithBoolean:", NULL, "V", 0x101, NULL },
    { "setResizableWithBoolean:", NULL, "V", 0x101, NULL },
    { "setTitleWithNSString:", NULL, "V", 0x101, NULL },
    { "setViewerWithRAREiViewer:", NULL, "LRAREiViewer", 0x1, NULL },
    { "associateWindow", NULL, "V", 0x104, NULL },
    { "createAnimationContainer", NULL, "LRAREiParentComponent", 0x404, NULL },
    { "createRootPane", NULL, "LRAREWindowPane", 0x4, NULL },
    { "createTarget", NULL, "V", 0x4, NULL },
    { "handleOutsideTouch", NULL, "Z", 0x4, NULL },
    { "setContentViewWithId:", NULL, "V", 0x404, NULL },
    { "setSizeExWithFloat:withFloat:", NULL, "V", 0x404, NULL },
    { "setTitleExWithNSString:", NULL, "V", 0x104, NULL },
    { "setVisibleExWithBoolean:", NULL, "V", 0x104, NULL },
    { "setWindowListenerWithRAREiWindowListener:", NULL, "V", 0x104, NULL },
    { "setWindowVisibleWithBoolean:", NULL, "V", 0x4, NULL },
    { "resizeAndCenter", NULL, "V", 0x4, NULL },
    { "createProxy", NULL, "LNSObject", 0x10a, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "paddingBorder_", NULL, 0x0, "LRAREUIEmptyBorder" },
    { "content_", NULL, 0x4, "LRAREiPlatformComponent" },
    { "decorated_", NULL, 0x4, "Z" },
    { "rootPane_", NULL, 0x4, "LRAREWindowPane" },
    { "sizeSet_", NULL, 0x4, "Z" },
    { "target_", NULL, 0x4, "LRAREiTarget" },
    { "animator_", NULL, 0x4, "LRAREiPlatformAnimator" },
    { "visibleIsforward_", NULL, 0x4, "Z" },
    { "canceled_", NULL, 0x0, "Z" },
  };
  static J2ObjcClassInfo _RAREaWindow = { "aWindow", "com.appnativa.rare.platform.apple.ui.view", NULL, 0x401, 53, methods, 9, fields, 0, NULL};
  return &_RAREaWindow;
}

@end
@implementation RAREaWindow_$1

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  [((RAREWindowViewer *) nil_chk(val$win_)) close];
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0 {
  val$win_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$win_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _RAREaWindow_$1 = { "$1", "com.appnativa.rare.platform.apple.ui.view", "aWindow", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaWindow_$1;
}

@end
@implementation RAREaWindow_$2

- (void)animationEndedWithRAREiPlatformAnimator:(id<RAREiPlatformAnimator>)source {
  [((id<RAREiPlatformAnimator>) nil_chk(source)) removeListenerWithRAREiAnimatorListener:self];
  [source setDirectionWithRAREiAnimator_DirectionEnum:this$0_->visibleIsforward_ ? [RAREiAnimator_DirectionEnum FORWARD] : [RAREiAnimator_DirectionEnum BACKWARD]];
  if (!val$visible_) {
    [this$0_ setWindowVisibleWithBoolean:NO];
  }
  else {
    if (this$0_->animationComponent_ != nil) {
      [this$0_->animationComponent_ revalidate];
    }
    [((RAREWindowPane *) nil_chk(this$0_->rootPane_)) repaint];
    id<RAREiPlatformBorder> b = [this$0_->rootPane_ getBorder];
    if ([(id) b isKindOfClass:[RARESharedLineBorder class]]) {
      [((RARESharedLineBorder *) check_class_cast(b, [RARESharedLineBorder class])) repaintTopComponent];
    }
  }
}

- (void)animationStartedWithRAREiPlatformAnimator:(id<RAREiPlatformAnimator>)source {
}

- (id)initWithRAREaWindow:(RAREaWindow *)outer$
              withBoolean:(BOOL)capture$0 {
  this$0_ = outer$;
  val$visible_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaWindow" },
    { "val$visible_", NULL, 0x1012, "Z" },
  };
  static J2ObjcClassInfo _RAREaWindow_$2 = { "$2", "com.appnativa.rare.platform.apple.ui.view", "aWindow", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_RAREaWindow_$2;
}

@end
