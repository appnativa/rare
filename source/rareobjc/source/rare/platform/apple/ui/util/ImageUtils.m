//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/platform/apple/ui/util/ImageUtils.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSIntArray.h"
#include "com/appnativa/rare/platform/apple/ui/util/ImageUtils.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/ui/Transform.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIImageIcon.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformGraphics.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/painter/iImagePainter.h"
#include "java/net/URL.h"
#import "RAREImageWrapper.h"
 #import "java/io/FileNotFoundException.h"

@implementation RAREImageUtils

+ (id)addReflectionWithId:(id)proxy
                  withInt:(int)y
                  withInt:(int)height
                withFloat:(float)opacity
                  withInt:(int)gap {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  return [image addReflectionVersionFromY:y height:height opacity:opacity gap: gap];
}

+ (id)blurImageWithId:(id)proxy {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  [image blur];
  return self;
}

+ (id)copyImageWithId:(id)proxy {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  return [image copyImage];
}

+ (id)createColorProxyWithId:(id)proxy {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  #if TARGET_OS_IPHONE
  UIImage* img=[image getImage];
  return [UIColor colorWithPatternImage: img];
  #else
  NSImage* img=[image getImage];
  return [NSColor colorWithPatternImage: img];
  #endif
}

+ (NSString *)base64StringWithId:(id)proxy
                     withBoolean:(BOOL)png {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  UIImage* img=[image getImage];
  NSData* data=png ? UIImagePNGRepresentation(img) : UIImageJPEGRepresentation(img,1.0);
  if(data) {
    return [data base64Encoding];
    return [data base64EncodedStringWithOptions: kNilOptions];
  }
  else {
    return @"";
  }
}

+ (RAREUIImage *)createCompatibleImageWithInt:(int)width
                                      withInt:(int)height {
  return [[RAREUIImage alloc] initWithId:[RAREImageUtils createImageProxyWithInt:width withInt:height]];
}

+ (id)createContextWithId:(id)proxy {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  return [image createContext];
}

+ (id)createDisabledImageWithId:(id)image {
  return [((RAREImageWrapper*)image) createDisabledVersion];
}

+ (RAREUIImage *)createImageWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  int w = (c == nil) ? 0 : [c getWidth];
  int h = (c == nil) ? 0 : [c getHeight];
  if ((w < 1) || (h < 1)) {
    return nil;
  }
  return [[RAREUIImage alloc] initWithId:[RAREImageUtils createImageProxyWithRAREView:[((id<RAREiPlatformComponent>) nil_chk(c)) getView]]];
}

+ (RAREUIImage *)createImageWithRAREView:(RAREView *)view {
  int w = [RAREUIScreen snapToSizeWithFloat:[((RAREView *) nil_chk(view)) getWidth]];
  int h = [RAREUIScreen snapToSizeWithFloat:[view getHeight]];
  if ((w < 1) || (h < 1)) {
    return nil;
  }
  return [[RAREUIImage alloc] initWithId:[RAREImageUtils createImageProxyWithRAREView:view]];
}

+ (RAREUIImage *)createImageWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  if ([(id) icon isKindOfClass:[RAREUIImageIcon class]]) {
    return [((RAREUIImageIcon *) check_class_cast(icon, [RAREUIImageIcon class])) getImage];
  }
  return (icon == nil) ? nil : [RAREImageUtils createImageExWithRAREiPlatformIcon:icon];
}

+ (RAREUIImage *)createImageExWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  RAREUIImage *img = [[RAREUIImage alloc] initWithId:[RAREImageUtils createImageProxyWithInt:[((id<RAREiPlatformIcon>) nil_chk(icon)) getIconWidth] withInt:[icon getIconHeight]]];
  id<RAREiPlatformGraphics> g = [img createGraphics];
  RARETransform *t = [[RARETransform alloc] init];
  [t scale__WithFloat:1 withFloat:-1];
  [t translateWithFloat:0 withFloat:-[img getHeight]];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) setTransformWithRAREiTransform:t];
  [icon paintWithRAREiPlatformGraphics:g withFloat:0 withFloat:0 withFloat:[img getWidth] withFloat:[img getHeight]];
  [g dispose];
  return img;
}

+ (id)createImageProxyWithRAREView:(RAREView *)v {
  #if TARGET_OS_IPHONE
  return [RAREImageWrapper createImageFromView:(UIView*)[v getProxy]];
  #else
  return [RAREImageWrapper createImageFromView:(NSView*)[v getProxy]];
  #endif
}

+ (id)createImageProxyWithInt:(int)width
                      withInt:(int)height {
  #if TARGET_OS_IPHONE
  CGSize size={width,height};
  #else
  NSSize size={width,height};
  #endif
  RAREImageWrapper* proxy=[[RAREImageWrapper alloc]initWithSize:size];
  return proxy;
}

+ (id)createImageProxyWithId:(id)nativeimage {
  #if TARGET_OS_IPHONE
  return [[RAREImageWrapper alloc] initWithImage: (UIImage*)nativeimage];
  #else
  return [[RAREImageWrapper alloc] initWithImage: (NSImage*)nativeimage];
  #endif
}

+ (id)createImageProxyWithId:(id)data
                   withFloat:(float)dscale {
  RAREImageWrapper* img=[[RAREImageWrapper alloc] initWithNSData:(NSData*)data scale: dscale];
  if(![img getImage]) {
    NSString* s=[img getFailureString];
    if(!s) {
      s=@"";
    }
    img=nil;
    @throw [[JavaIoFileNotFoundException alloc] initWithNSString:s];
  }
  return img;
}

+ (id)createImageProxyWithJavaNetURL:(JavaNetURL *)url
                             withInt:(int)timeout
                           withFloat:(float)dscale {
  NSURL* u=(NSURL*)url->proxy_;
  RAREImageWrapper* img=[[RAREImageWrapper alloc]initWithContentsOfURL:u scale: dscale];
  if(![img getImage]) {
    NSString* s=[img getFailureString];
    if(!s) {
      s=@"";
    }
    img=nil;
    @throw [[JavaIoFileNotFoundException alloc] initWithNSString:s];
  }
  return img;
}

+ (id)createReflectionWithId:(id)proxy
                     withInt:(int)y
                     withInt:(int)height
                   withFloat:(float)opacity
                     withInt:(int)gap {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  return [image createReflectionVersionFromY:y height:height opacity:opacity gap: gap];
}

+ (void)setPixelWithId:(id)proxy
               withInt:(int)x
               withInt:(int)y
               withInt:(int)color {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  [image setPixelAtX: x y: y color: color];
}

+ (void)setPixelsWithId:(id)proxy
           withIntArray:(IOSIntArray *)pixels
                withInt:(int)x
                withInt:(int)y
                withInt:(int)width
                withInt:(int)height {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  [image setPixels: pixels x: x y: y width: width height: height];
}

+ (void)setResourceNameWithId:(id)proxy
                 withNSString:(NSString *)name {
  ((RAREImageWrapper*)proxy).resourceName=name;
}

+ (int)getHeightWithId:(id)nsimage {
  return ((RAREImageWrapper*)nsimage).getHeight;
}

+ (int)getPixelWithId:(id)proxy
              withInt:(int)x
              withInt:(int)y {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  return (int)[image getPixelAtX: x y: y];
}

+ (void)getPixelsWithId:(id)proxy
                withInt:(int)x
                withInt:(int)y
                withInt:(int)width
                withInt:(int)height
           withIntArray:(IOSIntArray *)pixels {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  [image getPixels:pixels x: x y: y width: width height: height];
}

+ (RAREUIImage *)getScaledImageWithRAREUIImage:(RAREUIImage *)image
                                       withInt:(int)width
                                       withInt:(int)height
         withRAREiImagePainter_ScalingTypeEnum:(RAREiImagePainter_ScalingTypeEnum *)scalingtype {
  return [[RAREUIImage alloc] initWithId:[RAREImageUtils getScaledInstanceWithId:[((RAREUIImage *) nil_chk(image)) getProxy] withInt:width withInt:height withRAREiImagePainter_ScalingTypeEnum:scalingtype]];
}

+ (id)getScaledInstanceWithId:(id)proxy
                      withInt:(int)width
                      withInt:(int)height
withRAREiImagePainter_ScalingTypeEnum:(RAREiImagePainter_ScalingTypeEnum *)scalingtype {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  return [image getScaledImageWithWidth:width height:height scalintType:scalingtype];
}

+ (id)getSubImageWithId:(id)proxy
                withInt:(int)x
                withInt:(int)y
                withInt:(int)width
                withInt:(int)height {
  RAREImageWrapper* image=(RAREImageWrapper*)proxy;
  return [image getSubImageAtX:x y:y width:width height:height];
}

+ (int)getWidthWithId:(id)proxy {
  return ((RAREImageWrapper*)proxy).getWidth;
}

+ (id)getNativeImageWithId:(id)proxy {
  return ((RAREImageWrapper*)proxy).getImage;
}

+ (RAREUIImage *)flipImageWithRAREUIImage:(RAREUIImage *)image {
  RAREImageWrapper* iw=(RAREImageWrapper*)[image getProxy];
  [iw flip];
  return image;
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addReflectionWithId:withInt:withInt:withFloat:withInt:", NULL, "LNSObject", 0x109, NULL },
    { "blurImageWithId:", NULL, "LNSObject", 0x109, NULL },
    { "copyImageWithId:", NULL, "LNSObject", 0x109, NULL },
    { "createColorProxyWithId:", NULL, "LNSObject", 0x109, NULL },
    { "base64StringWithId:withBoolean:", NULL, "LNSString", 0x109, NULL },
    { "createCompatibleImageWithInt:withInt:", NULL, "LRAREUIImage", 0x9, NULL },
    { "createContextWithId:", NULL, "LNSObject", 0x109, NULL },
    { "createDisabledImageWithId:", NULL, "LNSObject", 0x109, NULL },
    { "createImageWithRAREiPlatformComponent:", NULL, "LRAREUIImage", 0x9, NULL },
    { "createImageWithRAREView:", NULL, "LRAREUIImage", 0x9, NULL },
    { "createImageWithRAREiPlatformIcon:", NULL, "LRAREUIImage", 0x9, NULL },
    { "createImageExWithRAREiPlatformIcon:", NULL, "LRAREUIImage", 0x9, NULL },
    { "createImageProxyWithRAREView:", NULL, "LNSObject", 0x109, NULL },
    { "createImageProxyWithInt:withInt:", NULL, "LNSObject", 0x109, NULL },
    { "createImageProxyWithId:", NULL, "LNSObject", 0x109, NULL },
    { "createImageProxyWithId:withFloat:", NULL, "LNSObject", 0x109, NULL },
    { "createImageProxyWithJavaNetURL:withInt:withFloat:", NULL, "LNSObject", 0x109, NULL },
    { "createReflectionWithId:withInt:withInt:withFloat:withInt:", NULL, "LNSObject", 0x109, NULL },
    { "setPixelWithId:withInt:withInt:withInt:", NULL, "V", 0x109, NULL },
    { "setPixelsWithId:withIntArray:withInt:withInt:withInt:withInt:", NULL, "V", 0x109, NULL },
    { "setResourceNameWithId:withNSString:", NULL, "V", 0x109, NULL },
    { "getHeightWithId:", NULL, "I", 0x109, NULL },
    { "getPixelWithId:withInt:withInt:", NULL, "I", 0x109, NULL },
    { "getPixelsWithId:withInt:withInt:withInt:withInt:withIntArray:", NULL, "V", 0x109, NULL },
    { "getScaledImageWithRAREUIImage:withInt:withInt:withRAREiImagePainter_ScalingTypeEnum:", NULL, "LRAREUIImage", 0x9, NULL },
    { "getScaledInstanceWithId:withInt:withInt:withRAREiImagePainter_ScalingTypeEnum:", NULL, "LNSObject", 0x109, NULL },
    { "getSubImageWithId:withInt:withInt:withInt:withInt:", NULL, "LNSObject", 0x109, NULL },
    { "getWidthWithId:", NULL, "I", 0x109, NULL },
    { "getNativeImageWithId:", NULL, "LNSObject", 0x109, NULL },
    { "flipImageWithRAREUIImage:", NULL, "LRAREUIImage", 0x109, NULL },
  };
  static J2ObjcClassInfo _RAREImageUtils = { "ImageUtils", "com.appnativa.rare.platform.apple.ui.util", NULL, 0x1, 30, methods, 0, NULL, 0, NULL};
  return &_RAREImageUtils;
}

@end
