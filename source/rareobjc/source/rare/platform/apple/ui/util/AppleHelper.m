//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/platform/apple/ui/util/AppleHelper.java
//
//  Created by decoteaud on 9/15/15.
//

#include "com/appnativa/rare/platform/apple/ui/util/AppleHelper.h"
#include "com/appnativa/rare/platform/apple/ui/view/ScrollBarView.h"
#include "com/appnativa/rare/platform/apple/ui/view/ScrollView.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/spot/ScrollPane.h"
#include "com/appnativa/rare/ui/Container.h"
#include "com/appnativa/rare/ui/ScrollPanePanel.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/iListHandler.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/listener/WidgetScriptChangeListener.h"
#include "com/appnativa/rare/ui/painter/UIScrollingEdgePainter.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTEnumerated.h"

@implementation RAREAppleHelper

static RARESPOTScrollPane * RAREAppleHelper_DEFAULT_SCROLLPANE_CONFIG_;

+ (RARESPOTScrollPane *)DEFAULT_SCROLLPANE_CONFIG {
  return RAREAppleHelper_DEFAULT_SCROLLPANE_CONFIG_;
}

+ (void)setDEFAULT_SCROLLPANE_CONFIG:(RARESPOTScrollPane *)DEFAULT_SCROLLPANE_CONFIG {
  RAREAppleHelper_DEFAULT_SCROLLPANE_CONFIG_ = DEFAULT_SCROLLPANE_CONFIG;
}

+ (void)configureScrollBarViewWithRAREiWidget:(id<RAREiWidget>)w
                           withRAREScrollView:(RAREScrollView *)sv
                           withSPOTEnumerated:(SPOTEnumerated *)cfg
                                  withBoolean:(BOOL)vertical {
  int val = [((SPOTEnumerated *) nil_chk(cfg)) intValue];
  RAREScrollBarView *sb = nil;
  if ((val == RARESPOTScrollPane_CVerticalScrollbar_show_as_needed) || (val == RARESPOTScrollPane_CVerticalScrollbar_show_always)) {
    if (vertical) {
      [((RAREScrollView *) nil_chk(sv)) setHasVerticalScrollBarWithBoolean:YES];
      sb = [sv getVerticalScrollBar];
    }
    else {
      [((RAREScrollView *) nil_chk(sv)) setHasHorizontalScrollBarWithBoolean:YES];
      sb = [sv getHorizontalScrollBar];
    }
    if (val == RARESPOTScrollPane_CVerticalScrollbar_show_always) {
      [((RAREScrollBarView *) nil_chk(sb)) setShowAlwaysWithBoolean:YES];
    }
    NSString *code = [cfg spot_getAttributeWithNSString:@"onChange"];
    if ((code != nil)) {
      [((RAREScrollBarView *) nil_chk(sb)) addChangeListenerWithRAREiChangeListener:[[RAREWidgetScriptChangeListener alloc] initWithRAREiWidget:w withId:code]];
    }
  }
  else {
    if (vertical) {
      [((RAREScrollView *) nil_chk(sv)) setHasVerticalScrollBarWithBoolean:NO];
    }
    else {
      [((RAREScrollView *) nil_chk(sv)) setHasHorizontalScrollBarWithBoolean:NO];
    }
  }
}

+ (id<RAREiPlatformComponent>)configureScrollPaneWithRAREiWidget:(id<RAREiWidget>)lv
                                      withRAREiPlatformComponent:(id<RAREiPlatformComponent>)fc
                                                    withRAREView:(RAREView *)view
                                          withRARESPOTScrollPane:(RARESPOTScrollPane *)sp {
  BOOL scrollview = [((RAREView *) nil_chk(view)) isScrollView];
  if ((sp == nil) && ([(id) lv conformsToProtocol: @protocol(RAREiListHandler)])) {
    sp = RAREAppleHelper_DEFAULT_SCROLLPANE_CONFIG_;
  }
  if (sp == nil) {
    return fc;
  }
  RAREScrollView *sv;
  BOOL wrapped = NO;
  if (scrollview) {
    sv = [RAREScrollView wrapWithId:[view getProxy]];
    wrapped = YES;
  }
  else {
    sv = [[RAREScrollView alloc] init];
  }
  [RAREAppleHelper configureScrollBarViewWithRAREiWidget:lv withRAREScrollView:sv withSPOTEnumerated:((RARESPOTScrollPane *) nil_chk(sp))->verticalScrollbar_ withBoolean:YES];
  [RAREAppleHelper configureScrollBarViewWithRAREiWidget:lv withRAREScrollView:sv withSPOTEnumerated:sp->horizontalScrollbar_ withBoolean:NO];
  if ([sp isAlwaysHidden]) {
    [((RAREScrollView *) nil_chk(sv)) setScrollEnabledWithBoolean:NO];
  }
  id<RAREiPlatformComponent> c;
  if (scrollview) {
    c = fc;
    [((RAREScrollView *) nil_chk(sv)) unwrap];
  }
  else {
    RAREContainer *cc = [[RAREScrollPanePanel alloc] initWithId:sv];
    [cc addWithRAREiPlatformComponent:fc withInt:0];
    [((RAREView *) nil_chk([((id<RAREiPlatformComponent>) nil_chk(fc)) getView])) makeTransparent];
    [cc setBackgroundWithRAREUIColor:[RAREUIColor WHITE]];
    c = cc;
  }
  if (!wrapped && [((RAREScrollView *) nil_chk(sv)) hasHorizontalScrollBar]) {
    [sv setScrollingEdgePainterWithRAREUIScrollingEdgePainter:[RAREUIScrollingEdgePainter getInstance]];
  }
  return c;
}

+ (RAREScrollBarView *)createScrollBarViewWithRAREiWidget:(id<RAREiWidget>)w
                                       withSPOTEnumerated:(SPOTEnumerated *)cfg
                                              withBoolean:(BOOL)horizontal {
  int val = [((SPOTEnumerated *) nil_chk(cfg)) intValue];
  RAREScrollBarView *sb = nil;
  if ((val == RARESPOTScrollPane_CVerticalScrollbar_show_as_needed) || (val == RARESPOTScrollPane_CVerticalScrollbar_show_always)) {
    sb = [[RAREScrollBarView alloc] initWithBoolean:horizontal];
    if (val == RARESPOTScrollPane_CVerticalScrollbar_show_always) {
      [sb setShowAlwaysWithBoolean:YES];
    }
    NSString *code = [cfg spot_getAttributeWithNSString:@"onChange"];
    if ((code != nil)) {
      [sb addChangeListenerWithRAREiChangeListener:[[RAREWidgetScriptChangeListener alloc] initWithRAREiWidget:w withId:code]];
    }
  }
  return sb;
}

+ (id<RAREiPlatformComponent>)makeScrollPaneWithRAREaViewer:(RAREaViewer *)context
                                     withRARESPOTScrollPane:(RARESPOTScrollPane *)sp
                                 withRAREiPlatformComponent:(id<RAREiPlatformComponent>)content {
  if (sp == nil) {
    sp = RAREAppleHelper_DEFAULT_SCROLLPANE_CONFIG_;
  }
  return [RAREAppleHelper configureScrollPaneWithRAREiWidget:context withRAREiPlatformComponent:content withRAREView:[((id<RAREiPlatformComponent>) nil_chk(content)) getView] withRARESPOTScrollPane:sp];
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [RAREAppleHelper class]) {
    RAREAppleHelper_DEFAULT_SCROLLPANE_CONFIG_ = [[RARESPOTScrollPane alloc] init];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "configureScrollPaneWithRAREiWidget:withRAREiPlatformComponent:withRAREView:withRARESPOTScrollPane:", NULL, "LRAREiPlatformComponent", 0x9, NULL },
    { "createScrollBarViewWithRAREiWidget:withSPOTEnumerated:withBoolean:", NULL, "LRAREScrollBarView", 0x9, NULL },
    { "makeScrollPaneWithRAREaViewer:withRARESPOTScrollPane:withRAREiPlatformComponent:", NULL, "LRAREiPlatformComponent", 0x9, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "DEFAULT_SCROLLPANE_CONFIG_", NULL, 0x8, "LRARESPOTScrollPane" },
  };
  static J2ObjcClassInfo _RAREAppleHelper = { "AppleHelper", "com.appnativa.rare.platform.apple.ui.util", NULL, 0x1, 3, methods, 1, fields, 0, NULL};
  return &_RAREAppleHelper;
}

@end
