//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/platform/apple/Main.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/platform/aRare.h"
#include "com/appnativa/rare/platform/apple/AppContext.h"
#include "com/appnativa/rare/platform/apple/Main.h"
#include "com/appnativa/rare/platform/apple/Rare.h"
#include "com/appnativa/rare/platform/apple/ui/view/Window.h"
#include "com/appnativa/rare/util/DataParser.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/spot/SDFNode.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/OrderedProperties.h"
#include "java/io/File.h"
#include "java/io/PrintStream.h"
#include "java/io/PrintWriter.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/io/StringWriter.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/net/HttpURLConnection.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@implementation RAREMain

- (id)initWithNSStringArray:(IOSObjectArray *)args {
  if (self = [super init]) {
    @try {
      RAREUTOrderedProperties *props = [[RAREUTOrderedProperties alloc] init];
      info_ = [self initialize__WithNSStringArray:args withRAREUTOrderedProperties:props];
    }
    @catch (JavaLangThrowable *e) {
      [((JavaLangThrowable *) nil_chk(e)) printStackTrace];
      [self exit];
      return self;
    }
    [self argsInitialized];
    NSString *file = ((RAREaRare_StartupInfo *) nil_chk(info_))->applicationFile_;
    JavaNetURL *url = nil;
    if (file != nil) {
      @try {
        info_->applicationFile_ = file;
        url = [self resolveApplicationURLWithNSString:info_->applicationFile_];
        if (info_->dumpSDF_ || info_->dumpXML_) {
          [self dumpWithJavaNetURL:url withBoolean:info_->dumpXML_];
          [JavaLangSystem exitWithInt:0];
        }
        [self createApplicationObjectWithJavaNetURLArray:[IOSObjectArray arrayWithObjects:(id[]){ url } count:1 type:[IOSClass classWithClass:[JavaNetURL class]]] withNSString:info_->local_];
      }
      @catch (JavaLangException *e) {
        [((JavaLangException *) nil_chk(e)) printStackTrace];
        [self exit];
      }
    }
  }
  return self;
}

- (void)exit {
  [super exit];
}

- (void)launchWithId:(id)nswindow {
  ((RAREAppContext *) nil_chk(appContext_))->mainWindow_ = [[RAREWindow alloc] initWithId:nswindow];
  [self start];
}

- (RAREaRare_StartupInfo *)initialize__WithNSStringArray:(IOSObjectArray *)args
                             withRAREUTOrderedProperties:(RAREUTOrderedProperties *)props {
  NSString *file = nil;
  BOOL dumpXML = NO;
  BOOL dumpSDF = NO;
  NSString *infoFile = nil;
  NSString *local = nil;
  NSString *s;
  int len = (int) [((IOSObjectArray *) nil_chk(args)) count];
  if (props == nil) {
    props = [[RAREUTOrderedProperties alloc] init];
  }
  id<JavaUtilList> cmdargs = [[JavaUtilArrayList alloc] init];
  for (int i = 0; i < len; i++) {
    s = IOSObjectArray_Get(args, i);
    if (s == nil) {
      continue;
    }
    if ([((NSString *) nil_chk(s)) hasPrefix:@"-"]) {
      if ([s hasPrefix:@"-S"]) {
        [cmdargs addWithId:[s substring:3]];
      }
    }
    else if (file != nil) {
      local = s;
    }
    else {
      file = s;
    }
  }
  if (file == nil) {
    file = [((RAREUTOrderedProperties *) nil_chk(props)) getPropertyWithNSString:@"application"];
    if (file == nil) {
      file = [props getPropertyWithNSString:@"applicationURL"];
    }
    if (file == nil) {
      file = [props getPropertyWithNSString:@"application"];
    }
  }
  return [[RAREaRare_StartupInfo alloc] initWithNSString:file withNSString:infoFile withNSString:local withBoolean:dumpXML withBoolean:dumpSDF withJavaUtilList:cmdargs];
}

- (JavaNetURL *)resolveApplicationURLWithNSString:(NSString *)file {
  JavaNetURL *url = nil;
  if (file == nil) {
    @throw [[RAREApplicationException alloc] initWithNSString:[RAREPlatform getResourceAsStringWithNSString:@"loadError"]];
  }
  @try {
    if ([((NSString *) nil_chk(file)) hasPrefix:@"http"] || [file hasPrefix:@"jar:"] || [file hasPrefix:[RAREiConstants LIB_PREFIX]]) {
      if ([file hasPrefix:[RAREiConstants LIB_PREFIX]]) {
        url = [self resolveLibURLWithNSString:file];
      }
      else {
        url = [[JavaNetURL alloc] initWithNSString:file];
      }
    }
    else if ([file hasPrefix:@"file:"]) {
      url = [[JavaNetURL alloc] initWithNSString:file];
    }
    else {
      if ([file hasSuffix:@"/"]) {
        if ([((JavaIoFile *) [[JavaIoFile alloc] initWithNSString:[NSString stringWithFormat:@"%@application.sdf", file]]) exists]) {
          file = [NSString stringWithFormat:@"%@application.sdf", file];
        }
      }
      JavaIoFile *f = [[JavaIoFile alloc] initWithNSString:file];
      f = [f getCanonicalFile];
      url = [RAREaPlatformHelper fileToURLWithJavaIoFile:f];
    }
  }
  @catch (JavaLangThrowable *ex) {
    [self abortWithJavaLangThrowable:ex];
    return nil;
  }
  if (url == nil) {
    @throw [[RAREApplicationException alloc] initWithNSString:[NSString stringWithFormat:@"%@:%@", [RAREPlatform getResourceAsStringWithNSString:@"loadError"], file]];
  }
  return url;
}

- (void)dumpWithJavaNetURL:(JavaNetURL *)url
               withBoolean:(BOOL)dumpXML {
  @try {
    NSString *mime = nil;
    NSString *file = [((JavaNetURL *) nil_chk(url)) getFile];
    BOOL xml = NO;
    BOOL sdf = NO;
    JavaIoReader *stream = nil;
    JavaNetURLConnection *con = [url openConnection];
    if ([con isKindOfClass:[JavaNetHttpURLConnection class]]) {
      int code = [((JavaNetHttpURLConnection *) check_class_cast(con, [JavaNetHttpURLConnection class])) getResponseCode];
      if (code == 401) {
        [JavaLangSystem exitWithInt:0];
      }
    }
    mime = [((JavaNetURLConnection *) nil_chk(con)) getContentType];
    if (mime == nil) {
      mime = @"text/x-sdf";
    }
    if ([((NSString *) nil_chk(mime)) hasPrefix:[RAREiConstants SDF_MIME_TYPE]]) {
      sdf = YES;
    }
    else if ([((NSString *) nil_chk(file)) hasSuffix:@".sdf"]) {
      sdf = YES;
    }
    if (xml || sdf) {
      stream = [RARERare getReaderWithJavaNetURLConnection:con];
    }
    else {
      [JavaLangSystem exitWithInt:0];
    }
    [self setContextURLWithJavaNetURL:url];
    JavaIoStringWriter *sw = [[JavaIoStringWriter alloc] init];
    JavaIoPrintWriter *pw = [[JavaIoPrintWriter alloc] initWithJavaIoWriter:sw];
    [((id<iSPOTElement>) nil_chk([RAREDataParser loadSPOTObjectSDFWithRAREiWidget:[self getRootViewer] withJavaIoReader:stream withISPOTElement:nil withNSString:mime withJavaNetURL:url])) toSDFWithJavaIoWriter:pw];
    [pw flush];
    SDFNode *node = [SDFNode parseForReformatWithJavaIoReader:[[JavaIoStringReader alloc] initWithNSString:[sw description]] withRAREUTiFileResolver:nil withNSString:file];
    SDFNode *node2 = [((SDFNode *) nil_chk(node)) getFirstNode];
    if (node2 != nil) {
      node = node2;
    }
    NSString *name = [node getNodeName];
    if ((name != nil) && [name hasPrefix:@"com.appnativa.rare.spot."]) {
      name = [name substring:[@"com.appnativa.rare.spot." sequenceLength]];
      [node setNodeNameWithNSString:name];
    }
    [((JavaIoPrintStream *) nil_chk([JavaLangSystem out])) printlnWithNSString:[node description]];
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
  }
}

- (JavaNetURL *)resolveLibURLWithNSString:(NSString *)file {
  return [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) getResourceURLWithNSString:[((NSString *) nil_chk(file)) substring:[RAREiConstants LIB_PREFIX_LENGTH]]];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initialize__WithNSStringArray:withRAREUTOrderedProperties:", NULL, "LRAREaRare_StartupInfo", 0x4, "JavaLangException" },
    { "resolveApplicationURLWithNSString:", NULL, "LJavaNetURL", 0x4, "JavaNetMalformedURLException" },
    { "dumpWithJavaNetURL:withBoolean:", NULL, "V", 0x2, NULL },
    { "resolveLibURLWithNSString:", NULL, "LJavaNetURL", 0x2, "JavaIoUnsupportedEncodingException;JavaNetMalformedURLException" },
  };
  static J2ObjcClassInfo _RAREMain = { "Main", "com.appnativa.rare.platform.apple", NULL, 0x1, 4, methods, 0, NULL, 0, NULL};
  return &_RAREMain;
}

@end
