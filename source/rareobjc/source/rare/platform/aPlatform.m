//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/platform/aPlatform.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/TemplateHandler.h"
#include "com/appnativa/rare/converters/iDataConverter.h"
#include "com/appnativa/rare/iCancelableFuture.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iExceptionHandler.h"
#include "com/appnativa/rare/iFunctionCallback.h"
#include "com/appnativa/rare/iFunctionHandler.h"
#include "com/appnativa/rare/iPlatform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/iTimer.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/NetHelper.h"
#include "com/appnativa/rare/net/iURLConnection.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/platform/Validator.h"
#include "com/appnativa/rare/platform/aAppContext.h"
#include "com/appnativa/rare/platform/aPlatform.h"
#include "com/appnativa/rare/platform/aRare.h"
#include "com/appnativa/rare/scripting/iScriptHandler.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/ui/AlertPanel.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIFontHelper.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIImageIcon.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/aUIImageIcon.h"
#include "com/appnativa/rare/ui/aWidgetListener.h"
#include "com/appnativa/rare/ui/dnd/iFlavorCreator.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/painter/iImagePainter.h"
#include "com/appnativa/rare/util/DataItemParserHandler.h"
#include "com/appnativa/rare/util/DataParser.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/ByteArray.h"
#include "com/appnativa/util/CharArray.h"
#include "com/appnativa/util/ObjectHolder.h"
#include "com/appnativa/util/OrderedProperties.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/iCancelable.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/appnativa/util/json/JSONTokener.h"
#include "java/io/BufferedReader.h"
#include "java/io/File.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/io/Reader.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URL.h"
#include "java/util/ArrayList.h"
#include "java/util/EventObject.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@implementation RAREaPlatform

- (void)addJarURLWithJavaNetURL:(JavaNetURL *)url {
}

- (JavaIoFile *)createCacheFileWithNSString:(NSString *)name {
  JavaIoFile *f = [self getCacheDir];
  return (f == nil) ? nil : [[JavaIoFile alloc] initWithJavaIoFile:f withNSString:[NSString stringWithFormat:@"uc_%@", name]];
}

- (void)debugLogWithNSString:(NSString *)msg {
  if ([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) isDebugEnabled]) {
    [((JavaIoPrintStream *) nil_chk([JavaLangSystem err])) printlnWithNSString:msg];
  }
}

- (BOOL)deleteDirectoryWithJavaIoFile:(JavaIoFile *)path {
  if ([((JavaIoFile *) nil_chk(path)) exists]) {
    IOSObjectArray *files = [path listFiles];
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(files)) count]; i++) {
      if ([((JavaIoFile *) IOSObjectArray_Get(files, i)) isDirectory]) {
        [self deleteDirectoryWithJavaIoFile:IOSObjectArray_Get(files, i)];
      }
      else {
        @try {
          [((JavaIoFile *) IOSObjectArray_Get(files, i)) delete__];
        }
        @catch (JavaLangException *ignore) {
        }
      }
    }
  }
  @try {
    return ([path delete__]);
  }
  @catch (JavaLangException *ignore) {
    return NO;
  }
}

- (BOOL)isDesktop {
  return NO;
}

- (void)errorMessageWithNSString:(NSString *)title
                    withNSString:(NSString *)message {
  [((RAREWindowViewer *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowViewer])) errorWithNSString:title withId:message withRAREiFunctionCallback:nil];
}

- (id)evaluateWithRAREiWidget:(id<RAREiWidget>)w
       withRAREiScriptHandler:(id<RAREiScriptHandler>)sh
                       withId:(id)code
                 withNSString:(NSString *)event
      withJavaUtilEventObject:(JavaUtilEventObject *)e {
  return [RAREaWidgetListener evaluateWithRAREiWidget:w withRAREiScriptHandler:sh withId:code withNSString:event withJavaUtilEventObject:e];
}

- (void)executeWithRAREiWidget:(id<RAREiWidget>)w
        withRAREiScriptHandler:(id<RAREiScriptHandler>)sh
                        withId:(id)code
                  withNSString:(NSString *)event
       withJavaUtilEventObject:(JavaUtilEventObject *)e {
  [RAREaWidgetListener executeWithRAREiWidget:w withRAREiScriptHandler:sh withId:code withNSString:event withJavaUtilEventObject:e];
}

- (void)handlePlatformPropertiesWithRAREiWidget:(id<RAREiWidget>)widget
                             withRARESPOTWidget:(RARESPOTWidget *)cfg
                                withJavaUtilMap:(id<JavaUtilMap>)properties {
}

- (void)ignoreExceptionWithNSString:(NSString *)msg
              withJavaLangThrowable:(JavaLangThrowable *)throwable {
  @try {
    [((id<RAREiExceptionHandler>) nil_chk([RAREaAppContext getDefaultExceptionHandlerWithRAREiWidget:nil])) ignoreExceptionWithNSString:msg withJavaLangThrowable:throwable];
  }
  @catch (JavaLangException *ignore) {
    if ([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) isDebugEnabled]) {
      if (msg != nil) {
        [((JavaIoPrintStream *) nil_chk([JavaLangSystem err])) printlnWithNSString:msg];
      }
      if (throwable != nil) {
        [throwable printStackTraceWithJavaIoPrintStream:[JavaLangSystem err]];
      }
    }
  }
}

- (void)infoMessageWithNSString:(NSString *)title
                   withNSString:(NSString *)message {
  [self infoMessageWithNSString:title withNSString:message withRAREiFunctionCallback:nil];
}

- (void)infoMessageWithNSString:(NSString *)title
                   withNSString:(NSString *)message
      withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  RAREAlertPanel *d = [RAREAlertPanel okWithRAREiWidget:[((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowViewer] withNSString:title withId:message withRAREiPlatformIcon:nil];
  [((RAREAlertPanel *) nil_chk(d)) showDialogWithRAREiFunctionCallback:cb];
}

- (id<JavaUtilMap>)loadResourceIconsWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                                withJavaUtilMap:(id<JavaUtilMap>)appIcons
                                             withRAREActionLink:(RAREActionLink *)link
                                                    withBoolean:(BOOL)clear
                                                    withBoolean:(BOOL)defaultDeferred {
  if (appIcons == nil) {
    appIcons = [[JavaUtilHashMap alloc] init];
  }
  RAREValidator *validator = [self getValidator];
  @try {
    RAREUTOrderedProperties *icons = [[RAREUTOrderedProperties alloc] init];
    [icons setSlashCommentWithBoolean:YES];
    [icons setPreserveDuplicatesWithBoolean:YES];
    [icons load__WithJavaIoReader:[((RAREActionLink *) nil_chk(link)) getReader]];
    id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([icons entrySet])) iterator];
    id<JavaUtilMap_Entry> me;
    NSString *s, *key;
    NSString *value;
    BOOL deferred;
    float density;
    NSString *description_;
    JavaNetURL *url;
    RAREUIImageIcon *ic;
    RAREUIRectangle *slice;
    RAREUIDimension *size;
    RAREiImagePainter_ScalingTypeEnum *scaling;
    NSString *appRoot = nil;
    id<RAREiWidget> context = [link getContext];
    NSString *screen = [RAREUIScreen getRelativeScreenSizeName];
    RAREUIImageIcon *empty = [((id<RAREiPlatformAppContext>) nil_chk(app)) getResourceAsIconWithNSString:@"Rare.icon.empty"];
    if (context == nil) {
      context = [app getRootViewer];
    }
    RAREUTCharArray *ca = [[RAREUTCharArray alloc] init];
    id<JavaUtilMap> map = ((RAREValidator *) nil_chk(validator))->options_;
    JavaNetURL *linkURL = [link isInlineURL] ? [((id<RAREiViewer>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getViewer])) getContextURL] : [link getURLWithRAREiWidget:context];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      [((id<JavaUtilMap>) nil_chk(map)) clear];
      me = (id<JavaUtilMap_Entry>) check_protocol_cast([it next], @protocol(JavaUtilMap_Entry));
      key = (NSString *) check_class_cast([((id<JavaUtilMap_Entry>) nil_chk(me)) getKey], [NSString class]);
      value = [icons stripCommentWithId:[me getValue] withRAREUTOrderedProperties_iValidator:validator];
      if ((key != nil) && ([key sequenceLength] > 0) && (value != nil) && ([value sequenceLength] > 0)) {
        description_ = nil;
        slice = nil;
        size = nil;
        density = [RAREaPlatformHelper getScaledImageDensity];
        deferred = defaultDeferred;
        scaling = [RAREiImagePainter_ScalingTypeEnum BILINEAR];
        (void) [ca setWithNSString:key];
        (void) [ca toLowerCase];
        (void) [ca replaceWithChar:'.' withChar:'_'];
        key = [ca description];
        if (![map isEmpty]) {
          s = (NSString *) check_class_cast([map getWithId:@"screen"], [NSString class]);
          if ((s != nil) && ![s isEqual:screen]) {
            continue;
          }
          id<JavaUtilIterator> mit = [((id<JavaUtilSet>) nil_chk([map keySet])) iterator];
          while ([((id<JavaUtilIterator>) nil_chk(mit)) hasNext]) {
            s = [mit next];
            if ([((NSString *) nil_chk(s)) isEqual:@"deferred"]) {
              deferred = [@"true" equalsIgnoreCase:(NSString *) check_class_cast([map getWithId:s], [NSString class])];
            }
            else if ([s hasPrefix:@"alt"]) {
              description_ = (NSString *) check_class_cast([map getWithId:s], [NSString class]);
            }
            else if ([s isEqual:@"density"]) {
              density = [RAREUTSNumber floatValueWithNSString:(NSString *) check_class_cast([map getWithId:s], [NSString class])];
            }
            else if ([s hasPrefix:@"slice"]) {
              slice = [RAREUtils getRectangleWithNSString:(NSString *) check_class_cast([map getWithId:s], [NSString class])];
            }
            else if ([s hasPrefix:@"size"]) {
              size = [RAREUtils getSizeWithNSString:(NSString *) check_class_cast([map getWithId:s], [NSString class])];
            }
            else if ([s hasPrefix:@"scaling"]) {
              @try {
                scaling = [RAREiImagePainter_ScalingTypeEnum valueOfWithNSString:[((NSString *) check_class_cast([map getWithId:s], [NSString class])) uppercaseStringWithJRELocale:[JavaUtilLocale US]]];
              }
              @catch (JavaLangException *e) {
                [RAREPlatform ignoreExceptionWithNSString:@"invalid scaling type" withJavaLangThrowable:e];
              }
            }
          }
        }
        if ([value sequenceLength] > 0) {
          if ((appRoot != nil) && [value hasPrefix:@"/"]) {
            value = [NSString stringWithFormat:@"%@%@", appRoot, value];
          }
          if ([value hasPrefix:[RAREiConstants RESOURCE_PREFIX]]) {
            value = [value substring:[RAREiConstants RESOURCE_PREFIX_LENGTH]];
            ic = [((id<JavaUtilMap>) nil_chk(appIcons)) getWithId:value];
            if (ic == nil) {
              ic = [app getResourceAsIconWithNSString:value];
            }
            if (ic == nil) {
              continue;
            }
          }
          else {
            if (description_ == nil) {
              description_ = [NSString stringWithFormat:@"%@%@", [RAREiConstants RESOURCE_PREFIX], key];
            }
            url = [((RAREaRare *) nil_chk(((RAREaAppContext *) check_class_cast(app, [RAREaAppContext class]))->RARE_)) createURLWithRAREiPlatformAppContext:app withJavaNetURL:linkURL withNSString:value];
            ic = (url == nil) ? empty : [RAREaPlatformHelper createIconWithJavaNetURL:url withNSString:description_ withBoolean:YES withFloat:density];
            if (ic == nil) {
              continue;
            }
            if (slice != nil) {
              ic = (RAREUIImageIcon *) check_class_cast([ic getSliceWithNSString:nil withRAREUIRectangle:slice], [RAREUIImageIcon class]);
            }
            [((RAREUIImageIcon *) nil_chk(ic)) setScalingTypeWithRAREiImagePainter_ScalingTypeEnum:scaling];
            if (size != nil) {
              [ic scale__WithInt:[size intWidth] withInt:[size intHeight]];
            }
          }
          if (!deferred) {
            [RAREaPlatformHelper loadIconWithRAREiPlatformAppContext:app withRAREUIImageIcon:ic];
          }
          (void) [((id<JavaUtilMap>) nil_chk(appIcons)) putWithId:key withId:ic];
        }
      }
    }
  }
  @finally {
    [((RAREValidator *) nil_chk(validator)) clear];
    [((RAREActionLink *) nil_chk(link)) close];
  }
  return appIcons;
}

- (id<JavaUtilMap>)loadResourceStringsWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                                  withJavaUtilMap:(id<JavaUtilMap>)appStrings
                                               withRAREActionLink:(RAREActionLink *)link
                                                      withBoolean:(BOOL)clear {
  @try {
    JavaIoReader *r = [((RAREActionLink *) nil_chk(link)) getReader];
    if (appStrings == nil) {
      appStrings = [[RAREUTOrderedProperties alloc] init];
    }
    else if (clear) {
      [appStrings clear];
    }
    if ([(id) appStrings isKindOfClass:[RAREUTOrderedProperties class]]) {
      [((RAREUTOrderedProperties *) check_class_cast(appStrings, [RAREUTOrderedProperties class])) load__WithJavaIoReader:r];
    }
    else {
      RAREUTOrderedProperties *p = [[RAREUTOrderedProperties alloc] init];
      [p setStripLeadingSpacesWithBoolean:NO];
      [p load__WithJavaIoReader:r];
      [((id<JavaUtilMap>) nil_chk(appStrings)) putAllWithJavaUtilMap:p];
    }
  }
  @finally {
    [((RAREActionLink *) nil_chk(link)) close];
  }
  return appStrings;
}

- (void)loadUIPropertiesWithRAREiWidget:(id<RAREiWidget>)context
                     withRAREActionLink:(RAREActionLink *)link
                   withRAREUIProperties:(RAREUIProperties *)defs {
  @try {
    RAREUTOrderedProperties *props = [[RAREUTOrderedProperties alloc] init];
    [props setSlashCommentWithBoolean:YES];
    [props setPreserveDuplicatesWithBoolean:YES];
    [props load__WithJavaIoReader:[((RAREActionLink *) nil_chk(link)) getReader]];
    id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([props entrySet])) iterator];
    id<JavaUtilMap_Entry> me;
    id v;
    NSString *value;
    NSString *s;
    RAREValidator *validator = [self getValidator];
    RAREUIColor *bg = nil;
    RAREUIColor *fg = nil;
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      me = (id<JavaUtilMap_Entry>) check_protocol_cast([it next], @protocol(JavaUtilMap_Entry));
      s = (NSString *) check_class_cast([((id<JavaUtilMap_Entry>) nil_chk(me)) getKey], [NSString class]);
      value = [props stripCommentWithId:[me getValue] withRAREUTOrderedProperties_iValidator:validator];
      if ((s != nil) && ([s sequenceLength] > 0) && (value != nil) && ([value sequenceLength] > 0)) {
        v = [self resolveUIPropertyWithRAREiWidget:context withNSString:s withNSString:value];
        if (v != nil) {
          [((RAREUIProperties *) nil_chk(defs)) putWithNSString:s withId:v];
          if ([s isEqual:@"Rare.background"]) {
            bg = (RAREUIColor *) check_class_cast(v, [RAREUIColor class]);
            if (fg != nil) {
              [((RAREaAppContext *) check_class_cast([self getAppContext], [RAREaAppContext class])) setThemeColorsWithRAREUIColor:fg withRAREUIColor:bg withBoolean:NO];
              fg = nil;
              bg = nil;
            }
          }
          else if ([s isEqual:@"Rare.backgroundShadow"]) {
            [defs putWithNSString:@"controlShadow" withId:v];
          }
          else if ([s isEqual:@"Rare.foreground"]) {
            fg = (RAREUIColor *) check_class_cast(v, [RAREUIColor class]);
            if (bg != nil) {
              [((RAREaAppContext *) check_class_cast([self getAppContext], [RAREaAppContext class])) setThemeColorsWithRAREUIColor:fg withRAREUIColor:bg withBoolean:NO];
              fg = nil;
              bg = nil;
            }
          }
          else if ([s isEqual:@"Rare.font.default"]) {
            [defs putWithNSString:@"Rare.font.default" withId:v];
            [RAREUIFontHelper setDefaultFontWithRAREUIFont:(RAREUIFont *) check_class_cast(v, [RAREUIFont class])];
          }
          else if ([s isEqual:@"Rare.templateURL"]) {
            @try {
              NSString *url = (NSString *) check_class_cast(v, [NSString class]);
              [RARETemplateHandler setDefaultTemplateWithRAREiPlatformAppContext:[((id<RAREiWidget>) nil_chk(context)) getAppContext] withNSString:url withBoolean:NO];
            }
            @catch (JavaNetMalformedURLException *ex) {
              @throw [[JavaLangRuntimeException alloc] initWithJavaLangThrowable:ex];
            }
          }
          else {
            [self handleUIPropertyWithRAREiWidget:context withRAREUIProperties:defs withNSString:s withId:v];
          }
        }
        else if (![s hasPrefix:@"//"]) {
          [RAREPlatform ignoreExceptionWithNSString:[NSString stringWithFormat:@"loadUIProperties-Invalid:%@=%@", s, value] withJavaLangThrowable:nil];
        }
      }
    }
    if ((bg != nil) && (fg != nil)) {
      [((RAREaAppContext *) check_class_cast([self getAppContext], [RAREaAppContext class])) setThemeColorsWithRAREUIColor:fg withRAREUIColor:bg withBoolean:NO];
    }
    [((RAREValidator *) nil_chk(validator)) clear];
    s = [((RAREUIProperties *) nil_chk(defs)) getStringWithNSString:@"Rare.ralativeScreenSize"];
    if (s != nil) {
      [RAREScreenUtils setScreenSizeWithRAREUIScreen_ScreenSizeEnum:[RAREUIScreen_ScreenSizeEnum valueOfWithNSString:s]];
    }
    JavaLangInteger *d = [defs getIntegerWithNSString:@"Rare.net.readTimeout"];
    if (d != nil) {
      (*[RAREActionLink defaultReadTimeoutRef]) = [d intValue];
    }
  }
  @finally {
    [((RAREActionLink *) nil_chk(link)) close];
  }
}

- (id)resolveUIPropertyWithRAREiWidget:(id<RAREiWidget>)context
                          withNSString:(NSString *)name
                          withNSString:(NSString *)propvalue {
  return [RAREUtils resolveUIPropertyWithRAREiWidget:context withNSString:name withNSString:propvalue];
}

- (id<RAREUTiCancelable>)sendFormDataWithRAREiWidget:(id<RAREiWidget>)context
                                  withRAREActionLink:(RAREActionLink *)link
                                     withJavaUtilMap:(id<JavaUtilMap>)data
                                         withBoolean:(BOOL)multipart
               withRAREActionLink_ReturnDataTypeEnum:(RAREActionLink_ReturnDataTypeEnum *)type
                           withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  id<JavaLangRunnable> r = [[RAREaPlatform_$1 alloc] initWithRAREaPlatform:self withRAREiWidget:context withRAREActionLink:link withJavaUtilMap:data withBoolean:multipart withRAREActionLink_ReturnDataTypeEnum:type withRAREiFunctionCallback:cb];
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) executeBackgroundTaskWithJavaLangRunnable:r];
}

- (id<RAREUTiCancelable>)uploadDataWithRAREiWidget:(id<RAREiWidget>)context
                                withRAREActionLink:(RAREActionLink *)link
                                            withId:(id)data
                                      withNSString:(NSString *)name
                                      withNSString:(NSString *)mimeType
                                      withNSString:(NSString *)fileName
             withRAREActionLink_ReturnDataTypeEnum:(RAREActionLink_ReturnDataTypeEnum *)type
                         withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  id<JavaLangRunnable> r = [[RAREaPlatform_$2 alloc] initWithRAREaPlatform:self withRAREiWidget:context withRAREActionLink:link withId:data withNSString:name withNSString:mimeType withNSString:fileName withRAREActionLink_ReturnDataTypeEnum:type withRAREiFunctionCallback:cb];
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) executeBackgroundTaskWithJavaLangRunnable:r];
}

- (id<RAREUTiCancelable>)getContentWithRAREiWidget:(id<RAREiWidget>)context
                                withRAREActionLink:(RAREActionLink *)link
             withRAREActionLink_ReturnDataTypeEnum:(RAREActionLink_ReturnDataTypeEnum *)type
                         withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  id<JavaLangRunnable> r = [[RAREaPlatform_$3 alloc] initWithRAREaPlatform:self withRAREiWidget:context withRAREActionLink:link withRAREActionLink_ReturnDataTypeEnum:type withRAREiFunctionCallback:cb];
  return [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) executeBackgroundTaskWithJavaLangRunnable:r];
}

- (id<JavaUtilList>)getCookieList {
  return [RARENetHelper getCookieList];
}

- (NSString *)getCookies {
  return [RARENetHelper getCookies];
}

- (double)getJavaVersion {
  if (javaVersion_ == 0) {
    NSString *s = @"1.5";
    @try {
      s = [JavaLangSystem getPropertyWithNSString:@"java.version" withNSString:@"1.5"];
    }
    @catch (JavaLangException *ignore) {
    }
    int len = [((NSString *) nil_chk(s)) sequenceLength];
    int i = 0;
    while (i < len) {
      if ([JavaLangCharacter isDigitWithChar:[s charAtWithInt:i]]) {
        break;
      }
    }
    if (i < len) {
      javaVersion_ = [RAREUTSNumber doubleValueWithNSString:[s substring:i]];
    }
    if (javaVersion_ == 0) {
      javaVersion_ = 1.5f;
    }
  }
  return javaVersion_;
}

- (BOOL)isEmbedded {
  return NO;
}

- (BOOL)isInSandbox {
  return NO;
}

- (BOOL)isTouchDevice {
  return NO;
}

- (BOOL)isTouchableDevice {
  return NO;
}

- (BOOL)hasPhysicalKeyboard {
  id o = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getWithNSString:@"Rare.hasPhysicalKeyboard"];
  if ([o isKindOfClass:[JavaLangBoolean class]]) {
    return [((JavaLangBoolean *) check_class_cast(o, [JavaLangBoolean class])) booleanValue];
  }
  return [RAREPlatformHelper hasPhysicalKeyboard];
}

- (BOOL)hasPointingDevice {
  id o = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getWithNSString:@"Rare.hasPointingDevice"];
  if ([o isKindOfClass:[JavaLangBoolean class]]) {
    return [((JavaLangBoolean *) check_class_cast(o, [JavaLangBoolean class])) booleanValue];
  }
  return [RAREPlatformHelper hasPointingDevice];
}

- (void)handleUIPropertyWithRAREiWidget:(id<RAREiWidget>)context
                   withRAREUIProperties:(RAREUIProperties *)defs
                           withNSString:(NSString *)property
                                 withId:(id)value {
}

- (id)getLinkContentWithRAREiWidget:(id<RAREiWidget>)w
                 withRAREActionLink:(RAREActionLink *)link
withRAREActionLink_ReturnDataTypeEnum:(RAREActionLink_ReturnDataTypeEnum *)type {
  {
    JavaNetURL *url;
    RAREUIImage *img;
    switch ([type ordinal]) {
      case RAREActionLink_ReturnDataType_STRING:
      return [((RAREActionLink *) nil_chk(link)) getContentAsString];
      case RAREActionLink_ReturnDataType_LINES:
      {
        JavaIoReader *r = [((RAREActionLink *) nil_chk(link)) getReader];
        JavaIoBufferedReader *br;
        if ([r isKindOfClass:[JavaIoBufferedReader class]]) {
          br = (JavaIoBufferedReader *) check_class_cast(r, [JavaIoBufferedReader class]);
        }
        else {
          br = [[JavaIoBufferedReader alloc] initWithJavaIoReader:r withInt:1024];
        }
        JavaUtilArrayList *list = [[JavaUtilArrayList alloc] init];
        NSString *s;
        while ((s = [((JavaIoBufferedReader *) nil_chk(br)) readLine]) != nil) {
          [list addWithId:s];
          return list;
        }
      }
      case RAREActionLink_ReturnDataType_JSON:
      return [[RAREUTJSONObject alloc] initWithRAREUTJSONTokener:[[RAREUTJSONTokener alloc] initWithJavaIoReader:[((RAREActionLink *) nil_chk(link)) getReader]]];
      case RAREActionLink_ReturnDataType_LIST:
      return [RAREDataItemParserHandler parseWithRAREiWidget:w withRAREActionLink:link withInt:0];
      case RAREActionLink_ReturnDataType_TABLE:
      return [RAREDataItemParserHandler parseWithRAREiWidget:w withRAREActionLink:link withInt:-1];
      case RAREActionLink_ReturnDataType_BYTES:
      return [((RAREActionLink *) nil_chk(link)) getContentAsBytes];
      case RAREActionLink_ReturnDataType_CONFIG:
      @try {
        return [RAREDataParser loadSPOTObjectWithRAREiWidget:w withRAREiURLConnection:[((RAREActionLink *) nil_chk(link)) getConnection] withISPOTElement:nil];
      }
      @finally {
        [((RAREActionLink *) nil_chk(link)) closeEx];
      }
      case RAREActionLink_ReturnDataType_IMAGE:
      case RAREActionLink_ReturnDataType_ICON:
      url = [((RAREActionLink *) nil_chk(link)) getURLWithRAREiWidget:w];
      img = [RAREaPlatformHelper createImageWithJavaNetURL:url withBoolean:NO withFloat:[link getImageDensity]];
      return (type == [RAREActionLink_ReturnDataTypeEnum IMAGE]) ? img : [[RAREUIImageIcon alloc] initWithRAREUIImage:img];
      default:
      return nil;
    }
  }
}

- (RAREValidator *)getValidator {
  if (validator_ == nil) {
    validator_ = [[RAREValidator alloc] initWithRAREaRare:((RAREaAppContext *) nil_chk([self getAppContext]))->RARE_];
  }
  return validator_;
}

- (BOOL)browseURLWithJavaNetURL:(JavaNetURL *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)canGenerateByteCode {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)createChartHandler {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiPlatformComponent>)createPlatformComponentWithId:(id)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiTimer>)createTimerWithNSString:(NSString *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiPlatformComponent>)findPlatformComponentWithId:(id)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiWidget>)findWidgetForComponentWithId:(id)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getAndroidVersion {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiPlatformAppContext>)getAppContext {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getAppInstanceCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaIoFile *)getCacheDir {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiDataConverter>)getDataConverterWithIOSClass:(IOSClass *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSClass *)getDataConverterClassWithNSString:(NSString *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiFunctionHandler>)getFunctionHandler {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getOsType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (float)getOsVersion {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiPlatformComponent>)getPlatformComponentWithId:(id)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getPlatformType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (double)getPlatformVersion {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiFlavorCreator>)getTransferFlavorCreator {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getUserAgent {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (RAREWindowViewer *)getWindowViewerForComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)invokeLaterWithJavaLangRunnable:(id<JavaLangRunnable>)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)invokeLaterWithJavaLangRunnable:(id<JavaLangRunnable>)param0
                                withInt:(int)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (BOOL)isAndroid {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isDebugEnabled {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isDebuggingEnabled {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isDescendingFromWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)param0
                        withRAREiPlatformComponent:(id<RAREiPlatformComponent>)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isHTMLSupportedInLabels {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isIOS {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isInitialized {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isJava {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isJavaFX {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isLinux {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isMac {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isSwing {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isUIThread {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isUnix {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isUseFullScreen {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isWindows {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSClass *)loadClassWithNSString:(NSString *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)mailToWithNSString:(NSString *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)mailToWithNSString:(NSString *)param0
              withNSString:(NSString *)param1
              withNSString:(NSString *)param2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)registerWithWidgetWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)param0
                                     withRAREiWidget:(id<RAREiWidget>)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setUseFullScreenWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)unregisterWithWidgetWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)init {
  return [super init];
}

- (void)copyAllFieldsTo:(RAREaPlatform *)other {
  [super copyAllFieldsTo:other];
  other->javaVersion_ = javaVersion_;
  other->validator_ = validator_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "createCacheFileWithNSString:", NULL, "LJavaIoFile", 0x1, NULL },
    { "deleteDirectoryWithJavaIoFile:", NULL, "Z", 0x1, NULL },
    { "isDesktop", NULL, "Z", 0x1, NULL },
    { "evaluateWithRAREiWidget:withRAREiScriptHandler:withId:withNSString:withJavaUtilEventObject:", NULL, "LNSObject", 0x1, NULL },
    { "loadResourceIconsWithRAREiPlatformAppContext:withJavaUtilMap:withRAREActionLink:withBoolean:withBoolean:", NULL, "LJavaUtilMap", 0x1, "JavaIoIOException" },
    { "loadResourceStringsWithRAREiPlatformAppContext:withJavaUtilMap:withRAREActionLink:withBoolean:", NULL, "LJavaUtilMap", 0x1, "JavaIoIOException" },
    { "loadUIPropertiesWithRAREiWidget:withRAREActionLink:withRAREUIProperties:", NULL, "V", 0x1, "JavaIoIOException" },
    { "resolveUIPropertyWithRAREiWidget:withNSString:withNSString:", NULL, "LNSObject", 0x1, NULL },
    { "sendFormDataWithRAREiWidget:withRAREActionLink:withJavaUtilMap:withBoolean:withRAREActionLink_ReturnDataTypeEnum:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, NULL },
    { "uploadDataWithRAREiWidget:withRAREActionLink:withId:withNSString:withNSString:withNSString:withRAREActionLink_ReturnDataTypeEnum:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, NULL },
    { "getContentWithRAREiWidget:withRAREActionLink:withRAREActionLink_ReturnDataTypeEnum:withRAREiFunctionCallback:", NULL, "LRAREUTiCancelable", 0x1, NULL },
    { "getCookieList", NULL, "LJavaUtilList", 0x1, NULL },
    { "getCookies", NULL, "LNSString", 0x1, NULL },
    { "isEmbedded", NULL, "Z", 0x1, NULL },
    { "isInSandbox", NULL, "Z", 0x1, NULL },
    { "isTouchDevice", NULL, "Z", 0x1, NULL },
    { "isTouchableDevice", NULL, "Z", 0x1, NULL },
    { "hasPhysicalKeyboard", NULL, "Z", 0x1, NULL },
    { "hasPointingDevice", NULL, "Z", 0x1, NULL },
    { "handleUIPropertyWithRAREiWidget:withRAREUIProperties:withNSString:withId:", NULL, "V", 0x4, NULL },
    { "getLinkContentWithRAREiWidget:withRAREActionLink:withRAREActionLink_ReturnDataTypeEnum:", NULL, "LNSObject", 0x4, "JavaLangException" },
    { "getValidator", NULL, "LRAREValidator", 0x4, NULL },
    { "browseURLWithJavaNetURL:", NULL, "Z", 0x401, NULL },
    { "canGenerateByteCode", NULL, "Z", 0x401, NULL },
    { "createChartHandler", NULL, "LNSObject", 0x401, NULL },
    { "createPlatformComponentWithId:", NULL, "LRAREiPlatformComponent", 0x401, NULL },
    { "createTimerWithNSString:", NULL, "LRAREiTimer", 0x401, NULL },
    { "findPlatformComponentWithId:", NULL, "LRAREiPlatformComponent", 0x401, NULL },
    { "findWidgetForComponentWithId:", NULL, "LRAREiWidget", 0x401, NULL },
    { "getAndroidVersion", NULL, "I", 0x401, NULL },
    { "getAppContext", NULL, "LRAREiPlatformAppContext", 0x401, NULL },
    { "getAppInstanceCount", NULL, "I", 0x401, NULL },
    { "getCacheDir", NULL, "LJavaIoFile", 0x401, NULL },
    { "getDataConverterWithIOSClass:", NULL, "LRAREiDataConverter", 0x401, NULL },
    { "getDataConverterClassWithNSString:", NULL, "LIOSClass", 0x401, NULL },
    { "getFunctionHandler", NULL, "LRAREiFunctionHandler", 0x401, NULL },
    { "getOsType", NULL, "LNSString", 0x401, NULL },
    { "getOsVersion", NULL, "F", 0x401, NULL },
    { "getPlatformComponentWithId:", NULL, "LRAREiPlatformComponent", 0x401, NULL },
    { "getPlatformType", NULL, "LNSString", 0x401, NULL },
    { "getPlatformVersion", NULL, "D", 0x401, NULL },
    { "getTransferFlavorCreator", NULL, "LRAREiFlavorCreator", 0x401, NULL },
    { "getUserAgent", NULL, "LNSString", 0x401, NULL },
    { "getWindowViewerForComponentWithRAREiPlatformComponent:", NULL, "LRAREWindowViewer", 0x401, NULL },
    { "invokeLaterWithJavaLangRunnable:", NULL, "V", 0x401, NULL },
    { "invokeLaterWithJavaLangRunnable:withInt:", NULL, "V", 0x401, NULL },
    { "isAndroid", NULL, "Z", 0x401, NULL },
    { "isDebugEnabled", NULL, "Z", 0x401, NULL },
    { "isDebuggingEnabled", NULL, "Z", 0x401, NULL },
    { "isDescendingFromWithRAREiPlatformComponent:withRAREiPlatformComponent:", NULL, "Z", 0x401, NULL },
    { "isHTMLSupportedInLabels", NULL, "Z", 0x401, NULL },
    { "isIOS", NULL, "Z", 0x401, NULL },
    { "isInitialized", NULL, "Z", 0x401, NULL },
    { "isJava", NULL, "Z", 0x401, NULL },
    { "isJavaFX", NULL, "Z", 0x401, NULL },
    { "isLinux", NULL, "Z", 0x401, NULL },
    { "isMac", NULL, "Z", 0x401, NULL },
    { "isSwing", NULL, "Z", 0x401, NULL },
    { "isUIThread", NULL, "Z", 0x401, NULL },
    { "isUnix", NULL, "Z", 0x401, NULL },
    { "isUseFullScreen", NULL, "Z", 0x401, NULL },
    { "isWindows", NULL, "Z", 0x401, NULL },
    { "loadClassWithNSString:", NULL, "LIOSClass", 0x401, NULL },
    { "mailToWithNSString:", NULL, "Z", 0x401, NULL },
    { "mailToWithNSString:withNSString:withNSString:", NULL, "Z", 0x401, NULL },
    { "registerWithWidgetWithRAREiPlatformComponent:withRAREiWidget:", NULL, "V", 0x401, NULL },
    { "setUseFullScreenWithBoolean:", NULL, "V", 0x401, NULL },
    { "unregisterWithWidgetWithRAREiPlatformComponent:", NULL, "V", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "validator_", NULL, 0x4, "LRAREValidator" },
  };
  static J2ObjcClassInfo _RAREaPlatform = { "aPlatform", "com.appnativa.rare.platform", NULL, 0x401, 68, methods, 1, fields, 0, NULL};
  return &_RAREaPlatform;
}

@end
@implementation RAREaPlatform_$1

- (void)run {
  BOOL canceled = NO;
  id ret = nil;
  id<RAREiWidget> w = val$context_;
  if (w == nil) {
    w = [((RAREActionLink *) nil_chk(val$link_)) getContext];
  }
  @try {
    [((RAREActionLink *) nil_chk(val$link_)) sendFormDataExWithRAREiWidget:val$context_ withJavaUtilMap:val$data_ withBoolean:val$multipart_];
    ret = [[RAREUTObjectHolder alloc] initWithId:val$link_ withId:[val$link_ getContentType] withId:[this$0_ getLinkContentWithRAREiWidget:w withRAREActionLink:val$link_ withRAREActionLink_ReturnDataTypeEnum:val$type_]];
  }
  @catch (JavaLangException *e) {
    canceled = YES;
    ret = e;
  }
  @finally {
    [((RAREActionLink *) nil_chk(val$link_)) closeEx];
  }
  if (val$cb_ != nil) {
    BOOL b = canceled;
    id r = ret;
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREaPlatform_$1_$1 alloc] initWithRAREaPlatform_$1:self withBoolean:b withId:r]];
  }
}

- (id)initWithRAREaPlatform:(RAREaPlatform *)outer$
            withRAREiWidget:(id<RAREiWidget>)capture$0
         withRAREActionLink:(RAREActionLink *)capture$1
            withJavaUtilMap:(id<JavaUtilMap>)capture$2
                withBoolean:(BOOL)capture$3
withRAREActionLink_ReturnDataTypeEnum:(RAREActionLink_ReturnDataTypeEnum *)capture$4
  withRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$5 {
  this$0_ = outer$;
  val$context_ = capture$0;
  val$link_ = capture$1;
  val$data_ = capture$2;
  val$multipart_ = capture$3;
  val$type_ = capture$4;
  val$cb_ = capture$5;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaPlatform" },
    { "val$context_", NULL, 0x1012, "LRAREiWidget" },
    { "val$link_", NULL, 0x1012, "LRAREActionLink" },
    { "val$data_", NULL, 0x1012, "LJavaUtilMap" },
    { "val$multipart_", NULL, 0x1012, "Z" },
    { "val$type_", NULL, 0x1012, "LRAREActionLink_ReturnDataTypeEnum" },
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
  };
  static J2ObjcClassInfo _RAREaPlatform_$1 = { "$1", "com.appnativa.rare.platform", "aPlatform", 0x8000, 0, NULL, 7, fields, 0, NULL};
  return &_RAREaPlatform_$1;
}

@end
@implementation RAREaPlatform_$1_$1

- (void)run {
  [((id<RAREiFunctionCallback>) nil_chk(this$0_->val$cb_)) finishedWithBoolean:val$b_ withId:val$r_];
}

- (id)initWithRAREaPlatform_$1:(RAREaPlatform_$1 *)outer$
                   withBoolean:(BOOL)capture$0
                        withId:(id)capture$1 {
  this$0_ = outer$;
  val$b_ = capture$0;
  val$r_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaPlatform_$1" },
    { "val$b_", NULL, 0x1012, "Z" },
    { "val$r_", NULL, 0x1012, "LNSObject" },
  };
  static J2ObjcClassInfo _RAREaPlatform_$1_$1 = { "$1", "com.appnativa.rare.platform", "aPlatform$$1", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_RAREaPlatform_$1_$1;
}

@end
@implementation RAREaPlatform_$2

- (void)run {
  BOOL canceled = NO;
  id ret = nil;
  id<RAREiWidget> w = val$context_;
  if (w == nil) {
    w = [((RAREActionLink *) nil_chk(val$link_)) getContext];
  }
  @try {
    [((RAREActionLink *) nil_chk(val$link_)) uploadDataExWithId:val$data_ withNSString:val$name_ withNSString:val$mimeType_ withNSString:val$fileName_];
    ret = [[RAREUTObjectHolder alloc] initWithId:val$link_ withId:[val$link_ getContentType] withId:[this$0_ getLinkContentWithRAREiWidget:w withRAREActionLink:val$link_ withRAREActionLink_ReturnDataTypeEnum:val$type_]];
  }
  @catch (JavaLangException *e) {
    canceled = YES;
    ret = e;
  }
  @finally {
    [((RAREActionLink *) nil_chk(val$link_)) closeEx];
  }
  if (val$cb_ != nil) {
    BOOL b = canceled;
    id r = ret;
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREaPlatform_$2_$1 alloc] initWithRAREaPlatform_$2:self withBoolean:b withId:r]];
  }
}

- (id)initWithRAREaPlatform:(RAREaPlatform *)outer$
            withRAREiWidget:(id<RAREiWidget>)capture$0
         withRAREActionLink:(RAREActionLink *)capture$1
                     withId:(id)capture$2
               withNSString:(NSString *)capture$3
               withNSString:(NSString *)capture$4
               withNSString:(NSString *)capture$5
withRAREActionLink_ReturnDataTypeEnum:(RAREActionLink_ReturnDataTypeEnum *)capture$6
  withRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$7 {
  this$0_ = outer$;
  val$context_ = capture$0;
  val$link_ = capture$1;
  val$data_ = capture$2;
  val$name_ = capture$3;
  val$mimeType_ = capture$4;
  val$fileName_ = capture$5;
  val$type_ = capture$6;
  val$cb_ = capture$7;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaPlatform" },
    { "val$context_", NULL, 0x1012, "LRAREiWidget" },
    { "val$link_", NULL, 0x1012, "LRAREActionLink" },
    { "val$data_", NULL, 0x1012, "LNSObject" },
    { "val$name_", NULL, 0x1012, "LNSString" },
    { "val$mimeType_", NULL, 0x1012, "LNSString" },
    { "val$fileName_", NULL, 0x1012, "LNSString" },
    { "val$type_", NULL, 0x1012, "LRAREActionLink_ReturnDataTypeEnum" },
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
  };
  static J2ObjcClassInfo _RAREaPlatform_$2 = { "$2", "com.appnativa.rare.platform", "aPlatform", 0x8000, 0, NULL, 9, fields, 0, NULL};
  return &_RAREaPlatform_$2;
}

@end
@implementation RAREaPlatform_$2_$1

- (void)run {
  [((id<RAREiFunctionCallback>) nil_chk(this$0_->val$cb_)) finishedWithBoolean:val$b_ withId:val$r_];
}

- (id)initWithRAREaPlatform_$2:(RAREaPlatform_$2 *)outer$
                   withBoolean:(BOOL)capture$0
                        withId:(id)capture$1 {
  this$0_ = outer$;
  val$b_ = capture$0;
  val$r_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaPlatform_$2" },
    { "val$b_", NULL, 0x1012, "Z" },
    { "val$r_", NULL, 0x1012, "LNSObject" },
  };
  static J2ObjcClassInfo _RAREaPlatform_$2_$1 = { "$1", "com.appnativa.rare.platform", "aPlatform$$2", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_RAREaPlatform_$2_$1;
}

@end
@implementation RAREaPlatform_$3

- (void)run {
  BOOL canceled = NO;
  id ret = nil;
  id<RAREiWidget> w = val$context_;
  if (w == nil) {
    w = [((RAREActionLink *) nil_chk(val$link_)) getContext];
  }
  @try {
    ret = [[RAREUTObjectHolder alloc] initWithId:val$link_ withId:[((RAREActionLink *) nil_chk(val$link_)) getContentType] withId:[this$0_ getLinkContentWithRAREiWidget:w withRAREActionLink:val$link_ withRAREActionLink_ReturnDataTypeEnum:val$type_]];
  }
  @catch (JavaLangException *e) {
    canceled = YES;
    ret = e;
  }
  @finally {
    [((RAREActionLink *) nil_chk(val$link_)) closeEx];
  }
  if (val$cb_ != nil) {
    BOOL b = canceled;
    id r = ret;
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREaPlatform_$3_$1 alloc] initWithRAREaPlatform_$3:self withBoolean:b withId:r]];
  }
}

- (id)initWithRAREaPlatform:(RAREaPlatform *)outer$
            withRAREiWidget:(id<RAREiWidget>)capture$0
         withRAREActionLink:(RAREActionLink *)capture$1
withRAREActionLink_ReturnDataTypeEnum:(RAREActionLink_ReturnDataTypeEnum *)capture$2
  withRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$3 {
  this$0_ = outer$;
  val$context_ = capture$0;
  val$link_ = capture$1;
  val$type_ = capture$2;
  val$cb_ = capture$3;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaPlatform" },
    { "val$context_", NULL, 0x1012, "LRAREiWidget" },
    { "val$link_", NULL, 0x1012, "LRAREActionLink" },
    { "val$type_", NULL, 0x1012, "LRAREActionLink_ReturnDataTypeEnum" },
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
  };
  static J2ObjcClassInfo _RAREaPlatform_$3 = { "$3", "com.appnativa.rare.platform", "aPlatform", 0x8000, 0, NULL, 5, fields, 0, NULL};
  return &_RAREaPlatform_$3;
}

@end
@implementation RAREaPlatform_$3_$1

- (void)run {
  [((id<RAREiFunctionCallback>) nil_chk(this$0_->val$cb_)) finishedWithBoolean:val$b_ withId:val$r_];
}

- (id)initWithRAREaPlatform_$3:(RAREaPlatform_$3 *)outer$
                   withBoolean:(BOOL)capture$0
                        withId:(id)capture$1 {
  this$0_ = outer$;
  val$b_ = capture$0;
  val$r_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaPlatform_$3" },
    { "val$b_", NULL, 0x1012, "Z" },
    { "val$r_", NULL, 0x1012, "LNSObject" },
  };
  static J2ObjcClassInfo _RAREaPlatform_$3_$1 = { "$1", "com.appnativa.rare.platform", "aPlatform$$3", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_RAREaPlatform_$3_$1;
}

@end
