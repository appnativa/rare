//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/platform/aPlatformHelper.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSCharArray.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/CancelableFutureWrapper.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iCancelableFuture.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/iWeakReference.h"
#include "com/appnativa/rare/iWorkerTask.h"
#include "com/appnativa/rare/platform/ActionHelper.h"
#include "com/appnativa/rare/platform/CancelableOperation.h"
#include "com/appnativa/rare/platform/NSUserDefaultsPreferences.h"
#include "com/appnativa/rare/platform/aPlatformHelper.h"
#include "com/appnativa/rare/platform/apple/AppContext.h"
#include "com/appnativa/rare/platform/apple/ui/DataItemListModel.h"
#include "com/appnativa/rare/platform/apple/ui/PopupListBoxHandler.h"
#include "com/appnativa/rare/platform/apple/ui/StateListIcon.h"
#include "com/appnativa/rare/platform/apple/ui/util/AppleHelper.h"
#include "com/appnativa/rare/platform/apple/ui/util/BezierPath.h"
#include "com/appnativa/rare/platform/apple/ui/util/ImageHelper.h"
#include "com/appnativa/rare/platform/apple/ui/util/ImageUtils.h"
#include "com/appnativa/rare/platform/apple/ui/view/AnimationView.h"
#include "com/appnativa/rare/platform/apple/ui/view/ButtonView.h"
#include "com/appnativa/rare/platform/apple/ui/view/CustomButtonView.h"
#include "com/appnativa/rare/platform/apple/ui/view/DialogWindow.h"
#include "com/appnativa/rare/platform/apple/ui/view/FrameView.h"
#include "com/appnativa/rare/platform/apple/ui/view/GlassView.h"
#include "com/appnativa/rare/platform/apple/ui/view/LabelView.h"
#include "com/appnativa/rare/platform/apple/ui/view/PopupWindow.h"
#include "com/appnativa/rare/platform/apple/ui/view/SeparatorView.h"
#include "com/appnativa/rare/platform/apple/ui/view/SpacerView.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/platform/apple/ui/view/Window.h"
#include "com/appnativa/rare/spot/Bean.h"
#include "com/appnativa/rare/spot/MenuBar.h"
#include "com/appnativa/rare/spot/ScrollPane.h"
#include "com/appnativa/rare/ui/ActionComponent.h"
#include "com/appnativa/rare/ui/AnimationComponent.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/Component.h"
#include "com/appnativa/rare/ui/ContainerPanel.h"
#include "com/appnativa/rare/ui/MenuItem.h"
#include "com/appnativa/rare/ui/RenderType.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/SeparatorMenuItem.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIColorShade.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIImageIcon.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/UIMenuItem.h"
#include "com/appnativa/rare/ui/UIPoint.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/UISound.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/aFocusedAction.h"
#include "com/appnativa/rare/ui/event/MouseEvent.h"
#include "com/appnativa/rare/ui/iActionComponent.h"
#include "com/appnativa/rare/ui/iListHandler.h"
#include "com/appnativa/rare/ui/iParentComponent.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformComponentFactory.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/iPlatformListDataModel.h"
#include "com/appnativa/rare/ui/iPlatformMenuBar.h"
#include "com/appnativa/rare/ui/iPlatformPath.h"
#include "com/appnativa/rare/ui/iPlatformRenderingComponent.h"
#include "com/appnativa/rare/ui/iPlatformShape.h"
#include "com/appnativa/rare/ui/iPlatformWindowManager.h"
#include "com/appnativa/rare/ui/iPopup.h"
#include "com/appnativa/rare/ui/painter/PainterHolder.h"
#include "com/appnativa/rare/ui/painter/UIImagePainter.h"
#include "com/appnativa/rare/ui/painter/iImagePainter.h"
#include "com/appnativa/rare/ui/renderer/Renderers.h"
#include "com/appnativa/rare/ui/text/HTMLCharSequence.h"
#include "com/appnativa/rare/viewer/MenuBarViewer.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iTarget.h"
#include "com/appnativa/rare/widget/BeanWidget.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTHelper.h"
#include "com/appnativa/spot/iSPOTConstants.h"
#include "com/appnativa/util/CharScanner.h"
#include "com/appnativa/util/OrderedProperties.h"
#include "com/appnativa/util/iPreferences.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/Runnable.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Constructor.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"
#include "java/util/EventObject.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/concurrent/Callable.h"
#import "java/lang/reflect/Field.h"
 #import "AppleHelper.h"
 #import "RAREAPView.h"
 #import "java/lang/NoSuchMethodException.h"
 #import <CommonCrypto/CommonHMAC.h>
 #import <com/appnativa/util/Base64.h>

@implementation RAREaPlatformHelper

static id RAREaPlatformHelper_imagesQueue_;
static RAREaPlatformHelper_PackageHelper * RAREaPlatformHelper_packageHelper_;
static id RAREaPlatformHelper_tasksQueue_;
static BOOL RAREaPlatformHelper_scriptingMode_;

+ (id)imagesQueue {
  return RAREaPlatformHelper_imagesQueue_;
}

+ (void)setImagesQueue:(id)imagesQueue {
  RAREaPlatformHelper_imagesQueue_ = imagesQueue;
}

+ (RAREaPlatformHelper_PackageHelper *)packageHelper {
  return RAREaPlatformHelper_packageHelper_;
}

+ (void)setPackageHelper:(RAREaPlatformHelper_PackageHelper *)packageHelper {
  RAREaPlatformHelper_packageHelper_ = packageHelper;
}

+ (id)tasksQueue {
  return RAREaPlatformHelper_tasksQueue_;
}

+ (void)setTasksQueue:(id)tasksQueue {
  RAREaPlatformHelper_tasksQueue_ = tasksQueue;
}

+ (BOOL)scriptingMode {
  return RAREaPlatformHelper_scriptingMode_;
}

+ (BOOL *)scriptingModeRef {
  return &RAREaPlatformHelper_scriptingMode_;
}

+ (BOOL)areImagesUpsideDown {
  return YES;
}

+ (RAREView *)createGlassViewWithBoolean:(BOOL)overlayContainer {
  return [[RAREGlassView alloc] initWithBoolean:overlayContainer];
}

- (void)addPackageMappingWithNSString:(NSString *)packageName
                         withNSString:(NSString *)classPrefix {
  if (RAREaPlatformHelper_packageHelper_ != nil) {
    [RAREaPlatformHelper_packageHelper_ addPackageMappingWithNSString:packageName withNSString:classPrefix];
  }
}

+ (id<JavaLangCharSequence>)checkForHTMLWithNSString:(NSString *)text
                                      withRAREUIFont:(RAREUIFont *)font {
  if (text == nil) {
    return text;
  }
  return [RAREHTMLCharSequence checkSequenceWithJavaLangCharSequence:text withRAREUIFont:font];
}

+ (void)clearSessionCookies {
  NSArray* cookies= [NSArray arrayWithArray: [[NSHTTPCookieStorage sharedHTTPCookieStorage] cookies]];
  if(cookies) {
    [cookies enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
      [[NSHTTPCookieStorage sharedHTTPCookieStorage] deleteCookie:(NSHTTPCookie*)obj];
    }];
  }
}

+ (void)closeWindowWithRAREWindow:(RAREWindow *)window {
  if (window != nil) {
    id<RAREiPlatformComponent> c = [window getComponent];
    id<RAREiWidget> w = (c == nil) ? nil : [c getWidget];
    if ([(id) w isKindOfClass:[RAREWindowViewer class]]) {
      [((RAREWindowViewer *) check_class_cast(w, [RAREWindowViewer class])) close];
    }
    else if ([window isKindOfClass:[RAREPopupWindow class]]) {
      [((RAREPopupWindow *) check_class_cast(window, [RAREPopupWindow class])) hidePopup];
    }
    else {
      [window close];
    }
  }
}

+ (id<RAREiPlatformComponent>)componentForEventWithJavaUtilEventObject:(JavaUtilEventObject *)uiEvent {
  id source = [((JavaUtilEventObject *) nil_chk(uiEvent)) getSource];
  if ([source conformsToProtocol: @protocol(RAREiPlatformComponent)]) {
    return (id<RAREiPlatformComponent>) check_protocol_cast(source, @protocol(RAREiPlatformComponent));
  }
  if ([source isKindOfClass:[RAREView class]]) {
    return [((RAREView *) check_class_cast(source, [RAREView class])) getComponent];
  }
  return nil;
}

+ (void)configureDraggingWithRAREiWidget:(id<RAREiWidget>)widget
              withRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp {
}

+ (void)configureDropTrackingWithRAREiWidget:(id<RAREiWidget>)widget
                  withRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp
                                     withInt:(int)dropMode {
}

+ (void)configureKeystrokesWithRAREiWidget:(id<RAREiWidget>)w
                withRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp
                              withNSString:(NSString *)set {
}

+ (RAREAnimationComponent *)createAnimationComponentWithRAREiWidget:(id<RAREiWidget>)context {
  return [[RAREAnimationComponent alloc] initWithRAREiAnimationImageView:[[RAREAnimationView alloc] init]];
}

+ (id)createBeanWithRAREBeanWidget:(RAREBeanWidget *)w
                  withRARESPOTBean:(RARESPOTBean *)cfg {
  return [((id<RAREiPlatformComponentFactory>) nil_chk([((id<RAREiPlatformWindowManager>) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getWindowManager])) getComponentCreator])) getBeanWithRAREiWidget:w withRARESPOTBean:cfg];
}

+ (id<RAREiPlatformComponent>)createBorderPanelWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp
                                                  withRAREiPlatformBorder:(id<RAREiPlatformBorder>)border {
  if ((![((id<RAREiPlatformBorder>) nil_chk(border)) canUseMainLayer] && [((RAREView *) nil_chk([((id<RAREiPlatformComponent>) nil_chk(comp)) getView])) isScrollView])) {
    RAREContainerPanel *cp = [[RAREContainerPanel alloc] initWithRAREiPlatformComponent:comp];
    [((RAREView *) nil_chk([comp getView])) setUsePainterBorderWithBoolean:NO];
    [cp setBorderPanelWithBoolean:YES];
    return cp;
  }
  return comp;
}

+ (RAREWindow *)createDialogWithRAREWindow:(RAREWindow *)parent
                               withBoolean:(BOOL)transparent
                               withBoolean:(BOOL)decorated
                               withBoolean:(BOOL)modal {
  RAREDialogWindow *w = [[RAREDialogWindow alloc] initWithRAREWindow:parent withBoolean:decorated];
  if (transparent) {
    [w setBackgroundColorWithRAREUIColor:[RAREColorUtils TRANSPARENT_COLOR]];
  }
  else {
    [w setBackgroundColorWithRAREUIColor:[RAREColorUtils getBackground]];
  }
  [w setModalWithBoolean:modal];
  return w;
}

+ (id<RAREiPlatformIcon>)createDisabledIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  return [RAREImageHelper createDisabledIconWithRAREiPlatformIcon:icon];
}

+ (id<RAREiPlatformIcon>)createDisabledIconIfNeededWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  return [RAREImageHelper createDisabledIconWithRAREiPlatformIcon:icon];
}

+ (RAREUIImage *)createDisabledImageWithRAREUIImage:(RAREUIImage *)image {
  return [RAREImageHelper createDisabledImageWithRAREUIImage:image];
}

+ (RAREUIImageIcon *)createIconWithJavaNetURL:(JavaNetURL *)url
                                 withNSString:(NSString *)description_
                                  withBoolean:(BOOL)defer
                                    withFloat:(float)density {
  RAREUIImageIcon *icon = [RAREImageHelper createIconWithJavaNetURL:url withBoolean:defer withFloat:density];
  if ((icon != nil) && (description_ != nil)) {
    [icon setDescriptionWithNSString:description_];
  }
  return icon;
}

+ (RAREUIImage *)createImageWithJavaNetURL:(JavaNetURL *)url
                               withBoolean:(BOOL)defer
                                 withFloat:(float)density {
  return [RAREImageHelper createImageWithJavaNetURL:url withBoolean:defer withFloat:density];
}

+ (id<RAREiActionComponent>)createLabelWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)context {
  return [[RAREActionComponent alloc] initWithRAREView:[[RARELabelView alloc] init]];
}

+ (id<RAREiPlatformRenderingComponent>)createLabelRendererWithRAREiWidget:(id<RAREiWidget>)context {
  return [RARERenderers createLabelRenderer];
}

+ (id<RAREiPlatformListDataModel>)createListDataModelWithRAREiWidget:(id<RAREiWidget>)context
                                                    withJavaUtilList:(id<JavaUtilList>)items {
  RAREDataItemListModel *dm = [[RAREDataItemListModel alloc] initWithRAREiWidget:context withRAREColumn:nil];
  if (items != nil) {
    [dm addAllWithJavaUtilCollection:items];
  }
  return dm;
}

+ (id<RAREiPlatformMenuBar>)createMenuBarWithRAREiContainer:(id<RAREiContainer>)viewer
                                        withRARESPOTMenuBar:(RARESPOTMenuBar *)mb {
  RAREMenuBarViewer *mv = [[RAREMenuBarViewer alloc] initWithRAREiContainer:nil];
  [mv configureWithRARESPOTViewer:mb];
  return mv;
}

+ (RAREUIMenuItem *)createMenuItemWithRAREUIAction:(RAREUIAction *)a
                                       withBoolean:(BOOL)topLevelMenu {
  return [[RAREUIMenuItem alloc] initWithRAREUIAction:a withRAREMenuItem:[[RAREMenuItem alloc] initWithBoolean:NO]];
}

+ (id<RAREiPlatformPath>)createPath {
  return [[RAREBezierPath alloc] init];
}

+ (id<RAREiPopup>)createPopup {
  return [[RAREPopupWindow alloc] init];
}

+ (RAREPopupWindow *)createPopupWithBoolean:(BOOL)modal
                                withBoolean:(BOOL)transparent {
  RAREPopupWindow *p = [[RAREPopupWindow alloc] init];
  if (!transparent) {
    [p setBackgroundColorWithRAREUIColor:[RAREColorUtils getBackground]];
  }
  [p setModalWithBoolean:modal];
  return p;
}

+ (RAREPopupListBoxHandler *)createPopupListBoxHandlerWithRAREiWidget:(id<RAREiWidget>)w
                                       withRAREiPlatformListDataModel:(id<RAREiPlatformListDataModel>)model
                                                          withBoolean:(BOOL)forMenu {
  return [[RAREPopupListBoxHandler alloc] initWithRAREiWidget:w withRAREiPlatformListDataModel:model withBoolean:forMenu];
}

+ (id<RAREiPlatformRenderingComponent>)createRendererWithNSString:(NSString *)s
                                                  withRAREiWidget:(id<RAREiWidget>)context {
  return [RARERenderers createRendererWithNSString:s];
}

+ (id<RAREiPlatformComponent>)createSeparatorComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)context {
  return [[RAREComponent alloc] initWithRAREView:[[RARESeparatorView alloc] init]];
}

+ (id<RAREiPlatformShape>)createShapeWithRAREUIRectangle:(RAREUIRectangle *)r {
  return [[RAREUIRectangle alloc] initWithFloat:((RAREUIRectangle *) nil_chk(r))->x_ withFloat:r->y_ withFloat:r->width_ withFloat:r->height_];
}

+ (id<RAREiPlatformShape>)createShapeWithFloat:(float)x
                                     withFloat:(float)y
                                     withFloat:(float)width
                                     withFloat:(float)height {
  return [[RAREUIRectangle alloc] initWithFloat:x withFloat:y withFloat:width withFloat:height];
}

+ (id<RAREiPlatformComponent>)createSpacerComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)context {
  return [[RAREComponent alloc] initWithRAREView:[[RARESpacerView alloc] init]];
}

+ (id<RAREiPlatformIcon>)createStateListIconWithNSString:(NSString *)icon
                                         withRAREiWidget:(id<RAREiWidget>)context {
  RAREUTCharScanner *sc = [[RAREUTCharScanner alloc] init];
  id<JavaUtilMap> map = [[JavaUtilHashMap alloc] initWithInt:5];
  map = [RAREUTCharScanner parseOptionStringExWithRAREUTCharScanner:sc withJavaUtilMap:map withChar:';' withBoolean:YES];
  return [[RAREStateListIcon alloc] initWithRAREPainterHolder:[RAREPainterHolder createFromIconStateMapWithJavaUtilMap:map withRAREUTCharScanner:sc]];
}

+ (id<RAREiParentComponent>)createTargetContainerWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app {
  RAREContainerPanel *c = [[RAREContainerPanel alloc] init];
  return c;
}

+ (id<RAREiWeakReference>)createWeakReferenceWithId:(id)value {
  return [[RAREaPlatformHelper_WeakReferenceEx alloc] initWithId:value];
}

+ (RAREaWidget *)createWidgetWithIOSClass:(IOSClass *)cls
                       withRAREiContainer:(id<RAREiContainer>)parent {
  RAREaWidget* w=(RAREaWidget*)[cls.objcClass alloc];
  return [((RAREaWidget*)w) initWithRAREiContainer: parent];
}

+ (void)defaultFontUpdatedWithRAREUIFont:(RAREUIFont *)font {
}

+ (id<RAREiCancelableFuture>)executeBackgroundTaskWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable
                                                                     withBoolean:(BOOL)shuttingDown {
  if (shuttingDown || (RAREaPlatformHelper_tasksQueue_ == nil)) {
    return [RARECancelableFutureWrapper NULL_CANCELABLE_FUTURE];
  }
  RARECancelableOperation *op = [RARECancelableOperation createWithJavaUtilConcurrentCallable:callable];
  if ((RAREaPlatformHelper_imagesQueue_ != nil) && ([(id) callable isKindOfClass:[RAREUIImage class]])) {
    [RAREaPlatformHelper enqueueWithId:RAREaPlatformHelper_imagesQueue_ withRARECancelableOperation:op];
  }
  else {
    [RAREaPlatformHelper enqueueWithId:RAREaPlatformHelper_tasksQueue_ withRARECancelableOperation:op];
  }
  return op;
}

+ (id<RAREiCancelableFuture>)executeBackgroundTaskWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                                                           withBoolean:(BOOL)shuttingDown {
  if (shuttingDown || (RAREaPlatformHelper_tasksQueue_ == nil)) {
    return [RARECancelableFutureWrapper NULL_CANCELABLE_FUTURE];
  }
  RARECancelableOperation *op = [RARECancelableOperation createWithJavaLangRunnable:runnable];
  if ((RAREaPlatformHelper_imagesQueue_ != nil) && ([(id) runnable isKindOfClass:[RAREUIImageIcon class]])) {
    [RAREaPlatformHelper enqueueWithId:RAREaPlatformHelper_imagesQueue_ withRARECancelableOperation:op];
  }
  else {
    [RAREaPlatformHelper enqueueWithId:RAREaPlatformHelper_tasksQueue_ withRARECancelableOperation:op];
  }
  return op;
}

+ (id<RAREiCancelableFuture>)executeSwingWorkerTaskWithRAREiWorkerTask:(id<RAREiWorkerTask>)task
                                                           withBoolean:(BOOL)shuttingDown {
  if (shuttingDown || (RAREaPlatformHelper_tasksQueue_ == nil)) {
    return [RARECancelableFutureWrapper NULL_CANCELABLE_FUTURE];
  }
  RARECancelableOperation *op = [RARECancelableOperation createWithRAREiWorkerTask:task];
  [RAREaPlatformHelper enqueueWithId:RAREaPlatformHelper_tasksQueue_ withRARECancelableOperation:op];
  return op;
}

+ (JavaNetURL *)fileToURLWithJavaIoFile:(JavaIoFile *)f {
  NSURL* url=[[NSURL alloc]initFileURLWithPath:[f getAbsolutePath]];
  return [[JavaNetURL alloc] initWithId:url];
}

+ (JavaNetURL *)fileToURLWithNSString:(NSString *)filename {
  NSURL* url=[[NSURL alloc]initFileURLWithPath:filename];
  return [[JavaNetURL alloc] initWithId:url];
}

+ (NSString *)formatWithNSString:(NSString *)spec
               withNSObjectArray:(IOSObjectArray *)values {
  IOSCharArray *format = [((NSString *) nil_chk(spec)) toCharArray];
  JavaLangStringBuilder *expanded = [[JavaLangStringBuilder alloc] initWithInt:(int) [((IOSCharArray *) nil_chk(format)) count] + 10];
  int len = (int) [format count];
  unichar c;
  int i = 0;
  int n = 0;
  int vlen = (int) [((IOSObjectArray *) nil_chk(values)) count];
  while (i < len) {
    c = IOSCharArray_Get(format, i++);
    switch (c) {
      case '%':
      if (i == len) {
        (void) [expanded appendWithChar:c];
      }
      else {
        c = IOSCharArray_Get(format, i);
        if (c != '%') {
          if (n < vlen) {
            (void) [expanded appendWithId:IOSObjectArray_Get(values, n++)];
          }
          i++;
        }
        else {
          (void) [expanded appendWithChar:'%'];
        }
      }
      break;
      default:
      (void) [expanded appendWithChar:c];
      break;
    }
  }
  return [expanded description];
}

+ (void)handleCookieExtractionWithJavaNetURLConnection:(JavaNetURLConnection *)conn {
}

+ (void)handleCookieExtractionWithNSString:(NSString *)url
                  withJavaNetURLConnection:(JavaNetURLConnection *)conn {
}

+ (NSString *)handleCookieInjectionWithJavaNetURLConnection:(JavaNetURLConnection *)conn {
  return nil;
}

+ (NSString *)handleCookieInjectionWithNSString:(NSString *)url
                       withJavaNetURLConnection:(JavaNetURLConnection *)conn {
  return url;
}

+ (NSString *)hmacSHAWithNSString:(NSString *)val
                     withNSString:(NSString *)key
                      withBoolean:(BOOL)base64 {
  if(!val || !key) {
    return @"";
  }
  const char *cKey  = [key cStringUsingEncoding:NSUTF8StringEncoding];
  const char *cData = [val cStringUsingEncoding:NSUTF8StringEncoding];
  unsigned char cHMAC[CC_SHA256_DIGEST_LENGTH];
  CCHmac(kCCHmacAlgSHA256, cKey, strlen(cKey), cData, strlen(cData), cHMAC);
  if(base64) {
    IOSByteArray * ba=[IOSByteArray arrayWithBytes:(char*)cHMAC count:CC_SHA256_DIGEST_LENGTH];
    return [RAREUTBase64 encodeBytesWithByteArray:ba];
  }
  return [[NSString alloc] initWithBytes:cHMAC
  length:CC_SHA256_DIGEST_LENGTH
  encoding:NSASCIIStringEncoding];
}

+ (void)initializeThreadingServiceWithInt:(int)max
                                  withInt:(int)imageMax {
  RAREaPlatformHelper_tasksQueue_ = [[NSOperationQueue alloc] init];
  if(max>0) {
    [((NSOperationQueue*)RAREaPlatformHelper_tasksQueue_) setMaxConcurrentOperationCount: max];
    [((NSOperationQueue*)RAREaPlatformHelper_tasksQueue_) setName: @"taskQueue"];
  }
  if(imageMax>0) {
    RAREaPlatformHelper_imagesQueue_=[[NSOperationQueue alloc] init];
    [((NSOperationQueue*)RAREaPlatformHelper_imagesQueue_) setMaxConcurrentOperationCount: imageMax];
    [((NSOperationQueue*)RAREaPlatformHelper_imagesQueue_) setName: @"imagesQueue"];
  }
}

+ (void)layoutWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                               withFloat:(float)x
                               withFloat:(float)y
                               withFloat:(float)w
                               withFloat:(float)h {
  [((RAREView *) nil_chk([((id<RAREiPlatformComponent>) nil_chk(c)) getView])) setBoundsWithFloat:x withFloat:y withFloat:w withFloat:h];
}

+ (void)layoutFrameContainerWithRARERenderTypeEnum:(RARERenderTypeEnum *)renderType
                          withRAREiParentComponent:(id<RAREiParentComponent>)target
                        withRAREiPlatformComponent:(id<RAREiPlatformComponent>)view
                                         withFloat:(float)width
                                         withFloat:(float)height {
  RAREUIInsets *insets = [((id<RAREiParentComponent>) nil_chk(target)) getInsetsWithRAREUIInsets:nil];
  float top = ((RAREUIInsets *) nil_chk(insets))->top_;
  float bottom = [target getHeight] - insets->bottom_;
  float left = insets->left_;
  float right = [target getWidth] - insets->right_;
  RAREUIDimension *d = [((id<RAREiPlatformComponent>) nil_chk(view)) getPreferredSize];
  ((RAREUIDimension *) nil_chk(d))->height_ = (d->height_ > (bottom - top)) ? bottom - top : d->height_;
  d->width_ = (d->width_ > (right - left)) ? right - left : d->width_;
  float x = left;
  float y = top;
  switch ([renderType ordinal]) {
    case RARERenderType_LOWER_LEFT:
    break;
    case RARERenderType_LOWER_MIDDLE:
    x = [JavaLangMath maxWithFloat:left withFloat:(right - left - d->width_) / 2];
    break;
    case RARERenderType_LOWER_RIGHT:
    x = [JavaLangMath maxWithFloat:left withFloat:right - d->width_];
    break;
    case RARERenderType_UPPER_LEFT:
    y = [JavaLangMath maxWithFloat:top withFloat:bottom - d->height_];
    break;
    case RARERenderType_UPPER_MIDDLE:
    x = [JavaLangMath maxWithFloat:left withFloat:(right - left - d->width_) / 2];
    y = [JavaLangMath maxWithFloat:top withFloat:bottom - d->height_];
    break;
    case RARERenderType_UPPER_RIGHT:
    x = [JavaLangMath maxWithFloat:left withFloat:right - d->width_];
    y = [JavaLangMath maxWithFloat:top withFloat:bottom - d->height_];
    break;
    case RARERenderType_LEFT_MIDDLE:
    y = [JavaLangMath maxWithFloat:top withFloat:(bottom - top - d->height_) / 2];
    break;
    case RARERenderType_RIGHT_MIDDLE:
    x = [JavaLangMath maxWithFloat:left withFloat:right - d->width_];
    y = [JavaLangMath maxWithFloat:top withFloat:(bottom - top - d->height_) / 2];
    break;
    case RARERenderType_CENTERED:
    x = [JavaLangMath maxWithFloat:left withFloat:(right - d->width_) / 2];
    y = [JavaLangMath maxWithFloat:top withFloat:(bottom - d->height_) / 2];
    break;
    case RARERenderType_STRETCHED:
    x = 0;
    y = 0;
    d->width_ = width;
    d->height_ = height;
    break;
    case RARERenderType_STRETCH_WIDTH:
    x = 0;
    y = 0;
    d->width_ = width;
    break;
    case RARERenderType_STRETCH_HEIGHT:
    x = 0;
    y = 0;
    d->height_ = height;
    break;
    case RARERenderType_STRETCH_WIDTH_MIDDLE:
    x = 0;
    y = [JavaLangMath maxWithFloat:top withFloat:(bottom - d->height_) / 2];
    d->width_ = width;
    break;
    case RARERenderType_STRETCH_HEIGHT_MIDDLE:
    x = [JavaLangMath maxWithFloat:left withFloat:(right - d->width_) / 2];
    y = 0;
    d->height_ = height;
    break;
    default:
    break;
  }
  [view setBoundsWithFloat:x withFloat:y withFloat:d->width_ withFloat:d->height_];
}

+ (IOSClass *)loadClassWithNSString:(NSString *)name {
  return [((RAREaPlatformHelper_PackageHelper *) nil_chk(RAREaPlatformHelper_packageHelper_)) loadClassWithNSString:name];
}

+ (void)loadIconWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                        withRAREUIImageIcon:(RAREUIImageIcon *)ic {
  (void) [RAREaPlatformHelper executeBackgroundTaskWithJavaLangRunnable:ic withBoolean:NO];
}

+ (id<RAREiPlatformComponent>)makeResizableWithRAREiWidget:(id<RAREiWidget>)w
                                               withBoolean:(BOOL)createCorner
                                     withRAREiPlatformIcon:(id<RAREiPlatformIcon>)cornerIcon {
  RAREActionComponent *c = [[RAREActionComponent alloc] initWithRAREView:[[RARELabelView alloc] init]];
  [c setIconWithRAREiPlatformIcon:cornerIcon];
  return c;
}

+ (id<RAREiPlatformComponent>)makeScrollPaneWithRAREaViewer:(RAREaViewer *)context
                                     withRARESPOTScrollPane:(RARESPOTScrollPane *)cfg
                                 withRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp {
  return [RAREAppleHelper makeScrollPaneWithRAREaViewer:context withRARESPOTScrollPane:cfg withRAREiPlatformComponent:comp];
}

+ (NSString *)md5WithNSString:(NSString *)val
                  withBoolean:(BOOL)base64 {
  const char *bytes = [val cStringUsingEncoding:NSUTF8StringEncoding];
  
  uint8_t digest[CC_MD5_DIGEST_LENGTH];
  
  CC_MD5(bytes, strlen(bytes), digest);
  if(base64) {
    IOSByteArray * ba=[IOSByteArray arrayWithBytes:(char*)digest count:CC_MD5_DIGEST_LENGTH];
    return [RAREUTBase64 encodeBytesWithByteArray:ba];
  }
  return [[NSString alloc] initWithBytes:digest
  length:CC_MD5_DIGEST_LENGTH
  encoding:NSASCIIStringEncoding];
}

+ (void)performHapticFeedbackWithId:(id)view {
}

+ (id<RAREiPlatformComponent>)resolveBeanComponentWithId:(id)bean {
  if ([bean conformsToProtocol: @protocol(RAREiPlatformComponent)]) {
    return (id<RAREiPlatformComponent>) check_protocol_cast(bean, @protocol(RAREiPlatformComponent));
  }
  RAREComponent *c = [[RAREComponent alloc] initWithRAREView:(RAREView *) check_class_cast(bean, [RAREView class])];
  if (([bean isKindOfClass:[RARESpacerView class]]) || ([bean isKindOfClass:[RARESeparatorView class]])) {
    [c putClientPropertyWithNSString:[RAREiConstants RARE_HALIGN_PROPERTY] withId:[RARERenderableDataItem_HorizontalAlignEnum FILL]];
    [c putClientPropertyWithNSString:[RAREiConstants RARE_VALIGN_PROPERTY] withId:[RARERenderableDataItem_VerticalAlignEnum FILL]];
  }
  return c;
}

+ (RAREUIImage *)scaleImageWithRAREUIImage:(RAREUIImage *)image
                                   withInt:(int)width
                                   withInt:(int)height {
  RAREiImagePainter_ScalingTypeEnum *st = [((RAREUIImage *) nil_chk(image)) getScalingType];
  return [RAREImageUtils getScaledImageWithRAREUIImage:image withInt:width withInt:height withRAREiImagePainter_ScalingTypeEnum:(st == nil) ? [RAREiImagePainter_ScalingTypeEnum BILINEAR] : st];
}

+ (void)stopBackgroundThreads {
  if(RAREaPlatformHelper_tasksQueue_) {
    [((NSOperationQueue*)RAREaPlatformHelper_tasksQueue_) setSuspended: YES];
    [((NSOperationQueue*)RAREaPlatformHelper_tasksQueue_) cancelAllOperations];
    RAREaPlatformHelper_tasksQueue_=nil;
  }
  if(RAREaPlatformHelper_imagesQueue_) {
    [((NSOperationQueue*)RAREaPlatformHelper_imagesQueue_) setSuspended: YES];
    [((NSOperationQueue*)RAREaPlatformHelper_imagesQueue_) cancelAllOperations];
    RAREaPlatformHelper_imagesQueue_=nil;
  }
}

+ (BOOL)supportsSyncUpdateWithScreenRefreshWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  #if TARGET_OS_IPHONE
  return [c.getView.getProxy isKindOfClass:[RAREAPView  class]];
  #endif
  return false;
}

+ (void)syncUpdateWithScreenRefreshWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c
                                                  withBoolean:(BOOL)sync {
  #if TARGET_OS_IPHONE
  ((RAREAPView*)c.getView.getProxy).syncWithDisplayRefresh=sync;
  #endif
}

+ (JavaLangThrowable *)unwrapJavaScriptExceptionWithJavaLangThrowable:(JavaLangThrowable *)e {
  return e;
}

+ (BOOL)useInFormLayoutMeasureHeightsWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)component {
  return YES;
}

+ (void)setAutoRepeatsWithRAREiActionComponent:(id<RAREiActionComponent>)comp
                                       withInt:(int)interval {
  if ([[((id<RAREiActionComponent>) nil_chk(comp)) getView] isKindOfClass:[RAREButtonView class]]) {
    [((RAREButtonView *) check_class_cast([comp getView], [RAREButtonView class])) setAutoRepeatsWithInt:interval];
  }
  else if ([[comp getView] isKindOfClass:[RARECustomButtonView class]]) {
    [((RARECustomButtonView *) check_class_cast([comp getView], [RARECustomButtonView class])) setAutoRepeatsWithInt:interval];
  }
}

+ (void)setCookieWithNSString:(NSString *)cookieHeader
               withJavaNetURL:(JavaNetURL *)url
                 withNSString:(NSString *)value {
  NSNumber* ver= [NSNumber numberWithInt: [cookieHeader isEqualToString:@"Cookie"] ? 0 : 1];
  NSURL *u=(NSURL*)url.getNSURL;
  NSDictionary *d=[NSDictionary dictionaryWithObjectsAndKeys:u,NSHTTPCookieOriginURL,value,NSHTTPCookieValue,ver, NSHTTPCookieVersion, nil];
  [[NSHTTPCookieStorage sharedHTTPCookieStorage] setCookie:[NSHTTPCookie cookieWithProperties:d]];
}

+ (void)setCookieValueWithJavaNetURL:(JavaNetURL *)url
                        withNSString:(NSString *)value {
  [RAREaPlatformHelper setCookieWithNSString:@"Cookie" withJavaNetURL:url withNSString:value];
}

+ (void)setLabelForComponentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp
                                                withId:(id)l {
}

+ (void)setShortcutWithRAREUIMenuItem:(RAREUIMenuItem *)mi
                         withNSString:(NSString *)keystroke {
}

+ (void)setStrictScriptingModeWithBoolean:(BOOL)strict {
  RAREaPlatformHelper_scriptingMode_ = strict;
}

+ (void)setTargetRenderTypeWithRAREiTarget:(id<RAREiTarget>)target
                    withRARERenderTypeEnum:(RARERenderTypeEnum *)rt {
  if (rt == nil) {
    rt = [RARERenderTypeEnum STRETCHED];
  }
  RAREView *v = [((id<RAREiParentComponent>) nil_chk([((id<RAREiTarget>) nil_chk(target)) getContainerComponent])) getView];
  if ([v isKindOfClass:[RAREFrameView class]]) {
    [((RAREFrameView *) check_class_cast(v, [RAREFrameView class])) setViewRenderTypeWithRARERenderTypeEnum:rt];
  }
}

+ (void)setTextWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp
                             withNSString:(NSString *)string {
  [((RAREView *) nil_chk([((id<RAREiPlatformComponent>) nil_chk(comp)) getView])) setTextWithJavaLangCharSequence:string];
}

+ (void)setTextAlignmentWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)comp
    withRARERenderableDataItem_HorizontalAlignEnum:(RARERenderableDataItem_HorizontalAlignEnum *)ha
      withRARERenderableDataItem_VerticalAlignEnum:(RARERenderableDataItem_VerticalAlignEnum *)va {
  [((RAREView *) nil_chk([((id<RAREiPlatformComponent>) nil_chk(comp)) getView])) setTextAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:ha withRARERenderableDataItem_VerticalAlignEnum:va];
}

+ (void)setUseDarkStatusBarTextWithBoolean:(BOOL)dark {
}

+ (id)getBackgroundQueue {
  return RAREaPlatformHelper_tasksQueue_;
}

+ (RAREUIColor *)getColorStateListWithJavaUtilMap:(id<JavaUtilMap>)map {
  return [RAREColorUtils getSimpleColorStateListWithJavaUtilMap:map];
}

+ (JavaLangReflectConstructor *)getConstructorWithIOSClass:(IOSClass *)cls
                                         withIOSClassArray:(IOSObjectArray *)params {
  NSMutableString *name = [@"init" mutableCopy];
  BOOL first = YES;
  for (int i = 0; i < [params count]; i++) {
    IOSClass *cls = [params objectAtIndex:i];
    if (first) {
      [name appendString:@"With"];
      first = NO;
    } else {
      [name appendString:@"with"];
    }
    if(cls.objcClass) {
      [name appendFormat:@"%@:", [cls getSimpleName]];
    }
    else {
      [name appendFormat:@"%@:", NSStringFromProtocol(cls.objcProtocol)];
    }
  }
  SEL selector = NSSelectorFromString(name);
  if (cls != nil && ![cls.objcClass instancesRespondToSelector:selector]) {
    while (cls != nil) {
      cls = [cls getSuperclass];
      if ([cls.objcClass instancesRespondToSelector:selector]) {
        break;
      }
    }
  }
  if(cls==nil) {
    return nil;
  }
  return [JavaLangReflectConstructor constructorWithSelector:selector withClass:cls withMetadata: nil];
}

+ (RAREaFocusedAction *)getCopyAction {
  return [RAREActionHelper getCopyAction];
}

+ (RAREaFocusedAction *)getCutAction {
  return [RAREActionHelper getCutAction];
}

+ (RAREaFocusedAction *)getDeleteAction {
  return [RAREActionHelper getDeleteAction];
}

+ (RAREUIColor *)getDrawableStateListWithJavaUtilMap:(id<JavaUtilMap>)map {
  return [RAREColorUtils getSimpleDrawableStateListWithJavaUtilMap:map];
}

+ (id<JavaUtilList>)getDropedItemsWithRAREaWidget:(RAREaWidget *)dest
                                  withRAREiWidget:(id<RAREiWidget>)source
                                      withBoolean:(BOOL)copy_
                                      withBoolean:(BOOL)text {
  id o;
  if ([(id) source conformsToProtocol: @protocol(RAREiListHandler)]) {
    if (!text && ((dest == source) || ([dest conformsToProtocol: @protocol(RAREiListHandler)]))) {
      o = [((id<RAREiListHandler>) check_protocol_cast(source, @protocol(RAREiListHandler))) getSelections];
    }
    else {
      o = [((id<RAREiListHandler>) check_protocol_cast(source, @protocol(RAREiListHandler))) getSelectionsAsStrings];
    }
  }
  else {
    if (dest == source) {
      o = [((id<RAREiWidget>) nil_chk(source)) getSelection];
    }
    else {
      o = [((id<RAREiWidget>) nil_chk(source)) getSelectionAsString];
    }
  }
  return [RAREUtils getItemsWithId:o withRAREaWidget:dest withBoolean:copy_];
}

+ (JavaIoFile *)getFileWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)context
                                     withNSString:(NSString *)title
                                      withBoolean:(BOOL)open
                                      withBoolean:(BOOL)dironly
                                   withJavaIoFile:(JavaIoFile *)dir
                                     withNSString:(NSString *)extfilters {
  return nil;
}

+ (NSString *)getIOSClassNameWithNSString:(NSString *)javaFullClassName {
  return [((RAREaPlatformHelper_PackageHelper *) nil_chk(RAREaPlatformHelper_packageHelper_)) getIOSClassNameWithNSString:javaFullClassName];
}

+ (id)getImagesBackgroundQueue {
  return (RAREaPlatformHelper_imagesQueue_ == nil) ? RAREaPlatformHelper_tasksQueue_ : RAREaPlatformHelper_imagesQueue_;
}

+ (RAREUIFont *)getMonospacedFontWithInt:(int)size {
  if ([RAREPlatform isIOS]) {
    return [[RAREUIFont alloc] initWithNSString:@"Courier New" withInt:[RAREUIFont PLAIN] withInt:size];
  }
  return [[RAREUIFont alloc] initWithNSString:@"Monaco" withInt:[RAREUIFont PLAIN] withInt:size];
}

+ (NSString *)getPackageNameWithIOSClass:(IOSClass *)cls {
  return [((RAREaPlatformHelper_PackageHelper *) nil_chk(RAREaPlatformHelper_packageHelper_)) getPackageNameWithIOSClass:cls];
}

+ (RAREaFocusedAction *)getPasteAction {
  return [RAREActionHelper getPasteAction];
}

+ (id<RAREUTiPreferences>)getPreferencesWithNSString:(NSString *)appKey {
  return [[RARENSUserDefaultsPreferences alloc] initWithNSString:appKey];
}

+ (RAREaFocusedAction *)getRedoAction {
  return [RAREActionHelper getRedoAction];
}

+ (id)getResourceAsDrawableWithNSString:(NSString *)name {
  return [((RAREAppContext *) check_class_cast([RAREPlatform getAppContext], [RAREAppContext class])) getManagedResourceWithNSString:name];
}

+ (RAREUIColor *)getResourceColorWithNSString:(NSString *)color {
  if (color == nil) {
    return nil;
  }
  BOOL good = NO;
  BOOL pattern = NO;
  if ([((NSString *) nil_chk(color)) hasPrefix:@"drawable/"]) {
    color = [color substring:9];
    good = YES;
  }
  else if ([color hasPrefix:@"pattern/"]) {
    good = YES;
    color = [color substring:8];
    pattern = YES;
  }
  if (!good) {
    return nil;
  }
  RAREUIImage *img = [((RAREAppContext *) check_class_cast([RAREPlatform getAppContext], [RAREAppContext class])) getManagedResourceWithNSString:color];
  if (img == nil) {
    return nil;
  }
  RAREUIImagePainter *ip = [[RAREUIImagePainter alloc] initWithRAREUIImage:img];
  if (!pattern) {
    [ip setRenderTypeWithRARERenderTypeEnum:[RARERenderTypeEnum STRETCHED]];
    [RAREImageUtils setResourceNameWithId:[((RAREUIImage *) nil_chk(img)) getProxy] withNSString:color];
  }
  return [[RAREUIColorShade alloc] initWithRAREiBackgroundPainter:ip];
}

+ (id)getResourceIdWithNSString:(NSString *)name {
  return name;
}

+ (float)getScaledImageDensity {
  return 1;
}

+ (RAREaFocusedAction *)getSelectAllAction {
  return [RAREActionHelper getSelectAllAction];
}

+ (RAREUIMenuItem *)getSeparatorMenuItem {
  return [[RAREUIMenuItem alloc] initWithRAREMenuItem:[[RARESeparatorMenuItem alloc] init]];
}

+ (BOOL)getStrictScriptingMode {
  return RAREaPlatformHelper_scriptingMode_;
}

+ (RAREaFocusedAction *)getUndoAction {
  return [RAREActionHelper getUndoAction];
}

+ (float)getUnscaledImageDensity {
  return 1;
}

+ (RAREUIDimension *)getWindowDecorationSize {
  return [[RAREUIDimension alloc] initWithFloat:0 withFloat:0];
}

+ (BOOL)isDarkTheme {
  return ![@"light" isEqual:[((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getStringWithNSString:@"Rare.theme"]];
}

+ (BOOL)isMouseClickWithRAREUIPoint:(RAREUIPoint *)startPoint
                           withLong:(long long int)startTime
                 withRAREMouseEvent:(RAREMouseEvent *)releaseEvent {
  if ((startPoint == nil) || (releaseEvent == nil)) {
    return NO;
  }
  JavaLangInteger *t = (JavaLangInteger *) check_class_cast([((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getWithNSString:@"Rare.Pointer.clickThreshold"], [JavaLangInteger class]);
  if (t == nil) {
    t = [JavaLangInteger valueOfWithInt:500];
  }
  if ([((RAREMouseEvent *) nil_chk(releaseEvent)) getWhen] - startTime > [((JavaLangInteger *) nil_chk(t)) intValue]) {
    return NO;
  }
  t = (JavaLangInteger *) check_class_cast([((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getWithNSString:@"Rare.Pointer.clickSize"], [JavaLangInteger class]);
  if (t == nil) {
    t = [JavaLangInteger valueOfWithInt:[RAREPlatform isTouchDevice] ? [RAREUIScreen platformPixelsWithInt:32] : 4];
  }
  RAREUIPoint *p = [releaseEvent getLocationOnScreen];
  return ([JavaLangMath absWithFloat:((RAREUIPoint *) nil_chk(startPoint))->x_ - ((RAREUIPoint *) nil_chk(p))->x_] <= [((JavaLangInteger *) nil_chk(t)) intValue]) && ([JavaLangMath absWithFloat:startPoint->y_ - p->y_] <= [t intValue]);
}

+ (BOOL)isOptimizationEnabled {
  return YES;
}

+ (void)setOptimizationEnabledWithBoolean:(BOOL)enabled {
}

+ (void)enqueueWithId:(id)queue
withRARECancelableOperation:(RARECancelableOperation *)cop {
  [((NSOperationQueue*)queue) addOperation:(NSOperation*)cop->proxy_];
}

+ (void)stopSoundWithRAREUISound:(RAREUISound *)uiSound {
}

+ (void)disposeOfSoundWithRAREUISound:(RAREUISound *)uiSound {
}

+ (void)playSoundWithRAREUISound:(RAREUISound *)uiSound {
}

+ (void)pauseSoundWithRAREUISound:(RAREUISound *)uiSound {
}

+ (void)resumeSoundWithRAREUISound:(RAREUISound *)uiSound {
}

+ (id)setVolumeWithRAREUISound:(RAREUISound *)uiSound
                       withInt:(int)percent {
  return [((RAREUISound *) nil_chk(uiSound)) getPlatformSound];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "areImagesUpsideDown", NULL, "Z", 0x9, NULL },
    { "createGlassViewWithBoolean:", NULL, "LRAREView", 0x9, NULL },
    { "checkForHTMLWithNSString:withRAREUIFont:", NULL, "LJavaLangCharSequence", 0x9, NULL },
    { "clearSessionCookies", NULL, "V", 0x109, NULL },
    { "componentForEventWithJavaUtilEventObject:", NULL, "LRAREiPlatformComponent", 0x9, NULL },
    { "createAnimationComponentWithRAREiWidget:", NULL, "LRAREAnimationComponent", 0x9, NULL },
    { "createBeanWithRAREBeanWidget:withRARESPOTBean:", NULL, "LNSObject", 0x9, NULL },
    { "createBorderPanelWithRAREiPlatformComponent:withRAREiPlatformBorder:", NULL, "LRAREiPlatformComponent", 0x9, NULL },
    { "createDialogWithRAREWindow:withBoolean:withBoolean:withBoolean:", NULL, "LRAREWindow", 0x9, NULL },
    { "createDisabledIconWithRAREiPlatformIcon:", NULL, "LRAREiPlatformIcon", 0x9, NULL },
    { "createDisabledIconIfNeededWithRAREiPlatformIcon:", NULL, "LRAREiPlatformIcon", 0x9, NULL },
    { "createDisabledImageWithRAREUIImage:", NULL, "LRAREUIImage", 0x9, NULL },
    { "createIconWithJavaNetURL:withNSString:withBoolean:withFloat:", NULL, "LRAREUIImageIcon", 0x9, NULL },
    { "createImageWithJavaNetURL:withBoolean:withFloat:", NULL, "LRAREUIImage", 0x9, "JavaIoIOException" },
    { "createLabelWithRAREiPlatformComponent:", NULL, "LRAREiActionComponent", 0x9, NULL },
    { "createLabelRendererWithRAREiWidget:", NULL, "LRAREiPlatformRenderingComponent", 0x9, NULL },
    { "createListDataModelWithRAREiWidget:withJavaUtilList:", NULL, "LRAREiPlatformListDataModel", 0x9, NULL },
    { "createMenuBarWithRAREiContainer:withRARESPOTMenuBar:", NULL, "LRAREiPlatformMenuBar", 0x9, NULL },
    { "createMenuItemWithRAREUIAction:withBoolean:", NULL, "LRAREUIMenuItem", 0x9, NULL },
    { "createPath", NULL, "LRAREiPlatformPath", 0x9, NULL },
    { "createPopup", NULL, "LRAREiPopup", 0x9, NULL },
    { "createPopupWithBoolean:withBoolean:", NULL, "LRAREPopupWindow", 0x9, NULL },
    { "createPopupListBoxHandlerWithRAREiWidget:withRAREiPlatformListDataModel:withBoolean:", NULL, "LRAREPopupListBoxHandler", 0x9, NULL },
    { "createRendererWithNSString:withRAREiWidget:", NULL, "LRAREiPlatformRenderingComponent", 0x9, "JavaLangClassNotFoundException" },
    { "createSeparatorComponentWithRAREiPlatformComponent:", NULL, "LRAREiPlatformComponent", 0x9, NULL },
    { "createShapeWithRAREUIRectangle:", NULL, "LRAREiPlatformShape", 0x9, NULL },
    { "createShapeWithFloat:withFloat:withFloat:withFloat:", NULL, "LRAREiPlatformShape", 0x9, NULL },
    { "createSpacerComponentWithRAREiPlatformComponent:", NULL, "LRAREiPlatformComponent", 0x9, NULL },
    { "createStateListIconWithNSString:withRAREiWidget:", NULL, "LRAREiPlatformIcon", 0x9, NULL },
    { "createTargetContainerWithRAREiPlatformAppContext:", NULL, "LRAREiParentComponent", 0x9, NULL },
    { "createWeakReferenceWithId:", NULL, "LRAREiWeakReference", 0x9, NULL },
    { "createWidgetWithIOSClass:withRAREiContainer:", NULL, "LRAREaWidget", 0x109, "JavaLangException" },
    { "executeBackgroundTaskWithJavaUtilConcurrentCallable:withBoolean:", NULL, "LRAREiCancelableFuture", 0x9, NULL },
    { "executeBackgroundTaskWithJavaLangRunnable:withBoolean:", NULL, "LRAREiCancelableFuture", 0x9, NULL },
    { "executeSwingWorkerTaskWithRAREiWorkerTask:withBoolean:", NULL, "LRAREiCancelableFuture", 0x9, NULL },
    { "fileToURLWithJavaIoFile:", NULL, "LJavaNetURL", 0x109, NULL },
    { "fileToURLWithNSString:", NULL, "LJavaNetURL", 0x109, NULL },
    { "formatWithNSString:withNSObjectArray:", NULL, "LNSString", 0x89, NULL },
    { "handleCookieInjectionWithJavaNetURLConnection:", NULL, "LNSString", 0x9, NULL },
    { "handleCookieInjectionWithNSString:withJavaNetURLConnection:", NULL, "LNSString", 0x9, NULL },
    { "hmacSHAWithNSString:withNSString:withBoolean:", NULL, "LNSString", 0x109, NULL },
    { "initializeThreadingServiceWithInt:withInt:", NULL, "V", 0x109, NULL },
    { "loadClassWithNSString:", NULL, "LIOSClass", 0x9, "JavaLangClassNotFoundException" },
    { "makeResizableWithRAREiWidget:withBoolean:withRAREiPlatformIcon:", NULL, "LRAREiPlatformComponent", 0x9, NULL },
    { "makeScrollPaneWithRAREaViewer:withRARESPOTScrollPane:withRAREiPlatformComponent:", NULL, "LRAREiPlatformComponent", 0x9, NULL },
    { "md5WithNSString:withBoolean:", NULL, "LNSString", 0x109, NULL },
    { "resolveBeanComponentWithId:", NULL, "LRAREiPlatformComponent", 0x9, NULL },
    { "scaleImageWithRAREUIImage:withInt:withInt:", NULL, "LRAREUIImage", 0x9, NULL },
    { "stopBackgroundThreads", NULL, "V", 0x109, NULL },
    { "supportsSyncUpdateWithScreenRefreshWithRAREiPlatformComponent:", NULL, "Z", 0x109, NULL },
    { "syncUpdateWithScreenRefreshWithRAREiPlatformComponent:withBoolean:", NULL, "V", 0x109, NULL },
    { "unwrapJavaScriptExceptionWithJavaLangThrowable:", NULL, "LJavaLangThrowable", 0x9, NULL },
    { "useInFormLayoutMeasureHeightsWithRAREiPlatformComponent:", NULL, "Z", 0x9, NULL },
    { "setCookieWithNSString:withJavaNetURL:withNSString:", NULL, "V", 0x109, NULL },
    { "getBackgroundQueue", NULL, "LNSObject", 0x9, NULL },
    { "getColorStateListWithJavaUtilMap:", NULL, "LRAREUIColor", 0x9, NULL },
    { "getConstructorWithIOSClass:withIOSClassArray:", NULL, "LJavaLangReflectConstructor", 0x189, NULL },
    { "getCopyAction", NULL, "LRAREaFocusedAction", 0x9, NULL },
    { "getCutAction", NULL, "LRAREaFocusedAction", 0x9, NULL },
    { "getDeleteAction", NULL, "LRAREaFocusedAction", 0x9, NULL },
    { "getDrawableStateListWithJavaUtilMap:", NULL, "LRAREUIColor", 0x9, NULL },
    { "getDropedItemsWithRAREaWidget:withRAREiWidget:withBoolean:withBoolean:", NULL, "LJavaUtilList", 0x9, NULL },
    { "getFileWithRAREiPlatformComponent:withNSString:withBoolean:withBoolean:withJavaIoFile:withNSString:", NULL, "LJavaIoFile", 0x9, NULL },
    { "getIOSClassNameWithNSString:", NULL, "LNSString", 0x9, NULL },
    { "getImagesBackgroundQueue", NULL, "LNSObject", 0x9, NULL },
    { "getMonospacedFontWithInt:", NULL, "LRAREUIFont", 0x9, NULL },
    { "getPackageNameWithIOSClass:", NULL, "LNSString", 0x9, NULL },
    { "getPasteAction", NULL, "LRAREaFocusedAction", 0x9, NULL },
    { "getPreferencesWithNSString:", NULL, "LRAREUTiPreferences", 0x9, NULL },
    { "getRedoAction", NULL, "LRAREaFocusedAction", 0x9, NULL },
    { "getResourceAsDrawableWithNSString:", NULL, "LNSObject", 0x9, NULL },
    { "getResourceColorWithNSString:", NULL, "LRAREUIColor", 0x9, NULL },
    { "getResourceIdWithNSString:", NULL, "LNSObject", 0x9, NULL },
    { "getSelectAllAction", NULL, "LRAREaFocusedAction", 0x9, NULL },
    { "getSeparatorMenuItem", NULL, "LRAREUIMenuItem", 0x9, NULL },
    { "getStrictScriptingMode", NULL, "Z", 0x9, NULL },
    { "getUndoAction", NULL, "LRAREaFocusedAction", 0x9, NULL },
    { "getWindowDecorationSize", NULL, "LRAREUIDimension", 0x9, NULL },
    { "isDarkTheme", NULL, "Z", 0x9, NULL },
    { "isMouseClickWithRAREUIPoint:withLong:withRAREMouseEvent:", NULL, "Z", 0x9, NULL },
    { "isOptimizationEnabled", NULL, "Z", 0x9, NULL },
    { "enqueueWithId:withRARECancelableOperation:", NULL, "V", 0x10a, NULL },
    { "setVolumeWithRAREUISound:withInt:", NULL, "LNSObject", 0x9, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "imagesQueue_", NULL, 0x8, "LNSObject" },
    { "packageHelper_", NULL, 0x8, "LRAREaPlatformHelper_PackageHelper" },
    { "tasksQueue_", NULL, 0x8, "LNSObject" },
    { "scriptingMode_", NULL, 0xa, "Z" },
  };
  static J2ObjcClassInfo _RAREaPlatformHelper = { "aPlatformHelper", "com.appnativa.rare.platform", NULL, 0x1, 83, methods, 4, fields, 0, NULL};
  return &_RAREaPlatformHelper;
}

@end
@implementation RAREaPlatformHelper_PackageHelper

static RAREUTOrderedProperties * RAREaPlatformHelper_PackageHelper_packageMap_;
static JavaUtilHashMap * RAREaPlatformHelper_PackageHelper_reversePackageMap_;

+ (RAREUTOrderedProperties *)packageMap {
  return RAREaPlatformHelper_PackageHelper_packageMap_;
}

+ (void)setPackageMap:(RAREUTOrderedProperties *)packageMap {
  RAREaPlatformHelper_PackageHelper_packageMap_ = packageMap;
}

+ (JavaUtilHashMap *)reversePackageMap {
  return RAREaPlatformHelper_PackageHelper_reversePackageMap_;
}

+ (void)setReversePackageMap:(JavaUtilHashMap *)reversePackageMap {
  RAREaPlatformHelper_PackageHelper_reversePackageMap_ = reversePackageMap;
}

- (id)init {
  if (self = [super init]) {
    [SPOTHelper setPackageHelperWithRAREUTiPackageHelper:self];
    @try {
      [((RAREUTOrderedProperties *) nil_chk(RAREaPlatformHelper_PackageHelper_packageMap_)) load__WithJavaIoInputStream:[[JavaIoFileInputStream alloc] initWithNSString:[RAREaAppContextImpl makeResourcePathWithNSString:@"raw" withNSString:@"pkg" withNSString:@"properties"]]];
      NSString *apppkg = [RAREaAppContextImpl makeResourcePathWithNSString:nil withNSString:@"appnativa_user_pkg" withNSString:@"properties"];
      if (apppkg != nil) {
        [RAREaPlatformHelper_PackageHelper_packageMap_ load__WithJavaIoInputStream:[[JavaIoFileInputStream alloc] initWithNSString:apppkg]];
      }
      rareSPOTPrefix_ = [RAREaPlatformHelper_PackageHelper_packageMap_ getPropertyWithNSString:[RAREPlatform RARE_SPOT_PACKAGE_NAME]];
      id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([RAREaPlatformHelper_PackageHelper_packageMap_ entrySet])) iterator];
      id<JavaUtilMap_Entry> e;
      while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
        e = (id<JavaUtilMap_Entry>) check_protocol_cast([it next], @protocol(JavaUtilMap_Entry));
        (void) [((JavaUtilHashMap *) nil_chk(RAREaPlatformHelper_PackageHelper_reversePackageMap_)) putWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getValue] withId:[e getKey]];
      }
    }
    @catch (JavaLangException *e) {
      [((JavaLangException *) nil_chk(e)) printStackTrace];
      [JavaLangSystem exitWithInt:1];
    }
  }
  return self;
}

- (void)addPackageMappingWithNSString:(NSString *)packageName
                         withNSString:(NSString *)classPrefix {
  (void) [((RAREUTOrderedProperties *) nil_chk(RAREaPlatformHelper_PackageHelper_packageMap_)) putWithId:packageName withId:classPrefix];
  (void) [((JavaUtilHashMap *) nil_chk(RAREaPlatformHelper_PackageHelper_reversePackageMap_)) putWithId:classPrefix withId:packageName];
}

- (IOSClass *)loadClassWithNSString:(NSString *)name {
  return [self loadClassExWithNSString:[self getIOSClassNameWithNSString:name]];
}

- (IOSClass *)getFieldClassWithId:(id)field {
  return [(JavaLangReflectField*)field getType];
}

- (NSString *)getIOSClassNameWithNSString:(NSString *)name {
  NSString *prefix = [self findClassNamePrefixWithNSString:name];
  if (prefix != nil) {
    int n = [((NSString *) nil_chk(name)) lastIndexOf:'.'];
    name = [NSString stringWithFormat:@"%@%@", prefix, [name substring:n + 1]];
  }
  else {
    name = [self createIOSClassNameWithNSString:name];
  }
  name = [((NSString *) nil_chk(name)) replace:'$' withChar:'_'];
  return name;
}

- (NSString *)getPackageNameWithIOSClass:(IOSClass *)cls {
  NSString *name = [((IOSClass *) nil_chk(cls)) getName];
  int n = [((NSString *) nil_chk(name)) lastIndexOf:'.'];
  if (n != -1) {
    return [name substring:0 endIndex:n];
  }
  if ([name hasPrefix:@"SPOT"]) {
    return [iSPOTConstants SPOT_PACKAGE_NAME];
  }
  if ([name hasPrefix:rareSPOTPrefix_]) {
    return [RAREPlatform RARE_SPOT_PACKAGE_NAME];
  }
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  int len = [name sequenceLength];
  for (int i = 0; i < len; i++) {
    unichar c = [name charAtWithInt:i];
    if ([JavaLangCharacter isLowerCaseWithChar:c]) {
      break;
    }
    (void) [sb appendWithChar:c];
  }
  len = [sb sequenceLength];
  while (len > 0) {
    name = (NSString *) check_class_cast([((JavaUtilHashMap *) nil_chk(RAREaPlatformHelper_PackageHelper_reversePackageMap_)) getWithId:[sb description]], [NSString class]);
    if (name != nil) {
      return name;
    }
    [sb setLengthWithInt:--len];
  }
  return @"";
}

- (NSString *)createIOSClassNameWithNSString:(NSString *)name {
  int len = [((NSString *) nil_chk(name)) sequenceLength];
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] initWithInt:len];
  BOOL up = YES;
  for (int i = 0; i < len; i++) {
    unichar c = [name charAtWithInt:i];
    if (c == '.') {
      up = YES;
      continue;
    }
    if (up) {
      c = [JavaLangCharacter toUpperCaseWithChar:c];
      up = NO;
    }
    (void) [sb appendWithChar:c];
  }
  return [sb description];
}

- (NSString *)findClassNamePrefixWithNSString:(NSString *)name {
  int n = [((NSString *) nil_chk(name)) lastIndexOf:'.'];
  if (n == -1) {
    return nil;
  }
  name = [name substring:0 endIndex:n];
  NSString *cls = [((RAREUTOrderedProperties *) nil_chk(RAREaPlatformHelper_PackageHelper_packageMap_)) getPropertyWithNSString:name];
  return (cls == nil) ? [self findClassNamePrefixWithNSString:name] : cls;
}

- (IOSClass *)loadClassExWithNSString:(NSString *)name {
  return [AppleHelper loadClass: name];
}

+ (void)initialize {
  if (self == [RAREaPlatformHelper_PackageHelper class]) {
    RAREaPlatformHelper_PackageHelper_packageMap_ = [[RAREUTOrderedProperties alloc] init];
    RAREaPlatformHelper_PackageHelper_reversePackageMap_ = [[JavaUtilHashMap alloc] init];
  }
}

- (void)copyAllFieldsTo:(RAREaPlatformHelper_PackageHelper *)other {
  [super copyAllFieldsTo:other];
  other->rareSPOTPrefix_ = rareSPOTPrefix_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "loadClassWithNSString:", NULL, "LIOSClass", 0x1, "JavaLangClassNotFoundException" },
    { "getFieldClassWithId:", NULL, "LIOSClass", 0x101, NULL },
    { "getIOSClassNameWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "getPackageNameWithIOSClass:", NULL, "LNSString", 0x1, NULL },
    { "createIOSClassNameWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "findClassNamePrefixWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "loadClassExWithNSString:", NULL, "LIOSClass", 0x104, "JavaLangClassNotFoundException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "packageMap_", NULL, 0x9, "LRAREUTOrderedProperties" },
    { "reversePackageMap_", NULL, 0x9, "LJavaUtilHashMap" },
    { "rareSPOTPrefix_", NULL, 0x0, "LNSString" },
  };
  static J2ObjcClassInfo _RAREaPlatformHelper_PackageHelper = { "PackageHelper", "com.appnativa.rare.platform", "aPlatformHelper", 0x8, 7, methods, 3, fields, 0, NULL};
  return &_RAREaPlatformHelper_PackageHelper;
}

@end
@implementation RAREaPlatformHelper_WeakReferenceEx

- (id)initWithId:(id)value {
  if (self = [super init]) {
    self->value_ = value;
  }
  return self;
}

- (void)clear {
  value_ = nil;
}

- (id)get {
  return value_;
}

- (void)copyAllFieldsTo:(RAREaPlatformHelper_WeakReferenceEx *)other {
  [super copyAllFieldsTo:other];
  other->value_ = value_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "get", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x0, "LNSObject" },
  };
  static J2ObjcClassInfo _RAREaPlatformHelper_WeakReferenceEx = { "WeakReferenceEx", "com.appnativa.rare.platform", "aPlatformHelper", 0x8, 1, methods, 1, fields, 0, NULL};
  return &_RAREaPlatformHelper_WeakReferenceEx;
}

@end
