//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/platform/NSUserDefaultsPreferences.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSByteArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/platform/NSUserDefaultsPreferences.h"
#include "com/appnativa/rare/ui/event/EventListenerList.h"
#include "com/appnativa/util/iPreferences.h"
#import "AppleHelper.h"

@implementation RARENSUserDefaultsPreferences

- (id)initWithNSString:(NSString *)prefix {
  return [self initRARENSUserDefaultsPreferencesWithId:[RARENSUserDefaultsPreferences createProxy] withNSString:prefix withBoolean:YES];
}

- (id)initRARENSUserDefaultsPreferencesWithId:(id)proxy
                                 withNSString:(NSString *)prefix
                                  withBoolean:(BOOL)isUser {
  if (self = [super init]) {
    self->isUser_ = isUser;
    self->proxy_ = proxy;
    if (![((NSString *) nil_chk(prefix)) hasSuffix:@"."]) {
      prefix = [NSString stringWithFormat:@"%@.", prefix];
    }
    self->prefix_ = prefix;
  }
  return self;
}

- (id)initWithId:(id)proxy
    withNSString:(NSString *)prefix
     withBoolean:(BOOL)isUser {
  return [self initRARENSUserDefaultsPreferencesWithId:proxy withNSString:prefix withBoolean:isUser];
}

- (void)flush {
  [((NSUserDefaults*)proxy_) synchronize];
}

- (void)putWithNSString:(NSString *)key
           withNSString:(NSString *)value {
  key=[self makeKeyWithNSString: key];
  [((NSUserDefaults*)proxy_) setObject: value forKey: key];
}

- (NSString *)getWithNSString:(NSString *)key
                 withNSString:(NSString *)def {
  key=[self makeKeyWithNSString: key];
  NSString* s=[((NSUserDefaults*)proxy_) stringForKey: key];
  return s ? s : def;
}

- (void)removeWithNSString:(NSString *)key {
  key=[self makeKeyWithNSString: key];
  [((NSUserDefaults*)proxy_) removeObjectForKey: key];
}

- (void)clear {
  [self removeNode];
}

- (void)putIntWithNSString:(NSString *)key
                   withInt:(int)value {
  key=[self makeKeyWithNSString: key];
  [((NSUserDefaults*)proxy_) setObject: [NSNumber numberWithInt: value] forKey: key];
}

- (int)getIntWithNSString:(NSString *)key
                  withInt:(int)def {
  key=[self makeKeyWithNSString: key];
  NSObject* o=[((NSUserDefaults*)proxy_) objectForKey: key];
  if([o isKindOfClass: [NSNumber class]]) {
    return ((NSNumber*)o).intValue;
  }
  return def;
}

- (void)putLongWithNSString:(NSString *)key
                   withLong:(long long int)value {
  key=[self makeKeyWithNSString: key];
  [((NSUserDefaults*)proxy_) setObject: [NSNumber numberWithLongLong: value] forKey: key];
}

- (long long int)getLongWithNSString:(NSString *)key
                            withLong:(long long int)def {
  key=[self makeKeyWithNSString: key];
  NSObject* o=[((NSUserDefaults*)proxy_) objectForKey: key];
  if([o isKindOfClass: [NSNumber class]]) {
    return ((NSNumber*)o).longLongValue;
  }
  return def;
}

- (void)putBooleanWithNSString:(NSString *)key
                   withBoolean:(BOOL)value {
  key=[self makeKeyWithNSString: key];
  [((NSUserDefaults*)proxy_) setObject: [NSNumber numberWithBool: value] forKey: key];
}

- (BOOL)getBooleanWithNSString:(NSString *)key
                   withBoolean:(BOOL)def {
  key=[self makeKeyWithNSString: key];
  NSObject* o=[((NSUserDefaults*)proxy_) objectForKey: key];
  if([o isKindOfClass: [NSNumber class]]) {
    return ((NSNumber*)o).boolValue;
  }
  return def;
}

- (void)putFloatWithNSString:(NSString *)key
                   withFloat:(float)value {
  key=[self makeKeyWithNSString: key];
  [((NSUserDefaults*)proxy_) setObject: [NSNumber numberWithFloat: value] forKey: key];
}

- (float)getFloatWithNSString:(NSString *)key
                    withFloat:(float)def {
  key=[self makeKeyWithNSString: key];
  NSObject* o=[((NSUserDefaults*)proxy_) objectForKey: key];
  if([o isKindOfClass: [NSNumber class]]) {
    return ((NSNumber*)o).floatValue;
  }
  return def;
}

- (void)putDoubleWithNSString:(NSString *)key
                   withDouble:(double)value {
  key=[self makeKeyWithNSString: key];
  [((NSUserDefaults*)proxy_) setObject: [NSNumber numberWithDouble: value] forKey: key];
}

- (double)getDoubleWithNSString:(NSString *)key
                     withDouble:(double)def {
  key=[self makeKeyWithNSString: key];
  NSObject* o=[((NSUserDefaults*)proxy_) objectForKey: key];
  if([o isKindOfClass: [NSNumber class]]) {
    return ((NSNumber*)o).doubleValue;
  }
  return def;
}

- (void)putByteArrayWithNSString:(NSString *)key
                   withByteArray:(IOSByteArray *)value {
  key=[self makeKeyWithNSString: key];
  if(!value) {
    [((NSUserDefaults*)proxy_) removeObjectForKey: key];
  }
  else {
    [((NSUserDefaults*)proxy_) setObject:[value toNSData] forKey:key];
  }
}

- (IOSByteArray *)getByteArrayWithNSString:(NSString *)key
                             withByteArray:(IOSByteArray *)def {
  key=[self makeKeyWithNSString: key];
  NSObject* o=[((NSUserDefaults*)proxy_) objectForKey: key];
  if([o isKindOfClass: [NSData class]]) {
    NSData* data=(NSData*)o;
    return [IOSByteArray arrayWithBytes:(const char*)data.bytes count:data.length];
  }
  return def;
}

- (IOSObjectArray *)keys {
  NSString *bundleId  = [[NSBundle mainBundle] bundleIdentifier];
  NSDictionary* d=[((NSUserDefaults*)proxy_) persistentDomainForName:bundleId];
  if(!d) {
    return [IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[IOSObjectArray class]]];
  }
  return [AppleHelper toStringArray:[d allKeys]];
}

- (IOSObjectArray *)childrenNames {
  NSString *bundleId  = [[NSBundle mainBundle] bundleIdentifier];
  NSDictionary* d=[((NSUserDefaults*)proxy_) persistentDomainForName:bundleId];
  __block NSDictionary* result= [NSDictionary dictionary];
  [d enumerateKeysAndObjectsUsingBlock:^(id key, id obj, BOOL *stop) {
    NSString* s=(NSString*)key;
    if ([s indexOfString: prefix_]==0) {
      int n=[s lastIndexOf:'.'];
      s=[s substring:0 endIndex:n];
      if(![s isEqualToString:prefix_]) {
        [result setValue:s forKey:s];
      }
    }
    
  }];
  return [AppleHelper toStringArray:[result allKeys]];
}

- (id<RAREUTiPreferences>)getParent {
  int n = [((NSString *) nil_chk(prefix_)) lastIndexOf:'.'];
  if (n == -1) {
    return nil;
  }
  return [[RARENSUserDefaultsPreferences alloc] initWithNSString:[prefix_ substring:0 endIndex:n + 1]];
}

- (id<RAREUTiPreferences>)getNodeWithNSString:(NSString *)pathName {
  return [[RARENSUserDefaultsPreferences alloc] initWithNSString:[self makeKeyWithNSString:pathName]];
}

- (BOOL)nodeExistsWithNSString:(NSString *)pathName {
  NSString *bundleId  = [[NSBundle mainBundle] bundleIdentifier];
  NSDictionary* d=[((NSUserDefaults*)proxy_) persistentDomainForName:bundleId];
  __block BOOL result= NO;
  [d enumerateKeysAndObjectsUsingBlock:^(id key, id obj, BOOL *stop) {
    NSString* s=(NSString*)key;
    if ([s indexOfString: prefix_]==0) {
      *stop=YES;
      result=YES;
    }
    
  }];
  return result;
}

- (void)removeNode {
  __block NSUserDefaults* defs=(NSUserDefaults*)proxy_;
  __block NSMutableArray* keys= [NSMutableArray array];
  NSString *bundleId  = [[NSBundle mainBundle] bundleIdentifier];
  NSDictionary* d=[defs persistentDomainForName:bundleId];
  [d enumerateKeysAndObjectsUsingBlock:^(id key, id obj, BOOL *stop) {
    NSString* s=(NSString*)key;
    if ([s indexOfString: prefix_]==0) {
      [keys addObject:s];
    }
    
  }];
  [keys enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [defs removeObjectForKey:(NSString*)obj];
  }];
}

- (NSString *)name {
  return [prefix_ substring:0 endIndex:[((NSString *) nil_chk(prefix_)) sequenceLength] - 1];
}

- (NSString *)absolutePath {
  return [self name];
}

- (BOOL)isUserNode {
  return isUser_;
}

- (void)sync {
  [self flush];
}

- (NSString *)makeKeyWithNSString:(NSString *)key {
  if (prefix_ == nil) {
    return key;
  }
  return [NSString stringWithFormat:@"%@%@", prefix_, key];
}

+ (id)createProxy {
  return [NSUserDefaults standardUserDefaults];
}

- (void)copyAllFieldsTo:(RARENSUserDefaultsPreferences *)other {
  [super copyAllFieldsTo:other];
  other->isUser_ = isUser_;
  other->listenerList_ = listenerList_;
  other->prefix_ = prefix_;
  other->proxy_ = proxy_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "flush", NULL, "V", 0x101, NULL },
    { "putWithNSString:withNSString:", NULL, "V", 0x101, NULL },
    { "getWithNSString:withNSString:", NULL, "LNSString", 0x101, NULL },
    { "removeWithNSString:", NULL, "V", 0x101, NULL },
    { "putIntWithNSString:withInt:", NULL, "V", 0x101, NULL },
    { "getIntWithNSString:withInt:", NULL, "I", 0x101, NULL },
    { "putLongWithNSString:withLong:", NULL, "V", 0x101, NULL },
    { "getLongWithNSString:withLong:", NULL, "J", 0x101, NULL },
    { "putBooleanWithNSString:withBoolean:", NULL, "V", 0x101, NULL },
    { "getBooleanWithNSString:withBoolean:", NULL, "Z", 0x101, NULL },
    { "putFloatWithNSString:withFloat:", NULL, "V", 0x101, NULL },
    { "getFloatWithNSString:withFloat:", NULL, "F", 0x101, NULL },
    { "putDoubleWithNSString:withDouble:", NULL, "V", 0x101, NULL },
    { "getDoubleWithNSString:withDouble:", NULL, "D", 0x101, NULL },
    { "putByteArrayWithNSString:withByteArray:", NULL, "V", 0x101, NULL },
    { "getByteArrayWithNSString:withByteArray:", NULL, "LIOSByteArray", 0x101, NULL },
    { "keys", NULL, "LIOSObjectArray", 0x101, NULL },
    { "childrenNames", NULL, "LIOSObjectArray", 0x101, NULL },
    { "getParent", NULL, "LRAREUTiPreferences", 0x1, NULL },
    { "getNodeWithNSString:", NULL, "LRAREUTiPreferences", 0x1, NULL },
    { "nodeExistsWithNSString:", NULL, "Z", 0x101, NULL },
    { "removeNode", NULL, "V", 0x101, NULL },
    { "name", NULL, "LNSString", 0x1, NULL },
    { "absolutePath", NULL, "LNSString", 0x1, NULL },
    { "isUserNode", NULL, "Z", 0x1, NULL },
    { "makeKeyWithNSString:", NULL, "LNSString", 0x2, NULL },
    { "createProxy", NULL, "LNSObject", 0x10a, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "proxy_", NULL, 0x0, "LNSObject" },
    { "prefix_", NULL, 0x0, "LNSString" },
    { "listenerList_", NULL, 0x0, "LRAREEventListenerList" },
    { "isUser_", NULL, 0x0, "Z" },
  };
  static J2ObjcClassInfo _RARENSUserDefaultsPreferences = { "NSUserDefaultsPreferences", "com.appnativa.rare.platform", NULL, 0x1, 27, methods, 4, fields, 0, NULL};
  return &_RARENSUserDefaultsPreferences;
}

@end
