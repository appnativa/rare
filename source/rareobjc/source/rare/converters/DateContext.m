//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/converters/DateContext.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/converters/DateContext.h"
#include "java/text/DateFormat.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@implementation RAREDateContext

static JavaUtilRegexPattern * RAREDateContext_monthOnlyPattern_;

+ (JavaUtilRegexPattern *)monthOnlyPattern {
  return RAREDateContext_monthOnlyPattern_;
}

+ (void)setMonthOnlyPattern:(JavaUtilRegexPattern *)monthOnlyPattern {
  RAREDateContext_monthOnlyPattern_ = monthOnlyPattern;
}

- (id)init {
  return [super initWithNSString:@"DateContext"];
}

- (id)initWithJavaTextDateFormat:(JavaTextDateFormat *)iformat
          withJavaTextDateFormat:(JavaTextDateFormat *)dformat {
  if (self = [super initWithNSString:@"DateContext"]) {
    itemFormats_ = (iformat == nil) ? nil : [IOSObjectArray arrayWithObjects:(id[]){ iformat } count:1 type:[IOSClass classWithClass:[JavaTextDateFormat class]]];
    displayFormat_ = dformat;
  }
  return self;
}

- (id)initWithJavaTextDateFormatArray:(IOSObjectArray *)iformat
               withJavaTextDateFormat:(JavaTextDateFormat *)dformat {
  if (self = [super initWithNSString:@"DateContext"]) {
    itemFormats_ = iformat;
    displayFormat_ = dformat;
  }
  return self;
}

- (IOSObjectArray *)getItemFormats {
  return itemFormats_;
}

- (BOOL)hasMultiplePattens {
  return (itemFormats_ == nil) ? NO : (int) [itemFormats_ count] > 1;
}

- (JavaTextDateFormat *)getDisplayFormat {
  return displayFormat_;
}

- (JavaTextDateFormat *)getItemFormat {
  IOSObjectArray *a = [self getItemFormats];
  return (a == nil) ? nil : IOSObjectArray_Get(a, 0);
}

- (BOOL)isMonthOnly {
  JavaTextDateFormat *f = (itemFormats_ == nil) ? displayFormat_ : IOSObjectArray_Get(itemFormats_, 0);
  if ((f == nil) || !([f isKindOfClass:[JavaTextSimpleDateFormat class]])) {
    return NO;
  }
  if (RAREDateContext_monthOnlyPattern_ == nil) {
    RAREDateContext_monthOnlyPattern_ = [JavaUtilRegexPattern compileWithNSString:@"[^SsdKkEeWwZzmHhaF]+"];
  }
  return [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(RAREDateContext_monthOnlyPattern_)) matcherWithJavaLangCharSequence:[((JavaTextSimpleDateFormat *) check_class_cast(f, [JavaTextSimpleDateFormat class])) toPattern]])) matches];
}

- (void)copyAllFieldsTo:(RAREDateContext *)other {
  [super copyAllFieldsTo:other];
  other->displayFormat_ = displayFormat_;
  other->itemFormats_ = itemFormats_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getItemFormats", NULL, "LIOSObjectArray", 0x1, NULL },
    { "hasMultiplePattens", NULL, "Z", 0x1, NULL },
    { "getDisplayFormat", NULL, "LJavaTextDateFormat", 0x1, NULL },
    { "getItemFormat", NULL, "LJavaTextDateFormat", 0x1, NULL },
    { "isMonthOnly", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "monthOnlyPattern_", NULL, 0x4a, "LJavaUtilRegexPattern" },
    { "displayFormat_", NULL, 0x4, "LJavaTextDateFormat" },
    { "itemFormats_", NULL, 0x4, "LIOSObjectArray" },
  };
  static J2ObjcClassInfo _RAREDateContext = { "DateContext", "com.appnativa.rare.converters", NULL, 0x1, 5, methods, 3, fields, 0, NULL};
  return &_RAREDateContext;
}

@end
