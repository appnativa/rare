//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/converters/NumberConverter.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/converters/Conversions.h"
#include "com/appnativa/rare/converters/NumberContext.h"
#include "com/appnativa/rare/converters/NumberConverter.h"
#include "com/appnativa/rare/converters/aConverter.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/util/FormatException.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/NumberRange.h"
#include "com/appnativa/util/SNumber.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Comparable.h"
#include "java/lang/RuntimeException.h"
#include "java/text/DecimalFormat.h"
#include "java/text/NumberFormat.h"
#include "java/text/ParseException.h"
#include "java/text/ParsePosition.h"

@implementation RARENumberConverter

- (id)init {
  return [super init];
}

- (id)createContextWithRAREiWidget:(id<RAREiWidget>)widget
                      withNSString:(NSString *)value {
  if (widget == nil) {
    widget = [RAREPlatform getContextRootViewer];
  }
  return [RAREConversions createNumberContextWithNSString:value withBoolean:[((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getAppContext])) getAutoLocalizeNumberFormats]];
}

- (id)objectFromStringWithRAREiWidget:(id<RAREiWidget>)widget
                         withNSString:(NSString *)value
                               withId:(id)context {
  if ((value == nil) || ([value sequenceLength] == 0)) {
    return nil;
  }
  if (context == [RARENumberContext RANGE_CONTEXT]) {
    return [self rangeFromStringWithJavaTextNumberFormat:nil withRAREiWidget:widget withNSString:value];
  }
  else {
    RARENumberContext *nc = nil;
    if ([context isKindOfClass:[RARENumberContext class]]) {
      nc = (RARENumberContext *) check_class_cast(context, [RARENumberContext class]);
      if ([((RARENumberContext *) nil_chk(nc)) isRange]) {
        return [self rangeFromStringWithJavaTextNumberFormat:nil withRAREiWidget:widget withNSString:value];
      }
    }
    NSNumber *num = (nc == nil) ? [((RAREUTSNumber *) [[RAREUTSNumber alloc] initWithNSString:value]) makeImmutable] : [self objectFromStringWithRARENumberContext:nc withRAREiWidget:widget withNSString:value];
    if (((minValue_ != nil) && ([minValue_ compareToWithId:num] > 0)) || ((maxValue_ != nil) && ([maxValue_ compareToWithId:num] < 0))) {
      @throw [[RAREUTFormatException alloc] initWithNSString:[RAREaConverter getRangeErrorWithJavaLangComparable:minValue_ withJavaLangComparable:maxValue_]];
    }
    return num;
  }
}

- (id<JavaLangCharSequence>)objectToStringWithRAREiWidget:(id<RAREiWidget>)widget
                                                   withId:(id)object
                                                   withId:(id)context {
  if ([object isKindOfClass:[RARENumberConverter_BadValueNumber class]]) {
    return [nil_chk(object) description];
  }
  if (object == nil) {
    return nil;
  }
  JavaTextNumberFormat *f = [self getFormatWithId:context withBoolean:NO];
  if ([object isKindOfClass:[RAREUTNumberRange class]]) {
    return [self rangeToStringWithJavaTextNumberFormat:f withRAREiWidget:widget withRAREUTNumberRange:(RAREUTNumberRange *) check_class_cast(object, [RAREUTNumberRange class])];
  }
  if (f != nil) {
    @synchronized (f) {
      return [f formatWithId:object];
    }
  }
  return [nil_chk(object) description];
}

- (BOOL)objectsAreImmutableWithId:(id)context {
  return YES;
}

- (NSNumber *)rangeFromStringWithJavaTextNumberFormat:(JavaTextNumberFormat *)nf
                                      withRAREiWidget:(id<RAREiWidget>)widget
                                         withNSString:(NSString *)value {
  int n = [((NSString *) nil_chk(value)) indexOf:'/'];
  NSNumber *low;
  NSNumber *hi = nil;
  if (n == -1) {
    low = [self objectFromStringWithJavaTextNumberFormat:nf withRAREiWidget:widget withNSString:value];
  }
  else {
    low = [self objectFromStringWithJavaTextNumberFormat:nf withRAREiWidget:widget withNSString:[value substring:0 endIndex:n]];
    hi = [self objectFromStringWithJavaTextNumberFormat:nf withRAREiWidget:widget withNSString:[value substring:n + 1]];
  }
  if (((minValue_ != nil) && ([minValue_ compareToWithId:low] > 0)) || ((maxValue_ != nil) && (hi != nil) && ([maxValue_ compareToWithId:hi] < 0))) {
    @throw [[RAREUTFormatException alloc] initWithNSString:[RAREaConverter getRangeErrorWithJavaLangComparable:minValue_ withJavaLangComparable:maxValue_]];
  }
  return (hi == nil) ? low : [[RAREUTNumberRange alloc] initWithNSNumber:low withNSNumber:hi];
}

- (NSString *)rangeToStringWithJavaTextNumberFormat:(JavaTextNumberFormat *)f
                                    withRAREiWidget:(id<RAREiWidget>)widget
                              withRAREUTNumberRange:(RAREUTNumberRange *)object {
  if (object == nil) {
    return nil;
  }
  if (f != nil) {
    @synchronized (f) {
      return [NSString stringWithFormat:@"%@/%@", [f formatWithId:[((RAREUTNumberRange *) nil_chk(object)) getLowValue]], [f formatWithId:[object getHighValue]]];
    }
  }
  return [((RAREUTNumberRange *) nil_chk(object)) description];
}

+ (NSNumber *)getBadNumberWithNSString:(NSString *)value {
  return [[RARENumberConverter_BadValueNumber alloc] initWithNSString:value];
}

- (IOSClass *)getObjectClassWithId:(id)context {
  return [IOSClass classWithClass:[NSNumber class]];
}

- (NSNumber *)objectFromStringWithJavaTextNumberFormat:(JavaTextNumberFormat *)f
                                       withRAREiWidget:(id<RAREiWidget>)widget
                                          withNSString:(NSString *)value {
  @try {
    if (f == nil) {
      return [((RAREUTSNumber *) [[RAREUTSNumber alloc] initWithNSString:value]) makeImmutable];
    }
    @synchronized (f) {
      return [((JavaTextNumberFormat *) nil_chk(f)) parseWithNSString:value];
    }
  }
  @catch (JavaTextParseException *ex) {
    if (widget == nil) {
      widget = [RAREPlatform getContextRootViewer];
    }
    if ([((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getAppContext])) ignoreFormatExceptions]) {
      return [[RARENumberConverter_BadValueNumber alloc] initWithNSString:value];
    }
    if ([f isKindOfClass:[JavaTextDecimalFormat class]]) {
      @throw [RAREaConverter formatExceptionWithRAREiWidget:widget withNSString:[((JavaTextDecimalFormat *) check_class_cast(f, [JavaTextDecimalFormat class])) toPattern] withNSString:value];
    }
    else {
      @throw [RAREaConverter formatExceptionWithRAREiWidget:widget withNSString:value withIOSClass:[IOSClass classWithClass:[NSNumber class]]];
    }
  }
}

- (NSNumber *)objectFromStringWithRARENumberContext:(RARENumberContext *)nc
                                    withRAREiWidget:(id<RAREiWidget>)widget
                                       withNSString:(NSString *)value {
  IOSObjectArray *formats = [((RARENumberContext *) nil_chk(nc)) getItemFormats];
  JavaLangRuntimeException *ex = nil;
  if ((formats == nil) || ((int) [formats count] == 0)) {
    @try {
      return [[RAREUTSNumber alloc] initWithNSString:value withBoolean:YES];
    }
    @catch (JavaLangRuntimeException *e) {
      ex = e;
    }
  }
  else {
    NSNumber *num = nil;
    JavaTextParsePosition *p = [[JavaTextParsePosition alloc] initWithInt:0];
    {
      IOSObjectArray *a__ = formats;
      id const *b__ = a__->buffer_;
      id const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaTextNumberFormat *nf = (*b__++);
        @try {
          @synchronized (nf) {
            num = [((JavaTextNumberFormat *) nil_chk(nf)) parseWithNSString:value withJavaTextParsePosition:p];
            if ([p getIndex] != 0) {
              return num;
            }
          }
        }
        @catch (JavaLangRuntimeException *e) {
        }
      }
    }
    if (widget == nil) {
      widget = [RAREPlatform getContextRootViewer];
    }
  }
  if ([((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getAppContext])) ignoreFormatExceptions]) {
    return [[RARENumberConverter_BadValueNumber alloc] initWithNSString:value];
  }
  if (ex != nil) {
    @throw ex;
  }
  @throw [RAREaConverter formatExceptionWithRAREiWidget:widget withNSString:[RAREUTHelper toStringWithNSObjectArray:formats withNSString:@";"] withNSString:value];
}

- (JavaTextNumberFormat *)getFormatWithId:(id)context
                              withBoolean:(BOOL)parse {
  if ([context isKindOfClass:[RARENumberContext class]]) {
    JavaTextNumberFormat *f = parse ? [((RARENumberContext *) check_class_cast(context, [RARENumberContext class])) getItemFormat] : [((RARENumberContext *) check_class_cast(context, [RARENumberContext class])) getDisplayFormat];
    if ((f == nil) && !parse) {
      f = [((RARENumberContext *) check_class_cast(context, [RARENumberContext class])) getItemFormat];
    }
    return f;
  }
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "createContextWithRAREiWidget:withNSString:", NULL, "LNSObject", 0x1, NULL },
    { "objectFromStringWithRAREiWidget:withNSString:withId:", NULL, "LNSObject", 0x1, NULL },
    { "objectToStringWithRAREiWidget:withId:withId:", NULL, "LJavaLangCharSequence", 0x1, NULL },
    { "objectsAreImmutableWithId:", NULL, "Z", 0x1, NULL },
    { "rangeFromStringWithJavaTextNumberFormat:withRAREiWidget:withNSString:", NULL, "LNSNumber", 0x1, NULL },
    { "rangeToStringWithJavaTextNumberFormat:withRAREiWidget:withRAREUTNumberRange:", NULL, "LNSString", 0x1, NULL },
    { "getBadNumberWithNSString:", NULL, "LNSNumber", 0x9, NULL },
    { "getObjectClassWithId:", NULL, "LIOSClass", 0x1, NULL },
    { "objectFromStringWithJavaTextNumberFormat:withRAREiWidget:withNSString:", NULL, "LNSNumber", 0x4, NULL },
    { "objectFromStringWithRARENumberContext:withRAREiWidget:withNSString:", NULL, "LNSNumber", 0x4, NULL },
    { "getFormatWithId:withBoolean:", NULL, "LJavaTextNumberFormat", 0x2, NULL },
  };
  static J2ObjcClassInfo _RARENumberConverter = { "NumberConverter", "com.appnativa.rare.converters", NULL, 0x1, 11, methods, 0, NULL, 0, NULL};
  return &_RARENumberConverter;
}

@end
@implementation RARENumberConverter_BadValueNumber

- (id)initWithNSString:(NSString *)value {
  if (self = [super init]) {
    stringValue_ = value;
  }
  return self;
}

- (double)doubleValue {
  return 0;
}

- (float)floatValue {
  return 0;
}

- (int)intValue {
  return 0;
}

- (long long int)longLongValue {
  return 0;
}

- (NSString *)description {
  return stringValue_;
}

- (void)copyAllFieldsTo:(RARENumberConverter_BadValueNumber *)other {
  [super copyAllFieldsTo:other];
  other->stringValue_ = stringValue_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _RARENumberConverter_BadValueNumber = { "BadValueNumber", "com.appnativa.rare.converters", "NumberConverter", 0x9, 0, NULL, 0, NULL, 0, NULL};
  return &_RARENumberConverter_BadValueNumber;
}

@end
