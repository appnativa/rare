//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/net/NSURLConnectionHelper.java
//
//  Created by decoteaud on 12/8/15.
//

#include "com/appnativa/rare/iFunctionCallback.h"
#include "com/appnativa/rare/net/NSURLConnectionHelper.h"
#include "java/net/URL.h"
#import "RAREURLConnectionHandler.h"
 #import "AppleHelper.h"

@implementation RARENSURLConnectionHelper

- (id)init {
  return [self initRARENSURLConnectionHelperWithId:[RARENSURLConnectionHelper createProxy]];
}

- (id)initRARENSURLConnectionHelperWithId:(id)proxy {
  if (self = [super init]) {
    self->proxy_ = proxy;
  }
  return self;
}

- (id)initWithId:(id)proxy {
  return [self initRARENSURLConnectionHelperWithId:proxy];
}

- (void)cancel {
  if(proxy_) {
    callback_=nil;
    RAREURLConnectionHandler* h=(RAREURLConnectionHandler*)proxy_;
    [h cancel];
  }
}

- (void)dispose {
  callback_=nil;
  if(proxy_) {
    RAREURLConnectionHandler* h=(RAREURLConnectionHandler*)proxy_;
    proxy_=nil;
    [h dispose];
  }
}

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (callback_ != nil) {
    [callback_ finishedWithBoolean:canceled withId:self];
  }
  callback_ = nil;
}

- (void)sendURLWithJavaNetURL:(JavaNetURL *)url
    withRAREiFunctionCallback:(id<RAREiFunctionCallback>)callback {
  callback_=callback;
  if(callback) {
    callback=self;
  }
  NSURL* nsurl=(NSURL*)[url getNSURL];
  RAREURLConnectionHandler* h=(RAREURLConnectionHandler*)proxy_;
  [h sendURL:nsurl callback:callback manualStart: NO];
}

- (void)sendRequestWithId:(id)nsurlrequest
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)callback {
  callback_=callback;
  if(callback) {
    callback=self;
  }
  NSURLRequest* request=(NSURLRequest*)nsurlrequest;
  RAREURLConnectionHandler* h=(RAREURLConnectionHandler*)proxy_;
  [h sendRequest:request callback:callback manualStart: NO];
}

- (void)start {
  if(proxy_) {
    RAREURLConnectionHandler* h=(RAREURLConnectionHandler*)proxy_;
    [h start];
  }
}

- (id)getData {
  if(proxy_) {
    RAREURLConnectionHandler* h=(RAREURLConnectionHandler*)proxy_;
    return [h getData];
  }
  return nil;
}

- (NSString *)getError {
  if(proxy_) {
    RAREURLConnectionHandler* h=(RAREURLConnectionHandler*)proxy_;
    NSError* e=[h getError];
    if(e) {
      return [AppleHelper toErrorString: e];
    }
  }
  return nil;
}

- (int)getResponseCode {
  if(proxy_) {
    RAREURLConnectionHandler* h=(RAREURLConnectionHandler*)proxy_;
    NSURLResponse* r=[h getResponse];
    if(r) {
      return (int)[((NSHTTPURLResponse*)r) statusCode];
    }
  }
  return -1;
}

+ (id)createProxy {
  return [RAREURLConnectionHandler new];
}

- (void)copyAllFieldsTo:(RARENSURLConnectionHelper *)other {
  [super copyAllFieldsTo:other];
  other->callback_ = callback_;
  other->proxy_ = proxy_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithId:", NULL, NULL, 0x4, NULL },
    { "cancel", NULL, "V", 0x101, NULL },
    { "dispose", NULL, "V", 0x101, NULL },
    { "sendURLWithJavaNetURL:withRAREiFunctionCallback:", NULL, "V", 0x101, NULL },
    { "sendRequestWithId:withRAREiFunctionCallback:", NULL, "V", 0x101, NULL },
    { "start", NULL, "V", 0x101, NULL },
    { "getData", NULL, "LNSObject", 0x101, NULL },
    { "getError", NULL, "LNSString", 0x101, NULL },
    { "getResponseCode", NULL, "I", 0x101, NULL },
    { "createProxy", NULL, "LNSObject", 0x10a, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "callback_", NULL, 0x0, "LRAREiFunctionCallback" },
    { "proxy_", NULL, 0x0, "LNSObject" },
  };
  static J2ObjcClassInfo _RARENSURLConnectionHelper = { "NSURLConnectionHelper", "com.appnativa.rare.net", NULL, 0x1, 10, methods, 2, fields, 0, NULL};
  return &_RARENSURLConnectionHelper;
}

@end
