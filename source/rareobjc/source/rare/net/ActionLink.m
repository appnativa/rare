//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/net/ActionLink.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSByteArray.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iCancelableFuture.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/CollectionURLConnection.h"
#include "com/appnativa/rare/net/FormHelper.h"
#include "com/appnativa/rare/net/HTTPException.h"
#include "com/appnativa/rare/net/InlineURLConnection.h"
#include "com/appnativa/rare/net/JavaURLConnection.h"
#include "com/appnativa/rare/net/ScriptURLConnection.h"
#include "com/appnativa/rare/net/iMultipartMimeHandler.h"
#include "com/appnativa/rare/net/iURLConnection.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/platform/aRare.h"
#include "com/appnativa/rare/spot/Link.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/ui/UIPoint.h"
#include "com/appnativa/rare/ui/Utils.h"
#include "com/appnativa/rare/ui/event/ActionEvent.h"
#include "com/appnativa/rare/ui/iPlatformWindowManager.h"
#include "com/appnativa/rare/util/DataItemParserHandler.h"
#include "com/appnativa/rare/util/DataParser.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/util/Base64.h"
#include "com/appnativa/util/ByteArray.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/Streams.h"
#include "com/appnativa/util/UnescapingReader.h"
#include "com/appnativa/util/json/JSONWriter.h"
#include "java/io/File.h"
#include "java/io/FileReader.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/OutputStream.h"
#include "java/io/OutputStreamWriter.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/io/StringWriter.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/io/Writer.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InternalError.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Throwable.h"
#include "java/net/HttpURLConnection.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"
#include "java/nio/channels/ClosedChannelException.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@implementation RAREActionLink

static NSString * RAREActionLink_MIME_COLUMN_SEPARATOR_PREFIX_ = @"separator=";
static NSString * RAREActionLink_MIME_LD_SEPARATOR_PREFIX_ = @"ldseparator=";
static NSString * RAREActionLink_MIME_RI_SEPARATOR_PREFIX_ = @"riseparator=";
static NSString * RAREActionLink_PAGING_HAS_MORE_ = @"X-Paging-Has-More";
static NSString * RAREActionLink_PAGING_NEXT_ = @"X-Paging-Next";
static NSString * RAREActionLink_PAGING_PREVIOUS_ = @"X-Paging-Previous";
static NSString * RAREActionLink_LINK_INFO_ = @"X-Link-Info";
static int RAREActionLink_defaultReadTimeout_ = 0;
static NSString * RAREActionLink_DEFAULT_BOUNDARY_ = @"RarePart_CABC4B4F_CAB1_4C07_A6E8_E5A3169BFC48_RarePart";
static id<RAREActionLink_iErrorHandler> RAREActionLink__errorHandler_;

+ (unichar)DEFAULT_COL_SEPARATOR {
  return RAREActionLink_DEFAULT_COL_SEPARATOR;
}

+ (NSString *)MIME_COLUMN_SEPARATOR_PREFIX {
  return RAREActionLink_MIME_COLUMN_SEPARATOR_PREFIX_;
}

+ (NSString *)MIME_LD_SEPARATOR_PREFIX {
  return RAREActionLink_MIME_LD_SEPARATOR_PREFIX_;
}

+ (NSString *)MIME_RI_SEPARATOR_PREFIX {
  return RAREActionLink_MIME_RI_SEPARATOR_PREFIX_;
}

+ (NSString *)PAGING_HAS_MORE {
  return RAREActionLink_PAGING_HAS_MORE_;
}

+ (NSString *)PAGING_NEXT {
  return RAREActionLink_PAGING_NEXT_;
}

+ (NSString *)PAGING_PREVIOUS {
  return RAREActionLink_PAGING_PREVIOUS_;
}

+ (NSString *)LINK_INFO {
  return RAREActionLink_LINK_INFO_;
}

+ (int)defaultReadTimeout {
  return RAREActionLink_defaultReadTimeout_;
}

+ (int *)defaultReadTimeoutRef {
  return &RAREActionLink_defaultReadTimeout_;
}

+ (NSString *)DEFAULT_BOUNDARY {
  return RAREActionLink_DEFAULT_BOUNDARY_;
}

+ (id<RAREActionLink_iErrorHandler>)_errorHandler {
  return RAREActionLink__errorHandler_;
}

+ (void)set_errorHandler:(id<RAREActionLink_iErrorHandler>)_errorHandler {
  RAREActionLink__errorHandler_ = _errorHandler;
}

- (id)init {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
  }
  return self;
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
    contextWidget_ = context;
  }
  return self;
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
   withRAREiURLConnection:(id<RAREiURLConnection>)connection {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
    contextWidget_ = context;
    theURL_ = [((id<RAREiURLConnection>) nil_chk(connection)) getURL];
    urlConnection_ = connection;
    inlineURL_ = [(id) connection isKindOfClass:[RAREInlineURLConnection class]];
  }
  return self;
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
         withRARESPOTLink:(RARESPOTLink *)link {
  if (self = [self initRAREActionLinkWithRAREiWidget:context withSPOTPrintableString:((RARESPOTLink *) nil_chk(link))->url_]) {
    contextWidget_ = context;
    linkAttributes_ = [RAREDataParser parseNameValuePairsWithSPOTPrintableString:link->attributes_];
    requestHeaders_ = [RAREDataParser parseNameValuePairsWithSPOTPrintableString:link->headers_];
    targetName_ = [RAREUtils getTargetWithRARESPOTLink:link];
    requestMethod_ = [RAREActionLink_RequestMethodEnum valueOfWithNSString:[((NSString *) nil_chk([((RARESPOTLink_CRequestType *) nil_chk(link->requestType_)) stringValue])) uppercaseStringWithJRELocale:[JavaUtilLocale US]]];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum valueOfWithNSString:[((NSString *) nil_chk([((RARESPOTLink_CRequestEncoding *) nil_chk(link->requestEncoding_)) stringValue])) uppercaseStringWithJRELocale:[JavaUtilLocale US]]];
    statusMessage_ = [((SPOTPrintableString *) nil_chk(link->statusMessage_)) getValue];
    origWindowOptions_ = [((RARESPOTLink_CTarget *) nil_chk(link->target_)) spot_getAttributesEx];
  }
  return self;
}

- (id)initRAREActionLinkWithRAREiWidget:(id<RAREiWidget>)context
                withSPOTPrintableString:(SPOTPrintableString *)url {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
    contextWidget_ = context;
    if ([[((SPOTPrintableString *) nil_chk(url)) spot_getLinkedData] isKindOfClass:[RARESPOTViewer class]]) {
      [self setViewerConfigurationWithRARESPOTViewer:(RARESPOTViewer *) check_class_cast([url spot_getLinkedData], [RARESPOTViewer class])];
      (void) [url spot_setLinkedDataWithId:nil];
    }
    NSString *s = [url spot_getAttributeWithNSString:@"inline"];
    NSString *inlineData = nil, *encoding = nil;
    if ((s != nil) && ([s sequenceLength] > 0)) {
      inlineURL_ = [RAREUTSNumber booleanValueWithNSString:s];
    }
    else if ([url spot_isValuePreformatted]) {
      inlineURL_ = YES;
    }
    s = [url getValue];
    if (inlineURL_ || (s == nil)) {
      inlineData = s;
    }
    else if ([s hasPrefix:@"data:"]) {
      int n = [s indexOf:','];
      if (n == -1) {
        inlineData = @"";
      }
      else {
        inlineData = [s substring:n + 1];
        s = [s substring:5 endIndex:n];
        n = [((NSString *) nil_chk(s)) indexOf:';'];
        if (n != -1) {
          mimeType_ = [s substring:0 endIndex:n];
          s = [((NSString *) nil_chk([s substring:n + 1])) trim];
          if ([((NSString *) nil_chk(s)) hasSuffix:@"base64"]) {
            NSString *cs = [RAREJavaURLConnection getCharsetWithNSString:s withNSString:@"US-ASCII"];
            IOSByteArray *b = [RAREUTBase64 decodeWithNSString:inlineData];
            @try {
              inlineData = [NSString stringWithBytes:b charsetName:cs];
            }
            @catch (JavaIoUnsupportedEncodingException *ex) {
              @throw [[RAREApplicationException alloc] initWithJavaLangThrowable:ex];
            }
          }
        }
        else {
          mimeType_ = s;
        }
        mimeType_ = [((NSString *) nil_chk(mimeType_)) trim];
        if ([((NSString *) nil_chk(mimeType_)) sequenceLength] == 0) {
          mimeType_ = nil;
        }
      }
      inlineURL_ = YES;
    }
    else {
      stringURL_ = s;
    }
    deferred_ = ![@"false" isEqual:[url spot_getAttributeWithNSString:@"deferred"]];
    s = [url spot_getAttributeWithNSString:@"density"];
    if (s != nil) {
      if ([s sequenceLength] > 0) {
        imageDensity_ = [RAREUTSNumber floatValueWithNSString:s];
      }
    }
    s = [url spot_getAttributeWithNSString:@"columnSeparator"];
    if (s != nil) {
      if ([s sequenceLength] > 0) {
        colSeparator_ = [s charAtWithInt:0];
        columnSeparatorSet_ = YES;
      }
    }
    s = [url spot_getAttributeWithNSString:@"ldSeparator"];
    if (s != nil) {
      if ([s sequenceLength] > 0) {
        ldSeparator_ = [s charAtWithInt:0];
      }
    }
    s = [url spot_getAttributeWithNSString:@"riSeparator"];
    if (s != nil) {
      if ([s sequenceLength] > 0) {
        rowInfoSeparator_ = [s charAtWithInt:0];
      }
    }
    if (mimeType_ == nil) {
      mimeType_ = [url spot_getAttributeWithNSString:@"mimeType"];
    }
    s = [url spot_getAttributeWithNSString:@"contentEncoding"];
    if (s != nil) {
      if ([s sequenceLength] > 0) {
        encoding = s;
      }
    }
    contentEncoding_ = encoding;
    s = [url spot_getAttributeWithNSString:@"unescape"];
    if (s != nil) {
      if ([s equalsIgnoreCase:@"unicode"]) {
        unescape_ = YES;
        unescapeUnicodeOnly_ = YES;
      }
      else {
        unescape_ = [s equalsIgnoreCase:@"true"];
      }
    }
    s = [url spot_getAttributeWithNSString:@"parser"];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      parserClassName_ = s;
    }
    if (inlineURL_) {
      @try {
        theURL_ = [RAREInlineURLConnection createURLWithNSString:inlineData withNSString:mimeType_ withNSString:encoding];
      }
      @catch (JavaLangException *e) {
        @throw [[RAREApplicationException alloc] initWithJavaLangThrowable:e];
      }
    }
    else if ((stringURL_ != nil) && [stringURL_ hasPrefix:@"script:"]) {
      @try {
        theURL_ = [RAREScriptURLConnection createURLWithRAREiWidget:context withNSString:[stringURL_ substring:7] withNSString:mimeType_];
      }
      @catch (JavaNetMalformedURLException *e) {
        @throw [[RAREApplicationException alloc] initWithJavaLangThrowable:e];
      }
      stringURL_ = nil;
    }
  }
  return self;
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
  withSPOTPrintableString:(SPOTPrintableString *)url {
  return [self initRAREActionLinkWithRAREiWidget:context withSPOTPrintableString:url];
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
             withNSString:(NSString *)url {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
    contextWidget_ = context;
    stringURL_ = url;
  }
  return self;
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
             withNSString:(NSString *)url
             withNSString:(NSString *)type {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
    contextWidget_ = context;
    stringURL_ = url;
    mimeType_ = type;
  }
  return self;
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
           withJavaNetURL:(JavaNetURL *)url {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
    contextWidget_ = context;
    theURL_ = url;
  }
  return self;
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
           withJavaNetURL:(JavaNetURL *)url
             withNSString:(NSString *)type {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
    contextWidget_ = context;
    theURL_ = url;
    mimeType_ = type;
  }
  return self;
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
       withRARESPOTViewer:(RARESPOTViewer *)cfg {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
    contextWidget_ = context;
    viewerConfiguration_ = cfg;
  }
  return self;
}

- (id)initWithNSString:(NSString *)url {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
    stringURL_ = url;
  }
  return self;
}

- (id)initWithNSString:(NSString *)data
          withNSString:(NSString *)type {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
    @try {
      theURL_ = [RAREInlineURLConnection createURLWithNSString:data withNSString:type withNSString:nil];
      mimeType_ = type;
      inlineURL_ = YES;
    }
    @catch (JavaNetMalformedURLException *e) {
      @throw [[RAREApplicationException alloc] initWithJavaLangThrowable:e];
    }
  }
  return self;
}

- (id)initWithJavaNetURL:(JavaNetURL *)url {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
    theURL_ = url;
  }
  return self;
}

- (id)initWithJavaNetURL:(JavaNetURL *)url
            withNSString:(NSString *)type {
  if (self = [super init]) {
    colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
    ldSeparator_ = 0x0000;
    readTimeout_ = RAREActionLink_defaultReadTimeout_;
    requestMethod_ = [RAREActionLink_RequestMethodEnum GET];
    requestEncoding_ = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
    rowInfoSeparator_ = 0x0000;
    deferred_ = YES;
    imageDensity_ = [RAREaPlatformHelper getUnscaledImageDensity];
    theURL_ = url;
    mimeType_ = type;
  }
  return self;
}

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  [RAREPlatform invokeLaterWithJavaLangRunnable:self];
}

- (void)activate {
  [self run];
}

- (void)addAnotherUploadFileWithJavaIoWriter:(JavaIoWriter *)writer
                                withNSString:(NSString *)name
                                withNSString:(NSString *)mimeType
                                withNSString:(NSString *)fileName {
  [RAREFormHelper writeFileHeaderWithBoolean:NO withJavaIoWriter:writer withNSString:[self getPartBoundary] withNSString:name withNSString:mimeType withNSString:fileName withBoolean:NO];
}

- (void)cancelWithBoolean:(BOOL)canInterrupt {
  @try {
    [self close];
  }
  @catch (JavaLangException *ignore) {
  }
  canceled_ = YES;
}

- (void)clear {
  @try {
    [self close];
  }
  @catch (JavaLangException *ignore) {
  }
  theURL_ = nil;
  colSeparator_ = RAREActionLink_DEFAULT_COL_SEPARATOR;
  if (linkAttributes_ != nil) {
    [linkAttributes_ clear];
  }
  windowOptions_ = nil;
  viewerConfiguration_ = nil;
  mimeType_ = nil;
  targetName_ = nil;
  multiPartForm_ = NO;
  statusMessage_ = nil;
  contextWidget_ = nil;
}

- (id)clone {
  RAREActionLink *link;
  @try {
    link = (RAREActionLink *) check_class_cast([super clone], [RAREActionLink class]);
    ((RAREActionLink *) nil_chk(link))->urlConnection_ = nil;
    link->canceled_ = NO;
    link->pagingHasMore_ = NO;
    link->linkInfo_ = nil;
    link->pagingNext_ = nil;
    link->pagingPrevious_ = nil;
    if (linkAttributes_ != nil) {
      link->linkAttributes_ = [[JavaUtilHashMap alloc] initWithJavaUtilMap:linkAttributes_];
    }
    [link closeEx];
    return link;
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw [[JavaLangInternalError alloc] init];
  }
}

- (void)close {
  @try {
    if (urlConnection_ != nil) {
      [urlConnection_ close];
    }
  }
  @finally {
    urlConnection_ = nil;
    outputWriter_ = nil;
    multiPart_ = nil;
    if (stringURL_ != nil) {
      theURL_ = nil;
    }
  }
}

- (void)closeEx {
  @try {
    [self close];
  }
  @catch (JavaLangThrowable *ignore) {
  }
}

- (void)deleteData {
  [self setRequestMethodWithRAREActionLink_RequestMethodEnum:[RAREActionLink_RequestMethodEnum DELETE]];
  [self hit];
}

- (void)finishFileUploadWithJavaIoWriter:(JavaIoWriter *)writer {
  [RAREFormHelper writeBoundaryEndWithJavaIoWriter:writer withNSString:[self getPartBoundary]];
  [self closeOutput];
}

- (id<JavaUtilMap>)getAttributes {
  return linkAttributes_;
}

- (NSString *)getCharset {
  return (urlConnection_ == nil) ? charset_ : [urlConnection_ getCharset];
}

- (id<JavaUtilCollection>)getCollection {
  id<RAREiWidget> w = contextWidget_;
  if (w == nil) {
    w = [RAREPlatform getContextRootViewer];
  }
  id<RAREiURLConnection> u = [self getConnection];
  id o = [((id<RAREiURLConnection>) nil_chk(u)) getConnectionObject];
  if ([o isKindOfClass:[RARECollectionURLConnection class]]) {
    @try {
      return [((RARECollectionURLConnection *) check_class_cast(o, [RARECollectionURLConnection class])) getCollection];
    }
    @finally {
      [self close];
    }
  }
  return [RAREDataItemParserHandler parseWithRAREiWidget:w withRAREActionLink:self withInt:-1];
}

- (unichar)getColumnSeparator {
  return colSeparator_;
}

- (id<RAREiURLConnection>)getConnection {
  [self closeOutput];
  return urlConnection_;
}

- (id)getContent {
  [self closeOutput];
  id o = [((id<RAREiURLConnection>) nil_chk(urlConnection_)) getContent];
  [self close];
  return o;
}

- (RAREUTByteArray *)getContentAsBytes {
  JavaIoInputStream *stream = [self getInputStream];
  int n = [self getContentLength];
  RAREUTByteArray *ba = [[RAREUTByteArray alloc] initWithInt:(n > 10) ? n : 10];
  @try {
    return [RAREUTStreams streamToBytesWithJavaIoInputStream:stream withRAREUTByteArray:ba];
  }
  @finally {
    [self close];
  }
}

- (NSString *)getContentAsString {
  JavaIoReader *r = [self getReader];
  @try {
    return [RAREUTStreams readerToStringWithJavaIoReader:r];
  }
  @finally {
    [self close];
  }
}

- (NSString *)getContentEncoding {
  if (contentEncoding_ == nil) {
    contentEncoding_ = [((id<RAREiURLConnection>) nil_chk([self getConnection])) getContentEncoding];
  }
  return contentEncoding_;
}

- (int)getContentLength {
  return [((id<RAREiURLConnection>) nil_chk([self getConnection])) getContentLength];
}

- (NSString *)getContentType {
  if (mimeType_ == nil) {
    if (contentType_ == nil) {
      contentType_ = [((id<RAREiURLConnection>) nil_chk([self getConnection])) getContentType];
    }
    return contentType_;
  }
  return mimeType_;
}

- (id<RAREiWidget>)getContext {
  return contextWidget_;
}

- (NSString *)getDefaultCharset {
  return defaultCharset_;
}

- (id<RAREActionLink_iErrorHandler>)getErrorHandler {
  return (errorHandler_ == nil) ? RAREActionLink__errorHandler_ : errorHandler_;
}

- (id<RAREiMultipartMimeHandler_iMultipart>)getFirstPartWithRAREiWidget:(id<RAREiWidget>)context {
  if (multiPart_ == nil) {
    id<RAREiMultipartMimeHandler> mh = [((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getAppContext])) getMultipartMimeHandler];
    multiPart_ = [((id<RAREiMultipartMimeHandler>) nil_chk(mh)) getFirstPartWithJavaIoInputStream:[self getInputStream] withNSString:[self getContentType]];
  }
  return multiPart_;
}

- (float)getImageDensity {
  return imageDensity_;
}

- (JavaIoInputStream *)getInputStream {
  [self closeOutput];
  return [((id<RAREiURLConnection>) nil_chk(urlConnection_)) getInputStream];
}

- (unichar)getLinkedDataSeparator {
  return ldSeparator_;
}

- (NSString *)getLinkInfo {
  return linkInfo_;
}

- (NSString *)getMimeType {
  if ((mimeType_ == nil) && (urlConnection_ != nil)) {
    [self closeOutput];
    return [urlConnection_ getContentType];
  }
  return mimeType_;
}

- (BOOL)getPagingHasMore {
  return pagingHasMore_;
}

- (NSString *)getPagingNext {
  return pagingNext_;
}

- (NSString *)getPagingPrevious {
  return pagingPrevious_;
}

- (NSString *)getParserClassName {
  return parserClassName_;
}

- (NSString *)getPartBoundary {
  return (partBoundary_ == nil) ? RAREActionLink_DEFAULT_BOUNDARY_ : partBoundary_;
}

- (RAREUIPoint *)getPopupLocation {
  return popupLocation_;
}

- (JavaIoReader *)getReader {
  @try {
    [self closeOutput];
    NSString *enc = [self getContentEncoding];
    JavaIoReader *r;
    if ((enc == nil) && (charset_ == nil)) {
      r = [((id<RAREiURLConnection>) nil_chk(urlConnection_)) getReader];
    }
    else {
      r = [RAREUTStreams getDecodingReaderWithJavaIoInputStream:[((id<RAREiURLConnection>) nil_chk(urlConnection_)) getInputStream] withNSString:[self getContentEncoding] withNSString:[self getCharset] withInt:[self getBufferSize]];
    }
    if (unescape_) {
      r = [[RAREUTUnescapingReader alloc] initWithJavaIoReader:r withBoolean:unescapeUnicodeOnly_];
    }
    return r;
  }
  @catch (JavaLangNullPointerException *e) {
    [((JavaLangNullPointerException *) nil_chk(e)) printStackTrace];
    ;
    @throw [[JavaNioChannelsClosedChannelException alloc] init];
  }
}

- (int)getReadTimeout {
  return readTimeout_;
}

- (NSString *)getRequestCharset {
  return requestCharset_;
}

- (NSString *)getRequestContentType {
  if (requestType_ != nil) {
    return requestType_;
  }
  if (requestEncoding_ == [RAREActionLink_RequestEncodingEnum JSON]) {
    return @"application/json";
  }
  return [self isMultiPartForm] ? [NSString stringWithFormat:@"multipart/form-data; boundary=%@", [self getPartBoundary]] : @"application/x-www-form-urlencoded";
}

- (RAREActionLink_RequestEncodingEnum *)getRequestEncoding {
  return requestEncoding_;
}

- (RAREActionLink_RequestMethodEnum *)getRequestMethod {
  return requestMethod_;
}

- (int)getResponseCode {
  [self closeOutput];
  return [((id<RAREiURLConnection>) nil_chk(urlConnection_)) getResponseCode];
}

- (NSString *)getResponseHeaderWithNSString:(NSString *)key {
  [self closeOutput];
  return [((id<RAREiURLConnection>) nil_chk(urlConnection_)) getHeaderFieldWithNSString:key];
}

- (unichar)getRowInfoSeparator {
  return rowInfoSeparator_;
}

- (NSString *)getStatusMessage {
  return statusMessage_;
}

- (NSString *)getStringURLWithRAREiWidget:(id<RAREiWidget>)context {
  if (stringURL_ != nil) {
    return stringURL_;
  }
  JavaNetURL *u = [self getURLWithRAREiWidget:context];
  return (u == nil) ? nil : [RAREJavaURLConnection toExternalFormWithJavaNetURL:u];
}

- (NSString *)getTargetName {
  return targetName_;
}

- (JavaIoReader *)getUnescapingReader {
  [self closeOutput];
  return [[RAREUTUnescapingReader alloc] initWithJavaIoReader:[((id<RAREiURLConnection>) nil_chk(urlConnection_)) getReader] withBoolean:unescapeUnicodeOnly_];
}

- (JavaNetURL *)getURLWithRAREiWidget:(id<RAREiWidget>)context {
  if (theURL_ == nil) {
    if (urlConnection_ != nil) {
      theURL_ = [urlConnection_ getURL];
    }
  }
  if ((theURL_ == nil) && (stringURL_ != nil)) {
    if (contextWidget_ != nil) {
      context = contextWidget_;
    }
    if (context == nil) {
      context = [RAREPlatform getContextRootViewer];
    }
    JavaNetURL *curl = (contextURL_ == nil) ? [((id<RAREiViewer>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getViewer])) getBaseURL] : contextURL_;
    theURL_ = [((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getAppContext])) createURLWithJavaNetURL:curl withNSString:[context expandStringWithNSString:stringURL_ withBoolean:NO]];
  }
  return theURL_;
}

- (JavaNetURL *)getURLWithRAREiWidget:(id<RAREiWidget>)context
                         withNSString:(NSString *)queryString {
  if ((queryString == nil) || ([queryString sequenceLength] == 0)) {
    return [self getURLWithRAREiWidget:context];
  }
  JavaNetURL *u = [self getURLWithRAREiWidget:context];
  NSString *s = [((JavaNetURL *) nil_chk(u)) toExternalForm];
  if ([((NSString *) nil_chk(s)) indexOf:'?'] == -1) {
    s = [NSString stringWithFormat:@"%@%@", s, [NSString stringWithFormat:@"?%@", queryString]];
  }
  else {
    s = [NSString stringWithFormat:@"%@%@", s, queryString];
  }
  return [[JavaNetURL alloc] initWithNSString:s];
}

- (RARESPOTViewer *)getViewerConfiguration {
  return viewerConfiguration_;
}

- (id<JavaUtilMap>)getWindowOptions {
  id<RAREiWidget> widget = (contextWidget_ == nil) ? ((id) [RAREPlatform getContextRootViewer]) : ((id) contextWidget_);
  if (widget != nil) {
    [self resolveOptionsWithRAREiWidget:widget];
  }
  return windowOptions_;
}

- (BOOL)hasURL {
  return (theURL_ != nil) || (stringURL_ != nil);
}

- (void)hit {
  @try {
    [self closeOutput];
    JavaIoInputStream *stream = [self getInputStream];
    [RAREUTStreams drainWithJavaIoInputStream:stream withBoolean:YES];
  }
  @finally {
    [self close];
  }
}

- (BOOL)isCanceled {
  return canceled_;
}

- (BOOL)isClosed {
  return urlConnection_ == nil;
}

- (BOOL)isCollection {
  if (stringURL_ != nil) {
    return [stringURL_ hasPrefix:[RAREiConstants COLLECTION_PREFIX]];
  }
  if (theURL_ != nil) {
    return [RARECollectionURLConnection isCollectionURLWithJavaNetURL:theURL_];
  }
  return NO;
}

- (BOOL)isColumnSeparatorSet {
  return columnSeparatorSet_;
}

- (BOOL)isDeferred {
  return [self isDeferredWithRAREiWidget:nil];
}

- (BOOL)isDeferredWithRAREiWidget:(id<RAREiWidget>)context {
  if ((viewerConfiguration_ != nil) || ((context != nil) && [context isDesignMode])) {
    return NO;
  }
  if (context == nil) {
    context = self->contextWidget_;
  }
  if ([self isInlineURL]) {
    return NO;
  }
  if (!deferred_ || (context == nil) || ((stringURL_ == nil) && (theURL_ == nil))) {
    return NO;
  }
  @try {
    JavaNetURL *url = [self getURLWithRAREiWidget:context];
    NSString *protocol = [((JavaNetURL *) nil_chk(url)) getProtocol];
    if ([@"data" isEqual:protocol]) {
      return NO;
    }
  }
  @catch (JavaNetMalformedURLException *ignore) {
  }
  return YES;
}

- (BOOL)isDone {
  return urlConnection_ == nil;
}

- (BOOL)isDontUseCache {
  return dontUseCache_;
}

- (BOOL)isEscape {
  return escape_;
}

- (BOOL)isInlineURL {
  return inlineURL_;
}

- (BOOL)isMimeTypeSet {
  return mimeType_ != nil;
}

- (BOOL)isMultipartDocument {
  NSString *type = [self getContentType];
  type = [((NSString *) nil_chk(type)) lowercaseStringWithJRELocale:[JavaUtilLocale US]];
  if (![((NSString *) nil_chk(type)) hasPrefix:@"multipart/"]) {
    return NO;
  }
  return [type contains:@"boundary="];
}

- (BOOL)isMultiPartForm {
  return multiPartForm_;
}

- (BOOL)isStringURL {
  return stringURL_ != nil;
}

- (BOOL)isUnescape {
  return unescape_;
}

- (BOOL)isUnescapeUnicodeOnly {
  return unescapeUnicodeOnly_;
}

- (void)loadLaterWithRAREiWidget:(id<RAREiWidget>)widget {
  id<JavaLangRunnable> r = [[RAREActionLink_$1 alloc] initWithRAREActionLink:self withRAREiWidget:widget];
  (void) [((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getAppContext])) executeBackgroundTaskWithJavaLangRunnable:r];
}

- (JavaIoWriter *)openForOutput {
  if (outputWriter_ == nil) {
    if ((requestMethod_ == nil) || (requestMethod_ == [RAREActionLink_RequestMethodEnum GET])) {
      requestMethod_ = [RAREActionLink_RequestMethodEnum POST];
    }
    [self connectWithBoolean:YES];
  }
  return outputWriter_;
}

- (NSString *)putDataWithJavaIoReader:(JavaIoReader *)data
                          withBoolean:(BOOL)return_content {
  [self setRequestMethodWithRAREActionLink_RequestMethodEnum:[RAREActionLink_RequestMethodEnum PUT]];
  JavaIoWriter *writer = nil;
  writer = [self openForOutput];
  [RAREUTStreams readerToWriterWithJavaIoReader:data withJavaIoWriter:writer withCharArray:nil];
  [((JavaIoWriter *) nil_chk(writer)) flush];
  [self closeOutput];
  @try {
    if (return_content) {
      return [self getContentAsString];
    }
    else {
      (void) [((id<RAREiURLConnection>) nil_chk(urlConnection_)) getContent];
    }
  }
  @finally {
    [self close];
  }
  return nil;
}

- (NSString *)putDataWithNSString:(NSString *)data
                      withBoolean:(BOOL)return_content {
  [self setRequestMethodWithRAREActionLink_RequestMethodEnum:[RAREActionLink_RequestMethodEnum PUT]];
  JavaIoWriter *writer = nil;
  writer = [self openForOutput];
  [((JavaIoWriter *) nil_chk(writer)) writeWithNSString:data];
  [writer flush];
  [self closeOutput];
  @try {
    if (return_content) {
      return [self getContentAsString];
    }
    else {
      (void) [((id<RAREiURLConnection>) nil_chk(urlConnection_)) getContent];
    }
  }
  @finally {
    [self close];
  }
  return nil;
}

- (void)reset {
  @try {
    [self close];
  }
  @catch (JavaLangException *ignore) {
  }
  canceled_ = NO;
}

- (void)resetURLWithNSString:(NSString *)url {
  [self clean];
  [self setURLWithNSString:url];
}

- (void)resetURLWithJavaNetURL:(JavaNetURL *)url {
  [self clean];
  [self setURLWithJavaNetURL:url];
}

- (void)run {
  canceled_ = NO;
  id<RAREiWidget> widget = (contextWidget_ == nil) ? ((id) [RAREPlatform getContextRootViewer]) : ((id) contextWidget_);
  if (widget == nil) {
    return;
  }
  [self resolveOptionsWithRAREiWidget:widget];
  if ((popupLocation_ != nil) && (popupLocation_->x_ != -1) && (popupLocation_->y_ != -1)) {
    if (windowOptions_ == nil) {
      windowOptions_ = [[JavaUtilHashMap alloc] initWithInt:2];
    }
    (void) [((id<JavaUtilMap>) nil_chk(windowOptions_)) putWithId:@"pleft" withId:[NSString valueOfFloat:popupLocation_->x_]];
    (void) [windowOptions_ putWithId:@"ptop" withId:[NSString valueOfFloat:popupLocation_->y_]];
  }
  else if (windowOptions_ != nil) {
    (void) [windowOptions_ removeWithId:@"pleft"];
    (void) [windowOptions_ removeWithId:@"ptop"];
  }
  id<RAREiPlatformWindowManager> w = [((id<RAREiPlatformAppContext>) nil_chk([widget getAppContext])) getWindowManager];
  if ([RAREPlatform isUIThread]) {
    [((id<RAREiPlatformWindowManager>) nil_chk(w)) asyncActivateViewerWithRAREiWidget:widget withRAREActionLink:(RAREActionLink *) check_class_cast([self clone], [RAREActionLink class])];
  }
  else {
    @try {
      RARESPOTViewer *cfg = [RAREDataParser checkAndInstantiateViewerWithRAREiWidget:widget withNSString:nil withRAREiURLConnection:[self getConnection]];
      [RAREPlatform invokeLaterWithJavaLangRunnable:[[RAREActionLink_$2 alloc] initWithRAREActionLink:self withRAREiPlatformWindowManager:w withRAREiWidget:widget withRARESPOTViewer:cfg]];
    }
    @catch (JavaLangException *e) {
      @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:e];
    }
  }
}

- (NSString *)sendFormDataWithRAREiWidget:(id<RAREiWidget>)context
                        withNSObjectArray:(IOSObjectArray *)keysAndValues {
  int len = (int) [((IOSObjectArray *) nil_chk(keysAndValues)) count];
  if ((len % 2 != 0) || (len == 0)) {
    @throw [[RAREApplicationException alloc] initWithNSString:@"Mismatches key/value pairs"];
  }
  id<JavaUtilMap> map = [[JavaUtilHashMap alloc] initWithInt:len / 2 + 1];
  for (int i = 0; i < len; i += 2) {
    (void) [map putWithId:IOSObjectArray_Get(keysAndValues, i) withId:IOSObjectArray_Get(keysAndValues, i + 1)];
  }
  return [self sendFormDataWithRAREiWidget:context withJavaUtilMap:map withBoolean:NO withBoolean:YES];
}

- (NSString *)sendFormDataWithRAREiWidget:(id<RAREiWidget>)context
                          withJavaUtilMap:(id<JavaUtilMap>)data {
  return [self sendFormDataWithRAREiWidget:context withJavaUtilMap:data withBoolean:NO withBoolean:YES];
}

- (NSString *)sendFormDataWithRAREiWidget:(id<RAREiWidget>)context
                          withJavaUtilMap:(id<JavaUtilMap>)data
                              withBoolean:(BOOL)multipart
                              withBoolean:(BOOL)return_content {
  [self sendFormDataExWithRAREiWidget:context withJavaUtilMap:data withBoolean:multipart];
  @try {
    if (return_content) {
      return [self getContentAsString];
    }
    else {
      (void) [((id<RAREiURLConnection>) nil_chk(urlConnection_)) getContent];
    }
  }
  @finally {
    [self close];
  }
  return nil;
}

- (void)sendFormDataExWithRAREiWidget:(id<RAREiWidget>)context
                      withJavaUtilMap:(id<JavaUtilMap>)data
                          withBoolean:(BOOL)multipart {
  [self setRequestMethodWithRAREActionLink_RequestMethodEnum:[RAREActionLink_RequestMethodEnum POST]];
  JavaIoWriter *writer = nil;
  if (multipart) {
    [self setMultiPartFormWithBoolean:YES];
    writer = [self openForOutput];
    [RAREFormHelper writeHTTPContentWithBoolean:YES withRAREiWidget:context withJavaIoWriter:writer withNSString:[self getPartBoundary] withJavaUtilMap:data withBoolean:NO];
    if (linkAttributes_ != nil) {
      [RAREFormHelper writeHTTPContentWithBoolean:YES withRAREiWidget:context withJavaIoWriter:writer withNSString:[self getPartBoundary] withJavaUtilMap:linkAttributes_ withBoolean:NO];
    }
    [RAREFormHelper writeBoundaryEndWithJavaIoWriter:writer withNSString:[self getPartBoundary]];
  }
  else {
    writer = [self openForOutput];
    if ([self getRequestEncoding] == [RAREActionLink_RequestEncodingEnum JSON]) {
      RAREUTJSONWriter *w = [[RAREUTJSONWriter alloc] initWithJavaIoWriter:writer];
      (void) [w object];
      if (linkAttributes_ != nil) {
        [RAREFormHelper writeJSONValuesWithRAREiWidget:context withRAREUTJSONWriter:w withJavaUtilMap:linkAttributes_ withBoolean:YES];
      }
      [RAREFormHelper writeJSONValuesWithRAREiWidget:context withRAREUTJSONWriter:w withJavaUtilMap:data withBoolean:YES];
      (void) [w endObject];
    }
    else {
      BOOL first = [RAREFormHelper writeHTTPValuesWithBoolean:YES withRAREiWidget:context withJavaIoWriter:writer withJavaUtilMap:data withBoolean:NO];
      if (linkAttributes_ != nil) {
        [RAREFormHelper writeHTTPValuesWithBoolean:first withRAREiWidget:context withJavaIoWriter:writer withJavaUtilMap:linkAttributes_ withBoolean:NO];
      }
    }
  }
  [self closeOutput];
}

- (void)setAttributesWithJavaUtilMap:(id<JavaUtilMap>)attributes {
  self->linkAttributes_ = attributes;
}

- (void)setCharsetWithNSString:(NSString *)charset {
  self->charset_ = charset;
  if (urlConnection_ != nil) {
    [urlConnection_ setCharsetWithNSString:charset];
  }
}

- (void)setColumnSeparatorWithChar:(unichar)colSeparator {
  self->colSeparator_ = colSeparator;
  columnSeparatorSet_ = YES;
}

- (void)setConnectionWithRAREiURLConnection:(id<RAREiURLConnection>)conn {
  urlConnection_ = conn;
}

- (void)setContentEncodingWithNSString:(NSString *)contentEncoding {
  self->contentEncoding_ = contentEncoding;
}

- (void)setContextWithRAREiWidget:(id<RAREiWidget>)context {
  self->contextWidget_ = context;
}

- (void)setContextURLWithJavaNetURL:(JavaNetURL *)contextURL {
  self->contextURL_ = contextURL;
}

- (void)setDefaultCharsetWithNSString:(NSString *)charset {
  defaultCharset_ = charset;
  if (urlConnection_ != nil) {
    [urlConnection_ setDefaultCharsetWithNSString:charset];
  }
}

- (void)setDeferredWithBoolean:(BOOL)deferred {
  self->deferred_ = deferred;
}

- (void)setDontUseCacheWithBoolean:(BOOL)dontUseCache {
  self->dontUseCache_ = dontUseCache;
}

- (void)setErrorHandlerWithRAREActionLink_iErrorHandler:(id<RAREActionLink_iErrorHandler>)errorHandler {
  self->errorHandler_ = errorHandler;
}

- (void)setEscapeWithBoolean:(BOOL)escape {
  self->escape_ = escape;
}

- (void)setImageDensityWithFloat:(float)imageDensity {
  self->imageDensity_ = imageDensity;
}

- (void)setInlineDataWithNSString:(NSString *)value
                     withNSString:(NSString *)mimeType
                     withNSString:(NSString *)contentEncoding {
  [self clear];
  inlineURL_ = YES;
  @try {
    theURL_ = [RAREInlineURLConnection createURLWithNSString:value withNSString:mimeType withNSString:contentEncoding];
  }
  @catch (JavaNetMalformedURLException *e) {
    @throw [[RAREApplicationException alloc] initWithJavaLangThrowable:e];
  }
}

- (void)setLinkedDataSeparatorWithChar:(unichar)ldSeparator {
  self->ldSeparator_ = ldSeparator;
}

- (void)setMimeTypeWithNSString:(NSString *)mimeType {
  self->mimeType_ = mimeType;
}

- (void)setMultiPartFormWithBoolean:(BOOL)multiPartForm {
  self->multiPartForm_ = multiPartForm;
}

- (void)setParserClassNameWithNSString:(NSString *)name {
  self->parserClassName_ = name;
}

- (void)setPartBoundaryWithNSString:(NSString *)partBoundary {
  self->partBoundary_ = partBoundary;
}

- (void)setPopupLocationWithInt:(int)x
                        withInt:(int)y {
  if (popupLocation_ == nil) {
    popupLocation_ = [[RAREUIPoint alloc] initWithFloat:x withFloat:y];
  }
  else {
    [popupLocation_ setLocationWithFloat:x withFloat:y];
  }
}

- (void)setPopupLocationWithRAREUIPoint:(RAREUIPoint *)popupLocation {
  self->popupLocation_ = popupLocation;
}

- (void)setReadTimeoutWithInt:(int)milliseconds {
  readTimeout_ = milliseconds;
  if (urlConnection_ != nil) {
    [urlConnection_ setReadTimeoutWithInt:milliseconds];
  }
}

- (void)setRequestCharsetWithNSString:(NSString *)charset {
  requestCharset_ = charset;
}

- (void)setRequestContentTypeWithNSString:(NSString *)type {
  self->requestType_ = type;
}

- (void)setRequestEncodingWithRAREActionLink_RequestEncodingEnum:(RAREActionLink_RequestEncodingEnum *)encoding {
  if (encoding == nil) {
    encoding = [RAREActionLink_RequestEncodingEnum HTTP_FORM];
  }
  self->requestEncoding_ = encoding;
}

- (void)setRequestEncodingWithNSString:(NSString *)encoding {
  self->requestEncoding_ = [RAREActionLink_RequestEncodingEnum valueOfWithNSString:[((NSString *) nil_chk(encoding)) uppercaseStringWithJRELocale:[JavaUtilLocale US]]];
}

- (void)setRequestHeaderWithNSString:(NSString *)key
                        withNSString:(NSString *)value {
  if (requestHeaders_ == nil) {
    requestHeaders_ = [[JavaUtilHashMap alloc] init];
  }
  (void) [((id<JavaUtilMap>) nil_chk(requestHeaders_)) putWithId:key withId:value];
}

- (void)setRequestMethodWithRAREActionLink_RequestMethodEnum:(RAREActionLink_RequestMethodEnum *)method {
  if (method == nil) {
    method = [RAREActionLink_RequestMethodEnum GET];
  }
  self->requestMethod_ = method;
}

- (void)setRequestMethodWithNSString:(NSString *)method {
  self->requestMethod_ = [RAREActionLink_RequestMethodEnum valueOfWithNSString:[((NSString *) nil_chk(method)) uppercaseStringWithJRELocale:[JavaUtilLocale US]]];
}

- (void)setRowInfoSeparatorWithChar:(unichar)riSeparator {
  self->rowInfoSeparator_ = riSeparator;
}

- (void)setSeparatorsFromMimeTypeWithNSString:(NSString *)type
                                  withBoolean:(BOOL)always {
  if (always || !columnSeparatorSet_) {
    unichar c = [RAREActionLink getSeparatorCharacterWithNSString:type withNSString:RAREActionLink_MIME_COLUMN_SEPARATOR_PREFIX_];
    if (c != 0) {
      colSeparator_ = c;
    }
  }
  if (always || (ldSeparator_ == 0x0000)) {
    unichar c = [RAREActionLink getSeparatorCharacterWithNSString:type withNSString:RAREActionLink_MIME_LD_SEPARATOR_PREFIX_];
    if (c != 0) {
      ldSeparator_ = c;
    }
  }
  if (always || (rowInfoSeparator_ == 0x0000)) {
    unichar c = [RAREActionLink getSeparatorCharacterWithNSString:type withNSString:RAREActionLink_MIME_RI_SEPARATOR_PREFIX_];
    if (c != 0) {
      rowInfoSeparator_ = c;
    }
  }
}

- (void)setStatusMessageWithNSString:(NSString *)msg {
  self->statusMessage_ = msg;
}

- (void)setTargetNameWithNSString:(NSString *)targetName {
  self->targetName_ = targetName;
}

- (void)setUnescapeWithBoolean:(BOOL)unescape {
  self->unescape_ = unescape;
}

- (void)setUnescapeUnicodeOnlyWithBoolean:(BOOL)unescapeUnicodeOnly {
  self->unescapeUnicodeOnly_ = unescapeUnicodeOnly;
}

- (void)setURLWithNSString:(NSString *)url {
  [self close];
  stringURL_ = url;
  theURL_ = nil;
}

- (void)setURLWithJavaNetURL:(JavaNetURL *)url {
  [self close];
  theURL_ = url;
  stringURL_ = nil;
}

- (void)setViewerConfigurationWithRARESPOTViewer:(RARESPOTViewer *)config {
  self->viewerConfiguration_ = config;
}

- (void)setWindowOptionsWithJavaUtilMap:(id<JavaUtilMap>)options {
  origWindowOptions_ = options;
}

- (JavaIoWriter *)startFileUploadWithNSString:(NSString *)name
                                 withNSString:(NSString *)mimeType
                                 withNSString:(NSString *)fileName {
  [self setRequestMethodWithRAREActionLink_RequestMethodEnum:[RAREActionLink_RequestMethodEnum POST]];
  [self setMultiPartFormWithBoolean:YES];
  JavaIoWriter *writer = [self openForOutput];
  [RAREFormHelper writeFileHeaderWithBoolean:YES withJavaIoWriter:writer withNSString:[self getPartBoundary] withNSString:name withNSString:mimeType withNSString:fileName withBoolean:NO];
  return writer;
}

- (NSString *)description {
  NSString *s;
  if (stringURL_ != nil) {
    s = stringURL_;
  }
  else {
    if (theURL_ == nil) {
      return @"";
    }
    s = [RAREJavaURLConnection toExternalFormWithJavaNetURL:theURL_];
  }
  if ((requestMethod_ == [RAREActionLink_RequestMethodEnum GET]) && (linkAttributes_ != nil)) {
    JavaIoStringWriter *sw = [[JavaIoStringWriter alloc] init];
    [sw writeWithNSString:s];
    (void) [sw appendWithChar:'?'];
    @try {
      [RAREFormHelper writeHTTPValuesWithBoolean:YES withRAREiWidget:contextWidget_ withJavaIoWriter:sw withJavaUtilMap:[self getAttributes] withBoolean:NO];
    }
    @catch (JavaIoIOException *e) {
      [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
    }
    s = [sw description];
  }
  return s;
}

- (NSString *)uploadDataWithId:(id)data
                  withNSString:(NSString *)name
                  withNSString:(NSString *)mimeType
                  withNSString:(NSString *)fileName
                   withBoolean:(BOOL)return_content {
  @try {
    [self uploadDataExWithId:data withNSString:name withNSString:mimeType withNSString:fileName];
    if (return_content) {
      return [self getContentAsString];
    }
    else {
      (void) [((id<RAREiURLConnection>) nil_chk(urlConnection_)) getContent];
    }
  }
  @finally {
    [self close];
  }
  return nil;
}

- (void)uploadDataExWithId:(id)data
              withNSString:(NSString *)name
              withNSString:(NSString *)mimeType
              withNSString:(NSString *)fileName {
  [self setRequestMethodWithRAREActionLink_RequestMethodEnum:[RAREActionLink_RequestMethodEnum POST]];
  JavaIoWriter *writer = nil;
  [self setMultiPartFormWithBoolean:YES];
  writer = [self openForOutput];
  JavaIoReader *r;
  if ([data isKindOfClass:[JavaIoReader class]]) {
    r = (JavaIoReader *) check_class_cast(data, [JavaIoReader class]);
  }
  else if ([data isKindOfClass:[JavaIoInputStream class]]) {
    r = [[JavaIoInputStreamReader alloc] initWithJavaIoInputStream:(JavaIoInputStream *) check_class_cast(data, [JavaIoInputStream class]) withNSString:@"utf-8"];
  }
  else if ([data isKindOfClass:[JavaIoFile class]]) {
    r = [[JavaIoFileReader alloc] initWithJavaIoFile:(JavaIoFile *) check_class_cast(data, [JavaIoFile class])];
  }
  else {
    r = [[JavaIoStringReader alloc] initWithNSString:(data == nil) ? @"" : [data description]];
  }
  [RAREFormHelper writeFileWithBoolean:YES withJavaIoWriter:writer withNSString:[self getPartBoundary] withNSString:name withNSString:mimeType withNSString:fileName withJavaIoReader:r withBoolean:NO];
  if (linkAttributes_ != nil) {
    [RAREFormHelper writeHTTPContentWithBoolean:NO withRAREiWidget:nil withJavaIoWriter:writer withNSString:[self getPartBoundary] withJavaUtilMap:linkAttributes_ withBoolean:NO];
  }
  [RAREFormHelper writeBoundaryEndWithJavaIoWriter:writer withNSString:[self getPartBoundary]];
  [self closeOutput];
}

- (void)closeOutput {
  id<RAREActionLink_iErrorHandler> eh = [self getErrorHandler];
  if (eh == nil) {
    [self closeOutputEx];
    return;
  }
  @try {
    [self closeOutputEx];
  }
  @catch (JavaLangException *ex) {
    RAREActionLink_iErrorHandler_ActionEnum *a = [((id<RAREActionLink_iErrorHandler>) nil_chk(eh)) handleErrorWithRAREActionLink:self withJavaLangException:ex withRAREiURLConnection:urlConnection_];
    if (a == nil) {
      a = [RAREActionLink_iErrorHandler_ActionEnum ERROR];
    }
    if (urlConnection_ == nil) {
      @throw [[JavaNioChannelsClosedChannelException alloc] init];
    }
    switch ([a ordinal]) {
      case RAREActionLink_iErrorHandler_Action_CHANGE:
      {
        urlConnection_ = [eh getConnectionChangeWithRAREActionLink:self withJavaLangException:ex withRAREiURLConnection:urlConnection_];
        [self handlePostConnect];
        break;
      }
      case RAREActionLink_iErrorHandler_Action_RETRY:
      {
        NSString *info = linkInfo_;
        [self close];
        linkInfo_ = info;
        [self closeOutputEx];
        break;
      }
      case RAREActionLink_iErrorHandler_Action_ERROR:
      {
        if ([ex isKindOfClass:[JavaIoIOException class]]) {
          @throw (JavaIoIOException *) check_class_cast(ex, [JavaIoIOException class]);
        }
        @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:ex];
      }
      case RAREActionLink_iErrorHandler_Action_CHANGE_ERROR:
      {
        ex = [eh getExceptionChangeWithRAREActionLink:self withJavaLangException:ex];
        if ([ex isKindOfClass:[JavaIoIOException class]]) {
          @throw (JavaIoIOException *) check_class_cast(ex, [JavaIoIOException class]);
        }
        @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:ex];
      }
      case RAREActionLink_iErrorHandler_Action_ERROR_MESSAGE:
      {
        if ([ex isKindOfClass:[RAREHTTPException class]]) {
          NSString *s = [((RAREHTTPException *) check_class_cast(ex, [RAREHTTPException class])) getMessageBody];
          if ((s != nil) && ([s sequenceLength] > 0)) {
            @throw [[RAREApplicationException alloc] initWithNSString:s];
          }
        }
        @throw [[RAREApplicationException alloc] initWithNSString:[RAREApplicationException getMessageExWithJavaLangThrowable:ex]];
      }
    }
  }
}

- (void)closeOutputEx {
  if (urlConnection_ == nil) {
    [self connectWithBoolean:NO];
  }
  else {
    if (outputWriter_ != nil) {
      @try {
        [outputWriter_ flush];
        [self handlePostConnect];
      }
      @finally {
        outputWriter_ = nil;
      }
    }
  }
}

- (void)connectWithBoolean:(BOOL)output {
  pagingNext_ = nil;
  pagingPrevious_ = nil;
  linkInfo_ = nil;
  JavaNetURL *url;
  RAREActionLink_RequestMethodEnum *method = [self getRequestMethod];
  id<RAREiWidget> widget = (contextWidget_ == nil) ? ((id) [RAREPlatform getContextRootViewer]) : ((id) contextWidget_);
  switch ([method ordinal]) {
    case RAREActionLink_RequestMethod_HEAD:
    case RAREActionLink_RequestMethod_GET:
    case RAREActionLink_RequestMethod_DELETE:
    {
      if ([self getAttributes] != nil) {
        JavaIoStringWriter *sw = [[JavaIoStringWriter alloc] init];
        if ([RAREFormHelper writeHTTPValuesWithBoolean:YES withRAREiWidget:contextWidget_ withJavaIoWriter:sw withJavaUtilMap:[self getAttributes] withBoolean:NO]) {
          url = [self getURLWithRAREiWidget:widget withNSString:[sw description]];
        }
        else {
          url = [self getURLWithRAREiWidget:widget];
        }
      }
      else {
        url = [self getURLWithRAREiWidget:widget];
      }
      urlConnection_ = [RAREPlatform openConnectionWithRAREiWidget:widget withJavaNetURL:url withNSString:mimeType_];
      if ([[((id<RAREiURLConnection>) nil_chk(urlConnection_)) getConnectionObject] isKindOfClass:[JavaNetHttpURLConnection class]]) {
        JavaNetHttpURLConnection *connection = (JavaNetHttpURLConnection *) check_class_cast([urlConnection_ getConnectionObject], [JavaNetHttpURLConnection class]);
        if ([((RAREActionLink_RequestMethodEnum *) nil_chk(method)) supportsOutput]) {
          [((JavaNetHttpURLConnection *) nil_chk(connection)) setDoOutputWithBoolean:[method supportsOutput]];
        }
        [((JavaNetHttpURLConnection *) nil_chk(connection)) setRequestMethodWithNSString:[method name]];
        if (dontUseCache_) {
          [connection setUseCachesWithBoolean:NO];
        }
      }
      [urlConnection_ setReadTimeoutWithInt:readTimeout_];
      [RAREActionLink addHeadersWithRAREiURLConnection:urlConnection_ withJavaUtilMap:requestHeaders_];
      [urlConnection_ open];
      [self handlePostConnect];
      break;
    }
    case RAREActionLink_RequestMethod_PUT:
    case RAREActionLink_RequestMethod_POST:
    case RAREActionLink_RequestMethod_OPTIONS:
    {
      url = [self getURLWithRAREiWidget:widget];
      urlConnection_ = [RAREPlatform openConnectionWithRAREiWidget:widget withJavaNetURL:url withNSString:mimeType_];
      [((id<RAREiURLConnection>) nil_chk(urlConnection_)) setReadTimeoutWithInt:readTimeout_];
      JavaNetHttpURLConnection *connection = (JavaNetHttpURLConnection *) check_class_cast([urlConnection_ getConnectionObject], [JavaNetHttpURLConnection class]);
      [((JavaNetHttpURLConnection *) nil_chk(connection)) setDoOutputWithBoolean:[((RAREActionLink_RequestMethodEnum *) nil_chk(method)) supportsOutput]];
      [connection setRequestMethodWithNSString:[method name]];
      [RAREActionLink addHeadersWithRAREiURLConnection:urlConnection_ withJavaUtilMap:requestHeaders_];
      NSString *type = [self getRequestContentTypeEx];
      NSString *cs = [self getRequestCharset];
      if (cs == nil) {
        cs = @"ISO-8859-1";
      }
      [connection setRequestPropertyWithNSString:@"Content-Type" withNSString:type];
      if (output) {
        JavaIoOutputStream *stream = [urlConnection_ getOutputStream];
        outputWriter_ = [[JavaIoOutputStreamWriter alloc] initWithJavaIoOutputStream:stream withNSString:cs];
      }
      else if ([self getAttributes] != nil) {
        JavaIoOutputStream *stream = [urlConnection_ getOutputStream];
        JavaIoOutputStreamWriter *w = [[JavaIoOutputStreamWriter alloc] initWithJavaIoOutputStream:stream withNSString:cs];
        if ([self getRequestEncoding] == [RAREActionLink_RequestEncodingEnum JSON]) {
          RAREUTJSONWriter *jw = [[RAREUTJSONWriter alloc] initWithJavaIoWriter:w];
          (void) [jw object];
          [RAREFormHelper writeJSONValuesWithRAREiWidget:contextWidget_ withRAREUTJSONWriter:jw withJavaUtilMap:[self getAttributes] withBoolean:NO];
          (void) [jw endObject];
        }
        else if ([self isMultiPartForm]) {
          [RAREFormHelper writeHTTPContentWithBoolean:YES withRAREiWidget:contextWidget_ withJavaIoWriter:w withNSString:[self getPartBoundary] withJavaUtilMap:[self getAttributes] withBoolean:NO];
          [RAREFormHelper writeBoundaryEndWithJavaIoWriter:w withNSString:[self getPartBoundary]];
        }
        else {
          [RAREFormHelper writeHTTPValuesWithBoolean:YES withRAREiWidget:contextWidget_ withJavaIoWriter:w withJavaUtilMap:[self getAttributes] withBoolean:NO];
        }
        [w flush];
        [self handlePostConnect];
      }
      break;
    }
    default:
    break;
  }
}

- (void)handlePostConnect {
  if (urlConnection_ == nil) {
    @throw [[JavaNioChannelsClosedChannelException alloc] init];
  }
  [((id<RAREiURLConnection>) nil_chk(urlConnection_)) setDefaultCharsetWithNSString:[self getDefaultCharset]];
  if (charset_ != nil) {
    [urlConnection_ setCharsetWithNSString:charset_];
  }
  if ([(id) urlConnection_ isKindOfClass:[RAREJavaURLConnection class]]) {
    JavaNetURL *u = [((RAREJavaURLConnection *) check_class_cast(urlConnection_, [RAREJavaURLConnection class])) getHTTP301URL];
    if (u != nil) {
      stringURL_ = nil;
      theURL_ = u;
    }
    id co = [urlConnection_ getConnectionObject];
    if ([co isKindOfClass:[JavaNetHttpURLConnection class]]) {
      JavaNetHttpURLConnection *connection = (JavaNetHttpURLConnection *) check_class_cast(co, [JavaNetHttpURLConnection class]);
      int code = [((JavaNetHttpURLConnection *) nil_chk(connection)) getResponseCode];
      if (code != 200) {
        @throw [[RAREHTTPException alloc] initWithJavaNetHttpURLConnection:connection];
      }
    }
    pagingHasMore_ = [@"true" equalsIgnoreCase:[urlConnection_ getHeaderFieldWithNSString:RAREActionLink_PAGING_HAS_MORE_]];
    pagingNext_ = [urlConnection_ getHeaderFieldWithNSString:RAREActionLink_PAGING_NEXT_];
    pagingPrevious_ = [urlConnection_ getHeaderFieldWithNSString:RAREActionLink_PAGING_PREVIOUS_];
    linkInfo_ = [urlConnection_ getHeaderFieldWithNSString:RAREActionLink_LINK_INFO_];
  }
  else {
    pagingHasMore_ = NO;
    pagingNext_ = nil;
    pagingPrevious_ = nil;
    linkInfo_ = nil;
  }
}

- (void)clean {
  [self close];
  theURL_ = nil;
  stringURL_ = nil;
  if (linkAttributes_ != nil) {
    [linkAttributes_ clear];
  }
  linkAttributes_ = nil;
  viewerConfiguration_ = nil;
}

- (int)getBufferSize {
  int n = [self getContentLength];
  if ((n < 1) || (n > 4096)) {
    n = 4096;
  }
  return n;
}

- (NSString *)getRequestContentTypeEx {
  if (requestType_ != nil) {
    return requestType_;
  }
  NSString *cs = [self getRequestCharset];
  if (cs == nil) {
    return [self getRequestContentType];
  }
  if (requestEncoding_ == [RAREActionLink_RequestEncodingEnum JSON]) {
    return [NSString stringWithFormat:@"application/json; charset=%@", cs];
  }
  return [self isMultiPartForm] ? [NSString stringWithFormat:@"multipart/form-data; charset=%@; boundary=%@", cs, [self getPartBoundary]] : [NSString stringWithFormat:@"application/x-www-form-urlencoded; charset=%@", cs];
}

- (void)resolveOptionsWithRAREiWidget:(id<RAREiWidget>)widget {
  windowOptions_ = [RAREUtils resolveOptionsWithRAREiWidget:widget withJavaUtilMap:origWindowOptions_ withJavaUtilMap:windowOptions_];
}

+ (RAREActionLink *)createInlineLinkIfNecessaryWithRAREiWidget:(id<RAREiWidget>)context
                                       withSPOTPrintableString:(SPOTPrintableString *)url {
  if ([((SPOTPrintableString *) nil_chk(url)) getValue] == nil) {
    return nil;
  }
  if ([RAREActionLink isInlineURLWithSPOTPrintableString:url]) {
    return nil;
  }
  RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:context withSPOTPrintableString:url];
  NSString *type = [link getContentType];
  JavaNetURL *u = [RAREInlineURLConnection createURLWithNSString:[link getContentAsString] withNSString:type withNSString:nil];
  RAREActionLink *l = [[RAREActionLink alloc] initWithRAREiWidget:context withJavaNetURL:u];
  l->inlineURL_ = YES;
  return l;
}

+ (RAREActionLink *)getActionLinkWithRAREiWidget:(id<RAREiWidget>)context
                         withSPOTPrintableString:(SPOTPrintableString *)url
                                         withInt:(int)index {
  if ([((SPOTPrintableString *) nil_chk(url)) getValue] == nil) {
    return nil;
  }
  id o = [url spot_getLinkedData];
  if ([[IOSObjectArray iosClassWithType:[IOSClass classWithClass:[RAREActionLink class]]] isInstance:o]) {
    IOSObjectArray *a = (IOSObjectArray *) check_class_cast(o, [IOSObjectArray class]);
    return ((int) [((IOSObjectArray *) nil_chk(a)) count] > index) ? IOSObjectArray_Get(a, index) : nil;
  }
  if ([o isKindOfClass:[RAREActionLink class]]) {
    return (index == 0) ? (RAREActionLink *) check_class_cast(o, [RAREActionLink class]) : nil;
  }
  return (index == 0) ? [[RAREActionLink alloc] initWithRAREiWidget:context withSPOTPrintableString:url] : nil;
}

+ (unichar)getSeparatorCharacterWithNSString:(NSString *)mime
                                withNSString:(NSString *)sepstring {
  unichar c = 0;
  if (mime != nil) {
    int len = [mime sequenceLength];
    int n = [mime indexOfString:sepstring];
    if (n != -1) {
      n += [((NSString *) nil_chk(sepstring)) sequenceLength];
      c = [mime charAtWithInt:n];
      if (n + 1 < len) {
        if (c == '\\') {
          c = [mime charAtWithInt:n + 1];
          if (c == 'n') {
            c = 0x000a;
          }
          else if (c == 't') {
            c = 0x0009;
          }
          else if (c == 'f') {
            c = 0x000c;
          }
        }
      }
    }
  }
  return c;
}

+ (BOOL)isInlineURLWithSPOTPrintableString:(SPOTPrintableString *)url {
  NSString *s = [((SPOTPrintableString *) nil_chk(url)) getValue];
  if (s == nil) {
    return NO;
  }
  if ([((NSString *) nil_chk(s)) hasPrefix:@"data:"]) {
    return YES;
  }
  s = [url spot_getAttributeWithNSString:@"inline"];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    return [RAREUTSNumber booleanValueWithNSString:s];
  }
  else if ([url spot_isValuePreformatted]) {
    return YES;
  }
  return NO;
}

+ (void)setGlobalErrorHandlerWithRAREActionLink_iErrorHandler:(id<RAREActionLink_iErrorHandler>)errorHandler {
  if ([(id) RAREActionLink__errorHandler_ isKindOfClass:[RAREaRare_MultiScreenFallbackErrorHandler class]]) {
    [((RAREaRare_MultiScreenFallbackErrorHandler *) check_class_cast(RAREActionLink__errorHandler_, [RAREaRare_MultiScreenFallbackErrorHandler class])) setErrorHandlerWithRAREActionLink_iErrorHandler:errorHandler];
  }
  else {
    if ((RAREActionLink__errorHandler_ != nil) && ([(id) errorHandler isKindOfClass:[RAREaRare_MultiScreenFallbackErrorHandler class]])) {
      [((RAREaRare_MultiScreenFallbackErrorHandler *) check_class_cast(errorHandler, [RAREaRare_MultiScreenFallbackErrorHandler class])) setErrorHandlerWithRAREActionLink_iErrorHandler:RAREActionLink__errorHandler_];
    }
    RAREActionLink__errorHandler_ = errorHandler;
  }
}

+ (void)addHeadersWithRAREiURLConnection:(id<RAREiURLConnection>)connection
                         withJavaUtilMap:(id<JavaUtilMap>)headers {
  if ((connection != nil) && (headers != nil) && ([headers size] > 0)) {
    JavaNetURLConnection *conn = (JavaNetURLConnection *) check_class_cast([connection getConnectionObject], [JavaNetURLConnection class]);
    id<JavaUtilMap_Entry> e;
    id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([headers entrySet])) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      e = [it next];
      [((JavaNetURLConnection *) nil_chk(conn)) setRequestPropertyWithNSString:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey] withNSString:[nil_chk([e getValue]) description]];
    }
  }
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllFieldsTo:(RAREActionLink *)other {
  [super copyAllFieldsTo:other];
  other->canceled_ = canceled_;
  other->charset_ = charset_;
  other->colSeparator_ = colSeparator_;
  other->columnSeparatorSet_ = columnSeparatorSet_;
  other->contentEncoding_ = contentEncoding_;
  other->contentType_ = contentType_;
  other->contextURL_ = contextURL_;
  other->contextWidget_ = contextWidget_;
  other->defaultCharset_ = defaultCharset_;
  other->deferred_ = deferred_;
  other->dontUseCache_ = dontUseCache_;
  other->errorHandler_ = errorHandler_;
  other->escape_ = escape_;
  other->imageDensity_ = imageDensity_;
  other->inlineURL_ = inlineURL_;
  other->ldSeparator_ = ldSeparator_;
  other->linkAttributes_ = linkAttributes_;
  other->linkInfo_ = linkInfo_;
  other->mimeType_ = mimeType_;
  other->multiPart_ = multiPart_;
  other->multiPartForm_ = multiPartForm_;
  other->origWindowOptions_ = origWindowOptions_;
  other->outputWriter_ = outputWriter_;
  other->pagingHasMore_ = pagingHasMore_;
  other->pagingNext_ = pagingNext_;
  other->pagingPrevious_ = pagingPrevious_;
  other->parserClassName_ = parserClassName_;
  other->partBoundary_ = partBoundary_;
  other->popupLocation_ = popupLocation_;
  other->readTimeout_ = readTimeout_;
  other->requestCharset_ = requestCharset_;
  other->requestEncoding_ = requestEncoding_;
  other->requestHeaders_ = requestHeaders_;
  other->requestMethod_ = requestMethod_;
  other->requestType_ = requestType_;
  other->rowInfoSeparator_ = rowInfoSeparator_;
  other->statusMessage_ = statusMessage_;
  other->stringURL_ = stringURL_;
  other->targetName_ = targetName_;
  other->theURL_ = theURL_;
  other->unescape_ = unescape_;
  other->unescapeUnicodeOnly_ = unescapeUnicodeOnly_;
  other->urlConnection_ = urlConnection_;
  other->viewerConfiguration_ = viewerConfiguration_;
  other->windowOptions_ = windowOptions_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addAnotherUploadFileWithJavaIoWriter:withNSString:withNSString:withNSString:", NULL, "V", 0x1, "JavaIoIOException" },
    { "clone", NULL, "LNSObject", 0x1, NULL },
    { "deleteData", NULL, "V", 0x1, "JavaIoIOException" },
    { "finishFileUploadWithJavaIoWriter:", NULL, "V", 0x1, "JavaIoIOException" },
    { "getAttributes", NULL, "LJavaUtilMap", 0x1, NULL },
    { "getCharset", NULL, "LNSString", 0x1, "JavaIoIOException" },
    { "getCollection", NULL, "LJavaUtilCollection", 0x1, "JavaIoIOException" },
    { "getConnection", NULL, "LRAREiURLConnection", 0x1, "JavaIoIOException" },
    { "getContent", NULL, "LNSObject", 0x1, "JavaIoIOException" },
    { "getContentAsBytes", NULL, "LRAREUTByteArray", 0x1, "JavaIoIOException" },
    { "getContentAsString", NULL, "LNSString", 0x1, "JavaIoIOException" },
    { "getContentEncoding", NULL, "LNSString", 0x1, "JavaIoIOException" },
    { "getContentLength", NULL, "I", 0x1, "JavaIoIOException" },
    { "getContentType", NULL, "LNSString", 0x1, "JavaIoIOException" },
    { "getContext", NULL, "LRAREiWidget", 0x1, NULL },
    { "getDefaultCharset", NULL, "LNSString", 0x1, NULL },
    { "getErrorHandler", NULL, "LRAREActionLink_iErrorHandler", 0x1, NULL },
    { "getFirstPartWithRAREiWidget:", NULL, "LRAREiMultipartMimeHandler_iMultipart", 0x1, "JavaIoIOException" },
    { "getInputStream", NULL, "LJavaIoInputStream", 0x1, "JavaIoIOException" },
    { "getLinkInfo", NULL, "LNSString", 0x1, NULL },
    { "getMimeType", NULL, "LNSString", 0x1, "JavaIoIOException" },
    { "getPagingHasMore", NULL, "Z", 0x1, NULL },
    { "getPagingNext", NULL, "LNSString", 0x1, NULL },
    { "getPagingPrevious", NULL, "LNSString", 0x1, NULL },
    { "getParserClassName", NULL, "LNSString", 0x1, NULL },
    { "getPartBoundary", NULL, "LNSString", 0x1, NULL },
    { "getPopupLocation", NULL, "LRAREUIPoint", 0x1, NULL },
    { "getReader", NULL, "LJavaIoReader", 0x1, "JavaIoIOException" },
    { "getRequestCharset", NULL, "LNSString", 0x1, NULL },
    { "getRequestContentType", NULL, "LNSString", 0x1, NULL },
    { "getRequestEncoding", NULL, "LRAREActionLink_RequestEncodingEnum", 0x1, NULL },
    { "getRequestMethod", NULL, "LRAREActionLink_RequestMethodEnum", 0x1, NULL },
    { "getResponseCode", NULL, "I", 0x1, "JavaIoIOException" },
    { "getResponseHeaderWithNSString:", NULL, "LNSString", 0x1, "JavaIoIOException" },
    { "getStatusMessage", NULL, "LNSString", 0x1, NULL },
    { "getStringURLWithRAREiWidget:", NULL, "LNSString", 0x1, "JavaNetMalformedURLException" },
    { "getTargetName", NULL, "LNSString", 0x1, NULL },
    { "getUnescapingReader", NULL, "LJavaIoReader", 0x1, "JavaIoIOException" },
    { "getURLWithRAREiWidget:", NULL, "LJavaNetURL", 0x1, "JavaNetMalformedURLException" },
    { "getURLWithRAREiWidget:withNSString:", NULL, "LJavaNetURL", 0x1, "JavaNetMalformedURLException" },
    { "getViewerConfiguration", NULL, "LRARESPOTViewer", 0x1, NULL },
    { "getWindowOptions", NULL, "LJavaUtilMap", 0x1, NULL },
    { "hasURL", NULL, "Z", 0x1, NULL },
    { "hit", NULL, "V", 0x1, "JavaIoIOException" },
    { "isCanceled", NULL, "Z", 0x1, NULL },
    { "isClosed", NULL, "Z", 0x1, NULL },
    { "isCollection", NULL, "Z", 0x1, NULL },
    { "isColumnSeparatorSet", NULL, "Z", 0x1, NULL },
    { "isDeferred", NULL, "Z", 0x1, NULL },
    { "isDeferredWithRAREiWidget:", NULL, "Z", 0x1, NULL },
    { "isDone", NULL, "Z", 0x1, NULL },
    { "isDontUseCache", NULL, "Z", 0x1, NULL },
    { "isEscape", NULL, "Z", 0x1, NULL },
    { "isInlineURL", NULL, "Z", 0x1, NULL },
    { "isMimeTypeSet", NULL, "Z", 0x1, NULL },
    { "isMultipartDocument", NULL, "Z", 0x1, "JavaIoIOException" },
    { "isMultiPartForm", NULL, "Z", 0x1, NULL },
    { "isStringURL", NULL, "Z", 0x1, NULL },
    { "isUnescape", NULL, "Z", 0x1, NULL },
    { "isUnescapeUnicodeOnly", NULL, "Z", 0x1, NULL },
    { "openForOutput", NULL, "LJavaIoWriter", 0x1, "JavaIoIOException" },
    { "putDataWithJavaIoReader:withBoolean:", NULL, "LNSString", 0x1, "JavaIoIOException" },
    { "putDataWithNSString:withBoolean:", NULL, "LNSString", 0x1, "JavaIoIOException" },
    { "sendFormDataWithRAREiWidget:withNSObjectArray:", NULL, "LNSString", 0x81, "JavaIoIOException" },
    { "sendFormDataWithRAREiWidget:withJavaUtilMap:", NULL, "LNSString", 0x1, "JavaIoIOException" },
    { "sendFormDataWithRAREiWidget:withJavaUtilMap:withBoolean:withBoolean:", NULL, "LNSString", 0x1, "JavaIoIOException" },
    { "sendFormDataExWithRAREiWidget:withJavaUtilMap:withBoolean:", NULL, "V", 0x1, "JavaIoIOException" },
    { "startFileUploadWithNSString:withNSString:withNSString:", NULL, "LJavaIoWriter", 0x1, "JavaIoIOException" },
    { "uploadDataWithId:withNSString:withNSString:withNSString:withBoolean:", NULL, "LNSString", 0x1, "JavaIoIOException" },
    { "uploadDataExWithId:withNSString:withNSString:withNSString:", NULL, "V", 0x1, "JavaIoIOException" },
    { "closeOutput", NULL, "V", 0x4, "JavaIoIOException" },
    { "closeOutputEx", NULL, "V", 0x4, "JavaIoIOException" },
    { "connectWithBoolean:", NULL, "V", 0x4, "JavaIoIOException" },
    { "handlePostConnect", NULL, "V", 0x4, "JavaIoIOException" },
    { "clean", NULL, "V", 0x2, NULL },
    { "getBufferSize", NULL, "I", 0x2, "JavaIoIOException" },
    { "getRequestContentTypeEx", NULL, "LNSString", 0x2, NULL },
    { "resolveOptionsWithRAREiWidget:", NULL, "V", 0x2, NULL },
    { "createInlineLinkIfNecessaryWithRAREiWidget:withSPOTPrintableString:", NULL, "LRAREActionLink", 0x9, "JavaIoIOException" },
    { "getActionLinkWithRAREiWidget:withSPOTPrintableString:withInt:", NULL, "LRAREActionLink", 0x9, NULL },
    { "isInlineURLWithSPOTPrintableString:", NULL, "Z", 0x9, NULL },
    { "addHeadersWithRAREiURLConnection:withJavaUtilMap:", NULL, "V", 0xa, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "DEFAULT_COL_SEPARATOR_", NULL, 0x19, "C" },
    { "MIME_COLUMN_SEPARATOR_PREFIX_", NULL, 0x19, "LNSString" },
    { "MIME_LD_SEPARATOR_PREFIX_", NULL, 0x19, "LNSString" },
    { "MIME_RI_SEPARATOR_PREFIX_", NULL, 0x19, "LNSString" },
    { "PAGING_HAS_MORE_", NULL, 0x19, "LNSString" },
    { "PAGING_NEXT_", NULL, 0x19, "LNSString" },
    { "PAGING_PREVIOUS_", NULL, 0x19, "LNSString" },
    { "LINK_INFO_", NULL, 0x19, "LNSString" },
    { "defaultReadTimeout_", NULL, 0x9, "I" },
    { "DEFAULT_BOUNDARY_", NULL, 0x1a, "LNSString" },
    { "_errorHandler_", NULL, 0xa, "LRAREActionLink_iErrorHandler" },
    { "contextURL_", NULL, 0x4, "LJavaNetURL" },
    { "contextWidget_", NULL, 0x4, "LRAREiWidget" },
    { "mimeType_", NULL, 0x4, "LNSString" },
    { "stringURL_", NULL, 0x4, "LNSString" },
    { "targetName_", NULL, 0x4, "LNSString" },
    { "theURL_", NULL, 0x4, "LJavaNetURL" },
    { "urlConnection_", NULL, 0x4, "LRAREiURLConnection" },
    { "colSeparator_", NULL, 0x4, "C" },
    { "ldSeparator_", NULL, 0x4, "C" },
    { "readTimeout_", NULL, 0x4, "I" },
    { "requestMethod_", NULL, 0x4, "LRAREActionLink_RequestMethodEnum" },
    { "requestEncoding_", NULL, 0x4, "LRAREActionLink_RequestEncodingEnum" },
    { "rowInfoSeparator_", NULL, 0x4, "C" },
    { "deferred_", NULL, 0x4, "Z" },
    { "canceled_", NULL, 0x44, "Z" },
    { "charset_", NULL, 0x4, "LNSString" },
    { "columnSeparatorSet_", NULL, 0x4, "Z" },
    { "contentEncoding_", NULL, 0x4, "LNSString" },
    { "contentType_", NULL, 0x4, "LNSString" },
    { "defaultCharset_", NULL, 0x4, "LNSString" },
    { "dontUseCache_", NULL, 0x4, "Z" },
    { "errorHandler_", NULL, 0x4, "LRAREActionLink_iErrorHandler" },
    { "escape_", NULL, 0x4, "Z" },
    { "inlineURL_", NULL, 0x4, "Z" },
    { "linkAttributes_", NULL, 0x4, "LJavaUtilMap" },
    { "linkInfo_", NULL, 0x4, "LNSString" },
    { "multiPart_", NULL, 0x4, "LRAREiMultipartMimeHandler_iMultipart" },
    { "multiPartForm_", NULL, 0x4, "Z" },
    { "origWindowOptions_", NULL, 0x4, "LJavaUtilMap" },
    { "outputWriter_", NULL, 0x4, "LJavaIoWriter" },
    { "pagingHasMore_", NULL, 0x4, "Z" },
    { "pagingNext_", NULL, 0x4, "LNSString" },
    { "pagingPrevious_", NULL, 0x4, "LNSString" },
    { "parserClassName_", NULL, 0x4, "LNSString" },
    { "partBoundary_", NULL, 0x4, "LNSString" },
    { "popupLocation_", NULL, 0x4, "LRAREUIPoint" },
    { "requestCharset_", NULL, 0x4, "LNSString" },
    { "requestHeaders_", NULL, 0x4, "LJavaUtilMap" },
    { "requestType_", NULL, 0x4, "LNSString" },
    { "statusMessage_", NULL, 0x4, "LNSString" },
    { "unescape_", NULL, 0x4, "Z" },
    { "unescapeUnicodeOnly_", NULL, 0x4, "Z" },
    { "viewerConfiguration_", NULL, 0x4, "LRARESPOTViewer" },
    { "windowOptions_", NULL, 0x4, "LJavaUtilMap" },
    { "imageDensity_", NULL, 0x4, "F" },
  };
  static J2ObjcClassInfo _RAREActionLink = { "ActionLink", "com.appnativa.rare.net", NULL, 0x1, 82, methods, 56, fields, 0, NULL};
  return &_RAREActionLink;
}

@end

@interface RAREActionLink_iErrorHandler : NSObject
@end

@implementation RAREActionLink_iErrorHandler

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getConnectionChangeWithRAREActionLink:withJavaLangException:withRAREiURLConnection:", NULL, "LRAREiURLConnection", 0x401, "JavaIoIOException" },
    { "getExceptionChangeWithRAREActionLink:withJavaLangException:", NULL, "LJavaLangException", 0x401, NULL },
    { "handleErrorWithRAREActionLink:withJavaLangException:withRAREiURLConnection:", NULL, "LRAREActionLink_iErrorHandler_ActionEnum", 0x401, NULL },
  };
  static J2ObjcClassInfo _RAREActionLink_iErrorHandler = { "iErrorHandler", "com.appnativa.rare.net", "ActionLink", 0x209, 3, methods, 0, NULL, 0, NULL};
  return &_RAREActionLink_iErrorHandler;
}

@end

static RAREActionLink_iErrorHandler_ActionEnum *RAREActionLink_iErrorHandler_ActionEnum_RETRY;
static RAREActionLink_iErrorHandler_ActionEnum *RAREActionLink_iErrorHandler_ActionEnum_ERROR;
static RAREActionLink_iErrorHandler_ActionEnum *RAREActionLink_iErrorHandler_ActionEnum_CHANGE;
static RAREActionLink_iErrorHandler_ActionEnum *RAREActionLink_iErrorHandler_ActionEnum_ERROR_MESSAGE;
static RAREActionLink_iErrorHandler_ActionEnum *RAREActionLink_iErrorHandler_ActionEnum_CHANGE_ERROR;
IOSObjectArray *RAREActionLink_iErrorHandler_ActionEnum_values;

@implementation RAREActionLink_iErrorHandler_ActionEnum

+ (RAREActionLink_iErrorHandler_ActionEnum *)RETRY {
  return RAREActionLink_iErrorHandler_ActionEnum_RETRY;
}
+ (RAREActionLink_iErrorHandler_ActionEnum *)ERROR {
  return RAREActionLink_iErrorHandler_ActionEnum_ERROR;
}
+ (RAREActionLink_iErrorHandler_ActionEnum *)CHANGE {
  return RAREActionLink_iErrorHandler_ActionEnum_CHANGE;
}
+ (RAREActionLink_iErrorHandler_ActionEnum *)ERROR_MESSAGE {
  return RAREActionLink_iErrorHandler_ActionEnum_ERROR_MESSAGE;
}
+ (RAREActionLink_iErrorHandler_ActionEnum *)CHANGE_ERROR {
  return RAREActionLink_iErrorHandler_ActionEnum_CHANGE_ERROR;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [RAREActionLink_iErrorHandler_ActionEnum class]) {
    RAREActionLink_iErrorHandler_ActionEnum_RETRY = [[RAREActionLink_iErrorHandler_ActionEnum alloc] initWithNSString:@"RETRY" withInt:0];
    RAREActionLink_iErrorHandler_ActionEnum_ERROR = [[RAREActionLink_iErrorHandler_ActionEnum alloc] initWithNSString:@"ERROR" withInt:1];
    RAREActionLink_iErrorHandler_ActionEnum_CHANGE = [[RAREActionLink_iErrorHandler_ActionEnum alloc] initWithNSString:@"CHANGE" withInt:2];
    RAREActionLink_iErrorHandler_ActionEnum_ERROR_MESSAGE = [[RAREActionLink_iErrorHandler_ActionEnum alloc] initWithNSString:@"ERROR_MESSAGE" withInt:3];
    RAREActionLink_iErrorHandler_ActionEnum_CHANGE_ERROR = [[RAREActionLink_iErrorHandler_ActionEnum alloc] initWithNSString:@"CHANGE_ERROR" withInt:4];
    RAREActionLink_iErrorHandler_ActionEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ RAREActionLink_iErrorHandler_ActionEnum_RETRY, RAREActionLink_iErrorHandler_ActionEnum_ERROR, RAREActionLink_iErrorHandler_ActionEnum_CHANGE, RAREActionLink_iErrorHandler_ActionEnum_ERROR_MESSAGE, RAREActionLink_iErrorHandler_ActionEnum_CHANGE_ERROR, nil } count:5 type:[IOSClass classWithClass:[RAREActionLink_iErrorHandler_ActionEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:RAREActionLink_iErrorHandler_ActionEnum_values];
}

+ (RAREActionLink_iErrorHandler_ActionEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [RAREActionLink_iErrorHandler_ActionEnum_values count]; i++) {
    RAREActionLink_iErrorHandler_ActionEnum *e = RAREActionLink_iErrorHandler_ActionEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LRAREActionLink_iErrorHandler_ActionEnum"};
  static J2ObjcClassInfo _RAREActionLink_iErrorHandler_ActionEnum = { "Action", "com.appnativa.rare.net", "ActionLink$iErrorHandler", 0x4019, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_RAREActionLink_iErrorHandler_ActionEnum;
}

@end

static RAREActionLink_RequestEncodingEnum *RAREActionLink_RequestEncodingEnum_HTTP_FORM;
static RAREActionLink_RequestEncodingEnum *RAREActionLink_RequestEncodingEnum_JSON;
IOSObjectArray *RAREActionLink_RequestEncodingEnum_values;

@implementation RAREActionLink_RequestEncodingEnum

+ (RAREActionLink_RequestEncodingEnum *)HTTP_FORM {
  return RAREActionLink_RequestEncodingEnum_HTTP_FORM;
}
+ (RAREActionLink_RequestEncodingEnum *)JSON {
  return RAREActionLink_RequestEncodingEnum_JSON;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [RAREActionLink_RequestEncodingEnum class]) {
    RAREActionLink_RequestEncodingEnum_HTTP_FORM = [[RAREActionLink_RequestEncodingEnum alloc] initWithNSString:@"HTTP_FORM" withInt:0];
    RAREActionLink_RequestEncodingEnum_JSON = [[RAREActionLink_RequestEncodingEnum alloc] initWithNSString:@"JSON" withInt:1];
    RAREActionLink_RequestEncodingEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ RAREActionLink_RequestEncodingEnum_HTTP_FORM, RAREActionLink_RequestEncodingEnum_JSON, nil } count:2 type:[IOSClass classWithClass:[RAREActionLink_RequestEncodingEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:RAREActionLink_RequestEncodingEnum_values];
}

+ (RAREActionLink_RequestEncodingEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [RAREActionLink_RequestEncodingEnum_values count]; i++) {
    RAREActionLink_RequestEncodingEnum *e = RAREActionLink_RequestEncodingEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LRAREActionLink_RequestEncodingEnum"};
  static J2ObjcClassInfo _RAREActionLink_RequestEncodingEnum = { "RequestEncoding", "com.appnativa.rare.net", "ActionLink", 0x4019, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_RAREActionLink_RequestEncodingEnum;
}

@end

static RAREActionLink_RequestMethodEnum *RAREActionLink_RequestMethodEnum_HEAD;
static RAREActionLink_RequestMethodEnum *RAREActionLink_RequestMethodEnum_GET;
static RAREActionLink_RequestMethodEnum *RAREActionLink_RequestMethodEnum_DELETE;
static RAREActionLink_RequestMethodEnum *RAREActionLink_RequestMethodEnum_POST;
static RAREActionLink_RequestMethodEnum *RAREActionLink_RequestMethodEnum_PUT;
static RAREActionLink_RequestMethodEnum *RAREActionLink_RequestMethodEnum_TRACE;
static RAREActionLink_RequestMethodEnum *RAREActionLink_RequestMethodEnum_OPTIONS;
IOSObjectArray *RAREActionLink_RequestMethodEnum_values;

@implementation RAREActionLink_RequestMethodEnum

+ (RAREActionLink_RequestMethodEnum *)HEAD {
  return RAREActionLink_RequestMethodEnum_HEAD;
}
+ (RAREActionLink_RequestMethodEnum *)GET {
  return RAREActionLink_RequestMethodEnum_GET;
}
+ (RAREActionLink_RequestMethodEnum *)DELETE {
  return RAREActionLink_RequestMethodEnum_DELETE;
}
+ (RAREActionLink_RequestMethodEnum *)POST {
  return RAREActionLink_RequestMethodEnum_POST;
}
+ (RAREActionLink_RequestMethodEnum *)PUT {
  return RAREActionLink_RequestMethodEnum_PUT;
}
+ (RAREActionLink_RequestMethodEnum *)TRACE {
  return RAREActionLink_RequestMethodEnum_TRACE;
}
+ (RAREActionLink_RequestMethodEnum *)OPTIONS {
  return RAREActionLink_RequestMethodEnum_OPTIONS;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithBoolean:(BOOL)output
         withNSString:(NSString *)__name
              withInt:(int)__ordinal {
  if ((self = [super initWithNSString:__name withInt:__ordinal])) {
    self->output_ = output;
  }
  return self;
}

- (BOOL)supportsOutput {
  return output_;
}

+ (void)initialize {
  if (self == [RAREActionLink_RequestMethodEnum class]) {
    RAREActionLink_RequestMethodEnum_HEAD = [[RAREActionLink_RequestMethodEnum alloc] initWithBoolean:NO withNSString:@"HEAD" withInt:0];
    RAREActionLink_RequestMethodEnum_GET = [[RAREActionLink_RequestMethodEnum alloc] initWithBoolean:NO withNSString:@"GET" withInt:1];
    RAREActionLink_RequestMethodEnum_DELETE = [[RAREActionLink_RequestMethodEnum alloc] initWithBoolean:NO withNSString:@"DELETE" withInt:2];
    RAREActionLink_RequestMethodEnum_POST = [[RAREActionLink_RequestMethodEnum alloc] initWithBoolean:YES withNSString:@"POST" withInt:3];
    RAREActionLink_RequestMethodEnum_PUT = [[RAREActionLink_RequestMethodEnum alloc] initWithBoolean:YES withNSString:@"PUT" withInt:4];
    RAREActionLink_RequestMethodEnum_TRACE = [[RAREActionLink_RequestMethodEnum alloc] initWithBoolean:YES withNSString:@"TRACE" withInt:5];
    RAREActionLink_RequestMethodEnum_OPTIONS = [[RAREActionLink_RequestMethodEnum alloc] initWithBoolean:YES withNSString:@"OPTIONS" withInt:6];
    RAREActionLink_RequestMethodEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ RAREActionLink_RequestMethodEnum_HEAD, RAREActionLink_RequestMethodEnum_GET, RAREActionLink_RequestMethodEnum_DELETE, RAREActionLink_RequestMethodEnum_POST, RAREActionLink_RequestMethodEnum_PUT, RAREActionLink_RequestMethodEnum_TRACE, RAREActionLink_RequestMethodEnum_OPTIONS, nil } count:7 type:[IOSClass classWithClass:[RAREActionLink_RequestMethodEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:RAREActionLink_RequestMethodEnum_values];
}

+ (RAREActionLink_RequestMethodEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [RAREActionLink_RequestMethodEnum_values count]; i++) {
    RAREActionLink_RequestMethodEnum *e = RAREActionLink_RequestMethodEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:", NULL, NULL, 0x2, NULL },
    { "supportsOutput", NULL, "Z", 0x1, NULL },
  };
  static const char *superclass_type_args[] = {"LRAREActionLink_RequestMethodEnum"};
  static J2ObjcClassInfo _RAREActionLink_RequestMethodEnum = { "RequestMethod", "com.appnativa.rare.net", "ActionLink", 0x4019, 2, methods, 0, NULL, 1, superclass_type_args};
  return &_RAREActionLink_RequestMethodEnum;
}

@end

static RAREActionLink_ReturnDataTypeEnum *RAREActionLink_ReturnDataTypeEnum_IGNORE;
static RAREActionLink_ReturnDataTypeEnum *RAREActionLink_ReturnDataTypeEnum_STRING;
static RAREActionLink_ReturnDataTypeEnum *RAREActionLink_ReturnDataTypeEnum_JSON;
static RAREActionLink_ReturnDataTypeEnum *RAREActionLink_ReturnDataTypeEnum_BYTES;
static RAREActionLink_ReturnDataTypeEnum *RAREActionLink_ReturnDataTypeEnum_LIST;
static RAREActionLink_ReturnDataTypeEnum *RAREActionLink_ReturnDataTypeEnum_TABLE;
static RAREActionLink_ReturnDataTypeEnum *RAREActionLink_ReturnDataTypeEnum_IMAGE;
static RAREActionLink_ReturnDataTypeEnum *RAREActionLink_ReturnDataTypeEnum_ICON;
static RAREActionLink_ReturnDataTypeEnum *RAREActionLink_ReturnDataTypeEnum_LINES;
static RAREActionLink_ReturnDataTypeEnum *RAREActionLink_ReturnDataTypeEnum_CONFIG;
IOSObjectArray *RAREActionLink_ReturnDataTypeEnum_values;

@implementation RAREActionLink_ReturnDataTypeEnum

+ (RAREActionLink_ReturnDataTypeEnum *)IGNORE {
  return RAREActionLink_ReturnDataTypeEnum_IGNORE;
}
+ (RAREActionLink_ReturnDataTypeEnum *)STRING {
  return RAREActionLink_ReturnDataTypeEnum_STRING;
}
+ (RAREActionLink_ReturnDataTypeEnum *)JSON {
  return RAREActionLink_ReturnDataTypeEnum_JSON;
}
+ (RAREActionLink_ReturnDataTypeEnum *)BYTES {
  return RAREActionLink_ReturnDataTypeEnum_BYTES;
}
+ (RAREActionLink_ReturnDataTypeEnum *)LIST {
  return RAREActionLink_ReturnDataTypeEnum_LIST;
}
+ (RAREActionLink_ReturnDataTypeEnum *)TABLE {
  return RAREActionLink_ReturnDataTypeEnum_TABLE;
}
+ (RAREActionLink_ReturnDataTypeEnum *)IMAGE {
  return RAREActionLink_ReturnDataTypeEnum_IMAGE;
}
+ (RAREActionLink_ReturnDataTypeEnum *)ICON {
  return RAREActionLink_ReturnDataTypeEnum_ICON;
}
+ (RAREActionLink_ReturnDataTypeEnum *)LINES {
  return RAREActionLink_ReturnDataTypeEnum_LINES;
}
+ (RAREActionLink_ReturnDataTypeEnum *)CONFIG {
  return RAREActionLink_ReturnDataTypeEnum_CONFIG;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [RAREActionLink_ReturnDataTypeEnum class]) {
    RAREActionLink_ReturnDataTypeEnum_IGNORE = [[RAREActionLink_ReturnDataTypeEnum alloc] initWithNSString:@"IGNORE" withInt:0];
    RAREActionLink_ReturnDataTypeEnum_STRING = [[RAREActionLink_ReturnDataTypeEnum alloc] initWithNSString:@"STRING" withInt:1];
    RAREActionLink_ReturnDataTypeEnum_JSON = [[RAREActionLink_ReturnDataTypeEnum alloc] initWithNSString:@"JSON" withInt:2];
    RAREActionLink_ReturnDataTypeEnum_BYTES = [[RAREActionLink_ReturnDataTypeEnum alloc] initWithNSString:@"BYTES" withInt:3];
    RAREActionLink_ReturnDataTypeEnum_LIST = [[RAREActionLink_ReturnDataTypeEnum alloc] initWithNSString:@"LIST" withInt:4];
    RAREActionLink_ReturnDataTypeEnum_TABLE = [[RAREActionLink_ReturnDataTypeEnum alloc] initWithNSString:@"TABLE" withInt:5];
    RAREActionLink_ReturnDataTypeEnum_IMAGE = [[RAREActionLink_ReturnDataTypeEnum alloc] initWithNSString:@"IMAGE" withInt:6];
    RAREActionLink_ReturnDataTypeEnum_ICON = [[RAREActionLink_ReturnDataTypeEnum alloc] initWithNSString:@"ICON" withInt:7];
    RAREActionLink_ReturnDataTypeEnum_LINES = [[RAREActionLink_ReturnDataTypeEnum alloc] initWithNSString:@"LINES" withInt:8];
    RAREActionLink_ReturnDataTypeEnum_CONFIG = [[RAREActionLink_ReturnDataTypeEnum alloc] initWithNSString:@"CONFIG" withInt:9];
    RAREActionLink_ReturnDataTypeEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ RAREActionLink_ReturnDataTypeEnum_IGNORE, RAREActionLink_ReturnDataTypeEnum_STRING, RAREActionLink_ReturnDataTypeEnum_JSON, RAREActionLink_ReturnDataTypeEnum_BYTES, RAREActionLink_ReturnDataTypeEnum_LIST, RAREActionLink_ReturnDataTypeEnum_TABLE, RAREActionLink_ReturnDataTypeEnum_IMAGE, RAREActionLink_ReturnDataTypeEnum_ICON, RAREActionLink_ReturnDataTypeEnum_LINES, RAREActionLink_ReturnDataTypeEnum_CONFIG, nil } count:10 type:[IOSClass classWithClass:[RAREActionLink_ReturnDataTypeEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:RAREActionLink_ReturnDataTypeEnum_values];
}

+ (RAREActionLink_ReturnDataTypeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [RAREActionLink_ReturnDataTypeEnum_values count]; i++) {
    RAREActionLink_ReturnDataTypeEnum *e = RAREActionLink_ReturnDataTypeEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LRAREActionLink_ReturnDataTypeEnum"};
  static J2ObjcClassInfo _RAREActionLink_ReturnDataTypeEnum = { "ReturnDataType", "com.appnativa.rare.net", "ActionLink", 0x4019, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_RAREActionLink_ReturnDataTypeEnum;
}

@end
@implementation RAREActionLink_$1

- (void)run {
  [((id<RAREiWidget>) nil_chk(val$widget_)) setDataLinkWithRAREActionLink:this$0_];
}

- (id)initWithRAREActionLink:(RAREActionLink *)outer$
             withRAREiWidget:(id<RAREiWidget>)capture$0 {
  this$0_ = outer$;
  val$widget_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREActionLink" },
    { "val$widget_", NULL, 0x1012, "LRAREiWidget" },
  };
  static J2ObjcClassInfo _RAREActionLink_$1 = { "$1", "com.appnativa.rare.net", "ActionLink", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_RAREActionLink_$1;
}

@end
@implementation RAREActionLink_$2

- (void)run {
  (void) [((id<RAREiPlatformWindowManager>) nil_chk(val$w_)) activateViewerWithRAREiWidget:val$widget_ withRARESPOTViewer:val$cfg_ withNSString:[this$0_ getTargetName]];
}

- (id)initWithRAREActionLink:(RAREActionLink *)outer$
withRAREiPlatformWindowManager:(id<RAREiPlatformWindowManager>)capture$0
             withRAREiWidget:(id<RAREiWidget>)capture$1
          withRARESPOTViewer:(RARESPOTViewer *)capture$2 {
  this$0_ = outer$;
  val$w_ = capture$0;
  val$widget_ = capture$1;
  val$cfg_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREActionLink" },
    { "val$w_", NULL, 0x1012, "LRAREiPlatformWindowManager" },
    { "val$widget_", NULL, 0x1012, "LRAREiWidget" },
    { "val$cfg_", NULL, 0x1012, "LRARESPOTViewer" },
  };
  static J2ObjcClassInfo _RAREActionLink_$2 = { "$2", "com.appnativa.rare.net", "ActionLink", 0x8000, 0, NULL, 4, fields, 0, NULL};
  return &_RAREActionLink_$2;
}

@end
