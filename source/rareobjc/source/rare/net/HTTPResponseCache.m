//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple/com/appnativa/rare/net/HTTPResponseCache.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iPlatform.h"
#include "com/appnativa/rare/net/HTTPResponseCache.h"
#include "com/appnativa/util/Streams.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/FileOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"

@implementation RAREHTTPResponseCache

static NSString * RAREHTTPResponseCache_defaultCache_ = @"RARECache";

+ (NSString *)defaultCache {
  return RAREHTTPResponseCache_defaultCache_;
}

+ (void)setDefaultCache:(NSString *)defaultCache {
  RAREHTTPResponseCache_defaultCache_ = defaultCache;
}

+ (void)cacheDataWithNSString:(NSString *)name
        withJavaIoInputStream:(JavaIoInputStream *)inArg {
  JavaIoFile *f = [RAREHTTPResponseCache createCacheFileWithNSString:name];
  JavaIoFileOutputStream *out = nil;
  @try {
    out = [[JavaIoFileOutputStream alloc] initWithJavaIoFile:f];
    [RAREUTStreams streamToStreamWithJavaIoInputStream:inArg withJavaIoOutputStream:out withByteArray:nil];
  }
  @catch (JavaIoIOException *e) {
    @throw [[RAREApplicationException alloc] initWithJavaLangThrowable:e];
  }
  @finally {
    if (out != nil) {
      @try {
        [out close];
      }
      @catch (JavaIoIOException *e) {
      }
    }
  }
}

+ (void)clearResponseCache {
  JavaIoFile *f = [RAREPlatform getCacheDir];
  if (f != nil) {
    [((id<RAREiPlatform>) nil_chk([RAREPlatform getPlatform])) deleteDirectoryWithJavaIoFile:f];
  }
}

+ (JavaIoFile *)createCacheFileWithNSString:(NSString *)name {
  JavaIoFile *f = [RAREPlatform getCacheDir];
  if (f != nil) {
    f = [[JavaIoFile alloc] initWithJavaIoFile:f withNSString:[NSString stringWithFormat:@"uc_%@", name]];
  }
  return f;
}

+ (void)deleteCachedDataWithNSString:(NSString *)name {
  JavaIoFile *f = [RAREHTTPResponseCache createCacheFileWithNSString:name];
  if (f != nil) {
    [f delete__];
  }
}

+ (void)installResponseCacheWithNSString:(NSString *)name
                                 withInt:(int)mbMaxSize
                             withBoolean:(BOOL)deleteOnExit {
}

+ (JavaIoInputStream *)getCachedDataWithNSString:(NSString *)name {
  JavaIoFile *f = [RAREHTTPResponseCache createCacheFileWithNSString:name];
  if ((f == nil) || ![f exists]) {
    return nil;
  }
  @try {
    return [[JavaIoFileInputStream alloc] initWithJavaIoFile:f];
  }
  @catch (JavaIoFileNotFoundException *e) {
    return nil;
  }
}

+ (NSString *)createFileNameWithNSString:(NSString *)dir
                            withNSString:(NSString *)name {
  NSArray  *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
  NSString *documentsDirectory = [paths objectAtIndex:0];
  return [NSString stringWithFormat:@"%@/%@/%@", documentsDirectory,dir,name];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "createCacheFileWithNSString:", NULL, "LJavaIoFile", 0x9, NULL },
    { "getCachedDataWithNSString:", NULL, "LJavaIoInputStream", 0x9, NULL },
    { "createFileNameWithNSString:withNSString:", NULL, "LNSString", 0x10a, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "defaultCache_", NULL, 0xa, "LNSString" },
  };
  static J2ObjcClassInfo _RAREHTTPResponseCache = { "HTTPResponseCache", "com.appnativa.rare.net", NULL, 0x1, 3, methods, 1, fields, 0, NULL};
  return &_RAREHTTPResponseCache;
}

@end
