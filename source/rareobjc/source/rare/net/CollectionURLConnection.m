//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/net/CollectionURLConnection.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSByteArray.h"
#include "IOSCharArray.h"
#include "IOSClass.h"
#include "IOSIntArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iDataCollection.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/CollectionURLConnection.h"
#include "com/appnativa/rare/net/JavaURLConnection.h"
#include "com/appnativa/rare/net/NetHelper.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/util/CharScanner.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/UTF8Helper.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/lang/Character.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URL.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@implementation RARECollectionURLConnection

- (id)initWithJavaNetURL:(JavaNetURL *)url {
  if (self = [super initWithJavaNetURL:url]) {
    defaultCharset_ = @"iso-8859-1";
    fromColumn_ = -1;
    fromIndex_ = 0;
    toColumn_ = 0;
    toIndex_ = -1;
    appContext_ = [RAREPlatform getAppContext];
    collectionName_ = [((JavaNetURL *) nil_chk(url)) getHost];
    NSString *name = [url getPath];
    if ([((NSString *) nil_chk([RAREiConstants COLLECTION_PROTOCOL_HOSTSTRING])) isEqual:collectionName_] || ([((NSString *) nil_chk(collectionName_)) sequenceLength] == 0)) {
      collectionName_ = name;
      name = [url getQuery];
    }
    [self parseWithNSString:collectionName_];
    if (name != nil) {
      contextWidget_ = [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) getWidgetFromPathWithNSString:name];
    }
  }
  return self;
}

- (id)initWithJavaNetURL:(JavaNetURL *)url
            withNSString:(NSString *)collection
         withRAREiWidget:(id<RAREiWidget>)context {
  if (self = [super initWithJavaNetURL:url]) {
    defaultCharset_ = @"iso-8859-1";
    fromColumn_ = -1;
    fromIndex_ = 0;
    toColumn_ = 0;
    toIndex_ = -1;
    appContext_ = [RAREPlatform getAppContext];
    collectionName_ = collection;
    contextWidget_ = context;
    [self parseWithNSString:collectionName_];
  }
  return self;
}

- (void)close {
}

- (void)connect {
  id<RAREiDataCollection> dc = [self getDataCollection];
  if ((dc != nil) && [dc isRefreshOnURLConnection]) {
    [dc refreshWithRAREiWidget:contextWidget_];
  }
}

+ (JavaNetURL *)createURLWithRAREiWidget:(id<RAREiWidget>)context
                            withNSString:(NSString *)collection {
  return [RAREaNetHelper createCollectionURLWithRAREiWidget:context withNSString:collection];
}

- (void)disconnect {
}

- (void)dispose {
}

- (BOOL)exist {
  return YES;
}

- (void)open {
  [self connect];
}

- (void)setCharsetWithNSString:(NSString *)cs {
}

- (void)setColumnRangeWithInt:(int)from
                      withInt:(int)to {
  fromColumn_ = from;
  toColumn_ = from;
}

- (void)setDefaultCharsetWithNSString:(NSString *)charset {
  if (charset == nil) {
    charset = @"iso-8859-1";
  }
  defaultCharset_ = charset;
}

- (void)setHeaderFieldWithNSString:(NSString *)name
                      withNSString:(NSString *)value {
  if ([@"content-type" equalsIgnoreCase:name]) {
    mimeType_ = value;
  }
}

- (void)setMakeCopyWithBoolean:(BOOL)makeCopy {
  self->makeCopy_ = makeCopy;
}

- (void)setRowRangexWithInt:(int)from
                    withInt:(int)to {
  fromIndex_ = from;
  toIndex_ = from;
}

- (void)setSubCollectionNameWithNSString:(NSString *)subCollectionName {
  self->subCollectionName_ = subCollectionName;
}

- (void)setToIndexWithInt:(int)toIndex {
  self->toIndex_ = toIndex;
}

- (NSString *)getCharset {
  return defaultCharset_;
}

- (id<JavaUtilCollection>)getCollection {
  id<RAREiDataCollection> dc = [self getDataCollection];
  if (dc == nil) {
    return [JavaUtilCollections EMPTY_LIST];
  }
  if (self->subCollectionName_ != nil) {
    return [((id<RAREiDataCollection>) nil_chk(dc)) getSubItemDataWithRAREiWidget:contextWidget_ withNSString:subCollectionName_ withBoolean:makeCopy_];
  }
  return [((id<RAREiDataCollection>) nil_chk(dc)) getSubItemDataWithRAREiWidget:contextWidget_ withInt:fromIndex_ withInt:toIndex_ withInt:fromColumn_ withInt:toColumn_ withBoolean:makeCopy_];
}

+ (id<JavaUtilCollection>)getCollectionWithJavaNetURL:(JavaNetURL *)url {
  return [((RARECollectionURLConnection *) [[RARECollectionURLConnection alloc] initWithJavaNetURL:url]) getCollection];
}

+ (id<JavaUtilCollection>)getCollectionWithRAREiWidget:(id<RAREiWidget>)context
                                          withNSString:(NSString *)collection {
  return [((RARECollectionURLConnection *) [[RARECollectionURLConnection alloc] initWithJavaNetURL:[RARECollectionURLConnection createURLWithRAREiWidget:context withNSString:collection]]) getCollection];
}

- (id)getConnectionObject {
  return self;
}

- (IOSClass *)getConnectionObjectClass {
  return [self getClass];
}

- (NSString *)getContentAsString {
  id<RAREiDataCollection> dc = [self getDataCollection];
  id<RAREiWidget> w = (contextWidget_ == nil) ? ((id) [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) getRootViewer]) : ((id) contextWidget_);
  return (dc == nil) ? @"" : [dc getCollectionAsStringWithRAREiWidget:w];
}

- (NSString *)getContentType {
  NSString *s = mimeType_;
  if (s == nil) {
    id<RAREiDataCollection> dc = [self getDataCollection];
    id<RAREiWidget> w = (contextWidget_ == nil) ? ((id) [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) getRootViewer]) : ((id) contextWidget_);
    s = (dc == nil) ? [RAREiConstants TEXT_MIME_TYPE] : [dc getCollectionStringMimeTypeWithRAREiWidget:w];
  }
  return s;
}

- (id<RAREiDataCollection>)getDataCollection {
  return [((id<RAREiPlatformAppContext>) nil_chk(appContext_)) getDataCollectionWithNSString:collectionName_];
}

+ (id<RAREiDataCollection>)getDataCollectionWithJavaNetURL:(JavaNetURL *)url {
  return [((RARECollectionURLConnection *) [[RARECollectionURLConnection alloc] initWithJavaNetURL:url]) getDataCollection];
}

- (int)getFromColumn {
  return fromColumn_;
}

- (int)getFromIndex {
  return fromIndex_;
}

- (NSString *)getHeaderFieldWithNSString:(NSString *)name {
  return [RAREJavaURLConnection getHeaderFieldWithRAREiURLConnection:self withNSString:name];
}

- (id<JavaUtilMap>)getHeaderFields {
  return [RAREJavaURLConnection getHeaderFieldsWithRAREiURLConnection:self];
}

- (JavaIoInputStream *)getInputStream {
  return [[JavaIoByteArrayInputStream alloc] initWithByteArray:[((RAREUTUTF8Helper *) nil_chk([RAREUTUTF8Helper getInstance])) getBytesWithNSString:[self getContentAsString]]];
}

- (JavaIoReader *)getReader {
  return [[JavaIoStringReader alloc] initWithNSString:[self getContentAsString]];
}

- (int)getResponseCode {
  return 200;
}

- (NSString *)getSubCollectionName {
  return subCollectionName_;
}

- (int)getToColumn {
  return toColumn_;
}

- (int)getToIndex {
  return toIndex_;
}

+ (BOOL)isCollectionURLWithJavaNetURL:(JavaNetURL *)url {
  if ([((JavaNetURL *) nil_chk(url)) getProtocol] == [RAREiConstants COLLECTION_PROTOCOL_STRING]) {
    return YES;
  }
  return [url getHost] == [RAREiConstants COLLECTION_PROTOCOL_HOSTSTRING];
}

- (BOOL)isMakeCopy {
  return makeCopy_;
}

- (void)parseWithNSString:(NSString *)name {
  if ([((NSString *) nil_chk(name)) hasSuffix:@"#copy"]) {
    makeCopy_ = YES;
    name = [name substring:0 endIndex:[name sequenceLength] - [@"#copy" sequenceLength]];
  }
  int n = [((NSString *) nil_chk(name)) indexOf:'['];
  if (n != -1) {
    RAREUTCharScanner *sc = [[RAREUTCharScanner alloc] initWithNSString:name];
    name = [name substring:0 endIndex:n];
    [sc consumeWithInt:n + 1];
    IOSCharArray *a = [sc getContent];
    IOSIntArray *tok = [sc trimWithIntArray:[sc findTokenWithChar:']' withBoolean:YES withBoolean:NO]];
    if ((tok != nil) && (IOSIntArray_Get(tok, 1) > 0)) {
      if ((IOSCharArray_Get(nil_chk(a), IOSIntArray_Get(tok, 0)) == '-') || [JavaLangCharacter isDigitWithChar:IOSCharArray_Get(a, IOSIntArray_Get(tok, 0))]) {
        fromIndex_ = [RAREUTSNumber intValueWithCharArray:a withInt:IOSIntArray_Get(tok, 0) withInt:IOSIntArray_Get(tok, 1) withBoolean:NO];
        n = [RAREUTCharScanner lastIndexOfWithCharArray:a withInt:IOSIntArray_Get(tok, 0) withInt:IOSIntArray_Get(tok, 1) withChar:'.'];
        if ((n != -1) && (IOSCharArray_Get(a, n - 1) == '.')) {
          toIndex_ = [RAREUTSNumber intValueWithCharArray:a withInt:n + 1 withInt:IOSIntArray_Get(tok, 1) + IOSIntArray_Get(tok, 0) - n withBoolean:NO];
          if (toIndex_ > -1) {
            toIndex_++;
          }
        }
        else {
          toIndex_ = fromIndex_++;
        }
      }
      else {
        self->subCollectionName_ = [NSString stringWithCharacters:a offset:IOSIntArray_Get(tok, 0) length:IOSIntArray_Get(tok, 1)];
      }
    }
    sc->foundDelimiter_ = 0;
    (void) [sc trimWithIntArray:[sc findTokenWithChar:'[' withBoolean:YES withBoolean:YES]];
    if (sc->foundDelimiter_ == '[') {
      tok = [sc trimWithIntArray:[sc findTokenWithChar:']' withBoolean:YES withBoolean:NO]];
    }
    else {
      tok = nil;
    }
    if ((tok != nil) && (IOSIntArray_Get(tok, 1) > 0)) {
      if ((IOSCharArray_Get(nil_chk(a), IOSIntArray_Get(tok, 0)) == '-') || [JavaLangCharacter isDigitWithChar:IOSCharArray_Get(a, IOSIntArray_Get(tok, 0))]) {
        fromColumn_ = [RAREUTSNumber intValueWithCharArray:a withInt:IOSIntArray_Get(tok, 0) withInt:IOSIntArray_Get(tok, 1) withBoolean:NO];
        n = [RAREUTCharScanner lastIndexOfWithCharArray:a withInt:IOSIntArray_Get(tok, 0) withInt:IOSIntArray_Get(tok, 1) withChar:'.'];
        if ((n != -1) && (IOSCharArray_Get(a, n - 1) == '.')) {
          toColumn_ = [RAREUTSNumber intValueWithCharArray:a withInt:n + 1 withInt:IOSIntArray_Get(tok, 1) + IOSIntArray_Get(tok, 0) - n withBoolean:NO];
          if (toColumn_ > -1) {
            toColumn_++;
          }
        }
        else {
          toColumn_ = 0;
        }
      }
    }
  }
  collectionName_ = name;
}

- (void)copyAllFieldsTo:(RARECollectionURLConnection *)other {
  [super copyAllFieldsTo:other];
  other->appContext_ = appContext_;
  other->collectionName_ = collectionName_;
  other->contextWidget_ = contextWidget_;
  other->defaultCharset_ = defaultCharset_;
  other->fromColumn_ = fromColumn_;
  other->fromIndex_ = fromIndex_;
  other->makeCopy_ = makeCopy_;
  other->mimeType_ = mimeType_;
  other->subCollectionName_ = subCollectionName_;
  other->toColumn_ = toColumn_;
  other->toIndex_ = toIndex_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "connect", NULL, "V", 0x1, "JavaIoIOException" },
    { "createURLWithRAREiWidget:withNSString:", NULL, "LJavaNetURL", 0x9, "JavaNetMalformedURLException" },
    { "exist", NULL, "Z", 0x1, NULL },
    { "open", NULL, "V", 0x1, "JavaIoIOException" },
    { "getCharset", NULL, "LNSString", 0x1, NULL },
    { "getCollection", NULL, "LJavaUtilCollection", 0x1, NULL },
    { "getCollectionWithJavaNetURL:", NULL, "LJavaUtilCollection", 0x9, NULL },
    { "getCollectionWithRAREiWidget:withNSString:", NULL, "LJavaUtilCollection", 0x9, "JavaNetMalformedURLException" },
    { "getConnectionObject", NULL, "LNSObject", 0x1, NULL },
    { "getConnectionObjectClass", NULL, "LIOSClass", 0x1, NULL },
    { "getContentAsString", NULL, "LNSString", 0x1, NULL },
    { "getContentType", NULL, "LNSString", 0x1, NULL },
    { "getDataCollection", NULL, "LRAREiDataCollection", 0x1, NULL },
    { "getDataCollectionWithJavaNetURL:", NULL, "LRAREiDataCollection", 0x9, NULL },
    { "getHeaderFieldWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "getHeaderFields", NULL, "LJavaUtilMap", 0x1, NULL },
    { "getInputStream", NULL, "LJavaIoInputStream", 0x1, NULL },
    { "getReader", NULL, "LJavaIoReader", 0x1, NULL },
    { "getSubCollectionName", NULL, "LNSString", 0x1, NULL },
    { "isCollectionURLWithJavaNetURL:", NULL, "Z", 0x9, NULL },
    { "isMakeCopy", NULL, "Z", 0x1, NULL },
    { "parseWithNSString:", NULL, "V", 0x2, NULL },
  };
  static J2ObjcClassInfo _RARECollectionURLConnection = { "CollectionURLConnection", "com.appnativa.rare.net", NULL, 0x1, 22, methods, 0, NULL, 0, NULL};
  return &_RARECollectionURLConnection;
}

@end
