//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core/com/appnativa/rare/TemplateHandler.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/TemplateHandler.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/iResourceFinder.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/JavaURLConnection.h"
#include "com/appnativa/rare/net/iURLConnection.h"
#include "com/appnativa/rare/spot/CollapsibleInfo.h"
#include "com/appnativa/rare/spot/DataItem.h"
#include "com/appnativa/rare/spot/GridCell.h"
#include "com/appnativa/rare/spot/ItemDescription.h"
#include "com/appnativa/rare/spot/MainWindow.h"
#include "com/appnativa/rare/spot/Plot.h"
#include "com/appnativa/rare/spot/Region.h"
#include "com/appnativa/rare/spot/ScrollPane.h"
#include "com/appnativa/rare/spot/TemplateContext.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/util/DataParser.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SDFNode.h"
#include "com/appnativa/spot/SPOTAny.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSequence.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "com/appnativa/util/iStructuredNode.h"
#include "java/lang/Exception.h"
#include "java/lang/ref/SoftReference.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URL.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/IdentityHashMap.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@implementation RARETemplateHandler

static id RARETemplateHandler_TAG_ = nil;
static JavaUtilIdentityHashMap * RARETemplateHandler__handlerMap_;
static id<RAREiPlatformAppContext> RARETemplateHandler__defaultApp_;
static RARETemplateHandler * RARETemplateHandler__defaultHandler_;

+ (id)TAG {
  return RARETemplateHandler_TAG_;
}

+ (void)setTAG:(id)TAG {
  RARETemplateHandler_TAG_ = TAG;
}

+ (JavaUtilIdentityHashMap *)_handlerMap {
  return RARETemplateHandler__handlerMap_;
}

+ (void)set_handlerMap:(JavaUtilIdentityHashMap *)_handlerMap {
  RARETemplateHandler__handlerMap_ = _handlerMap;
}

+ (id<RAREiPlatformAppContext>)_defaultApp {
  return RARETemplateHandler__defaultApp_;
}

+ (void)set_defaultApp:(id<RAREiPlatformAppContext>)_defaultApp {
  RARETemplateHandler__defaultApp_ = _defaultApp;
}

+ (RARETemplateHandler *)_defaultHandler {
  return RARETemplateHandler__defaultHandler_;
}

+ (void)set_defaultHandler:(RARETemplateHandler *)_defaultHandler {
  RARETemplateHandler__defaultHandler_ = _defaultHandler;
}

- (void)applyTemplateWithSPOTSequence:(SPOTSequence *)seq
            withRAREUTiStructuredNode:(id<RAREUTiStructuredNode>)node {
  [((SPOTSequence *) nil_chk(seq)) spot_setTemplateHandlerWithISPOTTemplateHandler:self];
  SPOTPrintableString *ps = [self createURLStringWithRAREUTiStructuredNode:node];
  if (ps != nil) {
    @try {
      (void) [self loadContextTemplateWithSPOTSequence:seq withSPOTPrintableString:ps];
    }
    @catch (JavaNetMalformedURLException *ex) {
      [RAREPlatform debugLogWithNSString:[((JavaNetMalformedURLException *) nil_chk(ex)) description]];
      return;
    }
  }
  id<RAREUTiStructuredNode> tnode = [((id<RAREUTiStructuredNode>) nil_chk(node)) getChildWithNSString:@"templateName"];
  NSString *name = (tnode == nil) ? nil : [tnode getValueAsString];
  if (name == nil) {
    name = (NSString *) check_class_cast([node getAttributeWithNSString:@"baseTemplateName"], [NSString class]);
  }
  if ((name == nil) && _autoSkin_) {
    name = [seq spot_getClassShortName];
  }
  if (name != nil) {
    NSString *tname = (NSString *) check_class_cast(((tnode == nil) ? [node getAttributeWithNSString:@"templateContext"] : [tnode getAttributeWithNSString:@"context"]), [NSString class]);
    [self applyTemplateWithSPOTSequence:seq withNSString:name withNSString:tname];
  }
}

- (void)applyTemplateWithSPOTSequence:(SPOTSequence *)seq
                          withSDFNode:(SDFNode *)node {
  [((SPOTSequence *) nil_chk(seq)) spot_setTemplateHandlerWithISPOTTemplateHandler:self];
  SPOTPrintableString *ps = [self createURLStringWithRAREUTiStructuredNode:node];
  if (ps != nil) {
    @try {
      (void) [self loadContextTemplateWithSPOTSequence:seq withSPOTPrintableString:ps];
    }
    @catch (JavaNetMalformedURLException *ex) {
      [RAREPlatform debugLogWithNSString:[((JavaNetMalformedURLException *) nil_chk(ex)) description]];
      return;
    }
  }
  SDFNode *tnode = [((SDFNode *) nil_chk(node)) getNodeWithNSString:@"templateName"];
  NSString *name = (tnode == nil) ? nil : [tnode getNodeValue];
  if (name == nil) {
    name = [node getNodeAttributeWithNSString:@"baseTemplateName"];
  }
  if ((name == nil) && _autoSkin_) {
    name = [seq spot_getClassShortName];
  }
  if (name != nil) {
    NSString *tname = (tnode == nil) ? [node getNodeAttributeWithNSString:@"templateContext"] : [tnode getNodeAttributeWithNSString:@"context"];
    [self applyTemplateWithSPOTSequence:seq withNSString:name withNSString:tname];
  }
}

- (void)applyTemplateWithSPOTSequence:(SPOTSequence *)seq
                         withNSString:(NSString *)name {
  if ((name == nil) && _autoSkin_) {
    name = [((SPOTSequence *) nil_chk(seq)) spot_getClassShortName];
  }
  if (name != nil) {
    [self applyTemplateWithSPOTSequence:seq withNSString:name withNSString:nil];
  }
}

- (void)applyTemplateWithSPOTSequence:(SPOTSequence *)seq
                         withNSString:(NSString *)name
                         withNSString:(NSString *)tname {
  RARETemplateHandler_Template *t = _contextTemplate_;
  if (tname != nil) {
    if ((t == nil) || ![t nameEqualsWithNSString:tname]) {
      t = [self getTemplateWithNSString:tname];
    }
  }
  else {
    if (t == nil) {
      t = _defaultTemplate_;
    }
  }
  if (t == nil) {
    return;
  }
  RARETemplateHandler_TemplateSequence *ts = nil;
  if ([seq isKindOfClass:[RARESPOTWidget class]]) {
    ts = [((RARETemplateHandler_Template *) nil_chk(t)) getWidgetWithNSString:name];
  }
  else if ([seq isKindOfClass:[RARESPOTItemDescription class]]) {
    ts = [((RARETemplateHandler_Template *) nil_chk(t)) getColumnWithNSString:name];
  }
  else if ([seq isKindOfClass:[RARESPOTDataItem class]]) {
    ts = [((RARETemplateHandler_Template *) nil_chk(t)) getDataItemWithNSString:name];
  }
  else if ([seq isKindOfClass:[RARESPOTRegion class]]) {
    ts = [((RARETemplateHandler_Template *) nil_chk(t)) getRegionWithNSString:name];
  }
  else if ([seq isKindOfClass:[RARESPOTGridCell class]]) {
    ts = [((RARETemplateHandler_Template *) nil_chk(t)) getCellPainterWithNSString:name];
  }
  else if ([seq isKindOfClass:[RARESPOTScrollPane class]]) {
    ts = [((RARETemplateHandler_Template *) nil_chk(t)) getScrollPaneWithNSString:name];
  }
  else if ([seq isKindOfClass:[RARESPOTCollapsibleInfo class]]) {
    ts = [((RARETemplateHandler_Template *) nil_chk(t)) getCollapsibleWithNSString:name];
  }
  else if ([seq isKindOfClass:[RARESPOTPlot class]]) {
    ts = [((RARETemplateHandler_Template *) nil_chk(t)) getPlotWithNSString:name];
  }
  if (ts != nil) {
    [ts populateWithSPOTSequence:seq];
  }
}

- (RARETemplateHandler_Template *)getContextTemplate {
  return _contextTemplate_;
}

- (RARETemplateHandler_Template *)getTemplateWithNSString:(NSString *)name {
  JavaNetURL *u = [((JavaUtilHashMap *) nil_chk(_nameMap_)) getWithId:name];
  if (u == nil) {
    return nil;
  }
  JavaLangRefSoftReference *r = [((JavaUtilHashMap *) nil_chk(_templateMap_)) getWithId:name];
  RARETemplateHandler_Template *t = (r == nil) ? nil : [r get];
  if (t == nil) {
    (void) [_nameMap_ removeWithId:name];
    (void) [_templateMap_ removeWithId:name];
    t = [self loadTemplateWithRAREiWidget:[RAREPlatform getContextRootViewer] withJavaNetURL:u withBoolean:YES withNSString:nil];
  }
  return t;
}

- (RARETemplateHandler_Template *)loadTemplateWithRAREiWidget:(id<RAREiWidget>)context
                                           withRAREActionLink:(RAREActionLink *)link
                                                  withBoolean:(BOOL)cache
                                                 withNSString:(NSString *)name {
  @try {
    return [self loadTemplateWithRAREiWidget:context withJavaNetURL:[((RAREActionLink *) nil_chk(link)) getURLWithRAREiWidget:context] withBoolean:cache withNSString:name];
  }
  @catch (JavaNetMalformedURLException *ex) {
    [RAREPlatform ignoreExceptionWithNSString:[RAREPlatform getResourceAsStringWithNSString:@"Rare.runtime.text.templateLoadFailure"] withJavaLangThrowable:ex];
    return nil;
  }
}

- (RARETemplateHandler_Template *)loadTemplateWithRAREiWidget:(id<RAREiWidget>)context
                                               withJavaNetURL:(JavaNetURL *)url
                                                  withBoolean:(BOOL)cache
                                                 withNSString:(NSString *)name {
  id<RAREiURLConnection> conn = nil;
  @try {
    RARESPOTTemplateContext *tc = [[RARESPOTTemplateContext alloc] init];
    BOOL urlName = NO;
    (void) [RAREDataParser loadSPOTObjectWithRAREiWidget:context withRAREiURLConnection:conn = [((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getAppContext])) openConnectionWithJavaNetURL:url] withISPOTElement:tc];
    RARETemplateHandler_Template *t = [[RARETemplateHandler_Template alloc] initWithRARETemplateHandler:self withRARESPOTTemplateContext:tc withRAREiWidget:[self getContext]];
    if (cache) {
      if (name == nil) {
        name = [((SPOTPrintableString *) nil_chk(tc->name_)) getValue];
      }
      if ((name == nil) || ([name sequenceLength] == 0)) {
        name = [RAREJavaURLConnection toInternalFormWithJavaNetURL:url];
        urlName = YES;
      }
      JavaNetURL *ou = [((JavaUtilHashMap *) nil_chk(_nameMap_)) getWithId:name];
      if ((ou != nil) && !urlName) {
        NSString *s = [RAREPlatform getResourceAsStringWithNSString:@"Rare.runtime.text.replacingTemplate"];
        s = [RAREUTHelper expandStringWithNSString:s withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [NSString stringWithFormat:@"%@ (%@)", name, [ou toExternalForm]], [NSString stringWithFormat:@"%@ (%@)", name, [((JavaNetURL *) nil_chk(url)) toExternalForm]] } count:2 type:[IOSClass classWithClass:[NSString class]]]];
        [RAREPlatform debugLogWithNSString:s];
      }
      (void) [_nameMap_ putWithId:name withId:url];
      (void) [((JavaUtilHashMap *) nil_chk(_templateMap_)) putWithId:name withId:[[JavaLangRefSoftReference alloc] initWithId:t]];
    }
    return t;
  }
  @catch (JavaLangException *ex) {
    [RAREPlatform ignoreExceptionWithNSString:@"failed to load template" withJavaLangThrowable:ex];
    return nil;
  }
  @finally {
    if (conn != nil) {
      [conn close];
    }
  }
}

- (void)popContextTemplateWithSPOTSequence:(SPOTSequence *)seq {
  RARETemplateHandler_Template *t = [((JavaUtilIdentityHashMap *) nil_chk(_contextMap_)) removeWithId:seq];
  if (t != nil) {
    _contextTemplate_ = nil;
    int len = [((RAREUTIdentityArrayList *) nil_chk(_contextStack_)) size];
    if (len > 0) {
      (void) [_contextStack_ removeWithInt:len - 1];
    }
    if (len > 1) {
      _contextTemplate_ = [_contextStack_ getWithInt:len - 2];
    }
    if ([t getCustomizer] != nil) {
      [((id<RARETemplateHandler_iCustomizer>) nil_chk([t getCustomizer])) customizeWithRARETemplateHandler_Template:t withSPOTSequence:seq];
    }
  }
  if (_contextTemplate_ != nil) {
    _autoSkin_ = _contextTemplate_->autoSkin_;
  }
  else if (_defaultTemplate_ != nil) {
    _autoSkin_ = _defaultTemplate_->autoSkin_;
  }
}

- (void)resetWithSPOTSequence:(SPOTSequence *)seq
      withSPOTPrintableString:(SPOTPrintableString *)ps {
  _autoSkin_ = NO;
  [((RAREUTIdentityArrayList *) nil_chk(_contextStack_)) clear];
  [((JavaUtilIdentityHashMap *) nil_chk(_contextMap_)) clear];
  _defaultTemplate_ = nil;
  _contextTemplate_ = nil;
  if ((ps != nil) && ([ps getValue] != nil)) {
    (void) [self loadContextTemplateWithSPOTSequence:seq withSPOTPrintableString:ps];
  }
}

- (void)setContextWithRAREiWidget:(id<RAREiWidget>)context {
  _context_ = context;
}

- (id<RAREiWidget>)getContext {
  return (_context_ != nil) ? ((id) _context_) : ((id) [RAREPlatform getContextRootViewer]);
}

- (void)setDefaultTemplateExWithRAREiWidget:(id<RAREiWidget>)context
                               withNSString:(NSString *)url
                                withBoolean:(BOOL)cache {
  RAREActionLink *link = [[RAREActionLink alloc] initWithRAREiWidget:context withJavaNetURL:[((id<RAREiWidget>) nil_chk(context)) getURLWithNSString:url]];
  _autoSkin_ = NO;
  [((RAREUTIdentityArrayList *) nil_chk(_contextStack_)) clear];
  [((JavaUtilIdentityHashMap *) nil_chk(_contextMap_)) clear];
  _defaultTemplate_ = nil;
  _contextTemplate_ = nil;
  RARETemplateHandler_Template *t = [self loadTemplateWithRAREiWidget:context withRAREActionLink:link withBoolean:cache withNSString:nil];
  if (t != nil) {
    _autoSkin_ = t->autoSkin_;
    _contextTemplate_ = t;
    _defaultTemplate_ = t;
  }
}

- (SPOTPrintableString *)createURLStringWithRAREUTiStructuredNode:(id<RAREUTiStructuredNode>)node {
  @try {
    BOOL cache = [@"mainWindow" isEqual:[((id<RAREUTiStructuredNode>) nil_chk(node)) getName]];
    node = [node getChildWithNSString:@"templateURL"];
    if ((node == nil) || ([node getValue] == nil)) {
      return nil;
    }
    SPOTPrintableString *ps = [[SPOTPrintableString alloc] init];
    [ps fromStructuredNodeWithRAREUTiStructuredNode:node];
    if (cache) {
      [ps spot_setAttributeWithNSString:@"cache" withNSString:@"true"];
    }
    return ps;
  }
  @catch (JavaLangException *ex) {
    return nil;
  }
}

- (RARETemplateHandler_Template *)loadContextTemplateWithSPOTSequence:(SPOTSequence *)seq
                                              withSPOTPrintableString:(SPOTPrintableString *)ps {
  id<RAREiWidget> context = [self getContext];
  RAREActionLink *link = [RAREActionLink getActionLinkWithRAREiWidget:[self getContext] withSPOTPrintableString:ps withInt:0];
  if ((_baseURL_ != nil) && ![((RAREActionLink *) nil_chk(link)) isInlineURL] && ([((SPOTPrintableString *) nil_chk(ps)) getValue] != nil)) {
    NSString *url = [ps getValue];
    if ([((NSString *) nil_chk(url)) indexOf:':'] == -1) {
      url = [((id<RAREiWidget>) nil_chk(context)) expandStringWithNSString:url withBoolean:NO];
      JavaNetURL *u = [((id<RAREiPlatformAppContext>) nil_chk([context getAppContext])) createURLWithJavaNetURL:_baseURL_ withNSString:url];
      [link setURLWithJavaNetURL:u];
    }
  }
  BOOL cache = [@"true" isEqual:[((SPOTPrintableString *) nil_chk(ps)) spot_getAttributeWithNSString:@"cache"]];
  RARETemplateHandler_Template *t = [self loadTemplateWithRAREiWidget:context withRAREActionLink:link withBoolean:cache withNSString:nil];
  if (t != nil) {
    _autoSkin_ = t->autoSkin_;
    _contextTemplate_ = t;
    if ([seq isKindOfClass:[RARESPOTMainWindow class]]) {
      _defaultTemplate_ = t;
    }
    else if (!cache) {
      [((RAREUTIdentityArrayList *) nil_chk(_contextStack_)) addWithId:t];
      (void) [((JavaUtilIdentityHashMap *) nil_chk(_contextMap_)) putWithId:seq withId:t];
    }
  }
  return t;
}

+ (void)disposingWithRAREiWidget:(id<RAREiWidget>)w {
  id<RAREiPlatformAppContext> app = [((id<RAREiWidget>) nil_chk(w)) getAppContext];
  if (app == nil) {
    app = [RAREPlatform getAppContext];
  }
  if (app != nil) {
    RARETemplateHandler *th = [RARETemplateHandler getHandlerWithRAREiPlatformAppContext:app];
    if ((th != nil) && (th->_context_ == w)) {
      th->_context_ = [app getRootViewer];
    }
  }
}

+ (RARETemplateHandler_TemplateSequence *)getDefaultWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                                                   withNSString:(NSString *)name {
  if (app == nil) {
    app = [RAREPlatform getAppContext];
  }
  RARETemplateHandler *th = [RARETemplateHandler getHandlerWithRAREiPlatformAppContext:app];
  RARETemplateHandler_Template *t = (th == nil) ? nil : th->_defaultTemplate_;
  return (t == nil) ? nil : [t getWidgetWithNSString:name];
}

+ (RARETemplateHandler *)getInstanceWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app {
  return [RARETemplateHandler getTemplateHandlerWithRAREiWidget:[((id<RAREiPlatformAppContext>) nil_chk(app)) getRootViewer]];
}

+ (RARETemplateHandler *)getInstanceWithRAREiWidget:(id<RAREiWidget>)context
                                     withJavaNetURL:(JavaNetURL *)base {
  RARETemplateHandler *th = [RARETemplateHandler getTemplateHandlerWithRAREiWidget:context];
  if (th == nil) {
    th = [[RARETemplateHandler alloc] init];
    [RARETemplateHandler setTemplateHandlerWithRAREiWidget:context withRARETemplateHandler:th];
  }
  ((RARETemplateHandler *) nil_chk(th))->_context_ = context;
  th->_baseURL_ = base;
  return th;
}

+ (void)setDefaultTemplateWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                         withNSString:(NSString *)url
                                          withBoolean:(BOOL)autoSkin {
  [((RARETemplateHandler *) nil_chk([RARETemplateHandler getTemplateHandlerWithRAREiWidget:[((id<RAREiPlatformAppContext>) nil_chk(app)) getRootViewer]])) setDefaultTemplateExWithRAREiWidget:[app getRootViewer] withNSString:url withBoolean:autoSkin];
}

+ (void)setInstanceWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                       withRARETemplateHandler:(RARETemplateHandler *)th {
  if ((RARETemplateHandler__defaultApp_ == nil) || (RARETemplateHandler__defaultApp_ == app)) {
    RARETemplateHandler__defaultApp_ = app;
    RARETemplateHandler__defaultHandler_ = th;
  }
  else {
    if (RARETemplateHandler__handlerMap_ == nil) {
      RARETemplateHandler__handlerMap_ = [[JavaUtilIdentityHashMap alloc] initWithInt:2];
      (void) [RARETemplateHandler__handlerMap_ putWithId:RARETemplateHandler__defaultApp_ withId:RARETemplateHandler__defaultHandler_];
    }
    (void) [((JavaUtilIdentityHashMap *) nil_chk(RARETemplateHandler__handlerMap_)) putWithId:app withId:th];
  }
}

+ (RARETemplateHandler *)getHandlerWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app {
  if (app == RARETemplateHandler__defaultApp_) {
    return RARETemplateHandler__defaultHandler_;
  }
  return (RARETemplateHandler__handlerMap_ == nil) ? nil : [RARETemplateHandler__handlerMap_ getWithId:app];
}

+ (RARETemplateHandler *)getTemplateHandlerWithRAREiWidget:(id<RAREiWidget>)context {
  id<RAREiPlatformAppContext> app = (context != nil) ? [context getAppContext] : [RAREPlatform getAppContext];
  id<RAREiResourceFinder> rf = [app getResourceFinder];
  return (rf == nil) ? [RARETemplateHandler getHandlerWithRAREiPlatformAppContext:app] : [rf getTemplateHandlerWithRAREiWidget:context];
}

+ (void)setTemplateHandlerWithRAREiWidget:(id<RAREiWidget>)context
                  withRARETemplateHandler:(RARETemplateHandler *)th {
  id<RAREiPlatformAppContext> app = (context != nil) ? [context getAppContext] : [RAREPlatform getAppContext];
  id<RAREiResourceFinder> rf = [app getResourceFinder];
  if (rf != nil) {
    [rf setTemplateHandlerWithRAREiWidget:context withRARETemplateHandler:th];
  }
  else {
    [RARETemplateHandler setInstanceWithRAREiPlatformAppContext:app withRARETemplateHandler:th];
  }
}

- (id)init {
  if (self = [super init]) {
    _nameMap_ = [[JavaUtilHashMap alloc] init];
    _contextMap_ = [[JavaUtilIdentityHashMap alloc] init];
    _templateMap_ = [[JavaUtilHashMap alloc] init];
    _contextStack_ = [[RAREUTIdentityArrayList alloc] init];
  }
  return self;
}

- (void)copyAllFieldsTo:(RARETemplateHandler *)other {
  [super copyAllFieldsTo:other];
  other->_autoSkin_ = _autoSkin_;
  other->_baseURL_ = _baseURL_;
  other->_context_ = _context_;
  other->_contextMap_ = _contextMap_;
  other->_contextStack_ = _contextStack_;
  other->_contextTemplate_ = _contextTemplate_;
  other->_defaultTemplate_ = _defaultTemplate_;
  other->_nameMap_ = _nameMap_;
  other->_templateMap_ = _templateMap_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getContextTemplate", NULL, "LRARETemplateHandler_Template", 0x1, NULL },
    { "getTemplateWithNSString:", NULL, "LRARETemplateHandler_Template", 0x1, NULL },
    { "loadTemplateWithRAREiWidget:withRAREActionLink:withBoolean:withNSString:", NULL, "LRARETemplateHandler_Template", 0x1, NULL },
    { "loadTemplateWithRAREiWidget:withJavaNetURL:withBoolean:withNSString:", NULL, "LRARETemplateHandler_Template", 0x1, NULL },
    { "resetWithSPOTSequence:withSPOTPrintableString:", NULL, "V", 0x1, "JavaNetMalformedURLException" },
    { "getContext", NULL, "LRAREiWidget", 0x2, NULL },
    { "setDefaultTemplateExWithRAREiWidget:withNSString:withBoolean:", NULL, "V", 0x2, "JavaNetMalformedURLException" },
    { "createURLStringWithRAREUTiStructuredNode:", NULL, "LSPOTPrintableString", 0x0, NULL },
    { "loadContextTemplateWithSPOTSequence:withSPOTPrintableString:", NULL, "LRARETemplateHandler_Template", 0x0, "JavaNetMalformedURLException" },
    { "getDefaultWithRAREiPlatformAppContext:withNSString:", NULL, "LRARETemplateHandler_TemplateSequence", 0x9, NULL },
    { "getInstanceWithRAREiPlatformAppContext:", NULL, "LRARETemplateHandler", 0x9, NULL },
    { "getInstanceWithRAREiWidget:withJavaNetURL:", NULL, "LRARETemplateHandler", 0x9, NULL },
    { "setDefaultTemplateWithRAREiPlatformAppContext:withNSString:withBoolean:", NULL, "V", 0x9, "JavaNetMalformedURLException" },
    { "getHandlerWithRAREiPlatformAppContext:", NULL, "LRARETemplateHandler", 0xa, NULL },
    { "getTemplateHandlerWithRAREiWidget:", NULL, "LRARETemplateHandler", 0xa, NULL },
    { "setTemplateHandlerWithRAREiWidget:withRARETemplateHandler:", NULL, "V", 0xa, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "_context_", NULL, 0x0, "LRAREiWidget" },
    { "_nameMap_", NULL, 0x4, "LJavaUtilHashMap" },
    { "_contextMap_", NULL, 0x4, "LJavaUtilIdentityHashMap" },
    { "_templateMap_", NULL, 0x4, "LJavaUtilHashMap" },
    { "_contextStack_", NULL, 0x4, "LRAREUTIdentityArrayList" },
    { "_contextTemplate_", NULL, 0x4, "LRARETemplateHandler_Template" },
    { "_defaultTemplate_", NULL, 0x4, "LRARETemplateHandler_Template" },
    { "TAG_", NULL, 0x9, "LNSObject" },
    { "_handlerMap_", NULL, 0x8, "LJavaUtilIdentityHashMap" },
    { "_defaultApp_", NULL, 0x8, "LRAREiPlatformAppContext" },
    { "_defaultHandler_", NULL, 0x8, "LRARETemplateHandler" },
  };
  static J2ObjcClassInfo _RARETemplateHandler = { "TemplateHandler", "com.appnativa.rare", NULL, 0x1, 16, methods, 11, fields, 0, NULL};
  return &_RARETemplateHandler;
}

@end

@interface RARETemplateHandler_iCustomizer : NSObject
@end

@implementation RARETemplateHandler_iCustomizer

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "customizeWithRARETemplateHandler_Template:withSPOTSequence:", NULL, "V", 0x401, NULL },
  };
  static J2ObjcClassInfo _RARETemplateHandler_iCustomizer = { "iCustomizer", "com.appnativa.rare", "TemplateHandler", 0x209, 1, methods, 0, NULL, 0, NULL};
  return &_RARETemplateHandler_iCustomizer;
}

@end
@implementation RARETemplateHandler_Template

- (id)initWithRARETemplateHandler:(RARETemplateHandler *)th
      withRARESPOTTemplateContext:(RARESPOTTemplateContext *)t
                  withRAREiWidget:(id<RAREiWidget>)context {
  if (self = [super init]) {
    handler_ = th;
    columns_ = [RAREDataParser resolveSetWithRAREiWidget:context withSPOTSet:((RARESPOTTemplateContext *) nil_chk(t))->columns_ withIOSClass:[IOSClass classWithClass:[RARESPOTItemDescription class]]];
    cellPainters_ = [RAREDataParser resolveSetWithRAREiWidget:context withSPOTSet:t->cellPainters_ withIOSClass:[IOSClass classWithClass:[RARESPOTGridCell class]]];
    dataItems_ = [RAREDataParser resolveSetWithRAREiWidget:context withSPOTSet:t->dataItems_ withIOSClass:[IOSClass classWithClass:[RARESPOTDataItem class]]];
    collapsibles_ = [RAREDataParser resolveSetWithRAREiWidget:context withSPOTSet:t->collapsibles_ withIOSClass:[IOSClass classWithClass:[RARESPOTCollapsibleInfo class]]];
    plots_ = [RAREDataParser resolveSetWithRAREiWidget:context withSPOTSet:t->plots_ withIOSClass:[IOSClass classWithClass:[RARESPOTPlot class]]];
    regions_ = [RAREDataParser resolveSetWithRAREiWidget:context withSPOTSet:t->regions_ withIOSClass:[IOSClass classWithClass:[RARESPOTRegion class]]];
    scrollPanes_ = [RAREDataParser resolveSetWithRAREiWidget:context withSPOTSet:t->scrollPanes_ withIOSClass:[IOSClass classWithClass:[RARESPOTScrollPane class]]];
    autoSkin_ = [((SPOTBoolean *) nil_chk(t->autoSkin_)) booleanValue];
    name_ = [((SPOTPrintableString *) nil_chk(t->name_)) getValue];
    widgetMap_ = [self createWidgetMapWithRAREiWidget:context withSPOTSet:[RAREDataParser resolveSetWithRAREiWidget:context withSPOTSet:t->widgets_ withIOSClass:[IOSClass classWithClass:[RARESPOTWidget class]]]];
  }
  return self;
}

- (RARETemplateHandler_TemplateSequence *)getCellPainterWithNSString:(NSString *)name {
  if (paintersMap_ == nil) {
    paintersMap_ = [self createMapWithSPOTSet:cellPainters_];
    cellPainters_ = nil;
  }
  return [((id<JavaUtilMap>) nil_chk(paintersMap_)) getWithId:name];
}

- (RARETemplateHandler_TemplateSequence *)getCollapsibleWithNSString:(NSString *)name {
  if (collapsibleMap_ == nil) {
    collapsibleMap_ = [self createMapWithSPOTSet:collapsibles_];
    collapsibles_ = nil;
  }
  return [((id<JavaUtilMap>) nil_chk(collapsibleMap_)) getWithId:name];
}

- (RARETemplateHandler_TemplateSequence *)getColumnWithNSString:(NSString *)name {
  if (columnsMap_ == nil) {
    columnsMap_ = [self createMapWithSPOTSet:columns_];
    columns_ = nil;
  }
  return [((id<JavaUtilMap>) nil_chk(columnsMap_)) getWithId:name];
}

- (id<RARETemplateHandler_iCustomizer>)getCustomizer {
  return customizer_;
}

- (RARETemplateHandler_TemplateSequence *)getDataItemWithNSString:(NSString *)name {
  if (dataItemsMap_ == nil) {
    dataItemsMap_ = [self createMapWithSPOTSet:dataItems_];
    dataItems_ = nil;
  }
  return [((id<JavaUtilMap>) nil_chk(dataItemsMap_)) getWithId:name];
}

- (id)getLinkedData {
  return linkedData_;
}

- (RARETemplateHandler_TemplateSequence *)getPlotWithNSString:(NSString *)name {
  if (plotMap_ == nil) {
    plotMap_ = [self createMapWithSPOTSet:plots_];
    plots_ = nil;
  }
  return [((id<JavaUtilMap>) nil_chk(plotMap_)) getWithId:name];
}

- (RARETemplateHandler_TemplateSequence *)getRegionWithNSString:(NSString *)name {
  if (regionMap_ == nil) {
    regionMap_ = [self createMapWithSPOTSet:regions_];
    regions_ = nil;
  }
  return [((id<JavaUtilMap>) nil_chk(regionMap_)) getWithId:name];
}

- (RARETemplateHandler_TemplateSequence *)getScrollPaneWithNSString:(NSString *)name {
  if (scrollMap_ == nil) {
    scrollMap_ = [self createMapWithSPOTSet:scrollPanes_];
    scrollPanes_ = nil;
  }
  return [((id<JavaUtilMap>) nil_chk(scrollMap_)) getWithId:name];
}

- (RARETemplateHandler_TemplateSequence *)getWidgetWithNSString:(NSString *)name {
  return [((id<JavaUtilMap>) nil_chk(widgetMap_)) getWithId:name];
}

- (void)setCustomizerWithRARETemplateHandler_iCustomizer:(id<RARETemplateHandler_iCustomizer>)customizer {
  self->customizer_ = customizer;
}

- (void)setLinkedDataWithId:(id)linkedData {
  self->linkedData_ = linkedData;
}

- (BOOL)nameEqualsWithNSString:(NSString *)s {
  return (name_ == nil) ? NO : [name_ isEqual:s];
}

- (id<JavaUtilMap>)createMapWithSPOTSet:(SPOTSet *)set {
  int len = [((SPOTSet *) nil_chk(set)) size];
  id<JavaUtilMap> map = [[JavaUtilHashMap alloc] initWithInt:len];
  SPOTSequence *c;
  NSString *s;
  id<RAREiPlatformAppContext> app = [RAREPlatform getAppContext];
  for (int i = len - 1; i > -1; i--) {
    c = (SPOTSequence *) check_class_cast([set getExWithInt:i], [SPOTSequence class]);
    s = [((SPOTSequence *) nil_chk(c)) spot_getAttributeWithNSString:@"os"];
    if (![((id<RAREiPlatformAppContext>) nil_chk(app)) okForOSWithISPOTElement:c]) {
      (void) [set removeWithInt:i];
      continue;
    }
    s = [((id<iSPOTElement>) nil_chk([c spot_elementForWithNSString:@"templateName"])) spot_stringValue];
    if (s != nil) {
      (void) [map putWithId:s withId:[[RARETemplateHandler_TemplateSequence alloc] initWithSPOTSequence:c]];
    }
  }
  return map;
}

- (id<JavaUtilMap>)createWidgetMapWithRAREiWidget:(id<RAREiWidget>)context
                                      withSPOTSet:(SPOTSet *)set {
  int len = [((SPOTSet *) nil_chk(set)) size];
  id<JavaUtilMap> map = [[JavaUtilHashMap alloc] initWithInt:len];
  SPOTSequence *c;
  NSString *s;
  SPOTAny *any;
  NSString *tc;
  NSString *tn;
  id<RAREiPlatformAppContext> app = [RAREPlatform getAppContext];
  for (int i = len - 1; i > -1; i--) {
    c = nil;
    any = (SPOTAny *) check_class_cast([set getWithInt:i], [SPOTAny class]);
    if (![((id<RAREiPlatformAppContext>) nil_chk(app)) okForOSWithISPOTElement:any]) {
      (void) [set removeWithInt:i];
      continue;
    }
    s = [((SPOTAny *) nil_chk(any)) spot_getAttributeWithNSString:@"url"];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      @try {
        JavaNetURL *url = [((id<RAREiWidget>) nil_chk(context)) getURLWithNSString:s];
        c = (SPOTSequence *) check_class_cast([RAREDataParser loadSPOTObjectWithRAREiWidget:context withRAREiURLConnection:[((id<RAREiPlatformAppContext>) nil_chk([context getAppContext])) openConnectionWithJavaNetURL:url] withISPOTElement:nil], [SPOTSequence class]);
      }
      @catch (JavaLangException *ex) {
        [RAREPlatform ignoreExceptionWithNSString:@"Failed to load template widget from url" withJavaLangThrowable:ex];
        continue;
      }
    }
    if (c == nil) {
      c = (SPOTSequence *) check_class_cast([any getValue], [SPOTSequence class]);
    }
    RARETemplateHandler_TemplateSequence *ts = nil;
    tn = [any spot_getAttributeWithNSString:@"baseTemplateName"];
    tc = [any spot_getAttributeWithNSString:@"templateContext"];
    if (tn != nil) {
      if ([tn isEqual:@"__base__"]) {
        tn = [((SPOTSequence *) nil_chk(c)) spot_getClassShortName];
      }
      if (tc != nil) {
        RARETemplateHandler_Template *t = [((RARETemplateHandler *) nil_chk(handler_)) getTemplateWithNSString:tc];
        ts = (t == nil) ? nil : [t getWidgetWithNSString:tn];
      }
      else {
        ts = (RARETemplateHandler_TemplateSequence *) check_class_cast([map getWithId:tn], [RARETemplateHandler_TemplateSequence class]);
        if ((ts == nil) && (((RARETemplateHandler *) nil_chk(handler_))->_contextTemplate_ != nil)) {
          ts = [handler_->_contextTemplate_ getWidgetWithNSString:tn];
        }
      }
    }
    s = [((id<iSPOTElement>) nil_chk([((SPOTSequence *) nil_chk(c)) spot_elementForWithNSString:@"templateName"])) spot_stringValue];
    if (s == nil) {
      s = [c spot_getClassShortName];
    }
    if (ts != nil) {
      (void) [map putWithId:s withId:[[RARETemplateHandler_TemplateSequence alloc] initWithRARETemplateHandler_TemplateSequence:ts withSPOTSequence:c]];
    }
    else {
      (void) [map putWithId:s withId:[[RARETemplateHandler_TemplateSequence alloc] initWithSPOTSequence:c]];
    }
  }
  return map;
}

- (void)copyAllFieldsTo:(RARETemplateHandler_Template *)other {
  [super copyAllFieldsTo:other];
  other->autoSkin_ = autoSkin_;
  other->cellPainters_ = cellPainters_;
  other->collapsibleMap_ = collapsibleMap_;
  other->collapsibles_ = collapsibles_;
  other->columns_ = columns_;
  other->columnsMap_ = columnsMap_;
  other->customizer_ = customizer_;
  other->dataItems_ = dataItems_;
  other->dataItemsMap_ = dataItemsMap_;
  other->handler_ = handler_;
  other->linkedData_ = linkedData_;
  other->name_ = name_;
  other->paintersMap_ = paintersMap_;
  other->plotMap_ = plotMap_;
  other->plots_ = plots_;
  other->regionMap_ = regionMap_;
  other->regions_ = regions_;
  other->scrollMap_ = scrollMap_;
  other->scrollPanes_ = scrollPanes_;
  other->widgetMap_ = widgetMap_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getCellPainterWithNSString:", NULL, "LRARETemplateHandler_TemplateSequence", 0x1, NULL },
    { "getCollapsibleWithNSString:", NULL, "LRARETemplateHandler_TemplateSequence", 0x1, NULL },
    { "getColumnWithNSString:", NULL, "LRARETemplateHandler_TemplateSequence", 0x1, NULL },
    { "getCustomizer", NULL, "LRARETemplateHandler_iCustomizer", 0x1, NULL },
    { "getDataItemWithNSString:", NULL, "LRARETemplateHandler_TemplateSequence", 0x1, NULL },
    { "getLinkedData", NULL, "LNSObject", 0x1, NULL },
    { "getPlotWithNSString:", NULL, "LRARETemplateHandler_TemplateSequence", 0x1, NULL },
    { "getRegionWithNSString:", NULL, "LRARETemplateHandler_TemplateSequence", 0x1, NULL },
    { "getScrollPaneWithNSString:", NULL, "LRARETemplateHandler_TemplateSequence", 0x1, NULL },
    { "getWidgetWithNSString:", NULL, "LRARETemplateHandler_TemplateSequence", 0x1, NULL },
    { "nameEqualsWithNSString:", NULL, "Z", 0x2, NULL },
    { "createMapWithSPOTSet:", NULL, "LJavaUtilMap", 0x0, NULL },
    { "createWidgetMapWithRAREiWidget:withSPOTSet:", NULL, "LJavaUtilMap", 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "autoSkin_", NULL, 0x10, "Z" },
    { "cellPainters_", NULL, 0x0, "LSPOTSet" },
    { "collapsibleMap_", NULL, 0x0, "LJavaUtilMap" },
    { "collapsibles_", NULL, 0x0, "LSPOTSet" },
    { "columns_", NULL, 0x0, "LSPOTSet" },
    { "columnsMap_", NULL, 0x0, "LJavaUtilMap" },
    { "dataItems_", NULL, 0x0, "LSPOTSet" },
    { "dataItemsMap_", NULL, 0x0, "LJavaUtilMap" },
    { "handler_", NULL, 0x0, "LRARETemplateHandler" },
    { "paintersMap_", NULL, 0x0, "LJavaUtilMap" },
    { "plotMap_", NULL, 0x0, "LJavaUtilMap" },
    { "plots_", NULL, 0x0, "LSPOTSet" },
    { "regionMap_", NULL, 0x0, "LJavaUtilMap" },
    { "regions_", NULL, 0x0, "LSPOTSet" },
    { "scrollMap_", NULL, 0x0, "LJavaUtilMap" },
    { "scrollPanes_", NULL, 0x0, "LSPOTSet" },
    { "widgetMap_", NULL, 0x0, "LJavaUtilMap" },
    { "name_", NULL, 0x12, "LNSString" },
  };
  static J2ObjcClassInfo _RARETemplateHandler_Template = { "Template", "com.appnativa.rare", "TemplateHandler", 0x9, 13, methods, 18, fields, 0, NULL};
  return &_RARETemplateHandler_Template;
}

@end
@implementation RARETemplateHandler_TemplateSequence

- (id)initWithSPOTSequence:(SPOTSequence *)seq {
  if (self = [super init]) {
    elements_ = [[JavaUtilArrayList alloc] init];
    [((SPOTSequence *) nil_chk(seq)) spot_getValuesThatWereSetWithJavaUtilList:elements_];
    attributes_ = [seq spot_getAttributesEx];
  }
  return self;
}

- (id)initWithRARETemplateHandler_TemplateSequence:(RARETemplateHandler_TemplateSequence *)base
                                  withSPOTSequence:(SPOTSequence *)seq {
  if (self = [super init]) {
    elements_ = [[JavaUtilArrayList alloc] init];
    [elements_ addAllWithJavaUtilCollection:((RARETemplateHandler_TemplateSequence *) nil_chk(base))->elements_];
    [((SPOTSequence *) nil_chk(seq)) spot_getValuesThatWereSetWithJavaUtilList:elements_];
    attributes_ = [seq spot_getAttributesEx];
    if (base->attributes_ != nil) {
      if (attributes_ == nil) {
        attributes_ = [[JavaUtilLinkedHashMap alloc] init];
      }
      [attributes_ putAllWithJavaUtilMap:base->attributes_];
    }
  }
  return self;
}

- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  (void) [((id<JavaUtilMap>) nil_chk(attributes_)) putWithId:name withId:value];
}

- (void)addElementWithISPOTElement:(id<iSPOTElement>)e {
  [((JavaUtilArrayList *) nil_chk(elements_)) addWithId:e];
}

- (void)clear {
  [((JavaUtilArrayList *) nil_chk(elements_)) clear];
  if (attributes_ != nil) {
    [attributes_ clear];
  }
}

- (void)spot_copySharedMemberValuesWithSPOTSequence:(SPOTSequence *)seq
                                   withJavaUtilList:(id<JavaUtilList>)list {
  int n = (list == nil) ? 0 : [list size];
  NSString *name = nil;
  id<iSPOTElement> ti = nil;
  id<iSPOTElement> ti2 = nil;
  for (int i = 0; i < n; i++) {
    ti = (id<iSPOTElement>) check_protocol_cast([((id<JavaUtilList>) nil_chk(list)) getWithInt:i], @protocol(iSPOTElement));
    if (ti != nil) {
      name = [ti spot_getName];
      ti2 = [((SPOTSequence *) nil_chk(seq)) spot_elementForWithNSString:name];
      if (ti2 != nil) {
        [ti2 spot_copyWithISPOTElement:ti withBoolean:YES];
        if ([RARETemplateHandler TAG] != nil) {
          (void) [ti2 spot_setLinkedDataWithId:[RARETemplateHandler TAG]];
        }
      }
      else if ([seq spot_hasNamedElementWithNSString:name]) {
        ti2 = (id<iSPOTElement>) check_protocol_cast([ti clone], @protocol(iSPOTElement));
        [seq spot_setReferenceVariableWithNSString:name withISPOTElement:ti2];
        if ([RARETemplateHandler TAG] != nil) {
          (void) [((id<iSPOTElement>) nil_chk(ti2)) spot_setLinkedDataWithId:[RARETemplateHandler TAG]];
        }
      }
    }
  }
}

- (void)populateWithSPOTSequence:(SPOTSequence *)seq {
  [self spot_copySharedMemberValuesWithSPOTSequence:seq withJavaUtilList:elements_];
  if (attributes_ != nil) {
    [((SPOTSequence *) nil_chk(seq)) spot_addAttributesWithJavaUtilMap:attributes_];
  }
}

- (void)copyAllFieldsTo:(RARETemplateHandler_TemplateSequence *)other {
  [super copyAllFieldsTo:other];
  other->attributes_ = attributes_;
  other->elements_ = elements_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithSPOTSequence:", NULL, NULL, 0x0, NULL },
    { "initWithRARETemplateHandler_TemplateSequence:withSPOTSequence:", NULL, NULL, 0x0, NULL },
    { "populateWithSPOTSequence:", NULL, "V", 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "elements_", NULL, 0x0, "LJavaUtilArrayList" },
    { "attributes_", NULL, 0x0, "LJavaUtilMap" },
  };
  static J2ObjcClassInfo _RARETemplateHandler_TemplateSequence = { "TemplateSequence", "com.appnativa.rare", "TemplateHandler", 0x9, 3, methods, 2, fields, 0, NULL};
  return &_RARETemplateHandler_TemplateSequence;
}

@end
