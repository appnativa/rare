//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-colorchooser/com/appnativa/rare/widget/aColorChooserWidget.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/spot/ColorChooser.h"
#include "com/appnativa/rare/spot/DateChooser.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/ui/ColorChooserPanel.h"
#include "com/appnativa/rare/ui/ColorPalette.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/ComboBoxComponent.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/aComboBoxComponent.h"
#include "com/appnativa/rare/ui/aWidgetListener.h"
#include "com/appnativa/rare/ui/event/iActionListener.h"
#include "com/appnativa/rare/ui/event/iPopupMenuListener.h"
#include "com/appnativa/rare/ui/iActionComponent.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/painter/PainterHolder.h"
#include "com/appnativa/rare/ui/painter/UIComponentPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/widget/ColorChooserWidget.h"
#include "com/appnativa/rare/widget/aColorChooserWidget.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTPrintableString.h"

@implementation RAREaColorChooserWidget

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    widgetType_ = [RAREiWidget_WidgetTypeEnum ColorChooser];
  }
  return self;
}

- (void)addActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
  if ([(id) dataComponent_ isKindOfClass:[RAREaComboBoxComponent class]]) {
    [((RAREaComboBoxComponent *) check_class_cast(dataComponent_, [RAREaComboBoxComponent class])) addActionListenerWithRAREiActionListener:l];
  }
  else {
    [((RAREColorChooserPanel *) check_class_cast(dataComponent_, [RAREColorChooserPanel class])) addActionListenerWithRAREiActionListener:l];
  }
}

- (void)addPopupMenuListenerWithRAREiPopupMenuListener:(id<RAREiPopupMenuListener>)l {
  if ([(id) [self getDataComponent] isKindOfClass:[RAREComboBoxComponent class]]) {
    [((RAREComboBoxComponent *) check_class_cast([self getDataComponent], [RAREComboBoxComponent class])) addPopupMenuListenerWithRAREiPopupMenuListener:l];
  }
}

- (void)clearContents {
  [super clearContents];
  [self setColorWithRAREUIColor:nil];
}

- (void)configureWithRARESPOTColorChooser:(RARESPOTColorChooser *)cfg {
  id<RAREiPlatformComponent> comp = nil;
  switch ([((RARESPOTColorChooser_CDropDownType *) nil_chk(((RARESPOTColorChooser *) nil_chk(cfg))->dropDownType_)) intValue]) {
    case RARESPOTColorChooser_CDropDownType_none:
    comp = [self createPanelWithRARESPOTColorChooser:cfg];
    break;
    case RARESPOTColorChooser_CDropDownType_button:
    comp = [self createButtonWithRARESPOTColorChooser:cfg];
    break;
    default:
    comp = [self createComboBoxWithRARESPOTColorChooser:cfg];
    break;
  }
  dataComponent_ = formComponent_ = comp;
  [self configureWithRARESPOTWidget:cfg withBoolean:YES withBoolean:NO withBoolean:YES withBoolean:YES];
  if (![RAREPlatform isTouchDevice]) {
    [self setFocusPaintedWithBoolean:YES];
  }
  if ([(id) comp isKindOfClass:[RAREaComboBoxComponent class]]) {
    [((RAREaComboBoxComponent *) check_class_cast(comp, [RAREaComboBoxComponent class])) configurationCompletedWithRAREaWidget:self withRARESPOTWidget:cfg];
  }
  [self fireConfigureEventWithRARESPOTWidget:cfg withNSString:[RAREiConstants EVENT_CONFIGURE]];
}

- (void)configureWithRARESPOTWidget:(RARESPOTWidget *)cfg {
  [self configureWithRARESPOTColorChooser:(RARESPOTColorChooser *) check_class_cast(cfg, [RARESPOTColorChooser class])];
}

+ (RAREColorChooserWidget *)createWithRAREiContainer:(id<RAREiContainer>)parent
                             withRARESPOTDateChooser:(RARESPOTDateChooser *)cfg {
  RAREColorChooserWidget *dc = [[RAREColorChooserWidget alloc] initWithRAREiContainer:parent];
  [dc configureWithRARESPOTWidget:cfg];
  return dc;
}

- (void)dispose {
  [super dispose];
  colorChooserPanel_ = nil;
}

- (void)removeActionListenerWithRAREiActionListener:(id<RAREiActionListener>)l {
  if ([(id) dataComponent_ isKindOfClass:[RAREaComboBoxComponent class]]) {
    [((RAREaComboBoxComponent *) check_class_cast(dataComponent_, [RAREaComboBoxComponent class])) removeActionListenerWithRAREiActionListener:l];
  }
  else {
    [((RAREColorChooserPanel *) check_class_cast(dataComponent_, [RAREColorChooserPanel class])) removeActionListenerWithRAREiActionListener:l];
  }
}

- (void)removePopupMenuListenerWithRAREiPopupMenuListener:(id<RAREiPopupMenuListener>)l {
  if ([(id) dataComponent_ isKindOfClass:[RAREaComboBoxComponent class]]) {
    [((RAREaComboBoxComponent *) check_class_cast(dataComponent_, [RAREaComboBoxComponent class])) removePopupMenuListenerWithRAREiPopupMenuListener:l];
  }
}

- (void)setColorWithRAREUIColor:(RAREUIColor *)color {
  [((RAREColorChooserPanel *) nil_chk(colorChooserPanel_)) setSelectedColorWithRAREUIColor:color];
}

- (BOOL)setDisplayedMonthWithInt:(int)year
                         withInt:(int)month
                         withInt:(int)index {
  return NO;
}

- (void)setValueWithId:(id)value {
  if ([value isKindOfClass:[RARERenderableDataItem class]]) {
    value = [((RARERenderableDataItem *) check_class_cast(value, [RARERenderableDataItem class])) getValue];
  }
  if ([value isKindOfClass:[RAREUIColor class]]) {
    [self setColorWithRAREUIColor:(RAREUIColor *) check_class_cast(value, [RAREUIColor class])];
  }
  else if (value != nil) {
    [self setValueAsStringWithNSString:[value description]];
  }
}

- (void)setValueAsStringWithNSString:(NSString *)value {
  if ((value == nil) || ([value sequenceLength] == 0)) {
    return;
  }
  [self setColorWithRAREUIColor:[RAREColorUtils getColorWithNSString:value]];
}

- (RAREUIColor *)getColor {
  return [((RAREColorChooserPanel *) nil_chk(colorChooserPanel_)) getSelectedColor];
}

- (id)getSelection {
  return [((RAREColorChooserPanel *) nil_chk(colorChooserPanel_)) getSelectedColor];
}

- (NSString *)getSelectionAsString {
  RAREUIColor *c = [self getColor];
  return (c == nil) ? @"" : [c description];
}

- (NSString *)getValueAsString {
  return [self getSelectionAsString];
}

- (void)configureWithRAREColorChooserPanel:(RAREColorChooserPanel *)panel
                  withRARESPOTColorChooser:(RARESPOTColorChooser *)cfg {
  if ([((SPOTBoolean *) nil_chk(((RARESPOTColorChooser *) nil_chk(cfg))->showOkButton_)) spot_valueWasSet]) {
    [((RAREColorChooserPanel *) nil_chk(panel)) setShowOKButtonWithBoolean:[cfg->showOkButton_ booleanValue]];
  }
  if ([@"true" isEqual:[((RARESPOTColorChooser_CColorPalette *) nil_chk(cfg->colorPalette_)) spot_getAttributeWithNSString:@"useList"]]) {
    [((RAREColorChooserPanel *) nil_chk(panel)) setUseListWithBoolean:YES];
  }
  [((RAREColorChooserPanel *) nil_chk(panel)) setShowNoneButtonWithBoolean:[((SPOTBoolean *) nil_chk(cfg->showNoneButton_)) booleanValue]];
  NSString *s = [((SPOTPrintableString *) nil_chk(cfg->value_)) getValue];
  if ((s != nil) && ([s sequenceLength] > 0)) {
    [self setValueAsStringWithNSString:s];
  }
  switch ([cfg->colorPalette_ intValue]) {
    case RARESPOTColorChooser_CColorPalette_color_16:
    [panel setColorPaletteWithRAREColorPalette:[RAREColorPalette getColorPalette16]];
    break;
    case RARESPOTColorChooser_CColorPalette_gray_16:
    [panel setColorPaletteWithRAREColorPalette:[RAREColorPalette getGrayPalette16]];
    break;
    default:
    [panel setColorPaletteWithRAREColorPalette:[RAREColorPalette getColorPalette40]];
    break;
  }
}

- (void)configurePopupButtonWithRAREiActionComponent:(id<RAREiActionComponent>)ac
                            withRARESPOTColorChooser:(RARESPOTColorChooser *)cfg {
  RAREPainterHolder *p = [RAREPainterHolder createWithRAREiWidget:self withISPOTElement:((RARESPOTColorChooser *) nil_chk(cfg))->showPopupButton_];
  if (p != nil) {
    if ([p isBackgroundPaintEnabled]) {
      id<RAREiPlatformComponentPainter> cp = [((id<RAREiActionComponent>) nil_chk(ac)) getComponentPainter];
      if (cp == nil) {
        cp = [[RAREUIComponentPainter alloc] init];
      }
      [((id<RAREiPlatformComponentPainter>) nil_chk(cp)) setPainterHolderWithRAREPainterHolder:p];
      [ac setComponentPainterWithRAREiPlatformComponentPainter:cp];
    }
    if ([p getNormalIcon] != nil) {
      [((id<RAREiActionComponent>) nil_chk(ac)) setIconWithRAREiPlatformIcon:[p getNormalIcon]];
    }
    if ([p getDisabledIcon] != nil) {
      [((id<RAREiActionComponent>) nil_chk(ac)) setDisabledIconWithRAREiPlatformIcon:[p getDisabledIcon]];
    }
    if ([p getPressedIcon] != nil) {
      [((id<RAREiActionComponent>) nil_chk(ac)) setPressedIconWithRAREiPlatformIcon:[p getPressedIcon]];
    }
  }
}

- (id<RAREiActionComponent>)createButtonWithRARESPOTColorChooser:(RARESPOTColorChooser *)cfg {
  RAREColorChooserPanel_ColorButton *comp = [[RAREColorChooserPanel_ColorButton alloc] initWithRAREiWidget:self];
  colorChooserPanel_ = [comp getPanel];
  [self configureWithRAREColorChooserPanel:colorChooserPanel_ withRARESPOTColorChooser:cfg];
  [((RAREColorChooserPanel *) nil_chk(colorChooserPanel_)) setShowOKButtonWithBoolean:YES];
  [colorChooserPanel_ setShowNoneButtonWithBoolean:YES];
  [comp setContent];
  return comp;
}

- (id<RAREiPlatformComponent>)createComboBoxWithRARESPOTColorChooser:(RARESPOTColorChooser *)cfg {
  RAREColorChooserPanel_ColorChooserComboBox *comp = [[RAREColorChooserPanel_ColorChooserComboBox alloc] initWithRAREiWidget:self];
  [comp setUseDialogButtonWithBoolean:[((SPOTBoolean *) nil_chk(((RARESPOTColorChooser *) nil_chk(cfg))->showPopupAsDialog_)) booleanValue]];
  [comp setShowPopupAsDialogWithBoolean:[cfg->showPopupAsDialog_ booleanValue]];
  [comp setEditableWithBoolean:[((SPOTBoolean *) nil_chk(cfg->editable_)) booleanValue]];
  [comp setShowValueAsHexWithBoolean:[((SPOTBoolean *) nil_chk(cfg->showValueAsHex_)) booleanValue]];
  if (![((SPOTBoolean *) nil_chk(cfg->showPopupButton_)) booleanValue]) {
    [comp setButtonVisibleWithBoolean:NO];
  }
  else {
    RAREPainterHolder *p = [RAREPainterHolder createWithRAREiWidget:self withISPOTElement:cfg->showPopupButton_];
    [comp setButtonPainterHolderWithRAREPainterHolder:p];
  }
  colorChooserPanel_ = [comp getPanel];
  [self configureWithRAREColorChooserPanel:colorChooserPanel_ withRARESPOTColorChooser:cfg];
  if ([cfg->showPopupAsDialog_ booleanValue]) {
    [((RAREColorChooserPanel *) nil_chk(colorChooserPanel_)) setShowOKButtonWithBoolean:YES];
    [colorChooserPanel_ setShowNoneButtonWithBoolean:YES];
  }
  [comp setContent];
  return comp;
}

- (id<RAREiPlatformComponent>)createPanelWithRARESPOTColorChooser:(RARESPOTColorChooser *)cfg {
  colorChooserPanel_ = [[RAREColorChooserPanel alloc] initWithRAREiWidget:self];
  [self configureWithRAREColorChooserPanel:colorChooserPanel_ withRARESPOTColorChooser:cfg];
  [colorChooserPanel_ setContentWithRAREiWidget:self];
  return colorChooserPanel_;
}

- (void)initializeListenersWithRAREaWidgetListener:(RAREaWidgetListener *)l {
  [super initializeListenersWithRAREaWidgetListener:l];
  if (l != nil) {
    if ([l isExpansionEventsEnabled]) {
      [self addPopupMenuListenerWithRAREiPopupMenuListener:l];
    }
  }
}

- (void)uninitializeListenersWithRAREaWidgetListener:(RAREaWidgetListener *)l {
  [super uninitializeListenersWithRAREaWidgetListener:l];
  if (l != nil) {
    [self removePopupMenuListenerWithRAREiPopupMenuListener:l];
  }
}

- (void)copyAllFieldsTo:(RAREaColorChooserWidget *)other {
  [super copyAllFieldsTo:other];
  other->colorChooserPanel_ = colorChooserPanel_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "createWithRAREiContainer:withRARESPOTDateChooser:", NULL, "LRAREColorChooserWidget", 0x9, NULL },
    { "setDisplayedMonthWithInt:withInt:withInt:", NULL, "Z", 0x1, NULL },
    { "getColor", NULL, "LRAREUIColor", 0x1, NULL },
    { "getSelection", NULL, "LNSObject", 0x1, NULL },
    { "getSelectionAsString", NULL, "LNSString", 0x1, NULL },
    { "getValueAsString", NULL, "LNSString", 0x1, NULL },
    { "configureWithRAREColorChooserPanel:withRARESPOTColorChooser:", NULL, "V", 0x4, NULL },
    { "configurePopupButtonWithRAREiActionComponent:withRARESPOTColorChooser:", NULL, "V", 0x4, NULL },
    { "createButtonWithRARESPOTColorChooser:", NULL, "LRAREiActionComponent", 0x4, NULL },
    { "createComboBoxWithRARESPOTColorChooser:", NULL, "LRAREiPlatformComponent", 0x4, NULL },
    { "createPanelWithRARESPOTColorChooser:", NULL, "LRAREiPlatformComponent", 0x4, NULL },
    { "initializeListenersWithRAREaWidgetListener:", NULL, "V", 0x4, NULL },
    { "uninitializeListenersWithRAREaWidgetListener:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "colorChooserPanel_", NULL, 0x4, "LRAREColorChooserPanel" },
  };
  static J2ObjcClassInfo _RAREaColorChooserWidget = { "aColorChooserWidget", "com.appnativa.rare.widget", NULL, 0x1, 13, methods, 1, fields, 0, NULL};
  return &_RAREaColorChooserWidget;
}

@end
