//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-tree/com/appnativa/rare/ui/tree/aTreeHandler.java
//
//  Created by decoteaud on 9/15/14.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/exception/ExpandVetoException.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/event/EventListenerList.h"
#include "com/appnativa/rare/ui/event/ExpansionEvent.h"
#include "com/appnativa/rare/ui/event/iExpandedListener.h"
#include "com/appnativa/rare/ui/event/iExpansionListener.h"
#include "com/appnativa/rare/ui/iPlatformListDataModel.h"
#include "com/appnativa/rare/ui/iTreeHandler.h"
#include "com/appnativa/rare/ui/tree/DataItemTreeModel.h"
#include "com/appnativa/rare/ui/tree/TreeItemEx.h"
#include "com/appnativa/rare/ui/tree/aTreeHandler.h"
#include "com/appnativa/rare/ui/tree/iTree.h"
#include "com/appnativa/rare/ui/tree/iTreeItem.h"
#include "com/appnativa/util/iFilter.h"
#include "com/appnativa/util/iStringConverter.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"

@implementation RAREaTreeHandler

- (id)initWithRAREiTree:(id<RAREiTree>)list
withRAREDataItemTreeModel:(RAREDataItemTreeModel *)lm {
  if (self = [super init]) {
    treeModel_ = lm;
    theTree_ = list;
    [((id<RAREiTree>) nil_chk(theTree_)) setExpansionHandlerWithRAREiExpansionHandler:self];
  }
  return self;
}

- (BOOL)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) addAllWithJavaUtilCollection:c];
}

- (void)addChildWithRARERenderableDataItem:(RARERenderableDataItem *)child {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) addWithId:child];
}

- (void)addChildWithInt:(int)row
withRARERenderableDataItem:(RARERenderableDataItem *)child {
  RARERenderableDataItem *root = [self getWithInt:row];
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) addNodeWithRARERenderableDataItem:child withRARERenderableDataItem:root];
}

- (BOOL)isExpandableStateLocked {
  return [((id<RAREiTree>) nil_chk(theTree_)) isExpandableStateLocked];
}

- (void)setExpandableStateLockedWithBoolean:(BOOL)locked {
  [((id<RAREiTree>) nil_chk(theTree_)) setExpandableStateLockedWithBoolean:locked];
}

- (void)addChildWithRARERenderableDataItem:(RARERenderableDataItem *)item
                          withJavaUtilList:(id<JavaUtilList>)children {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) addNodesWithJavaUtilList:children withRARERenderableDataItem:item];
}

- (void)addChildWithRARERenderableDataItem:(RARERenderableDataItem *)item
                withRARERenderableDataItem:(RARERenderableDataItem *)child {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) addNodeWithRARERenderableDataItem:child withRARERenderableDataItem:item];
}

- (void)addChildExWithRARERenderableDataItem:(RARERenderableDataItem *)child {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) addExWithRARERenderableDataItem:child];
}

- (void)addChildrenWithInt:(int)row
          withJavaUtilList:(id<JavaUtilList>)children {
  RARERenderableDataItem *root = [self getWithInt:row];
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) addNodesWithJavaUtilList:children withRARERenderableDataItem:root];
}

- (void)addChildrenWithRARERenderableDataItem:(RARERenderableDataItem *)row
                             withJavaUtilList:(id<JavaUtilList>)children {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) addNodesWithJavaUtilList:children withRARERenderableDataItem:row];
}

- (void)addExpandedListenerWithRAREiExpandedListener:(id<RAREiExpandedListener>)l {
  hasExpandedListener_ = YES;
  [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiExpandedListener)] withId:l];
}

- (void)addExpansionListenerWithRAREiExpansionListener:(id<RAREiExpansionListener>)l {
  hasExpansionListener_ = YES;
  [((RAREEventListenerList *) nil_chk([self getEventListenerList])) addWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiExpansionListener)] withId:l];
}

- (void)clearRootNode {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) clear];
}

- (void)collapseAll {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) collapseAll];
}

- (void)collapseRowWithInt:(int)row {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) collapseRowWithInt:row];
}

- (void)collapseRowWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) collapseRowWithRARERenderableDataItem:item];
}

- (void)dispose {
  theTree_ = nil;
  treeModel_ = nil;
}

- (void)expandAll {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) expandAll];
}

- (void)expandRowWithInt:(int)row {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) expandRowWithInt:row];
}

- (void)expandRowWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) expandRowWithRARERenderableDataItem:item];
}

- (BOOL)filterWithRAREUTiFilter:(id<RAREUTiFilter>)filter {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) filterWithRAREUTiFilter:filter];
}

- (BOOL)filterWithNSString:(NSString *)filter
               withBoolean:(BOOL)contains {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) filterWithNSString:filter withBoolean:contains];
}

- (BOOL)filterWithNSString:(NSString *)filter
               withBoolean:(BOOL)contains
               withBoolean:(BOOL)nullPasses
               withBoolean:(BOOL)emptyPasses {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) filterWithNSString:filter withBoolean:contains withBoolean:nullPasses withBoolean:emptyPasses];
}

- (void)refreshItems {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) refreshItems];
}

- (void)removeExpandedListenerWithRAREiExpandedListener:(id<RAREiExpandedListener>)l {
  if ([self hasListeners]) {
    [((RAREEventListenerList *) nil_chk([self getEventListenerList])) removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiExpandedListener)] withId:l];
  }
}

- (void)removeExpansionListenerWithRAREiExpansionListener:(id<RAREiExpansionListener>)l {
  if ([self hasListeners]) {
    [((RAREEventListenerList *) nil_chk([self getEventListenerList])) removeWithIOSClass:[IOSClass classWithProtocol:@protocol(RAREiExpansionListener)] withId:l];
  }
}

- (void)sortWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) sortWithJavaUtilComparator:comparator];
}

- (void)sortExWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  (void) [((RAREDataItemTreeModel *) nil_chk(treeModel_)) sortExWithJavaUtilComparator:comparator];
}

- (int)toggleExpansionWithRAREiTree:(id<RAREiTree>)view
                  withRAREiTreeItem:(id<RAREiTreeItem>)ti
                            withInt:(int)listModelIndex {
  int scrollTo = 0;
  do {
    RARERenderableDataItem *item = [((id<RAREiTreeItem>) nil_chk(ti)) getData];
    if (![ti isLeaf]) {
      if (hasExpansionListener_) {
        RAREExpansionEvent *e = [[RAREExpansionEvent alloc] initWithId:view withId:ti];
        if ([ti isExpanded]) {
          [self fireExpansionWithRAREExpansionEvent:e withBoolean:NO];
        }
        else {
          [self fireExpansionWithRAREExpansionEvent:e withBoolean:YES];
        }
        if ([e isConsumed]) {
          break;
        }
      }
      [((RAREDataItemTreeModel *) nil_chk(treeModel_)) toggleRowWithInt:listModelIndex];
      if ([ti isExpanded]) {
        int col = [treeModel_ getExpandableColumn];
        RARERenderableDataItem *di = item;
        if (col > -1) {
          di = [((RARERenderableDataItem *) nil_chk(item)) getItemExWithInt:col];
        }
        scrollTo = (di == nil) ? 0 : listModelIndex + [di size];
      }
      if (hasExpandedListener_) {
        RAREExpansionEvent *e = [[RAREExpansionEvent alloc] initWithId:view withId:ti];
        if ([ti isExpanded]) {
          [self fireExpandedWithRAREExpansionEvent:e withBoolean:YES];
        }
        else {
          [self fireExpandedWithRAREExpansionEvent:e withBoolean:YES];
        }
      }
    }
  }
  while (NO);
  return scrollTo;
}

- (void)toggleRowWithInt:(int)row {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) toggleRowWithInt:row];
}

- (BOOL)unfilter {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) unfilter];
}

- (BOOL)setAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) setAllWithJavaUtilCollection:collection];
}

- (void)setConverterWithRAREUTiStringConverter:(id<RAREUTiStringConverter>)converter {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) setConverterWithRAREUTiStringConverter:converter];
}

- (void)setEditingModeWithRAREiTreeHandler_EditingModeEnum:(RAREiTreeHandler_EditingModeEnum *)valueOf {
}

- (void)setExpandableColumnWithInt:(int)expandableColumn {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) setExpandableColumnWithInt:expandableColumn];
}

- (void)setIndentByWithInt:(int)indent {
  [((id<RAREiTree>) nil_chk(theTree_)) setIndentByWithInt:indent];
}

- (void)setRootNodeCollapsibleWithBoolean:(BOOL)collapsible {
  [((id<RAREiTree>) nil_chk(theTree_)) setRootNodeCollapsibleWithBoolean:collapsible];
}

- (void)setShowRootHandlesWithBoolean:(BOOL)show {
  [((id<RAREiTree>) nil_chk(theTree_)) setShowRootHandlesWithBoolean:show];
}

- (void)setShowRootNodeWithBoolean:(BOOL)show {
  [((id<RAREiTree>) nil_chk(theTree_)) setShowRootWithBoolean:show];
}

- (void)setSingleClickToggleWithBoolean:(BOOL)singleClickToggle {
  [((id<RAREiTree>) nil_chk(theTree_)) setSingleClickToggleWithBoolean:singleClickToggle];
}

- (void)setToggleOnTwistyOnlyWithBoolean:(BOOL)twistyOnly {
  [((id<RAREiTree>) nil_chk(theTree_)) setToggleOnTwistyOnlyWithBoolean:twistyOnly];
}

- (void)setTwistyMarginOfErrorWithInt:(int)twistyMarginOfError {
  [((id<RAREiTree>) nil_chk(theTree_)) setTwistyMarginOfErrorWithInt:twistyMarginOfError];
}

- (id<RAREUTiStringConverter>)getConverter {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) getConverter];
}

- (int)getExpandableColumn {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) getExpandableColumn];
}

- (RARERenderableDataItem *)getParentWithInt:(int)index {
  RARERenderableDataItem *item = [self getWithInt:index];
  id<RAREiTreeItem> ti = [((RAREDataItemTreeModel *) nil_chk(treeModel_)) getTreeItemWithRARERenderableDataItem:item];
  ti = (ti == nil) ? nil : [ti getParentItem];
  return (ti == nil) ? nil : [ti getData];
}

- (RARERenderableDataItem *)getRootItem {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) getRoot];
}

- (int)getTwistyMarginOfError {
  return [((id<RAREiTree>) nil_chk(theTree_)) getTwistyMarginOfError];
}

- (BOOL)isFiltered {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) isFiltered];
}

- (BOOL)isItemEditableWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  return NO;
}

- (BOOL)isLeafItemWithInt:(int)index {
  RARERenderableDataItem *item = [self getWithInt:index];
  id<RAREiTreeItem> ti = [((RAREDataItemTreeModel *) nil_chk(treeModel_)) getTreeItemWithRARERenderableDataItem:item];
  return (ti == nil) ? YES : [ti isLeaf];
}

- (BOOL)isRootNodeCollapsible {
  return [((id<RAREiTree>) nil_chk(theTree_)) isRootNodeCollapsible];
}

- (BOOL)isRowExpandedWithInt:(int)row {
  return [self isRowExpandedWithRARERenderableDataItem:[self getWithInt:row]];
}

- (BOOL)isRowExpandedWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  id<RAREiTreeItem> ti = item == nil ? nil : [((RAREDataItemTreeModel *) nil_chk(treeModel_)) getTreeItemWithRARERenderableDataItem:item];
  return ti == nil ? NO : [ti isExpanded];
}

- (BOOL)isSingleClickToggle {
  return [((id<RAREiTree>) nil_chk(theTree_)) isSingleClickToggle];
}

- (BOOL)isTabular {
  return NO;
}

- (BOOL)isToggleOnTwistyOnly {
  return [((id<RAREiTree>) nil_chk(theTree_)) isToggleOnTwistyOnly];
}

- (RAREEventListenerList *)getEventListenerList {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)hasListeners {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilList>)getRawRows {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) getRawRows];
}

- (void)fireExpandedWithRAREExpansionEvent:(RAREExpansionEvent *)e
                               withBoolean:(BOOL)expand {
  IOSObjectArray *listeners = [((RAREEventListenerList *) nil_chk([self getEventListenerList])) getListenerList];
  for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
    if ([((RAREExpansionEvent *) nil_chk(e)) isConsumed]) {
      break;
    }
    if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiExpandedListener)]) {
      if (expand) {
        [((id<RAREiExpandedListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiExpandedListener))) itemHasExpandedWithRAREExpansionEvent:e];
      }
      else {
        [((id<RAREiExpandedListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiExpandedListener))) itemHasCollapsedWithRAREExpansionEvent:e];
      }
    }
  }
}

- (void)fireExpansionWithRAREExpansionEvent:(RAREExpansionEvent *)e
                                withBoolean:(BOOL)expand {
  IOSObjectArray *listeners = [((RAREEventListenerList *) nil_chk([self getEventListenerList])) getListenerList];
  for (int i = (int) [((IOSObjectArray *) nil_chk(listeners)) count] - 2; i >= 0; i -= 2) {
    if ([((RAREExpansionEvent *) nil_chk(e)) isConsumed]) {
      break;
    }
    if (IOSObjectArray_Get(listeners, i) == [IOSClass classWithProtocol:@protocol(RAREiExpansionListener)]) {
      if (expand) {
        [((id<RAREiExpansionListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiExpansionListener))) itemWillExpandWithRAREExpansionEvent:e];
      }
      else {
        [((id<RAREiExpansionListener>) check_protocol_cast(IOSObjectArray_Get(listeners, i + 1), @protocol(RAREiExpansionListener))) itemWillCollapseWithRAREExpansionEvent:e];
      }
    }
  }
}

- (int)indexOfInListWithRARERenderableDataItem:(RARERenderableDataItem *)item {
  return [((id<RAREiPlatformListDataModel>) nil_chk([((RAREDataItemTreeModel *) nil_chk(treeModel_)) getListModel])) indexOfWithId:item];
}

- (RARERenderableDataItem *)getWithInt:(int)row {
  return [((id<RAREiPlatformListDataModel>) nil_chk([((RAREDataItemTreeModel *) nil_chk(treeModel_)) getListModel])) getWithInt:row];
}

- (BOOL)isEventsEnabled {
  return [((RAREDataItemTreeModel *) nil_chk(treeModel_)) isEventsEnabled];
}

- (void)setTreeEventsEnabledWithBoolean:(BOOL)enabled {
  [((RAREDataItemTreeModel *) nil_chk(treeModel_)) setEventsEnabledWithBoolean:enabled];
}

- (BOOL)isAutoScrollOnExpansion {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setAutoScrollOnExpansionWithBoolean:(BOOL)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)copyAllFieldsTo:(RAREaTreeHandler *)other {
  [super copyAllFieldsTo:other];
  other->hasExpandedListener_ = hasExpandedListener_;
  other->hasExpansionListener_ = hasExpansionListener_;
  other->theTree_ = theTree_;
  other->treeModel_ = treeModel_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "isExpandableStateLocked", NULL, "Z", 0x1, NULL },
    { "filterWithRAREUTiFilter:", NULL, "Z", 0x1, NULL },
    { "filterWithNSString:withBoolean:", NULL, "Z", 0x1, NULL },
    { "filterWithNSString:withBoolean:withBoolean:withBoolean:", NULL, "Z", 0x1, NULL },
    { "unfilter", NULL, "Z", 0x1, NULL },
    { "setAllWithJavaUtilCollection:", NULL, "Z", 0x1, NULL },
    { "getConverter", NULL, "LRAREUTiStringConverter", 0x1, NULL },
    { "getParentWithInt:", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "getRootItem", NULL, "LRARERenderableDataItem", 0x1, NULL },
    { "isFiltered", NULL, "Z", 0x1, NULL },
    { "isItemEditableWithRARERenderableDataItem:", NULL, "Z", 0x1, NULL },
    { "isLeafItemWithInt:", NULL, "Z", 0x1, NULL },
    { "isRootNodeCollapsible", NULL, "Z", 0x1, NULL },
    { "isRowExpandedWithInt:", NULL, "Z", 0x1, NULL },
    { "isRowExpandedWithRARERenderableDataItem:", NULL, "Z", 0x1, NULL },
    { "isSingleClickToggle", NULL, "Z", 0x1, NULL },
    { "isTabular", NULL, "Z", 0x1, NULL },
    { "isToggleOnTwistyOnly", NULL, "Z", 0x1, NULL },
    { "getEventListenerList", NULL, "LRAREEventListenerList", 0x404, NULL },
    { "hasListeners", NULL, "Z", 0x404, NULL },
    { "getRawRows", NULL, "LJavaUtilList", 0x1, NULL },
    { "fireExpandedWithRAREExpansionEvent:withBoolean:", NULL, "V", 0x2, NULL },
    { "fireExpansionWithRAREExpansionEvent:withBoolean:", NULL, "V", 0x2, "RAREExpandVetoException" },
    { "getWithInt:", NULL, "LRARERenderableDataItem", 0x2, NULL },
    { "isEventsEnabled", NULL, "Z", 0x1, NULL },
    { "isAutoScrollOnExpansion", NULL, "Z", 0x401, NULL },
    { "setAutoScrollOnExpansionWithBoolean:", NULL, "V", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "hasExpandedListener_", NULL, 0x4, "Z" },
    { "hasExpansionListener_", NULL, 0x4, "Z" },
    { "theTree_", NULL, 0x4, "LRAREiTree" },
    { "treeModel_", NULL, 0x4, "LRAREDataItemTreeModel" },
  };
  static J2ObjcClassInfo _RAREaTreeHandler = { "aTreeHandler", "com.appnativa.rare.ui.tree", NULL, 0x401, 28, methods, 4, fields, 0, NULL};
  return &_RAREaTreeHandler;
}

@end
