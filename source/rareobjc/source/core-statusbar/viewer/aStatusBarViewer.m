//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-statusbar/com/appnativa/rare/viewer/aStatusBarViewer.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/spot/ActionItem.h"
#include "com/appnativa/rare/spot/StatusBar.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIColorHelper.h"
#include "com/appnativa/rare/ui/UIColorShade.h"
#include "com/appnativa/rare/ui/aStatusBar.h"
#include "com/appnativa/rare/ui/aWidgetListener.h"
#include "com/appnativa/rare/ui/border/StatusBarBorder.h"
#include "com/appnativa/rare/ui/border/UICompoundBorder.h"
#include "com/appnativa/rare/ui/border/UIEmptyBorder.h"
#include "com/appnativa/rare/ui/border/UILineBorder.h"
#include "com/appnativa/rare/ui/border/UIMatteBorder.h"
#include "com/appnativa/rare/ui/iActionComponent.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/aStatusBarViewer.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/widget/LabelWidget.h"
#include "com/appnativa/rare/widget/PushButtonWidget.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "java/lang/CharSequence.h"
#include "java/util/Locale.h"

@implementation RAREaStatusBarViewer

static id<RAREiPlatformBorder> RAREaStatusBarViewer_label_border_;

+ (id<RAREiPlatformBorder>)label_border {
  return RAREaStatusBarViewer_label_border_;
}

+ (void)setLabel_border:(id<RAREiPlatformBorder>)label_border {
  RAREaStatusBarViewer_label_border_ = label_border;
}

- (id)init {
  return [self initRAREaStatusBarViewerWithRAREiContainer:nil];
}

- (id)initRAREaStatusBarViewerWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    defaultStatus_ = nil;
    widgetType_ = [RAREiWidget_WidgetTypeEnum StatusBar];
    if (RAREaStatusBarViewer_label_border_ == nil) {
      id<RAREiPlatformBorder> eb = [[RAREUIEmptyBorder alloc] initWithFloat:1 withFloat:4 withFloat:1 withFloat:2];
      RAREaStatusBarViewer_label_border_ = [[RAREUICompoundBorder alloc] initWithRAREiPlatformBorder:[[RAREUIMatteBorder alloc] initWithFloat:0 withFloat:1 withFloat:0 withFloat:0 withRAREUIColor:[RAREUIColorHelper getColorWithNSString:@"controlShadow"]] withRAREiPlatformBorder:eb];
    }
  }
  return self;
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  return [self initRAREaStatusBarViewerWithRAREiContainer:parent];
}

- (void)addAsWindowDraggerWithRAREWindowViewer:(RAREWindowViewer *)w {
  [((RAREWindowViewer *) nil_chk(w)) addWindowDraggerWithRAREiPlatformComponent:statusBar_];
  [w addWindowDraggerWithRAREiPlatformComponent:[((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) getStatusLabel]];
}

- (void)clearContents {
}

- (void)configureWithRARESPOTViewer:(RARESPOTViewer *)vcfg {
  [self configureExWithRARESPOTStatusBar:(RARESPOTStatusBar *) check_class_cast(vcfg, [RARESPOTStatusBar class])];
  [self fireConfigureEventWithRARESPOTWidget:vcfg withNSString:[RAREiConstants EVENT_CONFIGURE]];
}

- (void)configureForPopup {
  [((RAREaStatusBar *) nil_chk(statusBar_)) setBorderWithRAREiPlatformBorder:[[RAREUIMatteBorder alloc] initWithFloat:1 withFloat:0 withFloat:0 withFloat:0 withRAREUIColor:[RAREaUILineBorder getDefaultLineColor]]];
}

- (void)createBasic {
  statusBar_ = [self createStatusBarAndComponentsWithRARESPOTStatusBar:nil];
  progressBar_ = [((RAREaStatusBar *) nil_chk(statusBar_)) getProgressStatusBarItem];
}

- (void)createMainWindowDefault {
  [self createBasic];
}

- (void)progressAbort {
  [((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) cancelPerformed];
}

- (void)progressComplete {
  [((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) completePerformed];
}

- (void)progressStartWithBoolean:(BOOL)showCancelButton {
  [((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) setCancelActionWithId:nil];
  [progressBar_ setCompleteActionWithId:nil];
  [((id<RAREiActionComponent>) nil_chk([progressBar_ getCancelButton])) setVisibleWithBoolean:showCancelButton];
  [progressBar_ setIndeterminateWithBoolean:NO];
  [progressBar_ setProgressStatusWithNSString:@""];
}

- (void)progressStartWithBoolean:(BOOL)indeterminate
                    withNSString:(NSString *)message
                          withId:(id)cancelAction {
  [self progressStartWithBoolean:indeterminate withNSString:message withId:cancelAction withId:nil];
}

- (void)progressStartWithBoolean:(BOOL)indeterminate
                    withNSString:(NSString *)message
                          withId:(id)cancelAction
                          withId:(id)completeAction {
  if (cancelAction != nil) {
    [((id<RAREiActionComponent>) nil_chk([((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) getCancelButton])) setVisibleWithBoolean:YES];
    [progressBar_ setCancelActionWithId:cancelAction];
  }
  else {
    [((id<RAREiActionComponent>) nil_chk([((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) getCancelButton])) setVisibleWithBoolean:NO];
  }
  [((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) setCompleteActionWithId:completeAction];
  [progressBar_ setIndeterminateWithBoolean:indeterminate];
  [progressBar_ setProgressStatusWithNSString:message];
}

- (void)progressStartIndeterminateWithBoolean:(BOOL)showCancelButton {
  [((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) setCancelActionWithId:nil];
  [progressBar_ setCompleteActionWithId:nil];
  [((id<RAREiActionComponent>) nil_chk([progressBar_ getCancelButton])) setVisibleWithBoolean:showCancelButton];
  [progressBar_ setIndeterminateWithBoolean:YES];
  [progressBar_ setProgressStatusWithNSString:@""];
}

- (void)showMessageWithNSString:(NSString *)msg {
  if (msg == nil) {
    msg = self->defaultStatus_;
  }
  if (progressBar_ != nil) {
    [progressBar_ setStatusWithNSString:msg];
  }
}

- (void)toggleVisibility {
  [self setVisibleWithBoolean:![self isVisible]];
}

- (void)setCancelActionWithId:(id)action {
  [((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) setCancelActionWithId:action];
}

- (void)setInsertOverwriteWithBoolean:(BOOL)insert {
  if (overwriteInsert_ != nil) {
    [overwriteInsert_ setTextWithJavaLangCharSequence:[RAREPlatform getResourceAsStringWithNSString:insert ? @"Rare.runtime.text.OVR" : @"Rare.runtime.text.INS"]];
    [overwriteInsert_ revalidate];
  }
}

- (void)setInsertOverwriteEnabledWithBoolean:(BOOL)enabled {
  if (overwriteInsert_ != nil) {
    [overwriteInsert_ setEnabledWithBoolean:enabled];
  }
}

- (void)setMaxHistoryWithInt:(int)max {
}

- (void)setProgressStatusWithNSString:(NSString *)msg {
  [((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) setProgressStatusWithNSString:msg];
}

- (void)setProgressUpdateWithInt:(int)value {
  [((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) setProgressWithInt:value];
}

- (id<RAREiPlatformComponent>)getComponent {
  return statusBar_;
}

- (int)getMaxHistory {
  return 0;
}

- (NSString *)getMessage {
  id<JavaLangCharSequence> cs = [((id<RAREiActionComponent>) nil_chk([((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) getStatusLabel])) getText];
  return (cs == nil) ? @"" : [cs sequenceDescription];
}

- (id<RAREiPlatformComponent>)getProgressStatusBarItem {
  return progressBar_;
}

- (BOOL)isProgressBarShowing {
  return [((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) isShowing];
}

- (void)clearConfigurationWithBoolean:(BOOL)dispose {
  [super clearConfigurationWithBoolean:dispose];
  defaultStatus_ = nil;
  if (dispose) {
    statusBar_ = nil;
    progressBar_ = nil;
    overwriteInsert_ = nil;
  }
}

- (void)configureExWithRARESPOTStatusBar:(RARESPOTStatusBar *)cfg {
  if (cfg == nil) {
    [self createBasic];
    return;
  }
  statusBar_ = [self createStatusBarAndComponentsWithRARESPOTStatusBar:cfg];
  [self configureExWithRARESPOTViewer:cfg withBoolean:YES withBoolean:NO withBoolean:YES];
  if ([((RARESPOTStatusBar *) nil_chk(cfg)) getBorders] == nil) {
    [self setBorderWithRAREiPlatformBorder:[[RAREStatusBarBorder alloc] init]];
  }
  if ([((SPOTPrintableString *) nil_chk(cfg->bgColor_)) getValue] == nil) {
    [self setBackgroundWithRAREUIColor:[[RAREUIColorShade alloc] initWithRAREUIColor:[[RAREUIColor alloc] initWithInt:192 withInt:192 withInt:192] withNSString:@"Rare.background"]];
  }
  progressBar_ = [((RAREaStatusBar *) nil_chk(statusBar_)) getProgressStatusBarItem];
  [((id<RAREiActionComponent>) nil_chk([((RAREaStatusBar_ProgressStatusBarItem *) nil_chk(progressBar_)) getCancelButton])) addActionListenerWithRAREiActionListener:self];
  SPOTSet *actions = cfg->actions_;
  NSString *s;
  int len = [((SPOTSet *) nil_chk(actions)) size];
  if (len > 0) {
    RARESPOTActionItem *item;
    RAREUIAction *a;
    id<RAREiActionComponent> sbitem;
    RAREWindowViewer *w = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getWindowViewer];
    for (int i = 0; i < len; i++) {
      item = (RARESPOTActionItem *) check_class_cast([actions getExWithInt:i], [RARESPOTActionItem class]);
      a = nil;
      if ([((SPOTPrintableString *) nil_chk(((RARESPOTActionItem *) nil_chk(item))->name_)) spot_hasValue]) {
        a = [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) getActionWithNSString:[item->name_ getValue]];
      }
      if (a != nil) {
        sbitem = (id<RAREiActionComponent>) check_protocol_cast([((RAREPushButtonWidget *) nil_chk([RAREaPushButtonWidget createWithRAREiContainer:w])) getDataComponent], @protocol(RAREiActionComponent));
        [((id<RAREiActionComponent>) nil_chk(sbitem)) setActionWithRAREUIAction:a];
        [a configureExtraButtonOptionsWithRAREiActionComponent:sbitem];
        if ([((SPOTPrintableString *) nil_chk(item->value_)) spot_hasValue]) {
          [sbitem setTextWithJavaLangCharSequence:[item->value_ getValue]];
        }
        if ([((SPOTPrintableString *) nil_chk(item->icon_)) spot_hasValue]) {
          [sbitem setIconWithRAREiPlatformIcon:[self getIconWithSPOTPrintableString:item->icon_]];
        }
        if ([((SPOTPrintableString *) nil_chk(item->disabledIcon_)) spot_hasValue]) {
          [sbitem setDisabledIconWithRAREiPlatformIcon:[self getIconWithSPOTPrintableString:item->disabledIcon_]];
        }
        if ([((SPOTPrintableString *) nil_chk(item->selectedIcon_)) spot_hasValue]) {
          [sbitem setSelectedIconWithRAREiPlatformIcon:[self getIconWithSPOTPrintableString:item->selectedIcon_]];
        }
        if ([((SPOTBoolean *) nil_chk(item->enabled_)) spot_valueWasSet]) {
          [sbitem setEnabledWithBoolean:[item->enabled_ booleanValue]];
        }
        if ([((SPOTPrintableString *) nil_chk(item->tooltip_)) getValue] != nil) {
          [sbitem setToolTipTextWithJavaLangCharSequence:[item->tooltip_ getValue]];
        }
      }
      else if ([item spot_getAttributeWithNSString:@"onAction"] == nil) {
        sbitem = (id<RAREiActionComponent>) check_protocol_cast([((RAREPushButtonWidget *) nil_chk([RAREaPushButtonWidget createWithRAREiContainer:w])) getDataComponent], @protocol(RAREiActionComponent));
        a = [[RAREUIAction alloc] initWithRAREiWidget:self withRARESPOTActionItem:item];
        [((id<RAREiActionComponent>) nil_chk(sbitem)) setActionWithRAREUIAction:a];
        [a configureExtraButtonOptionsWithRAREiActionComponent:sbitem];
      }
      else {
        sbitem = (id<RAREiActionComponent>) check_protocol_cast([((RARELabelWidget *) nil_chk([RAREaLabelWidget createWithRAREiContainer:w])) getDataComponent], @protocol(RAREiActionComponent));
        [((id<RAREiActionComponent>) nil_chk(sbitem)) setTextWithJavaLangCharSequence:[item->name_ getValue]];
        if ([((SPOTPrintableString *) nil_chk(item->tooltip_)) getValue] != nil) {
          [sbitem setToolTipTextWithJavaLangCharSequence:[item->tooltip_ getValue]];
        }
        [sbitem setIconWithRAREiPlatformIcon:[self getIconWithSPOTPrintableString:item->icon_]];
        [sbitem setBorderWithRAREiPlatformBorder:RAREaStatusBarViewer_label_border_];
      }
      s = [item->name_ getValue];
      if (s != nil) {
        (void) [self registerNamedItemWithNSString:s withId:sbitem];
      }
      RARERenderableDataItem_VerticalAlignEnum *va = [RARERenderableDataItem_VerticalAlignEnum AUTO];
      RARERenderableDataItem_HorizontalAlignEnum *ha = [RARERenderableDataItem_HorizontalAlignEnum AUTO];
      s = [item spot_getAttributeWithNSString:@"textVAlignment"];
      if (s != nil) {
        va = [RARERenderableDataItem_VerticalAlignEnum valueOfWithNSString:[s uppercaseStringWithJRELocale:[JavaUtilLocale US]]];
      }
      s = [item spot_getAttributeWithNSString:@"textHAlignment"];
      if (s != nil) {
        ha = [RARERenderableDataItem_HorizontalAlignEnum valueOfWithNSString:[s uppercaseStringWithJRELocale:[JavaUtilLocale US]]];
      }
      [((id<RAREiActionComponent>) nil_chk(sbitem)) setAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:ha withRARERenderableDataItem_VerticalAlignEnum:va];
      s = [item spot_getAttributeWithNSString:@"iconPosition"];
      if (s != nil) {
        [sbitem setIconPositionWithRARERenderableDataItem_IconPositionEnum:[RARERenderableDataItem_IconPositionEnum valueOfWithNSString:[s uppercaseStringWithJRELocale:[JavaUtilLocale US]]]];
      }
      [statusBar_ addComponentWithRAREiPlatformComponent:sbitem withInt:i + 2 withInt:0];
    }
  }
  if ([((SPOTBoolean *) nil_chk(cfg->showInsertOverwrite_)) booleanValue]) {
    overwriteInsert_ = (id<RAREiActionComponent>) check_protocol_cast([((RARELabelWidget *) nil_chk([RAREaLabelWidget createWithRAREiContainer:self withRARESPOTLabel:nil])) getDataComponent], @protocol(RAREiActionComponent));
    [((id<RAREiActionComponent>) nil_chk(overwriteInsert_)) setEnabledWithBoolean:NO];
    [statusBar_ addComponentWithRAREiPlatformComponent:overwriteInsert_ withInt:len + 2 withInt:0];
  }
  s = [((SPOTPrintableString *) nil_chk(cfg->defaultMessage_)) getValue];
  if (s != nil) {
    defaultStatus_ = s;
    [progressBar_ setDefaultStatusWithNSString:defaultStatus_];
  }
  if ([((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) areAllLabelsDraggable] || [((id<RAREiPlatformAppContext>) nil_chk([self getAppContext])) areAllWidgetsDraggable]) {
    draggingAllowed_ = YES;
  }
  [self configureGenericDnDWithRAREiPlatformComponent:statusBar_ withRARESPOTWidget:cfg];
}

- (void)initializeListenersWithRAREaWidgetListener:(RAREaWidgetListener *)l {
  if ((l != nil) && [l isActionEventEnabled]) {
    if (progressBar_ != nil) {
      [progressBar_ setCancelActionWithId:l];
    }
  }
}

- (RAREaStatusBar *)createStatusBarAndComponentsWithRARESPOTStatusBar:(RARESPOTStatusBar *)cfg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)uninitializeListenersWithRAREaWidgetListener:(RAREaWidgetListener *)l {
  [super uninitializeListenersWithRAREaWidgetListener:l];
  if ((l != nil) && [l isActionEventEnabled]) {
    if (progressBar_ != nil) {
      [progressBar_ setCancelActionWithId:nil];
    }
  }
}

- (void)copyAllFieldsTo:(RAREaStatusBarViewer *)other {
  [super copyAllFieldsTo:other];
  other->defaultStatus_ = defaultStatus_;
  other->overwriteInsert_ = overwriteInsert_;
  other->progressBar_ = progressBar_;
  other->statusBar_ = statusBar_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getMessage", NULL, "LNSString", 0x1, NULL },
    { "getProgressStatusBarItem", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "isProgressBarShowing", NULL, "Z", 0x1, NULL },
    { "clearConfigurationWithBoolean:", NULL, "V", 0x4, NULL },
    { "configureExWithRARESPOTStatusBar:", NULL, "V", 0x4, NULL },
    { "initializeListenersWithRAREaWidgetListener:", NULL, "V", 0x4, NULL },
    { "createStatusBarAndComponentsWithRARESPOTStatusBar:", NULL, "LRAREaStatusBar", 0x404, NULL },
    { "uninitializeListenersWithRAREaWidgetListener:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "label_border_", NULL, 0xa, "LRAREiPlatformBorder" },
  };
  static J2ObjcClassInfo _RAREaStatusBarViewer = { "aStatusBarViewer", "com.appnativa.rare.viewer", NULL, 0x401, 9, methods, 1, fields, 0, NULL};
  return &_RAREaStatusBarViewer;
}

@end
