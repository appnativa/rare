//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-tabpane/com/appnativa/rare/ui/tabpane/BoxStackedTabPainter.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/ui/BorderUtils.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/Location.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/border/UIBevelBorder.h"
#include "com/appnativa/rare/ui/border/UICompoundBorder.h"
#include "com/appnativa/rare/ui/border/UIEmptyBorder.h"
#include "com/appnativa/rare/ui/border/aUIBevelBorder.h"
#include "com/appnativa/rare/ui/iPlatformGraphics.h"
#include "com/appnativa/rare/ui/painter/PaintBucket.h"
#include "com/appnativa/rare/ui/painter/UIBackgroundPainter.h"
#include "com/appnativa/rare/ui/painter/iBackgroundPainter.h"
#include "com/appnativa/rare/ui/painter/iPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/ui/tabpane/BoxStackedTabPainter.h"
#include "com/appnativa/rare/ui/tabpane/aTabPainter.h"
#include "com/appnativa/rare/ui/tabpane/iTabLabel.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"

@implementation RAREBoxStackedTabPainter

- (id)init {
  if (self = [super init]) {
    iconPosition_ = [RARERenderableDataItem_IconPositionEnum LEADING];
  }
  return self;
}

- (void)getMinimumSizeWithRAREUIDimension:(RAREUIDimension *)size {
  [super getPreferredSizeWithRAREUIDimension:size];
}

- (void)updateTabSizes {
  [super updateTabSizes];
  int max = 0;
  IOSIntArray *a = tabLayoutSizes_;
  int len = (a == nil) ? 0 : (int) [a count];
  for (int i = 0; i < len; i++) {
    max = [JavaLangMath maxWithInt:max withInt:IOSIntArray_Get(nil_chk(a), i)];
  }
  largestTabSize_ = max + [RAREScreenUtils platformPixelsWithFloat:24];
}

- (RAREPaintBucket *)createDefaultPainter {
  RAREPaintBucket *pb = [[RAREPaintBucket alloc] initWithRAREUIColor:[RAREColorUtils getBackground]];
  RAREUIColor *fg = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getColorWithNSString:@"Rare.TabPane.tabForeground"];
  if (fg == nil) {
    fg = [RAREColorUtils getForeground];
  }
  [pb setForegroundColorWithRAREUIColor:fg];
  return pb;
}

- (RAREPaintBucket *)createDefaultSelectedPainter {
  RAREPaintBucket *pb = [[RAREPaintBucket alloc] init];
  RAREUIColor *bg = [RAREColorUtils getBackground];
  [pb setBackgroundPainterWithRAREiBackgroundPainter:[[RAREUIBackgroundPainter alloc] initWithRAREUIColor:bg withRAREUIColor:[((RAREUIColor *) nil_chk(bg)) lightWithInt:-30]]];
  RAREUIBevelBorder *bb;
  RAREUICompoundBorder *b = [[RAREUICompoundBorder alloc] initWithRAREiPlatformBorder:[RAREBorderUtils TWO_POINT_EMPTY_BORDER] withRAREiPlatformBorder:bb = [[RAREUIBevelBorder alloc] initWithInt:RAREaUIBevelBorder_LOWERED withBoolean:NO]];
  IOSObjectArray *ca = [RAREBorderUtils getBevelColorsWithRAREUIColor:bg withBoolean:NO];
  [bb setColorsWithRAREUIColor:IOSObjectArray_Get(nil_chk(ca), 0) withRAREUIColor:IOSObjectArray_Get(ca, 1)];
  [pb setBorderWithRAREiPlatformBorder:b];
  return pb;
}

- (id)getUIDefaultsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                     withInt:(int)sblen
                                 withBoolean:(BOOL)painter
                                withNSString:(NSString *)key {
  id o;
  [((JavaLangStringBuilder *) nil_chk(sb)) setLengthWithInt:sblen];
  (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"stacked."])) appendWithNSString:key];
  if (painter) {
    o = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getBackgroundPainterWithNSString:[sb description]];
  }
  else {
    o = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getWithNSString:[sb description]];
  }
  return o;
}

- (void)labelAddedWithRAREiTabLabel:(id<RAREiTabLabel>)label {
  [super labelAddedWithRAREiTabLabel:label];
  [((id<RAREiTabLabel>) nil_chk(label)) setAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:[RARERenderableDataItem_HorizontalAlignEnum LEADING] withRARERenderableDataItem_VerticalAlignEnum:[RARERenderableDataItem_VerticalAlignEnum CENTER]];
}

- (void)layoutTabWithRAREiTabLabel:(id<RAREiTabLabel>)tab
                         withFloat:(float)x
                         withFloat:(float)y
                         withFloat:(float)width
                         withFloat:(float)height
                           withInt:(int)index {
  int w = IOSIntArray_Get(nil_chk(tabSizes_), index);
  x += (width - w) / 2;
  x -= (largestTabSize_ - w);
  [super layoutTabWithRAREiTabLabel:tab withFloat:x withFloat:y withFloat:width withFloat:height withInt:index];
}

- (void)paintTabWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                        withRAREiTabLabel:(id<RAREiTabLabel>)tab
                                  withInt:(int)x
                                  withInt:(int)y
                                  withInt:(int)width
                                  withInt:(int)height
                                  withInt:(int)index {
  if (index == [self getSelectedTab]) {
    [((id<RAREiPlatformComponentPainter>) nil_chk(selectedComponentPainter_)) paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withInt:RAREiPainter_UNKNOWN];
  }
  else {
    [((id<RAREiPlatformComponentPainter>) nil_chk(normalComponentPainter_)) paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height withInt:RAREiPainter_UNKNOWN];
  }
}

- (void)setLocationWithRARELocationEnum:(RARELocationEnum *)location {
  switch ([location ordinal]) {
    case RARELocation_TOP:
    location = [RARELocationEnum LEFT];
    break;
    case RARELocation_BOTTOM:
    location = [RARELocationEnum RIGHT];
    break;
    case RARELocation_LEFT:
    location = [RARELocationEnum TOP];
    break;
    default:
    location = [RARELocationEnum BOTTOM];
    break;
  }
  [super setLocationWithRARELocationEnum:location];
}

- (void)setupDefaultPainters {
}

- (void)copyAllFieldsTo:(RAREBoxStackedTabPainter *)other {
  [super copyAllFieldsTo:other];
  other->largestTabSize_ = largestTabSize_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "createDefaultPainter", NULL, "LRAREPaintBucket", 0x4, NULL },
    { "createDefaultSelectedPainter", NULL, "LRAREPaintBucket", 0x4, NULL },
    { "getUIDefaultsWithJavaLangStringBuilder:withInt:withBoolean:withNSString:", NULL, "LNSObject", 0x4, NULL },
    { "labelAddedWithRAREiTabLabel:", NULL, "V", 0x4, NULL },
    { "layoutTabWithRAREiTabLabel:withFloat:withFloat:withFloat:withFloat:withInt:", NULL, "V", 0x4, NULL },
    { "paintTabWithRAREiPlatformGraphics:withRAREiTabLabel:withInt:withInt:withInt:withInt:withInt:", NULL, "V", 0x4, NULL },
    { "setLocationWithRARELocationEnum:", NULL, "V", 0x4, NULL },
    { "setupDefaultPainters", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "largestTabSize_", NULL, 0x4, "I" },
  };
  static J2ObjcClassInfo _RAREBoxStackedTabPainter = { "BoxStackedTabPainter", "com.appnativa.rare.ui.tabpane", NULL, 0x1, 8, methods, 1, fields, 0, NULL};
  return &_RAREBoxStackedTabPainter;
}

@end
