//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-tabpane/com/appnativa/rare/ui/tabpane/aTabPaneLayout.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/ui/BorderPanel.h"
#include "com/appnativa/rare/ui/FontUtils.h"
#include "com/appnativa/rare/ui/Location.h"
#include "com/appnativa/rare/ui/MenuButtonWidget.h"
#include "com/appnativa/rare/ui/RenderType.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIDimension.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/WindowDeviceConfiguration.h"
#include "com/appnativa/rare/ui/border/UIBalloonBorder.h"
#include "com/appnativa/rare/ui/border/UICompoundBorder.h"
#include "com/appnativa/rare/ui/border/UIEmptyBorder.h"
#include "com/appnativa/rare/ui/border/UILineBorder.h"
#include "com/appnativa/rare/ui/border/UIMatteBorder.h"
#include "com/appnativa/rare/ui/iActionComponent.h"
#include "com/appnativa/rare/ui/iParentComponent.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/iPopup.h"
#include "com/appnativa/rare/ui/painter/PaintBucket.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/ui/tabpane/BoxTabPainter.h"
#include "com/appnativa/rare/ui/tabpane/aBoxTabPainter.h"
#include "com/appnativa/rare/ui/tabpane/aPlatformTabPainter.h"
#include "com/appnativa/rare/ui/tabpane/aTabPainter.h"
#include "com/appnativa/rare/ui/tabpane/aTabPaneLayout.h"
#include "com/appnativa/rare/ui/tabpane/aTabStripComponent.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Math.h"
#include "java/util/List.h"

@implementation RAREaTabPaneLayout

- (id)init {
  if (self = [super init]) {
    selectedTab_ = -1;
    location_ = [RARELocationEnum TOP];
    tabs_ = [[RAREUTIdentityArrayList alloc] init];
    autoOrient_ = YES;
    contentBorder_ = [[RAREUIEmptyBorder alloc] initWithFloat:0 withFloat:0 withFloat:0 withFloat:0];
  }
  return self;
}

- (id)initWithRAREaTabPaneLayout_iContentManager:(id<RAREaTabPaneLayout_iContentManager>)cm {
  if (self = [super init]) {
    selectedTab_ = -1;
    location_ = [RARELocationEnum TOP];
    tabs_ = [[RAREUTIdentityArrayList alloc] init];
    autoOrient_ = YES;
    contentBorder_ = [[RAREUIEmptyBorder alloc] initWithFloat:0 withFloat:0 withFloat:0 withFloat:0];
    contentManager_ = cm;
  }
  return self;
}

- (void)addMenuItemsWithJavaUtilList:(id<JavaUtilList>)list {
  RARERenderableDataItem *item;
  int len = [((id<JavaUtilList>) nil_chk(tabs_)) size];
  int start = [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) getStartTab];
  int end = [tabPainter_ getEndTab];
  for (int i = 0; i < len; i++) {
    if ((i >= start) && (i < end)) {
      continue;
    }
    RAREUIAction *a = [tabs_ getWithInt:i];
    item = [[RARERenderableDataItem alloc] initWithId:[((RAREUIAction *) nil_chk(a)) getActionText] withInt:RARERenderableDataItem_TYPE_STRING withId:[a getIcon]];
    if (![a isEnabled]) {
      [item setDisabledIconWithRAREiPlatformIcon:[a getDisabledIcon]];
      [item setEnabledWithBoolean:NO];
    }
    else {
      [item setActionListenerWithRAREiActionListener:a];
    }
    [((id<JavaUtilList>) nil_chk(list)) addWithId:item];
  }
}

- (RAREUIAction *)addTabWithNSString:(NSString *)name
                        withNSString:(NSString *)title
               withRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  RAREUIAction *a = [[RAREUIAction alloc] initWithNSString:name withJavaLangCharSequence:title withRAREiPlatformIcon:icon];
  [((id<JavaUtilList>) nil_chk(tabs_)) addWithId:a];
  if ((tabPainter_ != nil) && !updating_) {
    [tabPainter_ tabAddedWithRAREUIAction:a];
  }
  return a;
}

- (BOOL)checkOrientation {
  return [self checkOrientationWithId:nil];
}

- (BOOL)checkOrientationWithId:(id)newConfig {
  if (popupWindow_ != nil) {
    [popupWindow_ hidePopup];
    popupWindow_ = nil;
  }
  return NO;
}

- (void)checkOrientationWithFloat:(float)width
                        withFloat:(float)height {
  if (autoOrient_) {
    BOOL wider = width > height;
    if ([tabPainter_ isKindOfClass:[RAREBoxTabPainter class]]) {
      switch ([[((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) getIconPosition] ordinal]) {
        case RARERenderableDataItem_IconPosition_LEADING:
        case RARERenderableDataItem_IconPosition_RIGHT:
        case RARERenderableDataItem_IconPosition_RIGHT_JUSTIFIED:
        case RARERenderableDataItem_IconPosition_LEFT:
        case RARERenderableDataItem_IconPosition_TRAILING:
        wider = !wider;
        break;
        default:
        break;
      }
    }
    RAREUIDimension *size = [RAREScreenUtils getUsableScreenSize];
    float cmax = [JavaLangMath maxWithFloat:width withFloat:height];
    float smax = [JavaLangMath maxWithFloat:((RAREUIDimension *) nil_chk(size))->width_ withFloat:size->height_];
    int rot;
    if (cmax / smax > .75f) {
      rot = [RAREScreenUtils getRotationForConfigurationWithId:nil];
    }
    else {
      rot = [RAREScreenUtils getRotationForConfigurationWithId:[[RAREWindowDeviceConfiguration alloc] initWithFloat:width withFloat:height]];
    }
    [self handleOrientationWithBoolean:wider withInt:rot];
  }
}

- (RAREUIAction *)closeTabWithInt:(int)pos {
  if ((pos < 0) || (pos >= [((id<JavaUtilList>) nil_chk(tabs_)) size])) {
    return nil;
  }
  RAREUIAction *a = [((id<JavaUtilList>) nil_chk(tabs_)) getWithInt:pos];
  if (selectedTab_ == pos) {
    selectedTab_ = -1;
    [((id<RAREiParentComponent>) nil_chk(contentArea_)) removeAll];
  }
  [self removeTabWithRAREUIAction:a];
  return a;
}

- (void)dispose {
  if (tabs_ != nil) {
    int len = [tabs_ size];
    for (int i = 0; i < len; i++) {
      RAREUIAction *a = [tabs_ getWithInt:i];
      [((RAREUIAction *) nil_chk(a)) dispose];
    }
    [tabs_ clear];
  }
  if (contentArea_ != nil) {
    [contentArea_ dispose];
  }
  if (headerArea_ != nil) {
    [headerArea_ dispose];
  }
  if (tabStrip_ != nil) {
    [tabStrip_ dispose];
  }
  if (tabPainter_ != nil) {
    [tabPainter_ dispose];
  }
  if (componentPainter_ != nil) {
    [componentPainter_ dispose];
  }
  if (moreButton_ != nil) {
    [moreButton_ dispose];
  }
  contentArea_ = nil;
  headerArea_ = nil;
  contentManager_ = nil;
  trailingView_ = nil;
  tabStrip_ = nil;
  popupWindow_ = nil;
  mainComponent_ = nil;
  leadingView_ = nil;
  componentPainter_ = nil;
  moreButton_ = nil;
}

- (id<RAREiPlatformComponent>)getContentArea {
  return contentArea_;
}

- (id<RAREaTabPaneLayout_iContentManager>)getContentManager {
  return contentManager_;
}

- (id<RAREiPlatformComponent>)getHeaderArea {
  return headerArea_;
}

- (id<RAREiPlatformComponent>)getMainComponent {
  return mainComponent_;
}

- (int)getSlectedTab {
  return selectedTab_;
}

- (RAREUIAction *)getTabWithInt:(int)pos {
  return [((id<JavaUtilList>) nil_chk(tabs_)) getWithInt:pos];
}

- (RAREUIColor *)getTabBorderColor {
  return [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) getTabBorderColor];
}

- (int)getTabCount {
  return [((id<JavaUtilList>) nil_chk(tabs_)) size];
}

- (id)getTabLinkedDataWithInt:(int)pos {
  return [((RAREUIAction *) nil_chk([((id<JavaUtilList>) nil_chk(tabs_)) getWithInt:pos])) getLinkedData];
}

- (int)getTabMinHeight {
  return [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) getMinTabHeight];
}

- (int)getTabMinWidth {
  return [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) getMinTabWidth];
}

- (RAREaTabPainter *)getTabPainter {
  return tabPainter_;
}

- (RARELocationEnum *)getTabPlacement {
  return location_;
}

- (RAREUIRectangle *)getTabStripBounds {
  return [[RAREUIRectangle alloc] initWithFloat:[((RAREBorderPanel *) nil_chk(headerArea_)) getX] withFloat:[headerArea_ getY] withFloat:[headerArea_ getWidth] withFloat:[headerArea_ getHeight]];
}

- (int)indexOfLinkedDataWithId:(id)data {
  int len = [((id<JavaUtilList>) nil_chk(tabs_)) size];
  for (int i = 0; i < len; i++) {
    RAREUIAction *a = [tabs_ getWithInt:i];
    if ([((RAREUIAction *) nil_chk(a)) getLinkedData] == data) {
      return i;
    }
  }
  return -1;
}

- (int)indexOfTabWithRAREUIAction:(RAREUIAction *)a {
  return [((id<JavaUtilList>) nil_chk(tabs_)) indexOfWithId:a];
}

- (void)invalidatePainter {
  if (tabPainter_ != nil) {
    [tabPainter_ reset];
  }
}

- (BOOL)isHorizontal {
  return (location_ == [RARELocationEnum TOP]) || (location_ == [RARELocationEnum BOTTOM]);
}

- (void)removeTabWithRAREUIAction:(RAREUIAction *)a {
  if ([((id<JavaUtilList>) nil_chk(tabs_)) removeWithId:a]) {
    [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) tabRemovedWithRAREUIAction:a];
  }
}

- (void)setBoldSelectedTabWithBoolean:(BOOL)bold {
  [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) setBoldSelectedTabWithBoolean:bold];
}

- (void)setComponentsWithRAREiParentComponent:(id<RAREiParentComponent>)main
                          withRAREBorderPanel:(RAREBorderPanel *)header
                   withRAREaTabStripComponent:(RAREaTabStripComponent *)strip
                     withRAREiParentComponent:(id<RAREiParentComponent>)contentArea {
  mainComponent_ = main;
  headerArea_ = header;
  tabStrip_ = strip;
  self->contentArea_ = contentArea;
  [((id<RAREiParentComponent>) nil_chk(contentArea)) setBorderWithRAREiPlatformBorder:contentBorder_];
  id<RAREiWidget> v = [RAREPlatform findWidgetForComponentWithId:main];
  id<RAREiContainer> parent = (v == nil) ? [RAREPlatform getWindowViewer] : ((id) [v getContainerViewer]);
  moreButton_ = [[RAREaTabPaneLayout_$1 alloc] initWithRAREaTabPaneLayout:self withRAREiContainer:parent withRAREaTabPaneLayout:self];
  [moreButton_ setPopupScrollableWithBoolean:NO];
  [moreButton_ setUseActionListenerAsEventSourceWithBoolean:YES];
  [moreButton_ setIconWithRAREiPlatformIcon:moreIcon_];
  if (font_ != nil) {
    [moreButton_ setFontWithRAREUIFont:font_];
  }
  if (![RAREPlatform isTouchableDevice]) {
    [moreButton_ setFocusableWithBoolean:YES];
    [moreButton_ setFocusPaintedWithBoolean:YES];
  }
  RAREUIBalloonBorder *b = [[RAREUIBalloonBorder alloc] initWithRAREUIColor:[RAREaUILineBorder getDefaultLineColor]];
  [b setCornerArcWithFloat:[RAREScreenUtils PLATFORM_PIXELS_4]];
  [b setPeakSizeWithFloat:[RAREScreenUtils PLATFORM_PIXELS_10]];
  [moreButton_ setPopupBorderWithRAREiPlatformBorder:b];
}

- (void)setContentManagerWithRAREaTabPaneLayout_iContentManager:(id<RAREaTabPaneLayout_iContentManager>)contentManager {
  self->contentManager_ = contentManager;
}

- (void)setFontWithRAREUIFont:(RAREUIFont *)f {
  font_ = f;
  if (tabPainter_ != nil) {
    [tabPainter_ setTabFontWithRAREUIFont:f];
  }
  if (moreButton_ != nil) {
    [moreButton_ setFontWithRAREUIFont:font_];
  }
}

- (void)setMoreIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)moreIcon {
  self->moreIcon_ = moreIcon;
  if (moreButton_ != nil) {
    [moreButton_ setIconWithRAREiPlatformIcon:moreIcon];
  }
}

- (void)setSelectedTabWithInt:(int)index {
  if (selectedTab_ != index) {
    selectedTab_ = -1;
    RAREUIAction *a = [((id<JavaUtilList>) nil_chk(tabs_)) getWithInt:index];
    [self setContentWithRAREiViewer:[((id<RAREaTabPaneLayout_iContentManager>) nil_chk(contentManager_)) getContentWithRAREUIAction:a]];
    selectedTab_ = index;
    [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) setSelectedTabWithInt:index];
    [self requestLayout];
  }
}

- (int)setSelectedTabWithRAREUIAction:(RAREUIAction *)a {
  int index = [((id<JavaUtilList>) nil_chk(tabs_)) indexOfWithId:a];
  [self setSelectedTabWithInt:index];
  return index;
}

- (void)setShowIconsOnTabWithBoolean:(BOOL)show {
  [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) setShowIconsOnTabWithBoolean:show];
}

- (void)setTabAreaMarginWithRAREUIInsets:(RAREUIInsets *)margin {
  tabAreaMargin_ = margin;
  RAREUIInsets *in = (margin == nil) ? nil : [[RAREUIInsets alloc] initWithRAREUIInsets:margin];
  if (tabAreaBorder_ != nil) {
    if (in == nil) {
      in = [tabAreaBorder_ getBorderInsetsWithRAREUIInsets:(RAREUIInsets *) check_class_cast(nil, [RAREUIInsets class])];
    }
    else {
      (void) [in addInsetsWithRAREUIInsets:[tabAreaBorder_ getBorderInsetsWithRAREUIInsets:(RAREUIInsets *) check_class_cast(nil, [RAREUIInsets class])]];
    }
  }
  if (in == nil) {
    in = [[RAREUIInsets alloc] init];
  }
  [self setTabAreaMarginExWithRAREUIInsets:in];
}

- (void)setTabAreaPainterWithRAREPaintBucket:(RAREPaintBucket *)pb {
  if (pb != tabAreaPainter_) {
    id<RAREiPlatformBorder> b = (pb == nil) ? nil : [pb getBorder];
    tabAreaPainter_ = pb;
    RAREUIMatteBorder *mb = [self findMatteBorderWithRAREiPlatformBorder:b];
    tabAreaBorder_ = b;
    if (mb != nil) {
      matteBorder_ = mb;
    }
    [((id<RAREiParentComponent>) nil_chk(contentArea_)) setComponentPainterWithRAREiPlatformComponentPainter:(pb == nil) ? nil : [pb getCachedComponentPainter]];
    if (b != nil) {
      if (matteBorder_ != nil) {
        [self setTabAreaMarginExWithRAREUIInsets:[b getBorderInsetsWithRAREUIInsets:(RAREUIInsets *) check_class_cast(nil, [RAREUIInsets class])]];
      }
      if (selectedTabBorderColor_ != nil) {
        [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) setSelectedTabBorderColorWithRAREUIColor:selectedTabBorderColor_];
      }
      else if ((matteBorder_ != nil) && !borderColorSet_ && ([matteBorder_ getLineColor] != nil)) {
        [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) setSelectedTabBorderColorWithRAREUIColor:[matteBorder_ getLineColor]];
      }
    }
    if ([tabPainter_ isKindOfClass:[RAREaBoxTabPainter class]]) {
      [((RAREaBoxTabPainter *) check_class_cast(tabPainter_, [RAREaBoxTabPainter class])) setBorderPaintedWithBoolean:b == nil];
    }
    if (tabAreaMargin_ != nil) {
      [self setTabAreaMarginWithRAREUIInsets:tabAreaMargin_];
    }
  }
  [self requestLayout];
}

- (void)setTabBorderColorWithRAREUIColor:(RAREUIColor *)color {
  [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) setTabBorderColorWithRAREUIColor:color];
  borderColorSet_ = YES;
  if (matteBorder_ != nil) {
    [matteBorder_ setLineColorWithRAREUIColor:color];
  }
}

- (void)setTabLeadingViewWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  if (leadingView_ != nil) {
    [((RAREBorderPanel *) nil_chk(headerArea_)) removeWithRAREiPlatformComponent:leadingView_];
  }
  leadingView_ = c;
  switch ([[((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) getLocation] ordinal]) {
    case RARELocation_LEFT:
    [((RAREBorderPanel *) nil_chk(headerArea_)) addWithRAREiPlatformComponent:c withId:[RARELocationEnum BOTTOM]];
    break;
    case RARELocation_RIGHT:
    [((RAREBorderPanel *) nil_chk(headerArea_)) addWithRAREiPlatformComponent:c withId:[RARELocationEnum TOP]];
    break;
    default:
    [((RAREBorderPanel *) nil_chk(headerArea_)) addWithRAREiPlatformComponent:c withId:[RARELocationEnum LEFT]];
    break;
  }
}

- (void)setTabMinHeightWithInt:(int)height {
  if (minTabHeight_ != height) {
    minTabHeight_ = height;
    if (tabPainter_ != nil) {
      [tabPainter_ setMinTabHeightWithInt:height];
      [self requestLayout];
    }
  }
}

- (void)setTabMinWidthWithInt:(int)width {
  if (minTabWidth_ != width) {
    minTabWidth_ = width;
    if (tabPainter_ != nil) {
      [tabPainter_ setMinTabWidthWithInt:width];
      [self requestLayout];
    }
  }
}

- (void)setTabPainterWithRAREaPlatformTabPainter:(RAREaPlatformTabPainter *)painter {
  if (tabPainter_ != nil) {
    [((RAREaPlatformTabPainter *) nil_chk(painter)) setShowIconsOnTabWithBoolean:[tabPainter_ isShowIconsOnTab]];
    [painter setBoldSelectedTabWithBoolean:[tabPainter_ isBoldSelectedTab]];
    if (borderColorSet_) {
      [painter setTabBorderColorWithRAREUIColor:[tabPainter_ getTabBorderColor]];
    }
    [painter setPositionWithRARELocationEnum:[tabPainter_ getPosition]];
    [tabPainter_ dispose];
  }
  else if (location_ != [RARELocationEnum AUTO]) {
    [((RAREaPlatformTabPainter *) nil_chk(painter)) setPositionWithRARELocationEnum:location_];
  }
  if (minTabHeight_ > 0) {
    int h = minTabHeight_ = [JavaLangMath maxWithInt:[((RAREaPlatformTabPainter *) nil_chk(painter)) getMinTabHeight] withInt:minTabHeight_];
    [painter setMinTabHeightWithInt:h];
  }
  if (minTabWidth_ > 0) {
    int w = minTabWidth_ = [JavaLangMath maxWithInt:[((RAREaPlatformTabPainter *) nil_chk(painter)) getMinTabWidth] withInt:minTabWidth_];
    [painter setMinTabWidthWithInt:w];
  }
  if (tabs_ != nil) {
    [((RAREaPlatformTabPainter *) nil_chk(painter)) setTabsWithJavaUtilList:tabs_];
  }
  [((RAREaPlatformTabPainter *) nil_chk(painter)) setTabFontWithRAREUIFont:font_];
  if (moreButton_ != nil) {
    [moreButton_ setTextWithJavaLangCharSequence:[painter isShowMoreIconText] ? [self getMoreText] : @""];
    [painter setMoreButtonWithRAREiActionComponent:(id<RAREiActionComponent>) check_protocol_cast([moreButton_ getDataComponent], @protocol(RAREiActionComponent))];
  }
  tabPainter_ = painter;
  [((RAREaTabStripComponent *) nil_chk(tabStrip_)) setTabPainterWithRAREaPlatformTabPainter:painter];
  tabStripPadding_ = [painter getTabsPadding];
  if (selectedTabBorderColor_ != nil) {
    [tabPainter_ setSelectedTabBorderColorWithRAREUIColor:selectedTabBorderColor_];
  }
  if (matteBorder_ != nil) {
    if (borderColorSet_) {
      [matteBorder_ setLineColorWithRAREUIColor:[tabPainter_ getTabBorderColor]];
    }
    else if (([matteBorder_ getLineColor] != nil) && (selectedTabBorderColor_ == nil)) {
      [tabPainter_ setSelectedTabBorderColorWithRAREUIColor:[matteBorder_ getLineColor]];
    }
  }
  [self updateHeaderMargin];
  [self requestLayout];
}

- (void)setTabPlacementWithRARELocationEnum:(RARELocationEnum *)location {
  autoOrient_ = NO;
  [self setTabPlacementExWithRARELocationEnum:location];
}

- (void)setTabTrailingViewWithRAREiPlatformComponent:(id<RAREiPlatformComponent>)c {
  if (leadingView_ != nil) {
    [((RAREBorderPanel *) nil_chk(headerArea_)) removeWithRAREiPlatformComponent:leadingView_];
  }
  leadingView_ = c;
  switch ([location_ ordinal]) {
    case RARELocation_LEFT:
    [((RAREBorderPanel *) nil_chk(headerArea_)) addWithRAREiPlatformComponent:c withId:[RARELocationEnum TOP]];
    break;
    case RARELocation_RIGHT:
    [((RAREBorderPanel *) nil_chk(headerArea_)) addWithRAREiPlatformComponent:c withId:[RARELocationEnum BOTTOM]];
    break;
    default:
    [((RAREBorderPanel *) nil_chk(headerArea_)) addWithRAREiPlatformComponent:c withId:[RARELocationEnum RIGHT]];
    break;
  }
}

- (void)setUpdatingWithBoolean:(BOOL)updating {
  if (self->updating_ && !updating) {
    self->updating_ = NO;
    [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) setTabsWithJavaUtilList:tabs_];
  }
  else {
    self->updating_ = updating;
  }
}

- (void)adjustMoreButtonPopupLocationWithRAREUIRectangle:(RAREUIRectangle *)bounds {
  if (location_ == [RARELocationEnum LEFT]) {
    RAREUIDimension *d = [((RAREMenuButtonWidget *) nil_chk(moreButton_)) getPreferredSize];
    if (((RAREUIRectangle *) nil_chk(bounds))->x_ == 0) {
      bounds->x_ = ((RAREUIDimension *) nil_chk(d))->height_;
    }
    if (bounds->y_ == 0) {
      bounds->y_ = -((RAREUIDimension *) nil_chk(d))->width_;
    }
  }
}

- (void)configureRotationWithInt:(int)degrees {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (BOOL)handleOrientationWithBoolean:(BOOL)wider
                             withInt:(int)rotation {
  RARELocationEnum *loc;
  switch (rotation) {
    case 180:
    loc = wider ? [RARELocationEnum LEFT] : [RARELocationEnum TOP];
    break;
    case -90:
    case 270:
    loc = wider ? [RARELocationEnum LEFT] : [RARELocationEnum BOTTOM];
    break;
    case 90:
    loc = wider ? [RARELocationEnum RIGHT] : [RARELocationEnum TOP];
    break;
    default:
    loc = wider ? [RARELocationEnum RIGHT] : [RARELocationEnum BOTTOM];
    break;
  }
  if (loc != location_) {
    [self setTabPlacementExWithRARELocationEnum:loc];
    return YES;
  }
  return NO;
}

- (void)requestLayout {
  if (mainComponent_ != nil) {
    [mainComponent_ revalidate];
    [mainComponent_ repaint];
  }
}

- (void)setContentWithRAREiViewer:(id<RAREiViewer>)v {
  [((id<RAREiParentComponent>) nil_chk(contentArea_)) removeAll];
  if (v != nil) {
    [contentArea_ addWithRAREiPlatformComponent:[v getContainerComponent]];
    RARERenderTypeEnum *type = [v getRenderType];
    if (type != nil) {
      [self setContentRenderTypeWithRARERenderTypeEnum:type];
    }
  }
}

- (void)setContentRenderTypeWithRARERenderTypeEnum:(RARERenderTypeEnum *)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setTabAreaMarginExWithRAREUIInsets:(RAREUIInsets *)inArg {
  [((RAREUIEmptyBorder *) nil_chk(contentBorder_)) setInsetsWithRAREUIInsets:inArg];
}

- (void)setTabPlacementExWithRARELocationEnum:(RARELocationEnum *)location {
  if (self->location_ != location) {
    self->location_ = location;
    [((id<RAREiParentComponent>) nil_chk(mainComponent_)) removeWithRAREiPlatformComponent:headerArea_];
    [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) setPositionWithRARELocationEnum:location];
    RARERenderableDataItem_OrientationEnum *orientation = [RARERenderableDataItem_OrientationEnum HORIZONTAL];
    if (mainComponent_ != headerArea_) {
      switch ([location ordinal]) {
        case RARELocation_BOTTOM:
        if (threeSidedMatteBorder_) {
          [((RAREUIMatteBorder *) nil_chk(matteBorder_)) setInsetsWithInt:1 withInt:1 withInt:0 withInt:1];
        }
        [mainComponent_ addWithRAREiPlatformComponent:headerArea_ withId:[RARELocationEnum BOTTOM]];
        orientation = [RARERenderableDataItem_OrientationEnum HORIZONTAL];
        [self configureRotationWithInt:0];
        break;
        case RARELocation_LEFT:
        orientation = [tabPainter_ isHandlesRightLeftRotation] ? [RARERenderableDataItem_OrientationEnum HORIZONTAL] : [RARERenderableDataItem_OrientationEnum VERTICAL_UP];
        [self configureRotationWithInt:[tabPainter_ isHandlesRightLeftRotation] ? 0 : -90];
        if (threeSidedMatteBorder_) {
          [((RAREUIMatteBorder *) nil_chk(matteBorder_)) setInsetsWithInt:1 withInt:1 withInt:1 withInt:0];
        }
        [mainComponent_ addWithRAREiPlatformComponent:headerArea_ withId:[RARELocationEnum LEFT]];
        break;
        case RARELocation_RIGHT:
        orientation = [tabPainter_ isHandlesRightLeftRotation] ? [RARERenderableDataItem_OrientationEnum HORIZONTAL] : [RARERenderableDataItem_OrientationEnum VERTICAL_DOWN];
        if (threeSidedMatteBorder_) {
          [((RAREUIMatteBorder *) nil_chk(matteBorder_)) setInsetsWithInt:1 withInt:0 withInt:1 withInt:1];
        }
        [mainComponent_ addWithRAREiPlatformComponent:headerArea_ withId:[RARELocationEnum RIGHT]];
        [self configureRotationWithInt:[tabPainter_ isHandlesRightLeftRotation] ? 0 : 90];
        break;
        default:
        if (threeSidedMatteBorder_) {
          [((RAREUIMatteBorder *) nil_chk(matteBorder_)) setInsetsWithInt:0 withInt:1 withInt:1 withInt:1];
        }
        [mainComponent_ addWithRAREiPlatformComponent:headerArea_ withId:[RARELocationEnum TOP]];
        [self configureRotationWithInt:0];
        orientation = [RARERenderableDataItem_OrientationEnum HORIZONTAL];
        break;
      }
    }
    [((RAREaTabStripComponent *) nil_chk(tabStrip_)) setOrientationWithRARERenderableDataItem_OrientationEnum:orientation];
    [self setTabAreaMarginWithRAREUIInsets:tabAreaMargin_];
    if (trailingView_ != nil) {
      [self setTabTrailingViewWithRAREiPlatformComponent:trailingView_];
    }
    if (leadingView_ != nil) {
      [self setTabLeadingViewWithRAREiPlatformComponent:leadingView_];
    }
    [self updateHeaderMargin];
    [self requestLayout];
  }
}

- (void)updateHeaderMargin {
  if (!([(id) [((RAREBorderPanel *) nil_chk(headerArea_)) getBorder] isKindOfClass:[RAREUIEmptyBorder class]])) {
    return;
  }
  RAREUIEmptyBorder *b = (RAREUIEmptyBorder *) check_class_cast([headerArea_ getBorder], [RAREUIEmptyBorder class]);
  switch ([location_ ordinal]) {
    case RARELocation_BOTTOM:
    [((RAREUIEmptyBorder *) nil_chk(b)) setInsetsWithInt:0 withInt:0 withInt:tabStripPadding_ withInt:0];
    break;
    case RARELocation_LEFT:
    [((RAREUIEmptyBorder *) nil_chk(b)) setInsetsWithInt:0 withInt:0 withInt:0 withInt:tabStripPadding_];
    break;
    case RARELocation_RIGHT:
    [((RAREUIEmptyBorder *) nil_chk(b)) setInsetsWithInt:0 withInt:tabStripPadding_ withInt:0 withInt:0];
    break;
    default:
    [((RAREUIEmptyBorder *) nil_chk(b)) setInsetsWithInt:tabStripPadding_ withInt:0 withInt:0 withInt:0];
    break;
  }
}

- (RAREUIMatteBorder *)findMatteBorderWithRAREiPlatformBorder:(id<RAREiPlatformBorder>)b {
  threeSidedMatteBorder_ = NO;
  while ([(id) b isKindOfClass:[RAREUICompoundBorder class]]) {
    b = [((RAREUICompoundBorder *) check_class_cast(b, [RAREUICompoundBorder class])) getOutsideBorder];
  }
  if ([(id) b isKindOfClass:[RAREUIMatteBorder class]]) {
    RAREUIMatteBorder *mb = (RAREUIMatteBorder *) check_class_cast(b, [RAREUIMatteBorder class]);
    RAREUIInsets *in = [((RAREUIMatteBorder *) nil_chk(mb)) getBorderInsetsWithRAREUIInsets:(RAREUIInsets *) check_class_cast(nil, [RAREUIInsets class])];
    switch ([location_ ordinal]) {
      case RARELocation_LEFT:
      if ((((RAREUIInsets *) nil_chk(in))->top_ == 1) && (in->left_ == 0) && (in->right_ == 1) && (in->bottom_ == 1)) {
        threeSidedMatteBorder_ = YES;
        return mb;
      }
      break;
      case RARELocation_RIGHT:
      if ((((RAREUIInsets *) nil_chk(in))->top_ == 1) && (in->left_ == 1) && (in->right_ == 0) && (in->bottom_ == 1)) {
        threeSidedMatteBorder_ = YES;
        return mb;
      }
      break;
      case RARELocation_BOTTOM:
      if ((((RAREUIInsets *) nil_chk(in))->top_ == 1) && (in->left_ == 1) && (in->right_ == 1) && (in->bottom_ == 0)) {
        threeSidedMatteBorder_ = YES;
        return mb;
      }
      break;
      default:
      if ((((RAREUIInsets *) nil_chk(in))->top_ == 0) && (in->left_ == 1) && (in->right_ == 1) && (in->bottom_ == 1)) {
        threeSidedMatteBorder_ = YES;
        return mb;
      }
      break;
    }
    if ((((RAREUIInsets *) nil_chk(in))->top_ == 0) && (in->left_ == 0) && (in->right_ == 0) && (in->bottom_ == 0)) {
      selectedTabBorderColor_ = [mb getLineColor];
      if (selectedTabBorderColor_ != nil) {
        [((RAREaPlatformTabPainter *) nil_chk(tabPainter_)) setSelectedTabBorderColorWithRAREUIColor:selectedTabBorderColor_];
      }
    }
  }
  return nil;
}

- (NSString *)getMoreText {
  NSString *text = [RAREPlatform getResourceAsStringWithNSString:@"Rare.runtime.text.moreTabs"];
  if (text == nil) {
    text = @"More";
  }
  return text;
}

- (void)copyAllFieldsTo:(RAREaTabPaneLayout *)other {
  [super copyAllFieldsTo:other];
  other->autoOrient_ = autoOrient_;
  other->borderColorSet_ = borderColorSet_;
  other->componentPainter_ = componentPainter_;
  other->contentArea_ = contentArea_;
  other->contentBorder_ = contentBorder_;
  other->contentManager_ = contentManager_;
  other->font_ = font_;
  other->headerArea_ = headerArea_;
  other->leadingView_ = leadingView_;
  other->location_ = location_;
  other->mainComponent_ = mainComponent_;
  other->matteBorder_ = matteBorder_;
  other->minTabHeight_ = minTabHeight_;
  other->minTabWidth_ = minTabWidth_;
  other->moreButton_ = moreButton_;
  other->moreIcon_ = moreIcon_;
  other->popupWindow_ = popupWindow_;
  other->selectedTab_ = selectedTab_;
  other->selectedTabBorderColor_ = selectedTabBorderColor_;
  other->startTab_ = startTab_;
  other->tabAreaBorder_ = tabAreaBorder_;
  other->tabAreaMargin_ = tabAreaMargin_;
  other->tabAreaPainter_ = tabAreaPainter_;
  other->tabHeight_ = tabHeight_;
  other->tabPainter_ = tabPainter_;
  other->tabStrip_ = tabStrip_;
  other->tabStripPadding_ = tabStripPadding_;
  other->tabs_ = tabs_;
  other->threeSidedMatteBorder_ = threeSidedMatteBorder_;
  other->trailingView_ = trailingView_;
  other->updating_ = updating_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addTabWithNSString:withNSString:withRAREiPlatformIcon:", NULL, "LRAREUIAction", 0x1, NULL },
    { "checkOrientation", NULL, "Z", 0x1, NULL },
    { "checkOrientationWithId:", NULL, "Z", 0x1, NULL },
    { "closeTabWithInt:", NULL, "LRAREUIAction", 0x1, NULL },
    { "getContentArea", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getContentManager", NULL, "LRAREaTabPaneLayout_iContentManager", 0x1, NULL },
    { "getHeaderArea", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getMainComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getTabWithInt:", NULL, "LRAREUIAction", 0x1, NULL },
    { "getTabBorderColor", NULL, "LRAREUIColor", 0x1, NULL },
    { "getTabLinkedDataWithInt:", NULL, "LNSObject", 0x1, NULL },
    { "getTabPainter", NULL, "LRAREaTabPainter", 0x1, NULL },
    { "getTabPlacement", NULL, "LRARELocationEnum", 0x1, NULL },
    { "getTabStripBounds", NULL, "LRAREUIRectangle", 0x1, NULL },
    { "isHorizontal", NULL, "Z", 0x1, NULL },
    { "adjustMoreButtonPopupLocationWithRAREUIRectangle:", NULL, "V", 0x4, NULL },
    { "configureRotationWithInt:", NULL, "V", 0x404, NULL },
    { "handleOrientationWithBoolean:withInt:", NULL, "Z", 0x4, NULL },
    { "requestLayout", NULL, "V", 0x4, NULL },
    { "setContentWithRAREiViewer:", NULL, "V", 0x4, NULL },
    { "setContentRenderTypeWithRARERenderTypeEnum:", NULL, "V", 0x404, NULL },
    { "setTabAreaMarginExWithRAREUIInsets:", NULL, "V", 0x4, NULL },
    { "setTabPlacementExWithRARELocationEnum:", NULL, "V", 0x4, NULL },
    { "updateHeaderMargin", NULL, "V", 0x4, NULL },
    { "findMatteBorderWithRAREiPlatformBorder:", NULL, "LRAREUIMatteBorder", 0x2, NULL },
    { "getMoreText", NULL, "LNSString", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "selectedTab_", NULL, 0x4, "I" },
    { "location_", NULL, 0x4, "LRARELocationEnum" },
    { "tabs_", NULL, 0x4, "LJavaUtilList" },
    { "autoOrient_", NULL, 0x4, "Z" },
    { "contentBorder_", NULL, 0x0, "LRAREUIEmptyBorder" },
    { "componentPainter_", NULL, 0x4, "LRAREiPlatformComponentPainter" },
    { "contentArea_", NULL, 0x4, "LRAREiParentComponent" },
    { "font_", NULL, 0x4, "LRAREUIFont" },
    { "headerArea_", NULL, 0x4, "LRAREBorderPanel" },
    { "leadingView_", NULL, 0x4, "LRAREiPlatformComponent" },
    { "mainComponent_", NULL, 0x4, "LRAREiParentComponent" },
    { "matteBorder_", NULL, 0x4, "LRAREUIMatteBorder" },
    { "minTabHeight_", NULL, 0x4, "I" },
    { "moreButton_", NULL, 0x4, "LRAREMenuButtonWidget" },
    { "popupWindow_", NULL, 0x4, "LRAREiPopup" },
    { "selectedTabBorderColor_", NULL, 0x4, "LRAREUIColor" },
    { "startTab_", NULL, 0x4, "I" },
    { "tabAreaBorder_", NULL, 0x4, "LRAREiPlatformBorder" },
    { "tabAreaMargin_", NULL, 0x4, "LRAREUIInsets" },
    { "tabAreaPainter_", NULL, 0x4, "LRAREPaintBucket" },
    { "tabHeight_", NULL, 0x4, "I" },
    { "tabPainter_", NULL, 0x4, "LRAREaPlatformTabPainter" },
    { "tabStrip_", NULL, 0x4, "LRAREaTabStripComponent" },
    { "tabStripPadding_", NULL, 0x4, "I" },
    { "trailingView_", NULL, 0x4, "LRAREiPlatformComponent" },
    { "updating_", NULL, 0x4, "Z" },
  };
  static J2ObjcClassInfo _RAREaTabPaneLayout = { "aTabPaneLayout", "com.appnativa.rare.ui.tabpane", NULL, 0x401, 26, methods, 26, fields, 0, NULL};
  return &_RAREaTabPaneLayout;
}

@end

@interface RAREaTabPaneLayout_iContentManager : NSObject
@end

@implementation RAREaTabPaneLayout_iContentManager

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getContentWithRAREUIAction:", NULL, "LRAREiViewer", 0x401, NULL },
  };
  static J2ObjcClassInfo _RAREaTabPaneLayout_iContentManager = { "iContentManager", "com.appnativa.rare.ui.tabpane", "aTabPaneLayout", 0x201, 1, methods, 0, NULL, 0, NULL};
  return &_RAREaTabPaneLayout_iContentManager;
}

@end

@interface RAREaTabPaneLayout_iTabManager : NSObject
@end

@implementation RAREaTabPaneLayout_iTabManager

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getContentWithRAREUIAction:", NULL, "LRAREiPlatformComponent", 0x401, NULL },
  };
  static J2ObjcClassInfo _RAREaTabPaneLayout_iTabManager = { "iTabManager", "com.appnativa.rare.ui.tabpane", "aTabPaneLayout", 0x201, 1, methods, 0, NULL, 0, NULL};
  return &_RAREaTabPaneLayout_iTabManager;
}

@end
@implementation RAREaTabPaneLayout_$1

- (void)getProposedPopupBoundsWithRAREUIDimension:(RAREUIDimension *)contentSize
                              withRAREUIRectangle:(RAREUIRectangle *)r {
  int h = [((id<RAREiPlatformComponent>) nil_chk([this$0_ getContentArea])) getHeight];
  h -= [JavaLangMath maxWithInt:[((RAREMenuButtonWidget *) nil_chk(this$0_->moreButton_)) getHeight] withInt:[this$0_->moreButton_ getWidth]] * 2;
  int mh = [this$0_ getTabMinHeight];
  if (mh == 0) {
    mh = [RAREFontUtils getDefaultLineHeight];
  }
  h = [JavaLangMath maxWithInt:h withInt:mh * 5];
  ((RAREUIDimension *) nil_chk(contentSize))->height_ = [JavaLangMath minWithFloat:contentSize->height_ withFloat:h];
  [super getProposedPopupBoundsWithRAREUIDimension:contentSize withRAREUIRectangle:r];
}

- (id)initWithRAREaTabPaneLayout:(RAREaTabPaneLayout *)outer$
              withRAREiContainer:(id<RAREiContainer>)arg$0
          withRAREaTabPaneLayout:(RAREaTabPaneLayout *)arg$1 {
  this$0_ = outer$;
  return [super initWithRAREiContainer:arg$0 withRAREMenuButtonWidget_iPopulateCallback:arg$1];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getProposedPopupBoundsWithRAREUIDimension:withRAREUIRectangle:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LRAREaTabPaneLayout" },
  };
  static J2ObjcClassInfo _RAREaTabPaneLayout_$1 = { "$1", "com.appnativa.rare.ui.tabpane", "aTabPaneLayout", 0x8000, 1, methods, 1, fields, 0, NULL};
  return &_RAREaTabPaneLayout_$1;
}

@end
