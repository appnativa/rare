//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple-android-htmllabel/org/ccil/cowan/tagsoup/HTMLScanner.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSCharArray.h"
#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "IOSShortArray.h"
#include "java/io/BufferedReader.h"
#include "java/io/IOException.h"
#include "java/io/PushbackReader.h"
#include "java/io/Reader.h"
#include "java/lang/Character.h"
#include "java/lang/Error.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "org/ccil/cowan/tagsoup/HTMLScanner.h"
#include "org/ccil/cowan/tagsoup/ScanHandler.h"
#include "org/xml/sax/SAXException.h"

@implementation RAREHTMLScanner

static IOSIntArray * RAREHTMLScanner_statetable_;
static IOSObjectArray * RAREHTMLScanner_debug_actionnames_;
static IOSObjectArray * RAREHTMLScanner_debug_statenames_;
static IOSObjectArray * RAREHTMLScanner_statetableIndex_;
static int RAREHTMLScanner_statetableIndexMaxChar_;

+ (IOSIntArray *)statetable {
  return RAREHTMLScanner_statetable_;
}

+ (void)setStatetable:(IOSIntArray *)statetable {
  RAREHTMLScanner_statetable_ = statetable;
}

+ (IOSObjectArray *)debug_actionnames {
  return RAREHTMLScanner_debug_actionnames_;
}

+ (IOSObjectArray *)debug_statenames {
  return RAREHTMLScanner_debug_statenames_;
}

+ (IOSObjectArray *)statetableIndex {
  return RAREHTMLScanner_statetableIndex_;
}

+ (void)setStatetableIndex:(IOSObjectArray *)statetableIndex {
  RAREHTMLScanner_statetableIndex_ = statetableIndex;
}

+ (int)statetableIndexMaxChar {
  return RAREHTMLScanner_statetableIndexMaxChar_;
}

+ (int *)statetableIndexMaxCharRef {
  return &RAREHTMLScanner_statetableIndexMaxChar_;
}

- (void)unreadWithJavaIoPushbackReader:(JavaIoPushbackReader *)r
                               withInt:(int)c {
  if (c != -1) [((JavaIoPushbackReader *) nil_chk(r)) unreadWithInt:c];
}

- (int)getLineNumber {
  return theLastLine_;
}

- (int)getColumnNumber {
  return theLastColumn_;
}

- (NSString *)getPublicId {
  return thePublicid_;
}

- (NSString *)getSystemId {
  return theSystemid_;
}

- (void)resetDocumentLocatorWithNSString:(NSString *)publicid
                            withNSString:(NSString *)systemid {
  thePublicid_ = publicid;
  theSystemid_ = systemid;
  theLastLine_ = theLastColumn_ = theCurrentLine_ = theCurrentColumn_ = 0;
}

- (void)scanWithJavaIoReader:(JavaIoReader *)r0
         withRAREScanHandler:(id<RAREScanHandler>)h {
  theState_ = RAREHTMLScanner_S_PCDATA;
  JavaIoPushbackReader *r;
  if ([r0 isKindOfClass:[JavaIoBufferedReader class]]) {
    r = [[JavaIoPushbackReader alloc] initWithJavaIoReader:r0 withInt:5];
  }
  else {
    r = [[JavaIoPushbackReader alloc] initWithJavaIoReader:[[JavaIoBufferedReader alloc] initWithJavaIoReader:r0] withInt:5];
  }
  int firstChar = [((JavaIoPushbackReader *) nil_chk(r)) read];
  if (firstChar != 0xfeff) [self unreadWithJavaIoPushbackReader:r withInt:firstChar];
  while (theState_ != RAREHTMLScanner_S_DONE) {
    int ch = [r read];
    if (ch >= (int) 0x80 && ch <= (int) 0x9F) ch = IOSIntArray_Get(nil_chk(theWinMap_), ch - (int) 0x80);
    if (ch == 0x000d) {
      ch = [r read];
      if (ch != 0x000a) {
        [self unreadWithJavaIoPushbackReader:r withInt:ch];
        ch = 0x000a;
      }
    }
    if (ch == 0x000a) {
      theCurrentLine_++;
      theCurrentColumn_ = 0;
    }
    else {
      theCurrentColumn_++;
    }
    if (!(ch >= (int) 0x20 || ch == 0x000a || ch == 0x0009 || ch == -1)) continue;
    int adjCh = (ch >= -1 && ch < RAREHTMLScanner_statetableIndexMaxChar_) ? ch : -2;
    int statetableRow = IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(RAREHTMLScanner_statetableIndex_), theState_)), adjCh + 2);
    int action = 0;
    if (statetableRow != -1) {
      action = IOSIntArray_Get(nil_chk(RAREHTMLScanner_statetable_), statetableRow + 2);
      theNextState_ = IOSIntArray_Get(RAREHTMLScanner_statetable_, statetableRow + 3);
    }
    {
      unichar ch1;
      int ent;
      switch (action) {
        case 0:
        @throw [[JavaLangError alloc] initWithNSString:[NSString stringWithFormat:@"HTMLScanner can't cope with %@ in state %@", [JavaLangInteger toStringWithInt:ch], [JavaLangInteger toStringWithInt:theState_]]];
        case RAREHTMLScanner_A_ADUP:
        [((id<RAREScanHandler>) nil_chk(h)) adupWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_ADUP_SAVE:
        [((id<RAREScanHandler>) nil_chk(h)) adupWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        [self saveWithInt:ch withRAREScanHandler:h];
        break;
        case RAREHTMLScanner_A_ADUP_STAGC:
        [((id<RAREScanHandler>) nil_chk(h)) adupWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        [h stagcWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        break;
        case RAREHTMLScanner_A_ANAME:
        [((id<RAREScanHandler>) nil_chk(h)) anameWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_ANAME_ADUP:
        [((id<RAREScanHandler>) nil_chk(h)) anameWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        [h adupWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        break;
        case RAREHTMLScanner_A_ANAME_ADUP_STAGC:
        [((id<RAREScanHandler>) nil_chk(h)) anameWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        [h adupWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        [h stagcWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        break;
        case RAREHTMLScanner_A_AVAL:
        [((id<RAREScanHandler>) nil_chk(h)) avalWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_AVAL_STAGC:
        [((id<RAREScanHandler>) nil_chk(h)) avalWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        [h stagcWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        break;
        case RAREHTMLScanner_A_CDATA:
        [self mark];
        if (theSize_ > 1) theSize_ -= 2;
        [((id<RAREScanHandler>) nil_chk(h)) pcdataWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_ENTITY_START:
        [((id<RAREScanHandler>) nil_chk(h)) pcdataWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        [self saveWithInt:ch withRAREScanHandler:h];
        break;
        case RAREHTMLScanner_A_ENTITY:
        [self mark];
        ch1 = (unichar) ch;
        if (theState_ == RAREHTMLScanner_S_ENT && ch1 == '#') {
          theNextState_ = RAREHTMLScanner_S_NCR;
          [self saveWithInt:ch withRAREScanHandler:h];
          break;
        }
        else if (theState_ == RAREHTMLScanner_S_NCR && (ch1 == 'x' || ch1 == 'X')) {
          theNextState_ = RAREHTMLScanner_S_XNCR;
          [self saveWithInt:ch withRAREScanHandler:h];
          break;
        }
        else if (theState_ == RAREHTMLScanner_S_ENT && [JavaLangCharacter isLetterOrDigitWithChar:ch1]) {
          [self saveWithInt:ch withRAREScanHandler:h];
          break;
        }
        else if (theState_ == RAREHTMLScanner_S_NCR && [JavaLangCharacter isDigitWithChar:ch1]) {
          [self saveWithInt:ch withRAREScanHandler:h];
          break;
        }
        else if (theState_ == RAREHTMLScanner_S_XNCR && ([JavaLangCharacter isDigitWithChar:ch1] || [@"abcdefABCDEF" indexOf:ch1] != -1)) {
          [self saveWithInt:ch withRAREScanHandler:h];
          break;
        }
        [((id<RAREScanHandler>) nil_chk(h)) entityWithCharArray:theOutputBuffer_ withInt:1 withInt:theSize_ - 1];
        ent = [h getEntity];
        if (ent != 0) {
          theSize_ = 0;
          if (ent >= (int) 0x80 && ent <= (int) 0x9F) {
            ent = IOSIntArray_Get(nil_chk(theWinMap_), ent - (int) 0x80);
          }
          if (ent < (int) 0x20) {
            ent = (int) 0x20;
          }
          else if (ent >= (int) 0xD800 && ent <= (int) 0xDFFF) {
            ent = 0;
          }
          else if (ent <= (int) 0xFFFF) {
            [self saveWithInt:ent withRAREScanHandler:h];
          }
          else {
            ent -= (int) 0x10000;
            [self saveWithInt:(ent >> 10) + (int) 0xD800 withRAREScanHandler:h];
            [self saveWithInt:(ent & (int) 0x3FF) + (int) 0xDC00 withRAREScanHandler:h];
          }
          if (ch != ';') {
            [self unreadWithJavaIoPushbackReader:r withInt:ch];
            theCurrentColumn_--;
          }
        }
        else {
          [self unreadWithJavaIoPushbackReader:r withInt:ch];
          theCurrentColumn_--;
        }
        theNextState_ = RAREHTMLScanner_S_PCDATA;
        break;
        case RAREHTMLScanner_A_ETAG:
        [((id<RAREScanHandler>) nil_chk(h)) etagWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_DECL:
        [((id<RAREScanHandler>) nil_chk(h)) declWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_GI:
        [((id<RAREScanHandler>) nil_chk(h)) giWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_GI_STAGC:
        [((id<RAREScanHandler>) nil_chk(h)) giWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        [h stagcWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        break;
        case RAREHTMLScanner_A_LT:
        [self mark];
        [self saveWithInt:'<' withRAREScanHandler:h];
        [self saveWithInt:ch withRAREScanHandler:h];
        break;
        case RAREHTMLScanner_A_LT_PCDATA:
        [self mark];
        [self saveWithInt:'<' withRAREScanHandler:h];
        [((id<RAREScanHandler>) nil_chk(h)) pcdataWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_PCDATA:
        [self mark];
        [((id<RAREScanHandler>) nil_chk(h)) pcdataWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_CMNT:
        [self mark];
        [((id<RAREScanHandler>) nil_chk(h)) cmntWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_MINUS3:
        [self saveWithInt:'-' withRAREScanHandler:h];
        [self saveWithInt:' ' withRAREScanHandler:h];
        break;
        case RAREHTMLScanner_A_MINUS2:
        [self saveWithInt:'-' withRAREScanHandler:h];
        [self saveWithInt:' ' withRAREScanHandler:h];
        case RAREHTMLScanner_A_MINUS:
        [self saveWithInt:'-' withRAREScanHandler:h];
        [self saveWithInt:ch withRAREScanHandler:h];
        break;
        case RAREHTMLScanner_A_PI:
        [self mark];
        [((id<RAREScanHandler>) nil_chk(h)) piWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_PITARGET:
        [((id<RAREScanHandler>) nil_chk(h)) pitargetWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_PITARGET_PI:
        [((id<RAREScanHandler>) nil_chk(h)) pitargetWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        [h piWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        break;
        case RAREHTMLScanner_A_SAVE:
        [self saveWithInt:ch withRAREScanHandler:h];
        break;
        case RAREHTMLScanner_A_SKIP:
        break;
        case RAREHTMLScanner_A_SP:
        [self saveWithInt:' ' withRAREScanHandler:h];
        break;
        case RAREHTMLScanner_A_STAGC:
        [((id<RAREScanHandler>) nil_chk(h)) stagcWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        case RAREHTMLScanner_A_EMPTYTAG:
        [self mark];
        if (theSize_ > 0) [((id<RAREScanHandler>) nil_chk(h)) giWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        [((id<RAREScanHandler>) nil_chk(h)) stageWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        break;
        case RAREHTMLScanner_A_UNGET:
        [self unreadWithJavaIoPushbackReader:r withInt:ch];
        theCurrentColumn_--;
        break;
        case RAREHTMLScanner_A_UNSAVE_PCDATA:
        if (theSize_ > 0) theSize_--;
        [((id<RAREScanHandler>) nil_chk(h)) pcdataWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
        theSize_ = 0;
        break;
        default:
        @throw [[JavaLangError alloc] initWithNSString:[NSString stringWithFormat:@"Can't process state %d", action]];
      }
    }
    theState_ = theNextState_;
  }
  [((id<RAREScanHandler>) nil_chk(h)) eofWithCharArray:theOutputBuffer_ withInt:0 withInt:0];
}

- (void)mark {
  theLastColumn_ = theCurrentColumn_;
  theLastLine_ = theCurrentLine_;
}

- (void)startCDATA {
  theNextState_ = RAREHTMLScanner_S_CDATA;
}

- (void)saveWithInt:(int)ch
withRAREScanHandler:(id<RAREScanHandler>)h {
  if (theSize_ >= (int) [((IOSCharArray *) nil_chk(theOutputBuffer_)) count] - 20) {
    if (theState_ == RAREHTMLScanner_S_PCDATA || theState_ == RAREHTMLScanner_S_CDATA) {
      [((id<RAREScanHandler>) nil_chk(h)) pcdataWithCharArray:theOutputBuffer_ withInt:0 withInt:theSize_];
      theSize_ = 0;
    }
    else {
      IOSCharArray *newOutputBuffer = [IOSCharArray arrayWithLength:(int) [theOutputBuffer_ count] * 2];
      [JavaLangSystem arraycopyWithId:theOutputBuffer_ withInt:0 withId:newOutputBuffer withInt:0 withInt:theSize_ + 1];
      theOutputBuffer_ = newOutputBuffer;
    }
  }
  (*IOSCharArray_GetRef(theOutputBuffer_, theSize_++)) = (unichar) ch;
}

+ (NSString *)nicecharWithInt:(int)inArg {
  if (inArg == 0x000a) return @"\\n";
  if (inArg < 32) return [NSString stringWithFormat:@"0x%@", [JavaLangInteger toHexStringWithInt:inArg]];
  return [NSString stringWithFormat:@"'%C'", ((unichar) inArg)];
}

- (id)init {
  if (self = [super init]) {
    theOutputBuffer_ = [IOSCharArray arrayWithLength:200];
    theWinMap_ = [IOSIntArray arrayWithInts:(int[]){ (int) 0x20AC, (int) 0xFFFD, (int) 0x201A, (int) 0x0192, (int) 0x201E, (int) 0x2026, (int) 0x2020, (int) 0x2021, (int) 0x02C6, (int) 0x2030, (int) 0x0160, (int) 0x2039, (int) 0x0152, (int) 0xFFFD, (int) 0x017D, (int) 0xFFFD, (int) 0xFFFD, (int) 0x2018, (int) 0x2019, (int) 0x201C, (int) 0x201D, (int) 0x2022, (int) 0x2013, (int) 0x2014, (int) 0x02DC, (int) 0x2122, (int) 0x0161, (int) 0x203A, (int) 0x0153, (int) 0xFFFD, (int) 0x017E, (int) 0x0178 } count:32];
  }
  return self;
}

+ (void)initialize {
  if (self == [RAREHTMLScanner class]) {
    RAREHTMLScanner_statetable_ = [IOSIntArray arrayWithInts:(int[]){ 1, 47, 5, 22, 1, 61, 4, 3, 1, 62, 6, 28, 1, 0, 27, 1, 1, -1, 6, 21, 1, 32, 4, 24, 1, 10, 4, 24, 1, 9, 4, 24, 2, 39, 7, 34, 2, 0, 27, 2, 2, -1, 8, 21, 2, 32, 29, 2, 2, 10, 29, 2, 2, 9, 29, 2, 3, 34, 28, 31, 3, 39, 28, 2, 3, 62, 8, 28, 3, 0, 27, 32, 3, -1, 8, 21, 3, 32, 28, 3, 3, 10, 28, 3, 3, 9, 28, 3, 4, 67, 28, 5, 4, 0, 28, 19, 4, -1, 28, 21, 5, 68, 28, 6, 5, 0, 28, 19, 5, -1, 28, 21, 6, 65, 28, 7, 6, 0, 28, 19, 6, -1, 28, 21, 7, 84, 28, 8, 7, 0, 28, 19, 7, -1, 28, 21, 8, 65, 28, 9, 8, 0, 28, 19, 8, -1, 28, 21, 9, 91, 28, 12, 9, 0, 28, 19, 9, -1, 28, 21, 10, 60, 27, 11, 10, 0, 27, 10, 10, -1, 23, 21, 11, 47, 32, 25, 11, 0, 27, 10, 11, -1, 32, 21, 12, 93, 27, 13, 12, 0, 27, 12, 12, -1, 28, 21, 13, 93, 27, 14, 13, 0, 27, 12, 13, -1, 28, 21, 14, 62, 9, 28, 14, 93, 27, 14, 14, 0, 27, 12, 14, -1, 28, 21, 15, 45, 28, 16, 15, 0, 27, 16, 15, -1, 10, 21, 16, 45, 28, 17, 16, 0, 27, 16, 16, -1, 10, 21, 17, 45, 28, 18, 17, 0, 20, 16, 17, -1, 10, 21, 18, 45, 22, 18, 18, 62, 10, 28, 18, 0, 21, 16, 18, -1, 10, 21, 19, 45, 28, 15, 19, 62, 28, 28, 19, 91, 28, 4, 19, 0, 27, 20, 19, -1, 28, 21, 20, 62, 11, 28, 20, 0, 27, 20, 20, -1, 28, 21, 22, 62, 12, 28, 22, 0, 27, 1, 22, 32, 28, 34, 22, 10, 28, 34, 22, 9, 28, 34, 23, 0, 13, 23, 23, -1, 13, 21, 24, 61, 28, 3, 24, 62, 3, 28, 24, 0, 2, 1, 24, -1, 3, 21, 24, 32, 28, 24, 24, 10, 28, 24, 24, 9, 28, 24, 25, 62, 15, 28, 25, 0, 27, 25, 25, -1, 15, 21, 25, 32, 28, 25, 25, 10, 28, 25, 25, 9, 28, 25, 26, 47, 28, 22, 26, 62, 17, 28, 26, 0, 27, 26, 26, -1, 28, 21, 26, 32, 16, 34, 26, 10, 16, 34, 26, 9, 16, 34, 27, 0, 13, 27, 27, -1, 13, 21, 28, 38, 14, 23, 28, 60, 23, 33, 28, 0, 27, 28, 28, -1, 23, 21, 29, 62, 24, 28, 29, 0, 27, 29, 29, -1, 24, 21, 30, 62, 26, 28, 30, 0, 27, 30, 30, -1, 26, 21, 30, 32, 25, 29, 30, 10, 25, 29, 30, 9, 25, 29, 31, 34, 7, 34, 31, 0, 27, 31, 31, -1, 8, 21, 31, 32, 29, 31, 31, 10, 29, 31, 31, 9, 29, 31, 32, 62, 8, 28, 32, 0, 27, 32, 32, -1, 8, 21, 32, 32, 7, 34, 32, 10, 7, 34, 32, 9, 7, 34, 33, 33, 28, 19, 33, 47, 28, 25, 33, 60, 27, 33, 33, 63, 28, 30, 33, 0, 27, 26, 33, -1, 19, 21, 33, 32, 18, 28, 33, 10, 18, 28, 33, 9, 18, 28, 34, 47, 28, 22, 34, 62, 30, 28, 34, 0, 27, 1, 34, -1, 30, 21, 34, 32, 28, 34, 34, 10, 28, 34, 34, 9, 28, 34, 35, 0, 13, 35, 35, -1, 13, 21 } count:596];
    RAREHTMLScanner_debug_actionnames_ = [IOSObjectArray arrayWithObjects:(id[]){ @"", @"A_ADUP", @"A_ADUP_SAVE", @"A_ADUP_STAGC", @"A_ANAME", @"A_ANAME_ADUP", @"A_ANAME_ADUP_STAGC", @"A_AVAL", @"A_AVAL_STAGC", @"A_CDATA", @"A_CMNT", @"A_DECL", @"A_EMPTYTAG", @"A_ENTITY", @"A_ENTITY_START", @"A_ETAG", @"A_GI", @"A_GI_STAGC", @"A_LT", @"A_LT_PCDATA", @"A_MINUS", @"A_MINUS2", @"A_MINUS3", @"A_PCDATA", @"A_PI", @"A_PITARGET", @"A_PITARGET_PI", @"A_SAVE", @"A_SKIP", @"A_SP", @"A_STAGC", @"A_UNGET", @"A_UNSAVE_PCDATA" } count:33 type:[IOSClass classWithClass:[NSString class]]];
    RAREHTMLScanner_debug_statenames_ = [IOSObjectArray arrayWithObjects:(id[]){ @"", @"S_ANAME", @"S_APOS", @"S_AVAL", @"S_BB", @"S_BBC", @"S_BBCD", @"S_BBCDA", @"S_BBCDAT", @"S_BBCDATA", @"S_CDATA", @"S_CDATA2", @"S_CDSECT", @"S_CDSECT1", @"S_CDSECT2", @"S_COM", @"S_COM2", @"S_COM3", @"S_COM4", @"S_DECL", @"S_DECL2", @"S_DONE", @"S_EMPTYTAG", @"S_ENT", @"S_EQ", @"S_ETAG", @"S_GI", @"S_NCR", @"S_PCDATA", @"S_PI", @"S_PITARGET", @"S_QUOT", @"S_STAGC", @"S_TAG", @"S_TAGWS", @"S_XNCR" } count:36 type:[IOSClass classWithClass:[NSString class]]];
    {
      int maxState = -1;
      int maxChar = -1;
      for (int i = 0; i < (int) [RAREHTMLScanner_statetable_ count]; i += 4) {
        if (IOSIntArray_Get(RAREHTMLScanner_statetable_, i) > maxState) {
          maxState = IOSIntArray_Get(RAREHTMLScanner_statetable_, i);
        }
        if (IOSIntArray_Get(RAREHTMLScanner_statetable_, i + 1) > maxChar) {
          maxChar = IOSIntArray_Get(RAREHTMLScanner_statetable_, i + 1);
        }
      }
      RAREHTMLScanner_statetableIndexMaxChar_ = maxChar + 1;
      RAREHTMLScanner_statetableIndex_ = [IOSShortArray arrayWithDimensions:2 lengths:(int[]){ maxState + 1, maxChar + 3 }];
      for (int theState = 0; theState <= maxState; ++theState) {
        for (int ch = -2; ch <= maxChar; ++ch) {
          int hit = -1;
          int action = 0;
          for (int i = 0; i < (int) [RAREHTMLScanner_statetable_ count]; i += 4) {
            if (theState != IOSIntArray_Get(RAREHTMLScanner_statetable_, i)) {
              if (action != 0) break;
              continue;
            }
            if (IOSIntArray_Get(RAREHTMLScanner_statetable_, i + 1) == 0) {
              hit = i;
              action = IOSIntArray_Get(RAREHTMLScanner_statetable_, i + 2);
            }
            else if (IOSIntArray_Get(RAREHTMLScanner_statetable_, i + 1) == ch) {
              hit = i;
              action = IOSIntArray_Get(RAREHTMLScanner_statetable_, i + 2);
              break;
            }
          }
          (*IOSShortArray_GetRef(nil_chk(IOSObjectArray_Get(RAREHTMLScanner_statetableIndex_, theState)), ch + 2)) = (short int) hit;
        }
      }
    }
  }
}

- (void)copyAllFieldsTo:(RAREHTMLScanner *)other {
  [super copyAllFieldsTo:other];
  other->theCurrentColumn_ = theCurrentColumn_;
  other->theCurrentLine_ = theCurrentLine_;
  other->theLastColumn_ = theLastColumn_;
  other->theLastLine_ = theLastLine_;
  other->theNextState_ = theNextState_;
  other->theOutputBuffer_ = theOutputBuffer_;
  other->thePublicid_ = thePublicid_;
  other->theSize_ = theSize_;
  other->theState_ = theState_;
  other->theSystemid_ = theSystemid_;
  other->theWinMap_ = theWinMap_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "unreadWithJavaIoPushbackReader:withInt:", NULL, "V", 0x2, "JavaIoIOException" },
    { "getPublicId", NULL, "LNSString", 0x1, NULL },
    { "getSystemId", NULL, "LNSString", 0x1, NULL },
    { "scanWithJavaIoReader:withRAREScanHandler:", NULL, "V", 0x1, "JavaIoIOException;OrgXmlSaxSAXException" },
    { "mark", NULL, "V", 0x2, NULL },
    { "saveWithInt:withRAREScanHandler:", NULL, "V", 0x2, "JavaIoIOException;OrgXmlSaxSAXException" },
    { "nicecharWithInt:", NULL, "LNSString", 0xa, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "S_ANAME_", NULL, 0x1a, "I" },
    { "S_APOS_", NULL, 0x1a, "I" },
    { "S_AVAL_", NULL, 0x1a, "I" },
    { "S_BB_", NULL, 0x1a, "I" },
    { "S_BBC_", NULL, 0x1a, "I" },
    { "S_BBCD_", NULL, 0x1a, "I" },
    { "S_BBCDA_", NULL, 0x1a, "I" },
    { "S_BBCDAT_", NULL, 0x1a, "I" },
    { "S_BBCDATA_", NULL, 0x1a, "I" },
    { "S_CDATA_", NULL, 0x1a, "I" },
    { "S_CDATA2_", NULL, 0x1a, "I" },
    { "S_CDSECT_", NULL, 0x1a, "I" },
    { "S_CDSECT1_", NULL, 0x1a, "I" },
    { "S_CDSECT2_", NULL, 0x1a, "I" },
    { "S_COM_", NULL, 0x1a, "I" },
    { "S_COM2_", NULL, 0x1a, "I" },
    { "S_COM3_", NULL, 0x1a, "I" },
    { "S_COM4_", NULL, 0x1a, "I" },
    { "S_DECL_", NULL, 0x1a, "I" },
    { "S_DECL2_", NULL, 0x1a, "I" },
    { "S_DONE_", NULL, 0x1a, "I" },
    { "S_EMPTYTAG_", NULL, 0x1a, "I" },
    { "S_ENT_", NULL, 0x1a, "I" },
    { "S_EQ_", NULL, 0x1a, "I" },
    { "S_ETAG_", NULL, 0x1a, "I" },
    { "S_GI_", NULL, 0x1a, "I" },
    { "S_NCR_", NULL, 0x1a, "I" },
    { "S_PCDATA_", NULL, 0x1a, "I" },
    { "S_PI_", NULL, 0x1a, "I" },
    { "S_PITARGET_", NULL, 0x1a, "I" },
    { "S_QUOT_", NULL, 0x1a, "I" },
    { "S_STAGC_", NULL, 0x1a, "I" },
    { "S_TAG_", NULL, 0x1a, "I" },
    { "S_TAGWS_", NULL, 0x1a, "I" },
    { "S_XNCR_", NULL, 0x1a, "I" },
    { "A_ADUP_", NULL, 0x1a, "I" },
    { "A_ADUP_SAVE_", NULL, 0x1a, "I" },
    { "A_ADUP_STAGC_", NULL, 0x1a, "I" },
    { "A_ANAME_", NULL, 0x1a, "I" },
    { "A_ANAME_ADUP_", NULL, 0x1a, "I" },
    { "A_ANAME_ADUP_STAGC_", NULL, 0x1a, "I" },
    { "A_AVAL_", NULL, 0x1a, "I" },
    { "A_AVAL_STAGC_", NULL, 0x1a, "I" },
    { "A_CDATA_", NULL, 0x1a, "I" },
    { "A_CMNT_", NULL, 0x1a, "I" },
    { "A_DECL_", NULL, 0x1a, "I" },
    { "A_EMPTYTAG_", NULL, 0x1a, "I" },
    { "A_ENTITY_", NULL, 0x1a, "I" },
    { "A_ENTITY_START_", NULL, 0x1a, "I" },
    { "A_ETAG_", NULL, 0x1a, "I" },
    { "A_GI_", NULL, 0x1a, "I" },
    { "A_GI_STAGC_", NULL, 0x1a, "I" },
    { "A_LT_", NULL, 0x1a, "I" },
    { "A_LT_PCDATA_", NULL, 0x1a, "I" },
    { "A_MINUS_", NULL, 0x1a, "I" },
    { "A_MINUS2_", NULL, 0x1a, "I" },
    { "A_MINUS3_", NULL, 0x1a, "I" },
    { "A_PCDATA_", NULL, 0x1a, "I" },
    { "A_PI_", NULL, 0x1a, "I" },
    { "A_PITARGET_", NULL, 0x1a, "I" },
    { "A_PITARGET_PI_", NULL, 0x1a, "I" },
    { "A_SAVE_", NULL, 0x1a, "I" },
    { "A_SKIP_", NULL, 0x1a, "I" },
    { "A_SP_", NULL, 0x1a, "I" },
    { "A_STAGC_", NULL, 0x1a, "I" },
    { "A_UNGET_", NULL, 0x1a, "I" },
    { "A_UNSAVE_PCDATA_", NULL, 0x1a, "I" },
    { "statetable_", NULL, 0xa, "LIOSIntArray" },
    { "debug_actionnames_", NULL, 0x1a, "LIOSObjectArray" },
    { "debug_statenames_", NULL, 0x1a, "LIOSObjectArray" },
    { "theState_", NULL, 0x0, "I" },
    { "theNextState_", NULL, 0x0, "I" },
    { "theOutputBuffer_", NULL, 0x0, "LIOSCharArray" },
    { "theSize_", NULL, 0x0, "I" },
    { "theWinMap_", NULL, 0x0, "LIOSIntArray" },
    { "statetableIndex_", NULL, 0x8, "LIOSObjectArray" },
    { "statetableIndexMaxChar_", NULL, 0x8, "I" },
  };
  static J2ObjcClassInfo _RAREHTMLScanner = { "HTMLScanner", "org.ccil.cowan.tagsoup", NULL, 0x1, 7, methods, 77, fields, 0, NULL};
  return &_RAREHTMLScanner;
}

@end
