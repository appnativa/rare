//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/apple-android-htmllabel/org/ccil/cowan/tagsoup/Element.java
//
//  Created by decoteaud on 3/11/16.
//

#include "org/ccil/cowan/tagsoup/AttributesImpl.h"
#include "org/ccil/cowan/tagsoup/Element.h"
#include "org/ccil/cowan/tagsoup/ElementType.h"

@implementation RAREElement

- (id)initWithRAREElementType:(RAREElementType *)type
                  withBoolean:(BOOL)defaultAttributes {
  if (self = [super init]) {
    theType_ = type;
    if (defaultAttributes) theAtts_ = [[RAREAttributesImpl alloc] initWithOrgXmlSaxAttributes:[((RAREElementType *) nil_chk(type)) atts]];
    else theAtts_ = [[RAREAttributesImpl alloc] init];
    theNext_ = nil;
    preclosed_ = NO;
  }
  return self;
}

- (RAREElementType *)type {
  return theType_;
}

- (RAREAttributesImpl *)atts {
  return theAtts_;
}

- (RAREElement *)next {
  return theNext_;
}

- (void)setNextWithRAREElement:(RAREElement *)next {
  theNext_ = next;
}

- (NSString *)name {
  return [((RAREElementType *) nil_chk(theType_)) name];
}

- (NSString *)namespace__ {
  return [((RAREElementType *) nil_chk(theType_)) namespace__];
}

- (NSString *)localName {
  return [((RAREElementType *) nil_chk(theType_)) localName];
}

- (int)model {
  return [((RAREElementType *) nil_chk(theType_)) model];
}

- (int)memberOf {
  return [((RAREElementType *) nil_chk(theType_)) memberOf];
}

- (int)flags {
  return [((RAREElementType *) nil_chk(theType_)) flags];
}

- (RAREElementType *)parent {
  return [((RAREElementType *) nil_chk(theType_)) parent];
}

- (BOOL)canContainWithRAREElement:(RAREElement *)other {
  return [((RAREElementType *) nil_chk(theType_)) canContainWithRAREElementType:((RAREElement *) nil_chk(other))->theType_];
}

- (void)setAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)type
                    withNSString:(NSString *)value {
  [((RAREElementType *) nil_chk(theType_)) setAttributeWithRAREAttributesImpl:theAtts_ withNSString:name withNSString:type withNSString:value];
}

- (void)anonymize {
  for (int i = [((RAREAttributesImpl *) nil_chk(theAtts_)) getLength] - 1; i >= 0; i--) {
    if ([((NSString *) nil_chk([theAtts_ getTypeWithInt:i])) isEqual:@"ID"] || [((NSString *) nil_chk([theAtts_ getQNameWithInt:i])) isEqual:@"name"]) {
      [theAtts_ removeAttributeWithInt:i];
    }
  }
}

- (void)clean {
  for (int i = [((RAREAttributesImpl *) nil_chk(theAtts_)) getLength] - 1; i >= 0; i--) {
    NSString *name = [theAtts_ getLocalNameWithInt:i];
    if ([theAtts_ getValueWithInt:i] == nil || name == nil || [name sequenceLength] == 0) {
      [theAtts_ removeAttributeWithInt:i];
      continue;
    }
  }
}

- (void)preclose {
  preclosed_ = YES;
}

- (BOOL)isPreclosed {
  return preclosed_;
}

- (void)copyAllFieldsTo:(RAREElement *)other {
  [super copyAllFieldsTo:other];
  other->preclosed_ = preclosed_;
  other->theAtts_ = theAtts_;
  other->theNext_ = theNext_;
  other->theType_ = theType_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "type", NULL, "LRAREElementType", 0x1, NULL },
    { "atts", NULL, "LRAREAttributesImpl", 0x1, NULL },
    { "next", NULL, "LRAREElement", 0x1, NULL },
    { "name", NULL, "LNSString", 0x1, NULL },
    { "namespace__", NULL, "LNSString", 0x1, NULL },
    { "localName", NULL, "LNSString", 0x1, NULL },
    { "parent", NULL, "LRAREElementType", 0x1, NULL },
    { "canContainWithRAREElement:", NULL, "Z", 0x1, NULL },
    { "isPreclosed", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcClassInfo _RAREElement = { "Element", "org.ccil.cowan.tagsoup", NULL, 0x1, 9, methods, 0, NULL, 0, NULL};
  return &_RAREElement;
}

@end
