//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-canvas/com/appnativa/rare/viewer/CanvasViewer.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/spot/Canvas.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/canvas/Canvas.h"
#include "com/appnativa/rare/ui/canvas/CanvasComponent.h"
#include "com/appnativa/rare/ui/canvas/iCanvas.h"
#include "com/appnativa/rare/ui/canvas/iCanvasComponent.h"
#include "com/appnativa/rare/ui/canvas/iContext.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/painter/iImagePainter.h"
#include "com/appnativa/rare/viewer/CanvasViewer.h"
#include "com/appnativa/rare/viewer/aViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "java/io/IOException.h"

@implementation RARECanvasViewer

- (id)init {
  return [self initRARECanvasViewerWithRAREiContainer:nil];
}

- (id)initRARECanvasViewerWithRAREiContainer:(id<RAREiContainer>)parent {
  if (self = [super initWithRAREiContainer:parent]) {
    contextType_ = @"2d";
    scalingType_ = [RAREiImagePainter_ScalingTypeEnum BILINEAR];
  }
  return self;
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)parent {
  return [self initRARECanvasViewerWithRAREiContainer:parent];
}

- (void)clearContents {
  if (realCanvas_ != nil) {
    [realCanvas_ clear];
  }
}

- (void)configureWithRARESPOTViewer:(RARESPOTViewer *)vcfg {
  canvasComponent_ = [[RARECanvasComponent alloc] initWithRAREiWidget:self];
  dataComponent_ = formComponent_ = [canvasComponent_ getPlatformComponent];
  [self configureExWithRARESPOTViewer:vcfg withBoolean:YES withBoolean:NO withBoolean:YES];
  if ([vcfg isKindOfClass:[RARESPOTCanvas class]]) {
    RARESPOTCanvas *cfg = (RARESPOTCanvas *) check_class_cast(vcfg, [RARESPOTCanvas class]);
    scalingType_ = [RAREiImagePainter_ScalingTypeEnum valueOfWithNSString:[((NSString *) nil_chk([((RARESPOTCanvas_CScaling *) nil_chk(((RARESPOTCanvas *) nil_chk(cfg))->scaling_)) stringValue])) uppercaseString]];
  }
  [self fireConfigureEventWithRARESPOTWidget:vcfg withNSString:[RAREiConstants EVENT_CONFIGURE]];
}

- (void)dispose {
  if (realCanvas_ != nil) {
    [realCanvas_ dispose];
  }
}

- (NSString *)toDataURLWithNSObjectArray:(IOSObjectArray *)args {
  return [((id<RAREiCanvas>) nil_chk(realCanvas_)) toDataURLWithNSObjectArray:args];
}

- (void)setHeightWithInt:(int)height {
  [self setSizeWithInt:[((id<RAREiPlatformComponent>) nil_chk(formComponent_)) getWidth] withInt:height];
}

- (void)setSizeWithInt:(int)width
               withInt:(int)height {
  [((id<RAREiPlatformComponent>) nil_chk(formComponent_)) setSizeWithFloat:width withFloat:height];
}

- (void)setSizeWithInt:(int)width
               withInt:(int)height
           withBoolean:(BOOL)clear {
  [((id<RAREiPlatformComponent>) nil_chk(formComponent_)) setSizeWithFloat:width withFloat:height];
  if (clear && (realCanvas_ != nil)) {
    [realCanvas_ setSizeWithInt:width withInt:height withBoolean:clear];
  }
}

- (void)setWidthWithInt:(int)width {
  [self setSizeWithInt:width withInt:[((id<RAREiPlatformComponent>) nil_chk(formComponent_)) getHeight]];
}

- (id<RAREiPlatformComponent>)getCanvasComponent {
  return dataComponent_;
}

- (id<RAREiContext>)getContextWithNSString:(NSString *)id_ {
  id<RAREiContext> ctx = nil;
  if (realCanvas_ == nil) {
    realCanvas_ = [[RARECanvas alloc] initWithRAREiWidget:self withBoolean:YES];
    ctx = [realCanvas_ getContextWithNSString:id_];
    if (scalingType_ != nil) {
      [((id<RAREiContext>) nil_chk(ctx)) setScalingTypeWithRAREiImagePainter_ScalingTypeEnum:scalingType_];
    }
  }
  contextType_ = id_;
  ctx = (ctx == nil) ? [((id<RAREiCanvas>) nil_chk(realCanvas_)) getContextWithNSString:id_] : ctx;
  [((id<RAREiCanvasComponent>) nil_chk(canvasComponent_)) setContextWithRAREiContext:ctx];
  return ctx;
}

- (NSString *)getContextType {
  return contextType_;
}

- (RAREUIImage *)getImageWithBoolean:(BOOL)copy_ {
  return (realCanvas_ == nil) ? nil : [realCanvas_ getImageWithBoolean:copy_];
}

+ (void)registerForUse {
  [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) registerWidgetClassWithNSString:[RAREPlatform getSPOTNameWithIOSClass:[IOSClass classWithClass:[RARECanvas class]]] withIOSClass:[IOSClass classWithClass:[RARECanvasViewer class]]];
}

- (void)copyAllFieldsTo:(RARECanvasViewer *)other {
  [super copyAllFieldsTo:other];
  other->canvasComponent_ = canvasComponent_;
  other->contextType_ = contextType_;
  other->realCanvas_ = realCanvas_;
  other->scalingType_ = scalingType_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "toDataURLWithNSObjectArray:", NULL, "LNSString", 0x81, "JavaIoIOException" },
    { "getCanvasComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getContextWithNSString:", NULL, "LRAREiContext", 0x1, NULL },
    { "getContextType", NULL, "LNSString", 0x1, NULL },
    { "getImageWithBoolean:", NULL, "LRAREUIImage", 0x1, NULL },
    { "registerForUse", NULL, "V", 0xc, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "canvasComponent_", NULL, 0x4, "LRAREiCanvasComponent" },
    { "realCanvas_", NULL, 0x4, "LRAREiCanvas" },
  };
  static J2ObjcClassInfo _RARECanvasViewer = { "CanvasViewer", "com.appnativa.rare.viewer", NULL, 0x1, 6, methods, 2, fields, 0, NULL};
  return &_RARECanvasViewer;
}

@end
