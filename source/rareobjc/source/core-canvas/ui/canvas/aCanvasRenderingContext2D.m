//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-canvas/com/appnativa/rare/ui/canvas/aCanvasRenderingContext2D.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSClass.h"
#include "com/appnativa/rare/platform/PlatformHelper.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIColorHelper.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIFontMetrics.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/canvas/BytePixelData.h"
#include "com/appnativa/rare/ui/canvas/CanvasColor.h"
#include "com/appnativa/rare/ui/canvas/ContextState.h"
#include "com/appnativa/rare/ui/canvas/aCanvasRenderingContext2D.h"
#include "com/appnativa/rare/ui/canvas/aCompositingGraphics.h"
#include "com/appnativa/rare/ui/canvas/iCanvas.h"
#include "com/appnativa/rare/ui/canvas/iContext.h"
#include "com/appnativa/rare/ui/iComposite.h"
#include "com/appnativa/rare/ui/iPath.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformGraphics.h"
#include "com/appnativa/rare/ui/iPlatformPath.h"
#include "com/appnativa/rare/ui/iPlatformShape.h"
#include "com/appnativa/rare/ui/painter/aUIPainter.h"
#include "com/appnativa/rare/ui/painter/iImagePainter.h"
#include "com/appnativa/rare/ui/painter/iPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformPainter.h"
#include "java/lang/Math.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/ByteOrder.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Locale.h"

@implementation RAREaCanvasRenderingContext2D

- (id)initWithRAREiCanvas:(id<RAREiCanvas>)canvas {
  if (self = [super init]) {
    scalingType_ = [RAREiImagePainter_ScalingTypeEnum BILINEAR];
    theCanvas_ = canvas;
    currentState_ = [[RAREContextState alloc] init];
    stateStack_ = [[JavaUtilArrayList alloc] init];
    currentPath_ = [RAREaPlatformHelper createPath];
    [self setDisposableWithBoolean:YES];
  }
  return self;
}

- (void)arcWithFloat:(float)x
           withFloat:(float)y
           withFloat:(float)radius
           withFloat:(float)startAngle
           withFloat:(float)endAngle {
  (void) [((id<RAREiPlatformPath>) nil_chk(currentPath_)) arcWithFloat:x withFloat:y withFloat:radius withFloat:startAngle withFloat:endAngle withBoolean:NO];
}

- (void)arcWithFloat:(float)x
           withFloat:(float)y
           withFloat:(float)radius
           withFloat:(float)startAngle
           withFloat:(float)endAngle
         withBoolean:(BOOL)antiClockwise {
  (void) [((id<RAREiPlatformPath>) nil_chk(currentPath_)) arcWithFloat:x withFloat:y withFloat:radius withFloat:startAngle withFloat:endAngle withBoolean:antiClockwise];
}

- (void)arcToWithFloat:(float)x0
             withFloat:(float)y0
             withFloat:(float)x1
             withFloat:(float)y1
             withFloat:(float)radius {
  (void) [((id<RAREiPlatformPath>) nil_chk(currentPath_)) arcToWithFloat:x0 withFloat:y0 withFloat:x1 withFloat:y1 withFloat:radius];
}

- (void)beginPath {
  [((id<RAREiPlatformPath>) nil_chk(currentPath_)) reset];
}

- (void)bezierCurveToWithFloat:(float)cp1x
                     withFloat:(float)cp1y
                     withFloat:(float)cp2x
                     withFloat:(float)cp2y
                     withFloat:(float)x
                     withFloat:(float)y {
  (void) [((id<RAREiPlatformPath>) nil_chk(currentPath_)) cubicToWithFloat:cp1x withFloat:cp1y withFloat:cp2x withFloat:cp2y withFloat:x withFloat:y];
}

- (void)blur {
  [((RAREUIImage *) nil_chk(theImage_)) blurImage];
  if (!repaintCalled_) {
    [((id<RAREiCanvas>) nil_chk([self getCanvas])) repaint];
    repaintCalled_ = YES;
  }
}

- (void)clear {
  [self clearEx];
  currentState_ = [[RAREContextState alloc] init];
  [((id<RAREiPlatformPath>) nil_chk(currentPath_)) reset];
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) clearRectWithFloat:0 withFloat:0 withFloat:[((RAREUIImage *) nil_chk(theImage_)) getWidth] withFloat:[theImage_ getHeight]];
}

- (void)clearRectWithFloat:(float)x
                 withFloat:(float)y
                 withFloat:(float)width
                 withFloat:(float)height {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) clearRectWithFloat:x withFloat:y withFloat:width withFloat:height];
}

- (void)clip {
  id<RAREiPlatformShape> clip = [((RAREContextState *) nil_chk(currentState_)) getClip];
  id<RAREiPlatformPath> p = [((id<RAREiPlatformPath>) nil_chk(currentPath_)) copy__];
  [((id<RAREiPlatformPath>) nil_chk(p)) close];
  if (clip == nil) {
    [currentState_ setClipWithRAREiPlatformShape:p];
  }
  else {
    id<RAREiPlatformGraphics> g = [self getGraphics];
    [((id<RAREiPlatformGraphics>) nil_chk(g)) clipShapeWithRAREiPlatformShape:clip];
    [currentState_ setClipWithRAREiPlatformShape:[g getClip]];
  }
}

- (void)closePath {
  [((id<RAREiPlatformPath>) nil_chk(currentPath_)) close];
}

- (id<RAREiContext_iImageData>)createImageDataWithRAREiContext_iImageData:(id<RAREiContext_iImageData>)imagedata {
  return [self createImageDataWithInt:[((id<RAREiContext_iImageData>) nil_chk(imagedata)) getWidth] withInt:[imagedata getWidth]];
}

- (id<RAREiContext_iImageData>)createImageDataWithInt:(int)sw
                                              withInt:(int)sh {
  JavaNioByteBuffer *b = [JavaNioByteBuffer allocateWithInt:sw * sh * 4];
  b = [((JavaNioByteBuffer *) nil_chk(b)) orderWithJavaNioByteOrder:[JavaNioByteOrder getBIG_ENDIAN]];
  return [[RAREBytePixelData alloc] initWithJavaNioByteBuffer:b withInt:sw withInt:sh];
}

- (void)createReflectionWithInt:(int)y
                        withInt:(int)height
                      withFloat:(float)opacity
                        withInt:(int)gap {
  theImage_ = [((RAREUIImage *) nil_chk(theImage_)) createReflectionImageWithInt:y withInt:height withFloat:opacity withInt:gap];
  if (!repaintCalled_) {
    [((id<RAREiCanvas>) nil_chk([self getCanvas])) repaint];
    repaintCalled_ = YES;
  }
}

- (void)drawImageWithRAREiCanvas:(id<RAREiCanvas>)canvas
                       withFloat:(float)x
                       withFloat:(float)y {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) drawImageWithRAREiPlatformImage:[((id<RAREiCanvas>) nil_chk(canvas)) getImageWithBoolean:NO] withFloat:x withFloat:y];
}

- (void)drawImageWithRAREiContext_iImageElement:(id<RAREiContext_iImageElement>)img
                                      withFloat:(float)x
                                      withFloat:(float)y {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) drawImageWithRAREiPlatformImage:[((id<RAREiContext_iImageElement>) nil_chk(img)) getImage] withFloat:(x + 0) withFloat:(y + 0)];
}

- (void)drawImageWithRAREUIImage:(RAREUIImage *)img
                       withFloat:(float)x
                       withFloat:(float)y {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) drawImageWithRAREiPlatformImage:img withFloat:x withFloat:y];
}

- (void)drawImageWithRAREiContext_iImageElement:(id<RAREiContext_iImageElement>)img
                                      withFloat:(float)x
                                      withFloat:(float)y
                                      withFloat:(float)width
                                      withFloat:(float)height {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) drawImageWithRAREiPlatformImage:[((id<RAREiContext_iImageElement>) nil_chk(img)) getImage] withFloat:(x + 0) withFloat:(y + 0) withFloat:(width + 0) withFloat:(height + 0)];
}

- (void)drawImageWithRAREUIImage:(RAREUIImage *)img
                       withFloat:(float)x
                       withFloat:(float)y
                       withFloat:(float)width
                       withFloat:(float)height {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) drawImageWithRAREiPlatformImage:img withFloat:x withFloat:y withFloat:width withFloat:height];
}

- (void)drawImageWithRAREiContext_iImageElement:(id<RAREiContext_iImageElement>)img
                                      withFloat:(float)sx
                                      withFloat:(float)sy
                                      withFloat:(float)swidth
                                      withFloat:(float)sheight
                                      withFloat:(float)dx
                                      withFloat:(float)dy
                                      withFloat:(float)dwidth
                                      withFloat:(float)dheight {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  int x = [RAREUIScreen snapToPositionWithFloat:sx];
  int y = [RAREUIScreen snapToPositionWithFloat:sx];
  int w = [RAREUIScreen snapToSizeWithFloat:swidth];
  int h = [RAREUIScreen snapToSizeWithFloat:sheight];
  RAREUIImage *sub = [((id<RAREiContext_iImageElement>) nil_chk(img)) getImageWithInt:x withInt:y withInt:w withInt:h];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) drawImageWithRAREiPlatformImage:sub withFloat:(dx + 0) withFloat:(dy + 0) withFloat:(dwidth + 0) withFloat:(dheight + 0)];
}

- (void)drawImageWithRAREUIImage:(RAREUIImage *)img
                       withFloat:(float)sx
                       withFloat:(float)sy
                       withFloat:(float)swidth
                       withFloat:(float)sheight
                       withFloat:(float)dx
                       withFloat:(float)dy
                       withFloat:(float)dwidth
                       withFloat:(float)dheight {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  RAREUIRectangle *src = [[RAREUIRectangle alloc] initWithFloat:sx withFloat:sy withFloat:swidth withFloat:sheight];
  RAREUIRectangle *dst = [[RAREUIRectangle alloc] initWithFloat:dx withFloat:dy withFloat:dwidth withFloat:dheight];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) drawImageWithRAREiPlatformImage:img withRAREUIRectangle:src withRAREUIRectangle:dst withRAREiComposite:nil];
}

- (void)fill {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) fillShapeWithRAREiPlatformShape:currentPath_ withFloat:0 withFloat:0];
}

- (void)fillWithRAREiPlatformShape:(id<RAREiPlatformShape>)shape {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) fillShapeWithRAREiPlatformShape:shape withFloat:0 withFloat:0];
}

- (void)fillRectWithFloat:(float)x
                withFloat:(float)y
                withFloat:(float)width
                withFloat:(float)height {
  if ((height == 0) || (width == 0)) {
    return;
  }
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) fillRectWithFloat:x withFloat:y withFloat:width withFloat:height];
}

- (void)fillRoundedRectWithFloat:(float)x
                       withFloat:(float)y
                       withFloat:(float)width
                       withFloat:(float)height
                       withFloat:(float)arcWidth
                       withFloat:(float)arcHeight {
  if ((height == 0) || (width == 0)) {
    return;
  }
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) fillRoundRectWithFloat:x withFloat:y withFloat:width withFloat:height withFloat:arcWidth withFloat:arcHeight];
}

- (void)fillTextWithNSString:(NSString *)text
                   withFloat:(float)x
                   withFloat:(float)y {
  [self fillTextWithNSString:text withFloat:x withFloat:y withInt:-1];
}

- (void)fillTextWithNSString:(NSString *)text
                   withFloat:(float)x
                   withFloat:(float)y
                   withFloat:(float)maxWidth {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [self drawTextWithRAREiPlatformGraphics:g withNSString:text withFloat:x withFloat:y withFloat:maxWidth];
}

- (void)fillTextWithNSString:(NSString *)text
                   withFloat:(float)x
                   withFloat:(float)y
                     withInt:(int)maxWidth {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:NO];
  [self drawTextWithRAREiPlatformGraphics:g withNSString:text withFloat:x withFloat:y withFloat:maxWidth];
}

- (void)lineToWithFloat:(float)x
              withFloat:(float)y {
  (void) [((id<RAREiPlatformPath>) nil_chk(currentPath_)) lineToWithFloat:x withFloat:y];
  (void) [currentPath_ moveToWithFloat:x withFloat:y];
}

- (id<RAREiContext_iTextMetrics>)measureTextWithNSString:(NSString *)text {
  if (text == nil) {
    text = @"";
  }
  RAREUIFontMetrics *fm = [[RAREUIFontMetrics alloc] initWithRAREUIFont:[((RAREContextState *) nil_chk(currentState_)) getUIFont]];
  return [[RAREaCanvasRenderingContext2D_TextMetrics alloc] initWithInt:[fm stringWidthWithNSString:text]];
}

- (void)moveToWithFloat:(float)x
              withFloat:(float)y {
  (void) [((id<RAREiPlatformPath>) nil_chk(currentPath_)) moveToWithFloat:x withFloat:y];
}

- (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)width
                             withFloat:(float)height
                               withInt:(int)orientation {
  if (theImage_ != nil) {
    [self renderWithRAREiPlatformGraphics:g];
  }
}

- (void)putImageDataWithRAREiContext_iImageData:(id<RAREiContext_iImageData>)imagedata
                                        withInt:(int)dx
                                        withInt:(int)dy {
  [self putImageDataWithRAREiContext_iImageData:imagedata withInt:dx withInt:dy withInt:0 withInt:0 withInt:[((id<RAREiContext_iImageData>) nil_chk(imagedata)) getWidth] withInt:[imagedata getHeight]];
}

- (void)putImageDataWithRAREiContext_iImageData:(id<RAREiContext_iImageData>)imagedata
                                        withInt:(int)dx
                                        withInt:(int)dy
                                        withInt:(int)dirtyX
                                        withInt:(int)dirtyY
                                        withInt:(int)dirtyWidth
                                        withInt:(int)dirtyHeight {
  int w = [((id<RAREiContext_iImageData>) nil_chk(imagedata)) getWidth];
  int h = [imagedata getHeight];
  if (dirtyX < 0) {
    dirtyWidth += dirtyX;
    dirtyX = 0;
  }
  if (dirtyY < 0) {
    dirtyHeight += dirtyY;
    dirtyY = 0;
  }
  if (dirtyX + dirtyWidth > w) {
    dirtyWidth = w - dirtyX;
  }
  if (dirtyY + dirtyHeight > h) {
    dirtyHeight = h - dirtyY;
  }
  if ((dirtyHeight > 0) && (dirtyWidth > 0)) {
    w = [((RAREUIImage *) nil_chk(theImage_)) getWidth];
    h = [theImage_ getHeight];
    if (dirtyX + dirtyWidth > w) {
      dirtyWidth = w - dirtyX;
    }
    if (dirtyY + dirtyHeight > h) {
      dirtyHeight = h - dirtyY;
    }
    if ((dirtyHeight > 0) && (dirtyWidth > 0)) {
      [imagedata updateImageWithRAREUIImage:theImage_ withInt:dx withInt:dy withInt:dirtyWidth withInt:dirtyHeight];
    }
    if (!repaintCalled_) {
      [((id<RAREiCanvas>) nil_chk([self getCanvas])) repaint];
      repaintCalled_ = YES;
    }
  }
}

- (void)quadraticCurveToWithFloat:(float)cpx
                        withFloat:(float)cpy
                        withFloat:(float)x
                        withFloat:(float)y {
  (void) [((id<RAREiPlatformPath>) nil_chk(currentPath_)) quadToWithFloat:cpx withFloat:cpy withFloat:x withFloat:y];
}

- (void)rectWithFloat:(float)startX
            withFloat:(float)startY
            withFloat:(float)width
            withFloat:(float)height {
  id<RAREiPlatformPath> p = currentPath_;
  [((id<RAREiPlatformPath>) nil_chk(p)) drawRectWithFloat:startX withFloat:startY withFloat:width withFloat:height];
}

- (void)renderWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g {
  repaintCalled_ = NO;
  [((id<RAREiPlatformGraphics>) nil_chk(g)) setRenderingOptionsWithBoolean:YES withBoolean:NO];
  [g drawImageWithRAREiPlatformImage:theImage_ withFloat:0 withFloat:0];
  if (!optimizeForCompositing_ && (compositeImage_ != nil) && !([(id) graphics_ isKindOfClass:[RAREaCompositingGraphics class]])) {
    [compositeImage_ dispose];
    compositeImage_ = nil;
  }
}

- (void)disposeEx {
  if (compositeImage_ != nil) {
    [compositeImage_ dispose];
    compositeImage_ = nil;
  }
  if (graphics_ != nil) {
    [graphics_ dispose];
    graphics_ = nil;
  }
  if (theImage_ != nil) {
    [theImage_ dispose];
  }
  if (stateStack_ != nil) {
    [self clearEx];
  }
  if (currentState_ != nil) {
    [currentState_ dispose];
    currentState_ = nil;
  }
}

- (void)clearEx {
  for (RAREContextState * __strong s in nil_chk(stateStack_)) {
    [((RAREContextState *) nil_chk(s)) dispose];
  }
  [stateStack_ clear];
  [((RAREContextState *) nil_chk(currentState_)) dispose];
}

- (void)restore {
  if ([((id<JavaUtilList>) nil_chk(stateStack_)) size] > 0) {
    currentState_ = [stateStack_ removeWithInt:[stateStack_ size] - 1];
  }
  if (graphics_ != nil) {
    [graphics_ restoreState];
  }
}

- (void)rotateWithFloat:(float)angle {
  [((RAREContextState *) nil_chk(currentState_)) rotateWithFloat:angle];
}

- (void)save {
  [((id<JavaUtilList>) nil_chk(stateStack_)) addWithId:currentState_];
  currentState_ = [((RAREContextState *) nil_chk(currentState_)) copy__];
  if (graphics_ != nil) {
    [graphics_ saveState];
  }
}

- (void)scale__WithFloat:(float)x
               withFloat:(float)y {
  [((RAREContextState *) nil_chk(currentState_)) scale__WithFloat:x withFloat:y];
}

- (void)stroke {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:YES];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) drawShapeWithRAREiPlatformShape:currentPath_ withFloat:0 withFloat:0];
}

- (void)strokeWithRAREiPlatformShape:(id<RAREiPlatformShape>)shape {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:YES];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) drawShapeWithRAREiPlatformShape:shape withFloat:0 withFloat:0];
}

- (void)strokeRectWithFloat:(float)x
                  withFloat:(float)y
                  withFloat:(float)width
                  withFloat:(float)height {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:YES];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) drawRectWithFloat:x withFloat:y withFloat:width withFloat:height];
}

- (void)strokeRoundedRectWithFloat:(float)x
                         withFloat:(float)y
                         withFloat:(float)width
                         withFloat:(float)height
                         withFloat:(float)arcWidth
                         withFloat:(float)arcHeight {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:YES];
  [((id<RAREiPlatformGraphics>) nil_chk(g)) drawRoundRectWithFloat:x withFloat:y withFloat:width withFloat:height withFloat:arcWidth withFloat:arcHeight];
}

- (void)strokeTextWithNSString:(NSString *)text
                     withFloat:(float)x
                     withFloat:(float)y {
  [self strokeTextWithNSString:text withFloat:x withFloat:y withInt:-1];
}

- (void)strokeTextWithNSString:(NSString *)text
                     withFloat:(float)x
                     withFloat:(float)y
                     withFloat:(float)maxWidth {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:YES];
  [self drawTextWithRAREiPlatformGraphics:g withNSString:text withFloat:x withFloat:y withFloat:maxWidth];
}

- (void)strokeTextWithNSString:(NSString *)text
                     withFloat:(float)x
                     withFloat:(float)y
                       withInt:(int)maxWidth {
  id<RAREiPlatformGraphics> g = [self getGraphicsWithBoolean:YES];
  [self drawTextWithRAREiPlatformGraphics:g withNSString:text withFloat:x withFloat:y withFloat:maxWidth];
}

- (void)transformWithFloat:(float)m11
                 withFloat:(float)m12
                 withFloat:(float)m21
                 withFloat:(float)m22
                 withFloat:(float)dx
                 withFloat:(float)dy {
  [((RAREContextState *) nil_chk(currentState_)) transformWithFloat:m11 withFloat:m12 withFloat:m21 withFloat:m22 withFloat:dx withFloat:dy];
}

- (void)translateWithFloat:(float)x
                 withFloat:(float)y {
  [((RAREContextState *) nil_chk(currentState_)) translateWithFloat:x withFloat:y];
}

- (void)setFillStyleWithRAREiContext_iCanvasGradient:(id<RAREiContext_iCanvasGradient>)grad {
  [((RAREContextState *) nil_chk(currentState_)) setFillStyleWithRAREiContext_iCanvasPaint:grad];
}

- (void)setFillStyleWithRAREiContext_iCanvasPattern:(id<RAREiContext_iCanvasPattern>)pattern {
  [((RAREContextState *) nil_chk(currentState_)) setFillStyleWithRAREiContext_iCanvasPaint:pattern];
}

- (void)setFillStyleWithNSString:(NSString *)color {
  [self setFillStyleWithRAREUIColor:[RAREUIColorHelper getColorWithNSString:color]];
}

- (void)setFillStyleWithRAREUIColor:(RAREUIColor *)color {
  [((RAREContextState *) nil_chk(currentState_)) setFillStyleWithRAREiContext_iCanvasPaint:[[RARECanvasColor alloc] initWithRAREUIColor:color]];
}

- (void)setFontWithNSString:(NSString *)font {
  [((RAREContextState *) nil_chk(currentState_)) setFontWithNSString:font];
}

- (void)setGlobalAlphaWithFloat:(float)alpha {
  [((RAREContextState *) nil_chk(currentState_)) setGlobalAlphaWithFloat:alpha];
}

- (void)setGlobalCompositeOperationWithNSString:(NSString *)globalCompositeOperation {
  [((RAREContextState *) nil_chk(currentState_)) setGlobalCompositeOperationWithNSString:globalCompositeOperation];
}

- (void)setLineCapWithNSString:(NSString *)lineCap {
  [((RAREContextState *) nil_chk(currentState_)) setLineCapWithNSString:lineCap];
}

- (void)setLineJoinWithNSString:(NSString *)lineJoin {
  [((RAREContextState *) nil_chk(currentState_)) setLineJoinWithNSString:lineJoin];
}

- (void)setLineWidthWithFloat:(float)width {
  [((RAREContextState *) nil_chk(currentState_)) setLineWidthWithFloat:width];
}

- (void)setMiterLimitWithFloat:(float)miterLimit {
  [((RAREContextState *) nil_chk(currentState_)) setMiterLimitWithFloat:miterLimit];
}

- (void)setScalingTypeWithRAREiImagePainter_ScalingTypeEnum:(RAREiImagePainter_ScalingTypeEnum *)scalingType {
  self->scalingType_ = scalingType;
}

- (void)setSizeWithInt:(int)width
               withInt:(int)height {
  if ((width > 0) && (height > 0)) {
    if (graphics_ != nil) {
      [graphics_ dispose];
    }
    theImage_ = [self createImageIfNecessaryWithRAREUIImage:theImage_ withInt:width withInt:height];
    graphics_ = [((RAREUIImage *) nil_chk(theImage_)) createGraphics];
    repaintCalled_ = NO;
    [((id<RAREiPlatformGraphics>) nil_chk(graphics_)) clearRectWithFloat:0 withFloat:0 withFloat:width withFloat:height];
    [self setupGraphicsWithRAREiPlatformGraphics:graphics_];
  }
}

- (void)setStrokeStyleWithRAREiContext_iCanvasGradient:(id<RAREiContext_iCanvasGradient>)grad {
  [((RAREContextState *) nil_chk(currentState_)) setStrokeStyleWithRAREiContext_iCanvasPaint:grad];
}

- (void)setStrokeStyleWithRAREiContext_iCanvasPattern:(id<RAREiContext_iCanvasPattern>)pattern {
  [((RAREContextState *) nil_chk(currentState_)) setStrokeStyleWithRAREiContext_iCanvasPaint:pattern];
}

- (void)setStrokeStyleWithNSString:(NSString *)color {
  [self setStrokeStyleWithRAREUIColor:[RAREUIColorHelper getColorWithNSString:color]];
}

- (void)setStrokeStyleWithRAREUIColor:(RAREUIColor *)color {
  [((RAREContextState *) nil_chk(currentState_)) setStrokeStyleWithRAREiContext_iCanvasPaint:[[RARECanvasColor alloc] initWithRAREUIColor:color]];
}

- (void)setTextAlignWithNSString:(NSString *)value {
  [((RAREContextState *) nil_chk(currentState_)) setTextAlignWithRAREiContext_TextAlignEnum:[RAREiContext_TextAlignEnum valueOfWithNSString:[((NSString *) nil_chk(value)) lowercaseStringWithJRELocale:[JavaUtilLocale US]]]];
}

- (void)setTextBaselineWithNSString:(NSString *)value {
  [((RAREContextState *) nil_chk(currentState_)) setTextBaselineWithRAREiContext_TextBaselineEnum:[RAREiContext_TextBaselineEnum valueOfWithNSString:[((NSString *) nil_chk(value)) lowercaseStringWithJRELocale:[JavaUtilLocale US]]]];
}

- (void)setTransformWithFloat:(float)m11
                    withFloat:(float)m12
                    withFloat:(float)m21
                    withFloat:(float)m22
                    withFloat:(float)dx
                    withFloat:(float)dy {
  [((RAREContextState *) nil_chk(currentState_)) setTransformWithFloat:m11 withFloat:m12 withFloat:m21 withFloat:m22 withFloat:dx withFloat:dy];
}

- (id<RAREiCanvas>)getCanvas {
  return theCanvas_;
}

- (NSString *)getFont {
  return [((RAREContextState *) nil_chk(currentState_)) getFont];
}

- (float)getGlobalAlpha {
  return [((RAREContextState *) nil_chk(currentState_)) getGlobalAlpha];
}

- (NSString *)getGlobalCompositeOperation {
  return [((RAREContextState *) nil_chk(currentState_)) getGlobalCompositeOperation];
}

- (id<RAREiPainter>)getIPainter {
  return self;
}

- (RAREUIImage *)getImageWithBoolean:(BOOL)copy_ {
  RAREUIImage *img = theImage_;
  if ((img != nil) && copy_) {
    img = (RAREUIImage *) check_class_cast([img clone], [RAREUIImage class]);
  }
  return img;
}

- (id<RAREiContext_iImageData>)getImageDataWithInt:(int)sx
                                           withInt:(int)sy
                                           withInt:(int)sw
                                           withInt:(int)sh {
  int w = [((RAREUIImage *) nil_chk(theImage_)) getWidth];
  int h = [theImage_ getHeight];
  int dw = [JavaLangMath minWithInt:w - sx withInt:sw];
  int dh = [JavaLangMath minWithInt:h - sy withInt:sh];
  return [[RAREBytePixelData alloc] initWithJavaNioByteBuffer:[theImage_ getImageBytesWithInt:sx withInt:sy withInt:dw withInt:dh] withInt:sw withInt:sh];
}

- (NSString *)getLineCap {
  return [((RAREContextState *) nil_chk(currentState_)) getLineCap];
}

- (NSString *)getLineJoin {
  return [((RAREContextState *) nil_chk(currentState_)) getLineJoin];
}

- (float)getLineWidth {
  return [((RAREContextState *) nil_chk(currentState_)) getLineWidth];
}

- (float)getMiterLimit {
  return [((RAREContextState *) nil_chk(currentState_)) getMiterLimit];
}

- (id<RAREiPlatformPainter>)getPainter {
  return self;
}

- (RAREiImagePainter_ScalingTypeEnum *)getScalingType {
  return scalingType_;
}

- (NSString *)getTextAlign {
  return [((RAREiContext_TextAlignEnum *) nil_chk([((RAREContextState *) nil_chk(currentState_)) getTextAlign])) description];
}

- (NSString *)getTextBaseline {
  return [((RAREiContext_TextBaselineEnum *) nil_chk([((RAREContextState *) nil_chk(currentState_)) getTextBaseline])) description];
}

- (BOOL)isSingleColorPainter {
  return NO;
}

- (RAREUIImage *)createImageIfNecessaryWithRAREUIImage:(RAREUIImage *)img
                                               withInt:(int)width
                                               withInt:(int)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)initImageWithBoolean:(BOOL)force {
  int width = [((id<RAREiCanvas>) nil_chk([self getCanvas])) getWidth];
  int height = [((id<RAREiCanvas>) nil_chk([self getCanvas])) getHeight];
  if (force) {
    if (width < 1) {
      width = 1;
    }
    if (height < 1) {
      height = 1;
    }
  }
  [self setSizeWithInt:width withInt:height];
}

- (void)setupGraphicsWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g {
  [((id<RAREiPlatformGraphics>) nil_chk(graphics_)) setRenderingOptionsWithBoolean:YES withBoolean:NO];
}

- (void)setImageBytesWithRAREUIImage:(RAREUIImage *)img
                             withInt:(int)x
                             withInt:(int)y
                             withInt:(int)width
                             withInt:(int)height
               withJavaNioByteBuffer:(JavaNioByteBuffer *)b {
  int xx = x;
  int yy = y;
  for (y = 0; y < height; y++) {
    for (x = 0; x < width; x++) {
      [((RAREUIImage *) nil_chk(img)) setPixelWithInt:xx + x withInt:yy + y withInt:[((JavaNioByteBuffer *) nil_chk(b)) getInt]];
    }
  }
}

- (RAREUIFontMetrics *)setTextFontWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                                               withNSString:(NSString *)s
                                                  withFloat:(float)maxWidth {
  RAREUIFont *f = [((RAREContextState *) nil_chk(currentState_)) getUIFont];
  RAREUIFontMetrics *fm = [RAREUIFontMetrics getMetricsWithRAREUIFont:f];
  if (maxWidth == -1) {
    [((id<RAREiPlatformGraphics>) nil_chk(g)) setFontWithRAREUIFont:f];
  }
  else {
    int w = [((RAREUIFontMetrics *) nil_chk(fm)) stringWidthWithNSString:s];
    while ((w > maxWidth) && ([((RAREUIFont *) nil_chk(f)) getSize] > 6)) {
      f = [f deriveFontSizeWithFloat:[((RAREUIFont *) nil_chk(f)) getSize] - 1];
      fm = [RAREUIFontMetrics getMetricsWithRAREUIFont:f];
      w = [((RAREUIFontMetrics *) nil_chk(fm)) stringWidthWithNSString:s];
    }
    [((id<RAREiPlatformGraphics>) nil_chk(g)) setFontWithRAREUIFont:f];
  }
  return fm;
}

- (JavaNioByteBuffer *)getImageBytesWithRAREUIImage:(RAREUIImage *)img
                                            withInt:(int)x
                                            withInt:(int)y
                                            withInt:(int)width
                                            withInt:(int)height {
  JavaNioByteBuffer *b = [JavaNioByteBuffer allocateWithInt:width * height * 4];
  b = [((JavaNioByteBuffer *) nil_chk(b)) orderWithJavaNioByteOrder:[JavaNioByteOrder getBIG_ENDIAN]];
  int xx = x;
  int yy = y;
  for (y = 0; y < height; y++) {
    for (x = 0; x < width; x++) {
      int p = [((RAREUIImage *) nil_chk(img)) getPixelWithInt:xx + x withInt:yy + y];
      (void) [((JavaNioByteBuffer *) nil_chk(b)) putWithByte:(char) ((int) (((unsigned int) p) >> 24))];
      (void) [b putWithByte:(char) ((int) (((unsigned int) p) >> 16))];
      (void) [b putWithByte:(char) ((int) (((unsigned int) p) >> 8))];
      (void) [b putWithByte:(char) p];
    }
  }
  return b;
}

- (RAREUIFontMetrics *)getUIFontMetricsWithNSString:(NSString *)s
                                            withInt:(int)maxWidth {
  RAREUIFont *f = [((RAREContextState *) nil_chk(currentState_)) getUIFont];
  RAREUIFontMetrics *fm = [[RAREUIFontMetrics alloc] initWithRAREUIFont:f];
  if (maxWidth > -1) {
    int w = [fm stringWidthWithNSString:s];
    while ((w > maxWidth) && ([((RAREUIFont *) nil_chk(f)) getSize] > 6)) {
      f = [f deriveFontSizeWithFloat:[((RAREUIFont *) nil_chk(f)) getSize] - 1];
      [fm setFontWithRAREUIFont:f];
      w = [fm stringWidthWithNSString:s];
    }
  }
  return fm;
}

- (RAREaCompositingGraphics *)createCompositingGraphicsWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                                                                 withRAREUIImage:(RAREUIImage *)image {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiPlatformGraphics>)checkForCompositingWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g {
  switch ([[((id<RAREiComposite>) nil_chk(((RAREContextState *) nil_chk(currentState_))->alphaComposite_)) getCompositeType] ordinal]) {
    case RAREiComposite_CompositeType_SRC_IN:
    case RAREiComposite_CompositeType_SRC_OUT:
    case RAREiComposite_CompositeType_DST_IN:
    case RAREiComposite_CompositeType_DST_ATOP:
    case RAREiComposite_CompositeType_DARKEN:
    compositeImage_ = [self createImageIfNecessaryWithRAREUIImage:compositeImage_ withInt:[((RAREUIImage *) nil_chk(theImage_)) getWidth] withInt:[theImage_ getHeight]];
    return [self createCompositingGraphicsWithRAREiPlatformGraphics:g withRAREUIImage:compositeImage_];
    default:
    if ([(id) graphics_ isKindOfClass:[RAREaCompositingGraphics class]]) {
      graphics_ = [((RAREaCompositingGraphics *) check_class_cast(graphics_, [RAREaCompositingGraphics class])) release__];
    }
    return graphics_;
  }
}

- (void)drawTextWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withNSString:(NSString *)text
                                withFloat:(float)x
                                withFloat:(float)y
                                withFloat:(float)maxWidth {
  RAREiContext_TextAlignEnum *t = [((RAREContextState *) nil_chk(currentState_)) getTextAlign];
  RAREUIFontMetrics *fm = [self setTextFontWithRAREiPlatformGraphics:g withNSString:text withFloat:maxWidth];
  if (![((id<RAREiPlatformComponent>) nil_chk([((id<RAREiCanvas>) nil_chk([self getCanvas])) getCanvasComponent])) isLeftToRight]) {
    if (t == [RAREiContext_TextAlignEnum start]) {
      t = [RAREiContext_TextAlignEnum right];
    }
    else if (t == [RAREiContext_TextAlignEnum end]) {
      t = [RAREiContext_TextAlignEnum left];
    }
  }
  int w = [((RAREUIFontMetrics *) nil_chk(fm)) stringWidthWithNSString:text];
  switch ([t ordinal]) {
    case RAREiContext_TextAlign_left:
    case RAREiContext_TextAlign_start:
    break;
    case RAREiContext_TextAlign_right:
    case RAREiContext_TextAlign_end:
    x -= w;
    break;
    case RAREiContext_TextAlign_center:
    x -= (w / 2);
    break;
  }
  switch ([[currentState_ getTextBaseline] ordinal]) {
    case RAREiContext_TextBaseline_top:
    y += [fm getAscent];
    break;
    case RAREiContext_TextBaseline_hanging:
    y += [fm getAscent] - [fm getLeading];
    break;
    case RAREiContext_TextBaseline_alphabetic:
    y += [fm getLeading];
    break;
    case RAREiContext_TextBaseline_ideographic:
    y -= ([fm getDescent]);
    break;
    case RAREiContext_TextBaseline_bottom:
    y -= ([fm getLeading] + [fm getDescent]);
    break;
    case RAREiContext_TextBaseline_middle:
    y += ([fm getAscent] - [fm getDescent]) / 2;
    break;
  }
  [((id<RAREiPlatformGraphics>) nil_chk(g)) drawStringWithNSString:text withFloat:x withFloat:y withFloat:[fm getHeight]];
}

- (id<RAREiPlatformGraphics>)getGraphics {
  if (graphics_ == nil) {
    [self initImageWithBoolean:YES];
  }
  if (!repaintCalled_) {
    [((id<RAREiCanvas>) nil_chk([self getCanvas])) repaint];
    repaintCalled_ = YES;
  }
  graphics_ = [self checkForCompositingWithRAREiPlatformGraphics:graphics_];
  [((RAREContextState *) nil_chk(currentState_)) setValuesWithRAREiPlatformGraphics:graphics_ withBoolean:YES];
  return graphics_;
}

- (id<RAREiPlatformGraphics>)getGraphicsWithBoolean:(BOOL)strokePaint {
  if (graphics_ == nil) {
    [self initImageWithBoolean:YES];
  }
  if (!repaintCalled_) {
    [((id<RAREiCanvas>) nil_chk([self getCanvas])) repaint];
    repaintCalled_ = YES;
  }
  graphics_ = [self checkForCompositingWithRAREiPlatformGraphics:graphics_];
  [((RAREContextState *) nil_chk(currentState_)) setValuesWithRAREiPlatformGraphics:graphics_ withBoolean:strokePaint];
  return graphics_;
}

- (BOOL)isOptimizeForCompositing {
  return optimizeForCompositing_;
}

- (void)setOptimizeForCompositingWithBoolean:(BOOL)optimizeForCompositing {
  self->optimizeForCompositing_ = optimizeForCompositing;
}

- (id<RAREiContext_iCanvasGradient>)createLinearGradientWithFloat:(float)param0
                                                        withFloat:(float)param1
                                                        withFloat:(float)param2
                                                        withFloat:(float)param3 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiContext_iCanvasPattern>)createPatternWithRAREiContext_iImageElement:(id<RAREiContext_iImageElement>)param0
                                                                  withNSString:(NSString *)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RAREiContext_iCanvasGradient>)createRadialGradientWithFloat:(float)param0
                                                        withFloat:(float)param1
                                                        withFloat:(float)param2
                                                        withFloat:(float)param3
                                                        withFloat:(float)param4
                                                        withFloat:(float)param5 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isPointInPathWithFloat:(float)param0
                     withFloat:(float)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)copyAllFieldsTo:(RAREaCanvasRenderingContext2D *)other {
  [super copyAllFieldsTo:other];
  other->compositeImage_ = compositeImage_;
  other->currentPath_ = currentPath_;
  other->currentState_ = currentState_;
  other->graphics_ = graphics_;
  other->optimizeForCompositing_ = optimizeForCompositing_;
  other->repaintCalled_ = repaintCalled_;
  other->scalingType_ = scalingType_;
  other->stateStack_ = stateStack_;
  other->theCanvas_ = theCanvas_;
  other->theImage_ = theImage_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "createImageDataWithRAREiContext_iImageData:", NULL, "LRAREiContext_iImageData", 0x1, NULL },
    { "createImageDataWithInt:withInt:", NULL, "LRAREiContext_iImageData", 0x1, NULL },
    { "measureTextWithNSString:", NULL, "LRAREiContext_iTextMetrics", 0x1, NULL },
    { "disposeEx", NULL, "V", 0x4, NULL },
    { "clearEx", NULL, "V", 0x4, NULL },
    { "getCanvas", NULL, "LRAREiCanvas", 0x1, NULL },
    { "getFont", NULL, "LNSString", 0x1, NULL },
    { "getGlobalCompositeOperation", NULL, "LNSString", 0x1, NULL },
    { "getIPainter", NULL, "LRAREiPainter", 0x1, NULL },
    { "getImageWithBoolean:", NULL, "LRAREUIImage", 0x1, NULL },
    { "getImageDataWithInt:withInt:withInt:withInt:", NULL, "LRAREiContext_iImageData", 0x1, NULL },
    { "getLineCap", NULL, "LNSString", 0x1, NULL },
    { "getLineJoin", NULL, "LNSString", 0x1, NULL },
    { "getPainter", NULL, "LRAREiPlatformPainter", 0x1, NULL },
    { "getScalingType", NULL, "LRAREiImagePainter_ScalingTypeEnum", 0x1, NULL },
    { "getTextAlign", NULL, "LNSString", 0x1, NULL },
    { "getTextBaseline", NULL, "LNSString", 0x1, NULL },
    { "isSingleColorPainter", NULL, "Z", 0x1, NULL },
    { "createImageIfNecessaryWithRAREUIImage:withInt:withInt:", NULL, "LRAREUIImage", 0x404, NULL },
    { "initImageWithBoolean:", NULL, "V", 0x4, NULL },
    { "setupGraphicsWithRAREiPlatformGraphics:", NULL, "V", 0x4, NULL },
    { "setImageBytesWithRAREUIImage:withInt:withInt:withInt:withInt:withJavaNioByteBuffer:", NULL, "V", 0x4, NULL },
    { "setTextFontWithRAREiPlatformGraphics:withNSString:withFloat:", NULL, "LRAREUIFontMetrics", 0x4, NULL },
    { "getImageBytesWithRAREUIImage:withInt:withInt:withInt:withInt:", NULL, "LJavaNioByteBuffer", 0x4, NULL },
    { "getUIFontMetricsWithNSString:withInt:", NULL, "LRAREUIFontMetrics", 0x4, NULL },
    { "createCompositingGraphicsWithRAREiPlatformGraphics:withRAREUIImage:", NULL, "LRAREaCompositingGraphics", 0x404, NULL },
    { "checkForCompositingWithRAREiPlatformGraphics:", NULL, "LRAREiPlatformGraphics", 0x4, NULL },
    { "drawTextWithRAREiPlatformGraphics:withNSString:withFloat:withFloat:withFloat:", NULL, "V", 0x2, NULL },
    { "getGraphics", NULL, "LRAREiPlatformGraphics", 0x2, NULL },
    { "getGraphicsWithBoolean:", NULL, "LRAREiPlatformGraphics", 0x2, NULL },
    { "isOptimizeForCompositing", NULL, "Z", 0x1, NULL },
    { "createLinearGradientWithFloat:withFloat:withFloat:withFloat:", NULL, "LRAREiContext_iCanvasGradient", 0x401, NULL },
    { "createPatternWithRAREiContext_iImageElement:withNSString:", NULL, "LRAREiContext_iCanvasPattern", 0x401, NULL },
    { "createRadialGradientWithFloat:withFloat:withFloat:withFloat:withFloat:withFloat:", NULL, "LRAREiContext_iCanvasGradient", 0x401, NULL },
    { "isPointInPathWithFloat:withFloat:", NULL, "Z", 0x401, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "graphics_", NULL, 0x0, "LRAREiPlatformGraphics" },
    { "scalingType_", NULL, 0x4, "LRAREiImagePainter_ScalingTypeEnum" },
    { "compositeImage_", NULL, 0x4, "LRAREUIImage" },
    { "currentPath_", NULL, 0x4, "LRAREiPlatformPath" },
    { "currentState_", NULL, 0x4, "LRAREContextState" },
    { "repaintCalled_", NULL, 0x4, "Z" },
    { "stateStack_", NULL, 0x4, "LJavaUtilList" },
    { "theCanvas_", NULL, 0x4, "LRAREiCanvas" },
    { "theImage_", NULL, 0x4, "LRAREUIImage" },
    { "optimizeForCompositing_", NULL, 0x4, "Z" },
  };
  static J2ObjcClassInfo _RAREaCanvasRenderingContext2D = { "aCanvasRenderingContext2D", "com.appnativa.rare.ui.canvas", NULL, 0x401, 35, methods, 10, fields, 0, NULL};
  return &_RAREaCanvasRenderingContext2D;
}

@end
@implementation RAREaCanvasRenderingContext2D_TextMetrics

- (id)initWithInt:(int)width {
  if (self = [super init]) {
    self->width_ = width;
  }
  return self;
}

- (int)getWidth {
  return width_;
}

- (void)copyAllFieldsTo:(RAREaCanvasRenderingContext2D_TextMetrics *)other {
  [super copyAllFieldsTo:other];
  other->width_ = width_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "width_", NULL, 0x0, "I" },
  };
  static J2ObjcClassInfo _RAREaCanvasRenderingContext2D_TextMetrics = { "TextMetrics", "com.appnativa.rare.ui.canvas", "aCanvasRenderingContext2D", 0x9, 0, NULL, 1, fields, 0, NULL};
  return &_RAREaCanvasRenderingContext2D_TextMetrics;
}

@end
