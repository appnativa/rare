//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-canvas/com/appnativa/rare/ui/canvas/ContextState.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSIntArray.h"
#include "com/appnativa/rare/ui/GraphicsComposite.h"
#include "com/appnativa/rare/ui/PainterUtils.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/Transform.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIFontHelper.h"
#include "com/appnativa/rare/ui/UIStroke.h"
#include "com/appnativa/rare/ui/canvas/CanvasColor.h"
#include "com/appnativa/rare/ui/canvas/ContextState.h"
#include "com/appnativa/rare/ui/canvas/iContext.h"
#include "com/appnativa/rare/ui/iComposite.h"
#include "com/appnativa/rare/ui/iPlatformGraphics.h"
#include "com/appnativa/rare/ui/iPlatformPaint.h"
#include "com/appnativa/rare/ui/iPlatformShape.h"
#include "com/appnativa/rare/ui/iTransform.h"
#include "com/appnativa/util/CharScanner.h"
#include "com/appnativa/util/SNumber.h"
#include "java/lang/Character.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/RuntimeException.h"
#include "java/util/HashMap.h"

@implementation RAREContextState

static RAREUIStroke * RAREContextState_initial_stroke_;
static RAREUIFont * RAREContextState_initial_font_;
static RARECanvasColor * RAREContextState_black_;
static JavaUtilHashMap * RAREContextState_fontSizeMap_;
static id<RAREiTransform> RAREContextState_nullTransform_;

+ (RAREUIStroke *)initial_stroke {
  return RAREContextState_initial_stroke_;
}

+ (RAREUIFont *)initial_font {
  return RAREContextState_initial_font_;
}

+ (RARECanvasColor *)black {
  return RAREContextState_black_;
}

+ (JavaUtilHashMap *)fontSizeMap {
  return RAREContextState_fontSizeMap_;
}

+ (id<RAREiTransform>)nullTransform {
  return RAREContextState_nullTransform_;
}

+ (void)setNullTransform:(id<RAREiTransform>)nullTransform {
  RAREContextState_nullTransform_ = nullTransform;
}

- (id)init {
  if (self = [super init]) {
    fontString_ = @"10px sans-serif";
    globalAlpha_ = 1.0f;
    lineWidth_ = 1.0f;
    miterLimit_ = 10.0f;
    textBaseline_ = [RAREiContext_TextBaselineEnum alphabetic];
    textAlign_ = [RAREiContext_TextAlignEnum start];
    strokeStyle_ = RAREContextState_black_;
    stroke_ = RAREContextState_initial_stroke_;
    lineJoin_ = [RAREUIStroke_JoinEnum MITER];
    lineCap_ = [RAREUIStroke_CapEnum BUTT];
    font_ = RAREContextState_initial_font_;
    fillStyle_ = RAREContextState_black_;
    if (RAREContextState_nullTransform_ == nil) {
      RAREContextState_nullTransform_ = [self createTransform];
    }
    transform__ = [self createTransform];
    alphaComposite_ = [[RAREGraphicsComposite alloc] initWithNSString:@"source-over" withRAREiComposite_CompositeTypeEnum:[RAREiComposite_CompositeTypeEnum SRC_OVER] withFloat:1];
  }
  return self;
}

- (void)dispose {
  fillStyle_ = nil;
  transform__ = nil;
  strokeStyle_ = nil;
  stroke_ = nil;
  clip_ = nil;
  alphaComposite_ = nil;
  font_ = nil;
}

- (id)clone {
  @try {
    RAREContextState *cs = (RAREContextState *) check_class_cast([super clone], [RAREContextState class]);
    ((RAREContextState *) nil_chk(cs))->fillStyle_ = [((id<RAREiContext_iCanvasPaint>) nil_chk(fillStyle_)) cloneCopy];
    cs->strokeStyle_ = [((id<RAREiContext_iCanvasPaint>) nil_chk(strokeStyle_)) cloneCopy];
    cs->transform__ = [((id<RAREiTransform>) nil_chk(transform__)) cloneCopy];
    return cs;
  }
  @catch (JavaLangCloneNotSupportedException *ex) {
    @throw [[JavaLangRuntimeException alloc] initWithJavaLangThrowable:ex];
  }
}

- (RAREContextState *)copy__ {
  return (RAREContextState *) check_class_cast([self clone], [RAREContextState class]);
}

- (void)dirty {
  valuesDirty_ = YES;
}

- (void)rotateWithFloat:(float)angle {
  [((id<RAREiTransform>) nil_chk(transform__)) rotateWithFloat:angle];
  valuesDirty_ = YES;
}

- (void)scale__WithFloat:(float)sx
               withFloat:(float)sy {
  [((id<RAREiTransform>) nil_chk(transform__)) scale__WithFloat:sx withFloat:sy];
  valuesDirty_ = YES;
}

- (void)transformWithFloat:(float)m11
                 withFloat:(float)m12
                 withFloat:(float)m21
                 withFloat:(float)m22
                 withFloat:(float)dx
                 withFloat:(float)dy {
  [((id<RAREiTransform>) nil_chk(transform__)) concatenateWithFloat:m11 withFloat:m12 withFloat:m21 withFloat:m22 withFloat:dx withFloat:dy];
  valuesDirty_ = YES;
}

- (void)translateWithFloat:(float)x
                 withFloat:(float)y {
  [((id<RAREiTransform>) nil_chk(transform__)) translateWithFloat:x withFloat:y];
  valuesDirty_ = YES;
}

- (void)setClipWithRAREiPlatformShape:(id<RAREiPlatformShape>)clip {
  self->clip_ = clip;
  valuesDirty_ = YES;
}

- (void)setCompositeWithRAREiComposite:(id<RAREiComposite>)composite {
  if (composite != nil) {
    alphaComposite_ = composite;
    valuesDirty_ = YES;
  }
}

- (void)setFillStyleWithRAREiContext_iCanvasPaint:(id<RAREiContext_iCanvasPaint>)fillStyle {
  self->fillStyle_ = fillStyle;
}

- (void)setFontWithNSString:(NSString *)cssfont {
  if (cssfont == nil) {
    fontString_ = @"10px sans-serif";
    font_ = RAREContextState_initial_font_;
    return;
  }
  RAREUTCharScanner *sc = [[RAREUTCharScanner alloc] initWithNSString:cssfont];
  (void) [sc trim];
  int style = [RAREUIFont PLAIN];
  NSString *size = nil;
  NSString *s;
  IOSIntArray *tok;
  while ((tok = [sc findTokenWithChar:' ' withBoolean:YES withBoolean:NO]) != nil) {
    tok = [sc trimWithIntArray:tok];
    if (tok == nil) {
      break;
    }
    s = [sc getTokenWithIntArray:tok];
    size = [self getFontSizeWithNSString:s];
    if (size != nil) {
      break;
    }
    if ([((NSString *) nil_chk(s)) isEqual:@"bold"]) {
      style |= [RAREUIFont BOLD];
    }
    else if ([s isEqual:@"italic"]) {
      style |= [RAREUIFont ITALIC];
    }
    else if ([JavaLangCharacter isDigitWithChar:[s charAtWithInt:0]] && ([RAREUTSNumber intValueWithNSString:s] > 600)) {
      style |= [RAREUIFont BOLD];
    }
  }
  (void) [sc trim];
  NSString *family = [sc getLeftOver];
  RAREUIFont *f = [RAREUIFontHelper getFontWithRAREUIFont:font_ withNSString:family withInt:style withNSString:size withBoolean:NO];
  if (f != nil) {
    self->font_ = f;
    self->fontString_ = cssfont;
  }
}

- (void)setGlobalAlphaWithFloat:(float)alpha {
  if (alpha < 0) {
    alpha = 0;
  }
  if (alpha > 1) {
    alpha = 1.0f;
  }
  if (alpha != globalAlpha_) {
    self->globalAlpha_ = alpha;
    alphaComposite_ = [((id<RAREiComposite>) nil_chk(alphaComposite_)) deriveWithFloat:alpha];
    valuesDirty_ = YES;
  }
}

- (void)setGlobalCompositeOperationWithNSString:(NSString *)composite {
  RAREiComposite_CompositeTypeEnum *ct = [RAREPainterUtils getCompositeTypeWithNSString:composite];
  if (ct != nil) {
    alphaComposite_ = [[RAREGraphicsComposite alloc] initWithNSString:composite withRAREiComposite_CompositeTypeEnum:ct withFloat:globalAlpha_];
    valuesDirty_ = YES;
  }
}

- (void)setLineCapWithNSString:(NSString *)cap {
  if ([@"butt" isEqual:cap]) {
    [self setLineCapWithRAREUIStroke_CapEnum:[RAREUIStroke_CapEnum BUTT]];
  }
  else if ([@"square" isEqual:cap]) {
    [self setLineCapWithRAREUIStroke_CapEnum:[RAREUIStroke_CapEnum SQUARE]];
  }
  else if ([@"round" isEqual:cap]) {
    [self setLineCapWithRAREUIStroke_CapEnum:[RAREUIStroke_CapEnum ROUND]];
  }
}

- (void)setLineCapWithRAREUIStroke_CapEnum:(RAREUIStroke_CapEnum *)cap {
  lineCap_ = cap;
  lineDirty_ = YES;
  valuesDirty_ = YES;
}

- (void)setLineJoinWithNSString:(NSString *)join {
  if ([@"bevel" isEqual:join]) {
    [self setLineJoinWithRAREUIStroke_JoinEnum:[RAREUIStroke_JoinEnum BEVEL]];
  }
  else if ([@"miter" isEqual:join]) {
    [self setLineJoinWithRAREUIStroke_JoinEnum:[RAREUIStroke_JoinEnum MITER]];
  }
  else {
    [self setLineJoinWithRAREUIStroke_JoinEnum:[RAREUIStroke_JoinEnum ROUND]];
  }
}

- (void)setLineJoinWithRAREUIStroke_JoinEnum:(RAREUIStroke_JoinEnum *)join {
  lineJoin_ = join;
  lineDirty_ = YES;
  valuesDirty_ = YES;
}

- (void)setLineWidthWithFloat:(float)width {
  lineWidth_ = width;
  lineDirty_ = YES;
  valuesDirty_ = YES;
}

- (void)setMiterLimitWithFloat:(float)limit {
  miterLimit_ = limit;
  lineDirty_ = YES;
  valuesDirty_ = YES;
}

- (void)setStrokeStyleWithRAREiContext_iCanvasPaint:(id<RAREiContext_iCanvasPaint>)strokeStyle {
  self->strokeStyle_ = strokeStyle;
}

- (void)setTextAlignWithRAREiContext_TextAlignEnum:(RAREiContext_TextAlignEnum *)textAlign {
  self->textAlign_ = textAlign;
}

- (void)setTextBaselineWithRAREiContext_TextBaselineEnum:(RAREiContext_TextBaselineEnum *)textBaseline {
  self->textBaseline_ = textBaseline;
}

- (void)setTransformWithFloat:(float)m11
                    withFloat:(float)m12
                    withFloat:(float)m21
                    withFloat:(float)m22
                    withFloat:(float)dx
                    withFloat:(float)dy {
  [((id<RAREiTransform>) nil_chk(transform__)) setTransformWithFloat:m11 withFloat:m12 withFloat:m21 withFloat:m22 withFloat:dx withFloat:dy];
  valuesDirty_ = YES;
}

- (void)setValuesWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                               withBoolean:(BOOL)strokePaint {
  if (valuesDirty_) {
    [((id<RAREiPlatformGraphics>) nil_chk(g)) setRenderingOptionsWithBoolean:YES withBoolean:NO];
    valuesDirty_ = NO;
    if (lineDirty_) {
      lineDirty_ = NO;
      stroke_ = [[RAREUIStroke alloc] initWithFloat:lineWidth_ withRAREUIStroke_CapEnum:lineCap_ withRAREUIStroke_JoinEnum:lineJoin_ withFloat:miterLimit_];
    }
    [g setStrokeWithRAREUIStroke:stroke_];
    [g setCompositeWithRAREiComposite:alphaComposite_];
    [g setTransformWithRAREiTransform:transform__];
    if (clip_ != nil) {
      [g clipShapeWithRAREiPlatformShape:clip_];
    }
    [g setFontWithRAREUIFont:font_];
  }
  if (strokePaint) {
    [((id<RAREiPlatformGraphics>) nil_chk(g)) setPaintWithRAREiPlatformPaint:[((id<RAREiContext_iCanvasPaint>) nil_chk(strokeStyle_)) getPaint]];
  }
  else {
    [((id<RAREiPlatformGraphics>) nil_chk(g)) setPaintWithRAREiPlatformPaint:[((id<RAREiContext_iCanvasPaint>) nil_chk(fillStyle_)) getPaint]];
  }
}

- (id<RAREiPlatformShape>)getClip {
  return clip_;
}

- (id<RAREiComposite>)getComposite {
  return alphaComposite_;
}

- (id<RAREiContext_iCanvasPaint>)getFillStyle {
  return fillStyle_;
}

- (NSString *)getFont {
  return fontString_;
}

- (float)getGlobalAlpha {
  return globalAlpha_;
}

- (NSString *)getGlobalCompositeOperation {
  return [((id<RAREiComposite>) nil_chk(alphaComposite_)) getName];
}

- (NSString *)getLineCap {
  switch ([lineCap_ ordinal]) {
    case RAREUIStroke_Cap_SQUARE:
    return @"square";
    case RAREUIStroke_Cap_ROUND:
    return @"round";
    default:
    return @"butt";
  }
}

- (NSString *)getLineJoin {
  switch ([lineJoin_ ordinal]) {
    case RAREUIStroke_Join_BEVEL:
    return @"bevel";
    case RAREUIStroke_Join_ROUND:
    return @"round";
    default:
    return @"miter";
  }
}

- (RAREUIStroke *)getLineStroke {
  return stroke_;
}

- (float)getLineWidth {
  return lineWidth_;
}

- (float)getMiterLimit {
  return miterLimit_;
}

- (id<RAREiContext_iCanvasPaint>)getStrokeStyle {
  return strokeStyle_;
}

- (RAREiContext_TextAlignEnum *)getTextAlign {
  return textAlign_;
}

- (RAREiContext_TextBaselineEnum *)getTextBaseline {
  return textBaseline_;
}

- (id<RAREiTransform>)getTransform {
  return transform__;
}

- (RAREUIFont *)getUIFont {
  return font_;
}

- (BOOL)isDirty {
  return valuesDirty_;
}

- (id<RAREiTransform>)createTransform {
  return [[RARETransform alloc] init];
}

+ (void)initalizeMaps {
  (void) [((JavaUtilHashMap *) nil_chk(RAREContextState_fontSizeMap_)) putWithId:@"xx-small" withId:@"60%"];
  (void) [RAREContextState_fontSizeMap_ putWithId:@"x-small" withId:@"75%"];
  (void) [RAREContextState_fontSizeMap_ putWithId:@"small" withId:@"89%"];
  (void) [RAREContextState_fontSizeMap_ putWithId:@"medium" withId:@"100%"];
  (void) [RAREContextState_fontSizeMap_ putWithId:@"large" withId:@"120%"];
  (void) [RAREContextState_fontSizeMap_ putWithId:@"x-large" withId:@"150%"];
  (void) [RAREContextState_fontSizeMap_ putWithId:@"xx-large" withId:@"200%"];
  (void) [RAREContextState_fontSizeMap_ putWithId:@"larger" withId:@"120%"];
  (void) [RAREContextState_fontSizeMap_ putWithId:@"smaller" withId:@"80%"];
}

- (NSString *)getFontSizeWithNSString:(NSString *)s {
  NSString *size = [((JavaUtilHashMap *) nil_chk(RAREContextState_fontSizeMap_)) getWithId:s];
  if (size == nil) {
    int n = [((NSString *) nil_chk(s)) indexOf:'/'];
    if (n != -1) {
      s = [s substring:0 endIndex:n];
    }
    if ([JavaLangCharacter isDigitWithChar:[((NSString *) nil_chk(s)) charAtWithInt:0]]) {
      size = s;
    }
  }
  return size;
}

+ (void)initialize {
  if (self == [RAREContextState class]) {
    RAREContextState_initial_stroke_ = [[RAREUIStroke alloc] initWithFloat:1 withRAREUIStroke_CapEnum:[RAREUIStroke_CapEnum BUTT] withRAREUIStroke_JoinEnum:[RAREUIStroke_JoinEnum MITER] withFloat:10.0f];
    RAREContextState_initial_font_ = [[RAREUIFont alloc] initWithNSString:@"sans-serif" withInt:[RAREUIFont PLAIN] withInt:(int) [RAREScreenUtils getCssPixelSizeWithFloat:10.0f]];
    RAREContextState_black_ = [[RARECanvasColor alloc] initWithRAREUIColor:[RAREUIColor BLACK]];
    RAREContextState_fontSizeMap_ = [[JavaUtilHashMap alloc] init];
  }
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllFieldsTo:(RAREContextState *)other {
  [super copyAllFieldsTo:other];
  other->alphaComposite_ = alphaComposite_;
  other->clip_ = clip_;
  other->fillStyle_ = fillStyle_;
  other->font_ = font_;
  other->fontString_ = fontString_;
  other->globalAlpha_ = globalAlpha_;
  other->lineCap_ = lineCap_;
  other->lineDirty_ = lineDirty_;
  other->lineJoin_ = lineJoin_;
  other->lineWidth_ = lineWidth_;
  other->miterLimit_ = miterLimit_;
  other->stroke_ = stroke_;
  other->strokeStyle_ = strokeStyle_;
  other->textAlign_ = textAlign_;
  other->textBaseline_ = textBaseline_;
  other->transform__ = transform__;
  other->valuesDirty_ = valuesDirty_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "clone", NULL, "LNSObject", 0x1, NULL },
    { "copy__", NULL, "LRAREContextState", 0x1, NULL },
    { "getClip", NULL, "LRAREiPlatformShape", 0x1, NULL },
    { "getComposite", NULL, "LRAREiComposite", 0x1, NULL },
    { "getFillStyle", NULL, "LRAREiContext_iCanvasPaint", 0x1, NULL },
    { "getFont", NULL, "LNSString", 0x1, NULL },
    { "getGlobalCompositeOperation", NULL, "LNSString", 0x1, NULL },
    { "getLineCap", NULL, "LNSString", 0x1, NULL },
    { "getLineJoin", NULL, "LNSString", 0x1, NULL },
    { "getLineStroke", NULL, "LRAREUIStroke", 0x1, NULL },
    { "getStrokeStyle", NULL, "LRAREiContext_iCanvasPaint", 0x1, NULL },
    { "getTextAlign", NULL, "LRAREiContext_TextAlignEnum", 0x1, NULL },
    { "getTextBaseline", NULL, "LRAREiContext_TextBaselineEnum", 0x1, NULL },
    { "getTransform", NULL, "LRAREiTransform", 0x1, NULL },
    { "getUIFont", NULL, "LRAREUIFont", 0x1, NULL },
    { "isDirty", NULL, "Z", 0x1, NULL },
    { "createTransform", NULL, "LRAREiTransform", 0x4, NULL },
    { "initalizeMaps", NULL, "V", 0xc, NULL },
    { "getFontSizeWithNSString:", NULL, "LNSString", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "initial_stroke_", NULL, 0x1a, "LRAREUIStroke" },
    { "initial_font_", NULL, 0x1a, "LRAREUIFont" },
    { "black_", NULL, 0x1a, "LRARECanvasColor" },
    { "fontSizeMap_", NULL, 0x1c, "LJavaUtilHashMap" },
    { "nullTransform_", NULL, 0xa, "LRAREiTransform" },
    { "fontString_", NULL, 0x4, "LNSString" },
    { "globalAlpha_", NULL, 0x4, "F" },
    { "lineWidth_", NULL, 0x4, "F" },
    { "miterLimit_", NULL, 0x4, "F" },
    { "textBaseline_", NULL, 0x4, "LRAREiContext_TextBaselineEnum" },
    { "textAlign_", NULL, 0x4, "LRAREiContext_TextAlignEnum" },
    { "strokeStyle_", NULL, 0x4, "LRAREiContext_iCanvasPaint" },
    { "stroke_", NULL, 0x4, "LRAREUIStroke" },
    { "lineJoin_", NULL, 0x4, "LRAREUIStroke_JoinEnum" },
    { "lineCap_", NULL, 0x4, "LRAREUIStroke_CapEnum" },
    { "font_", NULL, 0x4, "LRAREUIFont" },
    { "fillStyle_", NULL, 0x4, "LRAREiContext_iCanvasPaint" },
    { "alphaComposite_", NULL, 0x4, "LRAREiComposite" },
    { "clip_", NULL, 0x4, "LRAREiPlatformShape" },
    { "lineDirty_", NULL, 0x4, "Z" },
    { "transform__", "transform", 0x4, "LRAREiTransform" },
    { "valuesDirty_", NULL, 0x4, "Z" },
  };
  static J2ObjcClassInfo _RAREContextState = { "ContextState", "com.appnativa.rare.ui.canvas", NULL, 0x1, 19, methods, 22, fields, 0, NULL};
  return &_RAREContextState;
}

@end
