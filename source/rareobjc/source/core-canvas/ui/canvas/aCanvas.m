//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/core-canvas/com/appnativa/rare/ui/canvas/aCanvas.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/canvas/aCanvas.h"
#include "com/appnativa/rare/ui/canvas/iContext.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/painter/UICompoundPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformPainter.h"
#include "com/appnativa/rare/viewer/CanvasViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "java/io/IOException.h"

@implementation RAREaCanvas

- (id)initWithRAREiWidget:(id<RAREiWidget>)w
              withBoolean:(BOOL)backgroundCanvas {
  if (self = [super init]) {
    theWidget_ = w;
    self->backgroundCanvas_ = backgroundCanvas;
    if (w != nil) {
      if ([w getContainerComponent] != nil) {
        width_ = [w getWidth];
        height_ = [w getHeight];
      }
    }
  }
  return self;
}

- (void)clear {
  if (theContext_ != nil) {
    [theContext_ clear];
  }
}

- (void)dispose {
  if (theWidget_ != nil) {
    [self uninstall];
  }
  if (theContext_ != nil) {
    [theContext_ dispose];
  }
  theWidget_ = nil;
  theContext_ = nil;
}

- (void)repaint {
  if ((theWidget_ != nil) && ![theWidget_ isDisposed]) {
    [theWidget_ repaint];
  }
}

- (NSString *)toDataURLWithNSObjectArray:(IOSObjectArray *)args {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setHeightWithInt:(int)height {
  [self setSizeWithInt:width_ withInt:height withBoolean:YES];
}

- (void)setSizeWithInt:(int)width
               withInt:(int)height
           withBoolean:(BOOL)clear {
  if (!clear && (width == self->width_) && (height == self->height_)) {
    return;
  }
  self->width_ = width;
  self->height_ = height;
  if (theContext_ != nil) {
    [theContext_ setSizeWithInt:width withInt:height];
  }
}

- (void)setWidthWithInt:(int)width {
  [self setSizeWithInt:width withInt:height_ withBoolean:YES];
}

- (id<RAREiPlatformComponent>)getCanvasComponent {
  if (theWidget_ != nil) {
    return [theWidget_ getDataComponent];
  }
  return nil;
}

- (void)updateSize {
  id<RAREiPlatformComponent> c = [self getCanvasComponent];
  if (c != nil) {
    [self setSizeWithInt:[c getWidth] withInt:[c getHeight] withBoolean:NO];
  }
}

- (id<RAREiContext>)getContextWithNSString:(NSString *)type {
  if (type == nil) {
    return theContext_;
  }
  if (theContext_ == nil) {
    theContext_ = [self createContextWithNSString:type];
    if (theWidget_ != nil) {
      [self installWithRAREiWidget:theWidget_];
    }
  }
  return theContext_;
}

- (int)getHeight {
  return height_;
}

- (RAREUIImage *)getImageWithBoolean:(BOOL)copy_ {
  return (theContext_ == nil) ? nil : [theContext_ getImageWithBoolean:copy_];
}

- (int)getWidth {
  return width_;
}

- (id<RAREiContext>)createContextWithNSString:(NSString *)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)uninstall {
  if ((theWidget_ != nil) && !([(id) theWidget_ isKindOfClass:[RARECanvasViewer class]])) {
    id<RAREiPlatformPainter> op = nil;
    id<RAREiPlatformPainter> p = backgroundCanvas_ ? [theWidget_ getBackgroundOverlayPainter] : [theWidget_ getOverlayPainter];
    RAREUICompoundPainter *cp;
    if ([(id) p isKindOfClass:[RAREUICompoundPainter class]]) {
      cp = (RAREUICompoundPainter *) check_class_cast(p, [RAREUICompoundPainter class]);
      op = [cp getFirstPainter];
      p = [cp getSecondPainter];
    }
    if (p == [((id<RAREiContext>) nil_chk(theContext_)) getPainter]) {
      if (backgroundCanvas_) {
        [theWidget_ setBackgroundOverlayPainterWithRAREiPlatformPainter:op];
      }
      else {
        [theWidget_ setOverlayPainterWithRAREiPlatformPainter:op];
      }
    }
  }
}

- (void)installWithRAREiWidget:(id<RAREiWidget>)w {
  if ([(id) w isKindOfClass:[RARECanvasViewer class]]) {
    return;
  }
  if (w != theWidget_) {
    [self uninstall];
  }
  theWidget_ = w;
  if (theWidget_ != nil) {
    id<RAREiPlatformPainter> p = backgroundCanvas_ ? [theWidget_ getBackgroundOverlayPainter] : [theWidget_ getOverlayPainter];
    if (p != nil) {
      p = [[RAREUICompoundPainter alloc] initWithRAREiPlatformPainter:p withRAREiPlatformPainter:[((id<RAREiContext>) nil_chk(theContext_)) getPainter]];
    }
    else {
      p = [((id<RAREiContext>) nil_chk(theContext_)) getPainter];
    }
    if (backgroundCanvas_) {
      [theWidget_ setBackgroundOverlayPainterWithRAREiPlatformPainter:p];
    }
    else {
      [theWidget_ setOverlayPainterWithRAREiPlatformPainter:p];
    }
  }
}

- (void)copyAllFieldsTo:(RAREaCanvas *)other {
  [super copyAllFieldsTo:other];
  other->backgroundCanvas_ = backgroundCanvas_;
  other->height_ = height_;
  other->theContext_ = theContext_;
  other->theWidget_ = theWidget_;
  other->width_ = width_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "toDataURLWithNSObjectArray:", NULL, "LNSString", 0x481, "JavaIoIOException" },
    { "getCanvasComponent", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getContextWithNSString:", NULL, "LRAREiContext", 0x1, NULL },
    { "getImageWithBoolean:", NULL, "LRAREUIImage", 0x1, NULL },
    { "createContextWithNSString:", NULL, "LRAREiContext", 0x404, NULL },
    { "installWithRAREiWidget:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "backgroundCanvas_", NULL, 0x4, "Z" },
    { "height_", NULL, 0x4, "I" },
    { "theContext_", NULL, 0x4, "LRAREiContext" },
    { "theWidget_", NULL, 0x4, "LRAREiWidget" },
    { "width_", NULL, 0x4, "I" },
  };
  static J2ObjcClassInfo _RAREaCanvas = { "aCanvas", "com.appnativa.rare.ui.canvas", NULL, 0x401, 6, methods, 5, fields, 0, NULL};
  return &_RAREaCanvas;
}

@end
