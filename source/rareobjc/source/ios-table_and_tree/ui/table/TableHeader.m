//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../rare/ios-table_and_tree/com/appnativa/rare/ui/table/TableHeader.java
//
//  Created by decoteaud on 12/8/15.
//

#include "IOSObjectArray.h"
#include "com/appnativa/rare/platform/apple/ui/util/AppleGraphics.h"
#include "com/appnativa/rare/platform/apple/ui/view/LabelView.h"
#include "com/appnativa/rare/platform/apple/ui/view/View.h"
#include "com/appnativa/rare/ui/BasicSelectionModel.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/Column.h"
#include "com/appnativa/rare/ui/Component.h"
#include "com/appnativa/rare/ui/ScreenUtils.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIImageIcon.h"
#include "com/appnativa/rare/ui/UIInsets.h"
#include "com/appnativa/rare/ui/UIRectangle.h"
#include "com/appnativa/rare/ui/aComponent.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/iPlatformRenderingComponent.h"
#include "com/appnativa/rare/ui/iRenderingComponent.h"
#include "com/appnativa/rare/ui/painter/PaintBucket.h"
#include "com/appnativa/rare/ui/painter/aUIComponentPainter.h"
#include "com/appnativa/rare/ui/renderer/UILabelRenderer.h"
#include "com/appnativa/rare/ui/renderer/WordWrapLabelRenderer.h"
#include "com/appnativa/rare/ui/table/TableComponent.h"
#include "com/appnativa/rare/ui/table/TableHeader.h"
#include "com/appnativa/rare/ui/table/TableView.h"
#include "com/appnativa/rare/ui/table/aTableHeader.h"
#include "com/appnativa/rare/ui/table/iTableComponent.h"
#include "com/appnativa/util/iFilterableList.h"
#include "java/lang/CharSequence.h"
#include "java/lang/IllegalArgumentException.h"
#import "RAREAPTableView.h"
 #import "RAREAPTableColumn.h"
 #import "RAREAPTableHeaderView.h"
 #import "com/appnativa/rare/ui/RenderableDataItem.h"

@implementation RARETableHeader

- (id)initWithRARETableView:(RARETableView *)table
                     withId:(id)proxy {
  return [self initRARETableHeaderWithRARETableView:table withId:proxy withId:proxy];
}

- (id)initRARETableHeaderWithRARETableView:(RARETableView *)table
                                    withId:(id)proxy
                                    withId:(id)headerProxy {
  if (self = [super init]) {
    headerView_ = [[RARETableHeader_TableHeaderView alloc] initWithRARETableView:table withId:proxy withId:headerProxy];
    headerView_->header_ = self;
    [self setViewWithRAREView:headerView_];
    tableView_ = table;
    RAREaTableHeader_MouseListener *l = [[RAREaTableHeader_MouseListener alloc] initWithRAREaTableHeader:self];
    [self addMouseListenerWithRAREiMouseListener:l];
    [self addMouseMotionListenerWithRAREiMouseMotionListener:l];
    [self setForegroundWithRAREUIColor:[RAREColorUtils getForeground]];
  }
  return self;
}

- (id)initWithRARETableView:(RARETableView *)table
                     withId:(id)proxy
                     withId:(id)headerProxy {
  return [self initRARETableHeaderWithRARETableView:table withId:proxy withId:headerProxy];
}

- (void)moveColumnWithInt:(int)column
                  withInt:(int)targetColumn {
  int len = (int) [((IOSObjectArray *) nil_chk(self->columns_)) count];
  if (column < 0 || column >= len || targetColumn < 0 || targetColumn >= len) {
    @throw [[JavaLangIllegalArgumentException alloc] init];
  }
  [((RARETableView *) nil_chk(tableView_)) moveColumnWithInt:column withInt:targetColumn];
  [self columnMovedWithInt:column withInt:targetColumn];
}

- (BOOL)isColumnSelectedWithInt:(int)col {
  return (selectionModel_ == nil) ? NO : [selectionModel_ isSelectedWithInt:col];
}

- (void)setGridViewTypeWithRAREiTableComponent_GridViewTypeEnum:(RAREiTableComponent_GridViewTypeEnum *)gridViewMode {
  [super setGridViewTypeWithRAREiTableComponent_GridViewTypeEnum:gridViewMode];
  [self setVerticalScrollingEnabledWithBoolean:gridViewMode == [RAREiTableComponent_GridViewTypeEnum VERTICAL_WRAP]];
}

- (void)setColumnIconWithInt:(int)col
       withRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  [((RARETableHeader_TableHeaderView *) nil_chk(headerView_)) setColumnIconWithInt:col withRAREiPlatformIcon:icon];
  [self revalidate];
}

- (void)setColumnTitleWithInt:(int)col
     withJavaLangCharSequence:(id<JavaLangCharSequence>)title {
  [((RARETableHeader_TableHeaderView *) nil_chk(headerView_)) setColumnTitleWithInt:col withJavaLangCharSequence:title];
  [self revalidate];
}

- (void)setColumnVisibleExWithInt:(int)col
                      withBoolean:(BOOL)visible {
  [((RARETableHeader_TableHeaderView *) nil_chk(headerView_)) setColumnVisibleWithInt:col withBoolean:visible];
  [self resetSelectionPaintColumns];
  [self revalidate];
}

- (int)getColumnIndexAtWithFloat:(float)x
                       withFloat:(float)y {
  return [((RARETableHeader_TableHeaderView *) nil_chk(headerView_)) getColumnIndexAtWithFloat:x withFloat:y];
}

- (RAREColumn *)getColumnForViewAtWithInt:(int)viewColumn {
  return [((RARETableHeader_TableHeaderView *) nil_chk(headerView_)) getColumnForViewWithInt:viewColumn];
}

- (id<RAREiTableComponent>)getTableComponent {
  return [((RARETableView *) nil_chk(tableView_)) getTableComponent];
}

- (void)addViewColumnWithInt:(int)index
              withRAREColumn:(RAREColumn *)col
            withRAREUIInsets:(RAREUIInsets *)insets
              withRAREUIFont:(RAREUIFont *)font
             withRAREUIColor:(RAREUIColor *)color {
  [((RARETableHeader_TableHeaderView *) nil_chk(headerView_)) addViewColumnWithInt:index withRAREColumn:col withRAREUIInsets:insets withRAREUIFont:font withRAREUIColor:color];
}

- (void)repaintColumnWithInt:(int)col {
  [((RARETableHeader_TableHeaderView *) nil_chk(headerView_)) repaintColumnWithInt:col];
}

- (void)tableHadInteraction {
  [((RARETableView *) nil_chk(tableView_)) setHasHadInteraction];
  [((id<RAREiPlatformComponent>) nil_chk([self getTableComponentEx])) repaint];
}

- (void)setColumnPressedWithInt:(int)index
                    withBoolean:(BOOL)pressed {
  [((RARETableHeader_TableHeaderView *) nil_chk(headerView_)) setColumnPressedWithInt:index withBoolean:pressed];
}

- (void)setColumnsEx {
  int len = (int) [((IOSObjectArray *) nil_chk(columns_)) count];
  [((RARETableHeader_TableHeaderView *) nil_chk(headerView_)) removeAllViewColumns];
  RAREUIColor *fg = [self getForeground];
  RAREUIFont *font = [self getFont];
  for (int i = 0; i < len; i++) {
    RAREColumn *c = IOSObjectArray_Get(columns_, i);
    if (((RAREColumn *) nil_chk(c))->wordWrap_) {
      id<RAREiRenderingComponent> rc = [c getCellRenderer];
      if (rc == nil) {
        [c setCellRendererWithRAREiPlatformRenderingComponent:[[RAREWordWrapLabelRenderer alloc] init]];
      }
      else if ([(id) rc isKindOfClass:[RAREUILabelRenderer class]]) {
        [((RAREUILabelRenderer *) check_class_cast(rc, [RAREUILabelRenderer class])) setWordWrapWithBoolean:YES];
      }
    }
    id<RAREiPlatformIcon> icon = [c getHeaderIcon];
    if ([(id) icon isKindOfClass:[RAREUIImageIcon class]]) {
      [((RAREUIImageIcon *) check_class_cast(icon, [RAREUIImageIcon class])) isImageLoadedWithRAREiImageObserver:self];
    }
    [self addViewColumnWithInt:i withRAREColumn:c withRAREUIInsets:cellInsets_ withRAREUIFont:font withRAREUIColor:fg];
  }
  if (columnSelectionAllowed_) {
    selectionModel_ = [[RAREBasicSelectionModel alloc] initWithInt:len];
  }
  [headerView_ columnsSet];
}

- (id)getRealHeaderViewProxy {
  return ((RARETableHeader_TableHeaderView *) nil_chk(headerView_))->headerView_;
}

- (void)resetTableModelWithRAREUTiFilterableList:(id<RAREUTiFilterableList>)rows {
  [super resetTableModelWithRAREUTiFilterableList:rows];
  [((id<RAREiPlatformComponent>) nil_chk([self getTableComponentEx])) revalidate];
}

- (float)getSelectionPaintEndXWithFloat:(float)currentEndX {
  int col = selectionPaintEndCol_;
  if (col == (int) [((IOSObjectArray *) nil_chk(columns_)) count] - 1) {
    return currentEndX;
  }
  return [((RARETableHeader_TableHeaderView *) nil_chk(headerView_)) getColumnEndXWithInt:col];
}

- (float)getSelectionPaintStartXWithFloat:(float)currentStartX {
  int col = selectionPaintStartCol_;
  if (col == 0) {
    return currentStartX;
  }
  return [((RARETableHeader_TableHeaderView *) nil_chk(headerView_)) getColumnStartXWithInt:col] - ([((RARETableView *) nil_chk(tableView_)) isShowVertivalGridLines] ? 1 : 0);
}

- (void)setVerticalScrollingEnabledWithBoolean:(BOOL)enabled {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  table.scrollEnabled=enabled;
}

- (void)copyAllFieldsTo:(RARETableHeader *)other {
  [super copyAllFieldsTo:other];
  other->headerView_ = headerView_;
  other->tableView_ = tableView_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "isColumnSelectedWithInt:", NULL, "Z", 0x1, NULL },
    { "setColumnVisibleExWithInt:withBoolean:", NULL, "V", 0x4, NULL },
    { "getColumnForViewAtWithInt:", NULL, "LRAREColumn", 0x1, NULL },
    { "getTableComponent", NULL, "LRAREiTableComponent", 0x1, NULL },
    { "addViewColumnWithInt:withRAREColumn:withRAREUIInsets:withRAREUIFont:withRAREUIColor:", NULL, "V", 0x4, NULL },
    { "repaintColumnWithInt:", NULL, "V", 0x4, NULL },
    { "tableHadInteraction", NULL, "V", 0x4, NULL },
    { "setColumnPressedWithInt:withBoolean:", NULL, "V", 0x4, NULL },
    { "setColumnsEx", NULL, "V", 0x4, NULL },
    { "getRealHeaderViewProxy", NULL, "LNSObject", 0x4, NULL },
    { "resetTableModelWithRAREUTiFilterableList:", NULL, "V", 0x4, NULL },
    { "getSelectionPaintEndXWithFloat:", NULL, "F", 0x4, NULL },
    { "getSelectionPaintStartXWithFloat:", NULL, "F", 0x4, NULL },
    { "setVerticalScrollingEnabledWithBoolean:", NULL, "V", 0x100, NULL },
  };
  static J2ObjcClassInfo _RARETableHeader = { "TableHeader", "com.appnativa.rare.ui.table", NULL, 0x1, 14, methods, 0, NULL, 0, NULL};
  return &_RARETableHeader;
}

@end
@implementation RARETableHeader_TableHeaderView

- (id)initWithRARETableView:(RARETableView *)table
                     withId:(id)proxy {
  return [self initRARETableHeader_TableHeaderViewWithRARETableView:table withId:proxy withId:proxy];
}

- (id)initRARETableHeader_TableHeaderViewWithRARETableView:(RARETableView *)table
                                                    withId:(id)proxy
                                                    withId:(id)headerView {
  if (self = [super initWithId:proxy]) {
    self->headerView_ = headerView;
    self->tableView_ = table;
  }
  return self;
}

- (id)initWithRARETableView:(RARETableView *)table
                     withId:(id)proxy
                     withId:(id)headerView {
  return [self initRARETableHeader_TableHeaderViewWithRARETableView:table withId:proxy withId:headerView];
}

- (void)paintBackgroundWithRAREAppleGraphics:(RAREAppleGraphics *)g
                                withRAREView:(RAREView *)v
                         withRAREUIRectangle:(RAREUIRectangle *)rect {
  [super paintBackgroundWithRAREAppleGraphics:g withRAREView:v withRAREUIRectangle:rect];
  id<RAREiPlatformBorder> b = (((RARETableHeader *) nil_chk(header_))->headerCellPainter_ == nil) ? nil : [header_->headerCellPainter_ getBorder];
  if ((header_->showHeaderMargin_) || (b != nil)) {
    [self drawSeparatorExWithRAREAppleGraphics:g withRAREiPlatformBorder:b withRAREUIColor:(b == nil) ? header_->marginColor_ : nil];
    if (header_->bottomMarginColor_ != nil) {
      [((RAREAppleGraphics *) nil_chk(g)) setStrokeWidthWithFloat:1.5f];
      [g setColorWithRAREUIColor:header_->bottomMarginColor_];
      [g drawLineWithFloat:((RAREUIRectangle *) nil_chk(rect))->x_ withFloat:rect->y_ + rect->height_ withFloat:rect->x_ + rect->width_ withFloat:rect->y_ + rect->height_];
    }
  }
}

- (void)setColumnIconWithInt:(int)col
       withRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  RAREAPTableColumn* c=[table.tableColumns objectAtIndex: col];
  [c->columnDescription setHeaderIconWithRAREiPlatformIcon: icon];
  [table updateColumnAtIndex:col visualsOnly:YES];
}

- (void)setColumnTitleWithInt:(int)col
     withJavaLangCharSequence:(id<JavaLangCharSequence>)title {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  RAREAPTableColumn* c=[table.tableColumns objectAtIndex: col];
  [c->columnDescription setColumnTitleWithJavaLangCharSequence:title];
  [table updateColumnAtIndex:col visualsOnly:YES];
}

- (void)setColumnVisibleWithInt:(int)col
                    withBoolean:(BOOL)visible {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  RAREAPTableColumn* c=[table.tableColumns objectAtIndex: col];
  [c setHidden: !visible];
  [c->columnDescription setVisibleWithBoolean: visible];
}

- (id<RAREiPlatformComponent>)getColumnComponentWithInt:(int)col {
  id proxy = [self getColumnViewProxyWithInt:col];
  RAREView *v = [RAREView viewFromProxyWithId:proxy];
  if (v == nil) {
    v = [[RARELabelView alloc] initWithId:proxy];
  }
  RAREComponent *c = [RAREComponent fromViewWithRAREView:v];
  return (c == nil) ? [[RAREComponent alloc] initWithRAREView:v] : c;
}

- (float)getColumnEndXWithInt:(int)index {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  RAREAPTableColumn* c=[table.tableColumns objectAtIndex: index];
  return c.frame.origin.x+c.frame.size.width;
}

- (int)getColumnIndexAtWithFloat:(float)x
                       withFloat:(float)y {
  return [((RAREAPTableHeaderView*)headerView_) getColumnIndexAtX: x andY: y];
}

- (float)getColumnStartXWithInt:(int)index {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  RAREAPTableColumn* c=[table.tableColumns objectAtIndex: index];
  return c.frame.origin.x;
}

- (void)addViewColumnWithInt:(int)index
              withRAREColumn:(RAREColumn *)col
            withRAREUIInsets:(RAREUIInsets *)insets
              withRAREUIFont:(RAREUIFont *)font
             withRAREUIColor:(RAREUIColor *)color {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  [table addColumnAtIndex: index column: col insets: insets font: font fgColor: color];
}

- (void)disposeEx {
  [super disposeEx];
  headerView_ = nil;
  tableView_ = nil;
  header_ = nil;
}

- (void)paintColumnCustomBackgroundWithRAREAppleGraphics:(RAREAppleGraphics *)g
                                                 withInt:(int)index
                                          withRAREColumn:(RAREColumn *)col
                                     withRAREUIRectangle:(RAREUIRectangle *)rect
                                             withBoolean:(BOOL)selected {
  RAREPaintBucket *pb = nil;
  if (selected) {
    pb = [((RAREColumn *) nil_chk(col)) getHeaderSelectionPainter];
    if (pb == nil) {
      pb = [((RARETableHeader *) nil_chk(header_)) getPressedPainter];
    }
  }
  else {
    pb = [((RAREColumn *) nil_chk(col)) getHeaderPainter];
  }
  if (pb != nil) {
    float h = ((RAREUIRectangle *) nil_chk(rect))->height_;
    float w = rect->width_;
    if (((RARETableHeader *) nil_chk(header_))->showHeaderMargin_) {
      h--;
    }
    if (index != [header_ getLastVisibleColumn]) {
      w--;
    }
    [RAREaUIComponentPainter paintWithRAREiPlatformGraphics:g withFloat:rect->x_ withFloat:rect->y_ withFloat:w withFloat:h withRAREPaintBucket:pb];
  }
  int scol = ((RARETableHeader *) nil_chk(header_))->sortColumn_;
  if ((scol != -1) && ([header_ getColumnAtWithInt:scol] == col)) {
    id<RAREiPlatformIcon> icon = [header_ getSortIconWithBoolean:header_->descending_];
    if (icon != nil) {
      float iw = [icon getIconWidth];
      float ih = [icon getIconHeight];
      float x = (((RAREUIRectangle *) nil_chk(rect))->width_ - iw) / 2;
      float y = rect->y_ + [RAREScreenUtils PLATFORM_PIXELS_1];
      [icon paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:iw withFloat:ih];
    }
  }
}

- (void)removeAllViewColumns {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  [table removeAllColumns];
}

- (void)columnsSet {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  [table columnsSet];
}

- (void)removeViewColumnWithInt:(int)index {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  [table removeColumn: index];
}

- (void)repaintColumnWithInt:(int)index {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  [table repaintColumn: index];
}

- (void)updateViewColumnWithInt:(int)index
                    withBoolean:(BOOL)visualsOnly {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  [table updateColumnAtIndex: index visualsOnly: visualsOnly];
}

- (void)setColumnPressedWithInt:(int)index
                    withBoolean:(BOOL)pressed {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  [table setColumnPressedAtIndex: index pressed: pressed];
}

- (id)getColumnAPForegroundWithRAREColumn:(RAREColumn *)col
                              withBoolean:(BOOL)pressed {
  RAREPaintBucket *pb = pressed ? [((RARETableHeader *) nil_chk(header_)) getPressedPainter] : nil;
  RAREUIColor *fg = (pb == nil) ? nil : [pb getForegroundColor];
  if (fg == nil) {
    fg = [((RAREPaintBucket *) nil_chk(((RARETableHeader *) nil_chk(header_))->headerCellPainter_)) getForegroundColor];
  }
  return [((RAREUIColor *) nil_chk(fg)) getAPColor];
}

- (void)drawSeparatorExWithRAREAppleGraphics:(RAREAppleGraphics *)g
                     withRAREiPlatformBorder:(id<RAREiPlatformBorder>)b
                             withRAREUIColor:(RAREUIColor *)color {
  [((RAREAPTableHeaderView*)headerView_) drawSeparatorEx:g border: b lineColor: color];
}

- (id)getColumnViewProxyWithInt:(int)col {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  return [table.tableColumns objectAtIndex: col];
}

- (RAREColumn *)getColumnForViewWithInt:(int)viewColumn {
  RAREAPTableView* table=(RAREAPTableView*)tableView_->proxy_;
  RAREAPTableColumn* tc=(RAREAPTableColumn*) [table.tableColumns objectAtIndex: viewColumn];
  return tc->columnDescription;
}

- (void)copyAllFieldsTo:(RARETableHeader_TableHeaderView *)other {
  [super copyAllFieldsTo:other];
  other->header_ = header_;
  other->headerView_ = headerView_;
  other->tableView_ = tableView_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "setColumnIconWithInt:withRAREiPlatformIcon:", NULL, "V", 0x101, NULL },
    { "setColumnTitleWithInt:withJavaLangCharSequence:", NULL, "V", 0x101, NULL },
    { "setColumnVisibleWithInt:withBoolean:", NULL, "V", 0x101, NULL },
    { "getColumnComponentWithInt:", NULL, "LRAREiPlatformComponent", 0x1, NULL },
    { "getColumnEndXWithInt:", NULL, "F", 0x101, NULL },
    { "getColumnIndexAtWithFloat:withFloat:", NULL, "I", 0x101, NULL },
    { "getColumnStartXWithInt:", NULL, "F", 0x101, NULL },
    { "addViewColumnWithInt:withRAREColumn:withRAREUIInsets:withRAREUIFont:withRAREUIColor:", NULL, "V", 0x104, NULL },
    { "disposeEx", NULL, "V", 0x4, NULL },
    { "paintColumnCustomBackgroundWithRAREAppleGraphics:withInt:withRAREColumn:withRAREUIRectangle:withBoolean:", NULL, "V", 0x4, NULL },
    { "removeAllViewColumns", NULL, "V", 0x104, NULL },
    { "columnsSet", NULL, "V", 0x104, NULL },
    { "removeViewColumnWithInt:", NULL, "V", 0x104, NULL },
    { "repaintColumnWithInt:", NULL, "V", 0x104, NULL },
    { "updateViewColumnWithInt:withBoolean:", NULL, "V", 0x104, NULL },
    { "setColumnPressedWithInt:withBoolean:", NULL, "V", 0x104, NULL },
    { "getColumnAPForegroundWithRAREColumn:withBoolean:", NULL, "LNSObject", 0x4, NULL },
    { "drawSeparatorExWithRAREAppleGraphics:withRAREiPlatformBorder:withRAREUIColor:", NULL, "V", 0x102, NULL },
    { "getColumnViewProxyWithInt:", NULL, "LNSObject", 0x102, NULL },
    { "getColumnForViewWithInt:", NULL, "LRAREColumn", 0x102, NULL },
  };
  static J2ObjcClassInfo _RARETableHeader_TableHeaderView = { "TableHeaderView", "com.appnativa.rare.ui.table", "TableHeader", 0x8, 20, methods, 0, NULL, 0, NULL};
  return &_RARETableHeader_TableHeaderView;
}

@end
