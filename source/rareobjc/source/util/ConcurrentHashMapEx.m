//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../util/src/com/appnativa/util/ConcurrentHashMapEx.java
//
//  Created by decoteaud on 3/11/16.
//

#include "com/appnativa/util/ConcurrentHashMapEx.h"
#include "java/util/Map.h"

@implementation RAREUTConcurrentHashMapEx

static id RAREUTConcurrentHashMapEx_NULL__;

+ (id)getNULL {
  return RAREUTConcurrentHashMapEx_NULL__;
}

+ (void)setNULL:(id)NULL_ {
  RAREUTConcurrentHashMapEx_NULL__ = NULL_;
}

- (id)init {
  return [super init];
}

- (id)initWithInt:(int)initialCapacity {
  return [super initWithInt:initialCapacity];
}

- (id)initWithJavaUtilMap:(id<JavaUtilMap>)map {
  return [super initWithJavaUtilMap:map];
}

- (id)initWithInt:(int)initialCapacity
        withFloat:(float)loadFactor {
  return [super initWithInt:initialCapacity withFloat:loadFactor];
}

- (id)initWithInt:(int)initialCapacity
        withFloat:(float)loadFactor
          withInt:(int)concurrencyLevel {
  return [super initWithInt:initialCapacity withFloat:loadFactor withInt:concurrencyLevel];
}

- (id)putWithId:(id)key
         withId:(id)value {
  id o = [super putWithId:key withId:(value == nil) ? RAREUTConcurrentHashMapEx_NULL__ : value];
  return (o == RAREUTConcurrentHashMapEx_NULL__) ? nil : o;
}

- (id)removeWithId:(id)key {
  id o = [super removeWithId:key];
  return (o == RAREUTConcurrentHashMapEx_NULL__) ? nil : o;
}

- (id)getWithId:(id)key {
  id o = [super getWithId:key];
  return (o == RAREUTConcurrentHashMapEx_NULL__) ? nil : o;
}

+ (void)initialize {
  if (self == [RAREUTConcurrentHashMapEx class]) {
    RAREUTConcurrentHashMapEx_NULL__ = [[NSObject alloc] init];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "putWithId:withId:", NULL, "LNSObject", 0x1, NULL },
    { "removeWithId:", NULL, "LNSObject", 0x1, NULL },
    { "getWithId:", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "NULL__", "NULL", 0xa, "LNSObject" },
  };
  static J2ObjcClassInfo _RAREUTConcurrentHashMapEx = { "ConcurrentHashMapEx", "com.appnativa.util", NULL, 0x1, 3, methods, 1, fields, 0, NULL};
  return &_RAREUTConcurrentHashMapEx;
}

@end
