//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../util/src/com/appnativa/util/ASCII85InputStream.java
//
//  Created by decoteaud on 9/15/15.
//

#include "IOSClass.h"
#include "IOSIntArray.h"
#include "com/appnativa/util/ASCII85InputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Character.h"

@implementation RAREUTASCII85InputStream

static IOSIntArray * RAREUTASCII85InputStream_POW85_;

+ (IOSIntArray *)POW85 {
  return RAREUTASCII85InputStream_POW85_;
}

- (id)initRAREUTASCII85InputStreamWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  if (self = [super initWithJavaIoInputStream:inArg]) {
    nextByte_ = -1;
    markNextByte_ = -1;
  }
  return self;
}

- (id)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return [self initRAREUTASCII85InputStreamWithJavaIoInputStream:inArg];
}

- (id)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                    withBoolean:(BOOL)preserveUnencoded {
  if (self = [self initRAREUTASCII85InputStreamWithJavaIoInputStream:inArg]) {
    self->preserveUnencoded_ = preserveUnencoded;
  }
  return self;
}

- (void)markWithInt:(int)readlimit {
  @synchronized(self) {
    {
      markTuple_ = tuple_;
      markCount_ = count_;
      markDecoding_ = decoding_;
      markMaybeStarting_ = maybeStarting_;
      markMaybeStopping_ = maybeStopping_;
      markTupleBytesRemaining_ = tupleBytesRemaining_;
      markTupleSendStartBytes_ = tupleSendStartBytes_;
      markNextByte_ = nextByte_;
      [super markWithInt:readlimit * 5];
    }
  }
}

- (int)read {
  if (tupleBytesRemaining_ > 0) {
    int returnByte = 0;
    switch (4 - (tupleSendStartBytes_ - tupleBytesRemaining_--)) {
      case 4:
      returnByte = ((int) (((unsigned int) tuple_) >> 24)) & (int) 0xff;
      break;
      case 3:
      returnByte = ((int) (((unsigned int) tuple_) >> 16)) & (int) 0xff;
      break;
      case 2:
      returnByte = ((int) (((unsigned int) tuple_) >> 8)) & (int) 0xff;
      break;
      case 1:
      returnByte = (tuple_) & (int) 0xff;
      break;
    }
    NSAssert((returnByte != 0), @"/Code/Dev/appNativa/source/rareobjc/../util/src/com/appnativa/util/ASCII85InputStream.java:137 condition failed: assert(returnByte != 0);");
    if (tupleBytesRemaining_ == 0) {
      count_ = tuple_ = 0;
    }
    return returnByte;
  }
  else if (nextByte_ != -1) {
    int returnByte = nextByte_;
    nextByte_ = -1;
    return returnByte;
  }
  else if (!decoding_) {
    int c = [((JavaIoInputStream *) nil_chk(in_)) read];
    if (maybeStarting_) {
      switch (c) {
        case '~':
        maybeStarting_ = NO;
        decoding_ = YES;
        return [self read];
        default:
        maybeStarting_ = NO;
        nextByte_ = c;
        case '<':
        return '<';
      }
    }
    else if (c == '<') {
      maybeStarting_ = YES;
      return [self read];
    }
    else if (preserveUnencoded_ || (c == -1)) {
      return c;
    }
    else {
      return [self read];
    }
  }
  else {
    int c = [((JavaIoInputStream *) nil_chk(in_)) read];
    if (maybeStopping_ && (c != '>')) {
      @throw [[JavaIoIOException alloc] initWithNSString:@"~ without > in ascii85 section"];
    }
    if ([JavaLangCharacter isWhitespaceWithChar:(unichar) c]) {
      return [self read];
    }
    switch (c) {
      case '>':
      if (maybeStopping_) {
        if (count_ > 0) {
          count_--;
          tuple_ += IOSIntArray_Get(nil_chk(RAREUTASCII85InputStream_POW85_), count_);
          tupleBytesRemaining_ = tupleSendStartBytes_ = count_;
        }
        maybeStopping_ = decoding_ = NO;
        return [self read];
      }
      default:
      if ((c < '!') || (c > 'u')) {
        @throw [[JavaIoIOException alloc] initWithNSString:[NSString stringWithFormat:@"Bad character in ascii85 section: [ascii %d]: %C", c, (unichar) c]];
      }
      tuple_ += (c - '!') * IOSIntArray_Get(nil_chk(RAREUTASCII85InputStream_POW85_), count_++);
      if (count_ == 5) {
        tupleBytesRemaining_ = tupleSendStartBytes_ = 4;
      }
      return [self read];
      case 'y':
      tuple_ |= (int) 0x20202020;
      case 'z':
      if (count_ != 0) {
        @throw [[JavaIoIOException alloc] initWithNSString:[NSString stringWithFormat:@"%C inside ascii85 5-tuple", (unichar) c]];
      }
      tupleBytesRemaining_ = tupleSendStartBytes_ = 4;
      return [self read];
      case '~':
      maybeStopping_ = YES;
      return [self read];
      case -1:
      @throw [[JavaIoIOException alloc] initWithNSString:@"EOF inside ascii85 section"];
    }
  }
}

- (void)reset {
  @synchronized(self) {
    {
      tuple_ = markTuple_;
      count_ = markCount_;
      decoding_ = markDecoding_;
      maybeStarting_ = markMaybeStarting_;
      maybeStopping_ = markMaybeStopping_;
      tupleBytesRemaining_ = markTupleBytesRemaining_;
      tupleSendStartBytes_ = markTupleSendStartBytes_;
      nextByte_ = markNextByte_;
      [super reset];
    }
  }
}

- (long long int)skipWithLong:(long long int)n {
  int skipCount;
  for (skipCount = 0; skipCount < n; skipCount++) {
    if ([self read] == -1) {
      break;
    }
  }
  return skipCount - 1;
}

+ (void)initialize {
  if (self == [RAREUTASCII85InputStream class]) {
    RAREUTASCII85InputStream_POW85_ = [IOSIntArray arrayWithInts:(int[]){ 85 * 85 * 85 * 85, 85 * 85 * 85, 85 * 85, 85, 1 } count:5];
  }
}

- (void)copyAllFieldsTo:(RAREUTASCII85InputStream *)other {
  [super copyAllFieldsTo:other];
  other->count_ = count_;
  other->decoding_ = decoding_;
  other->markCount_ = markCount_;
  other->markDecoding_ = markDecoding_;
  other->markMaybeStarting_ = markMaybeStarting_;
  other->markMaybeStopping_ = markMaybeStopping_;
  other->markNextByte_ = markNextByte_;
  other->markTuple_ = markTuple_;
  other->markTupleBytesRemaining_ = markTupleBytesRemaining_;
  other->markTupleSendStartBytes_ = markTupleSendStartBytes_;
  other->maybeStarting_ = maybeStarting_;
  other->maybeStopping_ = maybeStopping_;
  other->nextByte_ = nextByte_;
  other->preserveUnencoded_ = preserveUnencoded_;
  other->tuple_ = tuple_;
  other->tupleBytesRemaining_ = tupleBytesRemaining_;
  other->tupleSendStartBytes_ = tupleSendStartBytes_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "markWithInt:", NULL, "V", 0x21, NULL },
    { "read", NULL, "I", 0x1, "JavaIoIOException" },
    { "reset", NULL, "V", 0x21, "JavaIoIOException" },
    { "skipWithLong:", NULL, "J", 0x1, "JavaIoIOException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "POW85_", NULL, 0x1a, "LIOSIntArray" },
  };
  static J2ObjcClassInfo _RAREUTASCII85InputStream = { "ASCII85InputStream", "com.appnativa.util", NULL, 0x1, 4, methods, 1, fields, 0, NULL};
  return &_RAREUTASCII85InputStream;
}

@end
