//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../util/src/com/appnativa/util/IdentityArrayList.java
//
//  Created by decoteaud on 7/29/15.
//

#include "com/appnativa/util/IdentityArrayList.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"

@implementation RAREUTIdentityArrayList

- (id)init {
  return [super init];
}

- (id)initWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [super initWithJavaUtilCollection:c];
}

- (id)initWithInt:(int)initialCapacity {
  return [super initWithInt:initialCapacity];
}

- (BOOL)addIfNotPresentWithId:(id)e {
  if ([self indexOfWithId:e] == -1) {
    return [super addWithId:e];
  }
  return NO;
}

- (BOOL)containsWithId:(id)o {
  return [self indexOfWithId:o] != -1;
}

- (BOOL)isEqual:(id)o {
  if (o == self) {
    return YES;
  }
  if (!([o isKindOfClass:[RAREUTIdentityArrayList class]])) {
    return NO;
  }
  RAREUTIdentityArrayList *list = (RAREUTIdentityArrayList *) check_class_cast(o, [RAREUTIdentityArrayList class]);
  int len = [self size];
  if (len != [((RAREUTIdentityArrayList *) nil_chk(list)) size]) {
    return NO;
  }
  for (int i = 0; i < len; i++) {
    if ([list getWithInt:i] != [self getWithInt:i]) {
      return NO;
    }
  }
  return YES;
}

- (int)indexOfWithId:(id)o {
  int len = [self size];
  for (int i = 0; i < len; i++) {
    if (o == [self getWithInt:i]) {
      return i;
    }
  }
  return -1;
}

- (int)lastIndexOfWithId:(id)o {
  int len = [self size];
  for (int i = len - 1; i >= 0; i--) {
    if (o == [self getWithInt:i]) {
      return i;
    }
  }
  return -1;
}

- (BOOL)removeWithId:(id)o {
  int n = [self indexOfWithId:o];
  if (n != -1) {
    (void) [self removeWithInt:n];
    return YES;
  }
  return NO;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addIfNotPresentWithId:", NULL, "Z", 0x1, NULL },
    { "containsWithId:", NULL, "Z", 0x1, NULL },
    { "removeWithId:", NULL, "Z", 0x1, NULL },
  };
  static const char *superclass_type_args[] = {"TE"};
  static J2ObjcClassInfo _RAREUTIdentityArrayList = { "IdentityArrayList", "com.appnativa.util", NULL, 0x1, 3, methods, 0, NULL, 1, superclass_type_args};
  return &_RAREUTIdentityArrayList;
}

@end
