//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../util/src/com/appnativa/util/ContainsFilter.java
//
//  Created by decoteaud on 12/8/15.
//

#include "com/appnativa/util/ContainsFilter.h"
#include "com/appnativa/util/iStringConverter.h"

@implementation RAREUTContainsFilter

- (id)init {
  return [self initRAREUTContainsFilterWithNSString:nil withBoolean:NO withBoolean:NO];
}

- (id)initWithNSString:(NSString *)value {
  return [self initRAREUTContainsFilterWithNSString:value withBoolean:NO withBoolean:NO];
}

- (id)initWithNSString:(NSString *)value
           withBoolean:(BOOL)ignoreCase {
  return [self initRAREUTContainsFilterWithNSString:value withBoolean:ignoreCase withBoolean:NO];
}

- (id)initRAREUTContainsFilterWithNSString:(NSString *)value
                               withBoolean:(BOOL)ignoreCase
                               withBoolean:(BOOL)startsWith {
  return [self initRAREUTContainsFilterWithNSString:value withBoolean:ignoreCase withBoolean:startsWith withBoolean:NO withBoolean:NO];
}

- (id)initWithNSString:(NSString *)value
           withBoolean:(BOOL)ignoreCase
           withBoolean:(BOOL)startsWith {
  return [self initRAREUTContainsFilterWithNSString:value withBoolean:ignoreCase withBoolean:startsWith];
}

- (id)initRAREUTContainsFilterWithNSString:(NSString *)value
                               withBoolean:(BOOL)ignoreCase
                               withBoolean:(BOOL)startsWith
                               withBoolean:(BOOL)nullPasses
                               withBoolean:(BOOL)emptyPasses {
  if (self = [super init]) {
    self->ignoreCase_ = ignoreCase;
    self->startsWith_ = startsWith;
    self->nullPasses_ = nullPasses;
    self->emptyPasses_ = emptyPasses;
    originalValue_ = value;
    self->startsWith_ = startsWith;
    if (originalValue_ != nil) {
      theValue_ = ignoreCase ? [originalValue_ lowercaseString] : originalValue_;
    }
  }
  return self;
}

- (id)initWithNSString:(NSString *)value
           withBoolean:(BOOL)ignoreCase
           withBoolean:(BOOL)startsWith
           withBoolean:(BOOL)nullPasses
           withBoolean:(BOOL)emptyPasses {
  return [self initRAREUTContainsFilterWithNSString:value withBoolean:ignoreCase withBoolean:startsWith withBoolean:nullPasses withBoolean:emptyPasses];
}

- (BOOL)passesWithId:(id)value
withRAREUTiStringConverter:(id<RAREUTiStringConverter>)converter {
  if ((converter != nil) && (value != nil)) {
    value = [converter toStringWithId:value];
  }
  if ((value == nil) || (theValue_ == nil)) {
    return (value == theValue_) || ((value == nil) && nullPasses_);
  }
  NSString *s = ([value isKindOfClass:[NSString class]]) ? (NSString *) check_class_cast(value, [NSString class]) : [nil_chk(value) description];
  if (emptyPasses_ && ([s sequenceLength] == 0)) {
    return YES;
  }
  if (ignoreCase_) {
    s = [s lowercaseString];
  }
  if (startsWith_) {
    return [((NSString *) nil_chk(s)) hasPrefix:theValue_];
  }
  else {
    return [((NSString *) nil_chk(s)) contains:theValue_];
  }
}

- (void)setEmptyStringPassesWithBoolean:(BOOL)passes {
  emptyPasses_ = passes;
}

- (void)setIgnoreCaseWithBoolean:(BOOL)ignoreCase {
  self->ignoreCase_ = ignoreCase;
  if (originalValue_ != nil) {
    theValue_ = ignoreCase ? [originalValue_ lowercaseString] : originalValue_;
  }
}

- (void)setNullPassesWithBoolean:(BOOL)passes {
  nullPasses_ = passes;
}

- (void)setStartsWithWithBoolean:(BOOL)startsWith {
  self->startsWith_ = startsWith;
}

- (void)setValueWithNSString:(NSString *)theValue {
  self->theValue_ = theValue;
}

- (NSString *)getValue {
  return theValue_;
}

- (BOOL)isEmptyStringPasses {
  return emptyPasses_;
}

- (BOOL)isIgnoreCase {
  return ignoreCase_;
}

- (BOOL)isNullPasses {
  return nullPasses_;
}

- (BOOL)isStartsWith {
  return startsWith_;
}

- (void)copyAllFieldsTo:(RAREUTContainsFilter *)other {
  [super copyAllFieldsTo:other];
  other->emptyPasses_ = emptyPasses_;
  other->ignoreCase_ = ignoreCase_;
  other->nullPasses_ = nullPasses_;
  other->originalValue_ = originalValue_;
  other->startsWith_ = startsWith_;
  other->theValue_ = theValue_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "passesWithId:withRAREUTiStringConverter:", NULL, "Z", 0x1, NULL },
    { "getValue", NULL, "LNSString", 0x1, NULL },
    { "isEmptyStringPasses", NULL, "Z", 0x1, NULL },
    { "isIgnoreCase", NULL, "Z", 0x1, NULL },
    { "isNullPasses", NULL, "Z", 0x1, NULL },
    { "isStartsWith", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcClassInfo _RAREUTContainsFilter = { "ContainsFilter", "com.appnativa.util", NULL, 0x1, 6, methods, 0, NULL, 0, NULL};
  return &_RAREUTContainsFilter;
}

@end
