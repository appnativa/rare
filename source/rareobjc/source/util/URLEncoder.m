//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../util/src/com/appnativa/util/URLEncoder.java
//
//  Created by decoteaud on 3/11/16.
//

#include "IOSByteArray.h"
#include "IOSClass.h"
#include "com/appnativa/util/FormatException.h"
#include "com/appnativa/util/URLEncoder.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/io/Writer.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/Character.h"
#include "java/lang/StringBuilder.h"
#include "java/util/BitSet.h"

@implementation RAREUTURLEncoder

static NSString * RAREUTURLEncoder_charset_ = @"US-ASCII";
static JavaUtilBitSet * RAREUTURLEncoder_WWW_FORM_URL_;
static JavaUtilBitSet * RAREUTURLEncoder_ALL_URL_;

+ (NSString *)charset {
  return RAREUTURLEncoder_charset_;
}

+ (void)setCharset:(NSString *)charset {
  RAREUTURLEncoder_charset_ = charset;
}

+ (JavaUtilBitSet *)WWW_FORM_URL {
  return RAREUTURLEncoder_WWW_FORM_URL_;
}

+ (JavaUtilBitSet *)ALL_URL {
  return RAREUTURLEncoder_ALL_URL_;
}

- (id)init {
  return [super init];
}

+ (IOSByteArray *)decodeWithByteArray:(IOSByteArray *)bytes {
  return [RAREUTURLEncoder decodeUrlWithByteArray:bytes];
}

+ (id)decodeWithId:(id)pObject {
  if (pObject == nil) {
    return nil;
  }
  else if ([pObject isKindOfClass:[IOSByteArray class]]) {
    return [RAREUTURLEncoder decodeWithByteArray:(IOSByteArray *) check_class_cast(pObject, [IOSByteArray class])];
  }
  else if ([pObject isKindOfClass:[NSString class]]) {
    return [RAREUTURLEncoder decodeWithNSString:(NSString *) check_class_cast(pObject, [NSString class])];
  }
  else {
    @throw [[RAREUTFormatException alloc] initWithNSString:[NSString stringWithFormat:@"Objects of type %@ cannot be URL decoded", [[pObject getClass] getName]]];
  }
}

+ (NSString *)decodeWithNSString:(NSString *)pString {
  if (pString == nil) {
    return nil;
  }
  @try {
    return [RAREUTURLEncoder decodeWithNSString:pString withNSString:[RAREUTURLEncoder getDefaultCharset]];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw [[RAREUTFormatException alloc] initWithNSString:[((JavaIoUnsupportedEncodingException *) nil_chk(e)) getMessage]];
  }
}

+ (NSString *)decodeWithNSString:(NSString *)pString
                    withNSString:(NSString *)charset {
  if (pString == nil) {
    return nil;
  }
  return [NSString stringWithBytes:[RAREUTURLEncoder decodeWithByteArray:[((NSString *) nil_chk(pString)) getBytesWithCharsetName:@"US-ASCII"]] charsetName:charset];
}

+ (IOSByteArray *)decodeUrlWithByteArray:(IOSByteArray *)bytes {
  if (bytes == nil) {
    return nil;
  }
  JavaIoByteArrayOutputStream *buffer = [[JavaIoByteArrayOutputStream alloc] init];
  for (int i = 0; i < (int) [((IOSByteArray *) nil_chk(bytes)) count]; i++) {
    int b = IOSByteArray_Get(bytes, i);
    if (b == '+') {
      [buffer writeWithInt:' '];
    }
    else if (b == '%') {
      @try {
        int u = [JavaLangCharacter digitWithChar:(unichar) IOSByteArray_Get(bytes, ++i) withInt:16];
        int l = [JavaLangCharacter digitWithChar:(unichar) IOSByteArray_Get(bytes, ++i) withInt:16];
        if ((u == -1) || (l == -1)) {
          @throw [[RAREUTFormatException alloc] initWithNSString:@"Invalid URL encoding"];
        }
        [buffer writeWithInt:(unichar) ((u << 4) + l)];
      }
      @catch (JavaLangArrayIndexOutOfBoundsException *e) {
        @throw [[RAREUTFormatException alloc] initWithNSString:@"Invalid URL encoding"];
      }
    }
    else {
      [buffer writeWithInt:b];
    }
  }
  return [buffer toByteArray];
}

+ (IOSByteArray *)encodeWithJavaUtilBitSet:(JavaUtilBitSet *)urlsafe
                             withByteArray:(IOSByteArray *)bytes {
  if (bytes == nil) {
    return nil;
  }
  if (urlsafe == nil) {
    urlsafe = RAREUTURLEncoder_ALL_URL_;
  }
  JavaIoByteArrayOutputStream *buffer = [[JavaIoByteArrayOutputStream alloc] init];
  for (int i = 0; i < (int) [((IOSByteArray *) nil_chk(bytes)) count]; i++) {
    int b = IOSByteArray_Get(bytes, i);
    if (b < 0) {
      b = 256 + b;
    }
    if ([((JavaUtilBitSet *) nil_chk(urlsafe)) getWithInt:b]) {
      if (b == ' ') {
        b = '+';
      }
      [buffer writeWithInt:b];
    }
    else {
      [buffer writeWithInt:'%'];
      unichar hex1 = [JavaLangCharacter toUpperCaseWithChar:[JavaLangCharacter forDigitWithInt:(b >> 4) & (int) 0xF withInt:16]];
      unichar hex2 = [JavaLangCharacter toUpperCaseWithChar:[JavaLangCharacter forDigitWithInt:b & (int) 0xF withInt:16]];
      [buffer writeWithInt:hex1];
      [buffer writeWithInt:hex2];
    }
  }
  return [buffer toByteArray];
}

+ (void)encodeWithJavaUtilBitSet:(JavaUtilBitSet *)urlsafe
                   withByteArray:(IOSByteArray *)bytes
          withJavaIoOutputStream:(JavaIoOutputStream *)buffer {
  if (bytes == nil) {
    return;
  }
  if (urlsafe == nil) {
    urlsafe = RAREUTURLEncoder_ALL_URL_;
  }
  for (int i = 0; i < (int) [((IOSByteArray *) nil_chk(bytes)) count]; i++) {
    int b = IOSByteArray_Get(bytes, i);
    if (b < 0) {
      b = 256 + b;
    }
    if ([((JavaUtilBitSet *) nil_chk(urlsafe)) getWithInt:b]) {
      if (b == ' ') {
        b = '+';
      }
      [((JavaIoOutputStream *) nil_chk(buffer)) writeWithInt:b];
    }
    else {
      [((JavaIoOutputStream *) nil_chk(buffer)) writeWithInt:'%'];
      unichar hex1 = [JavaLangCharacter toUpperCaseWithChar:[JavaLangCharacter forDigitWithInt:(b >> 4) & (int) 0xF withInt:16]];
      unichar hex2 = [JavaLangCharacter toUpperCaseWithChar:[JavaLangCharacter forDigitWithInt:b & (int) 0xF withInt:16]];
      [buffer writeWithInt:hex1];
      [buffer writeWithInt:hex2];
    }
  }
}

+ (void)encodeWithJavaUtilBitSet:(JavaUtilBitSet *)urlsafe
                   withByteArray:(IOSByteArray *)bytes
       withJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  if (bytes == nil) {
    return;
  }
  if (urlsafe == nil) {
    urlsafe = RAREUTURLEncoder_ALL_URL_;
  }
  for (int i = 0; i < (int) [((IOSByteArray *) nil_chk(bytes)) count]; i++) {
    int b = IOSByteArray_Get(bytes, i);
    if (b < 0) {
      b = 256 + b;
    }
    if ([((JavaUtilBitSet *) nil_chk(urlsafe)) getWithInt:b]) {
      if (b == ' ') {
        b = '+';
      }
      (void) [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithChar:(unichar) b];
    }
    else {
      (void) [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithChar:'%'];
      unichar hex1 = [JavaLangCharacter toUpperCaseWithChar:[JavaLangCharacter forDigitWithInt:(b >> 4) & (int) 0xF withInt:16]];
      unichar hex2 = [JavaLangCharacter toUpperCaseWithChar:[JavaLangCharacter forDigitWithInt:b & (int) 0xF withInt:16]];
      (void) [buffer appendWithChar:hex1];
      (void) [buffer appendWithChar:hex2];
    }
  }
}

+ (void)encodeWithJavaUtilBitSet:(JavaUtilBitSet *)urlsafe
                   withByteArray:(IOSByteArray *)bytes
                withJavaIoWriter:(JavaIoWriter *)buffer {
  if (bytes == nil) {
    return;
  }
  if (urlsafe == nil) {
    urlsafe = RAREUTURLEncoder_WWW_FORM_URL_;
  }
  for (int i = 0; i < (int) [((IOSByteArray *) nil_chk(bytes)) count]; i++) {
    int b = IOSByteArray_Get(bytes, i);
    if (b < 0) {
      b = 256 + b;
    }
    if ([((JavaUtilBitSet *) nil_chk(urlsafe)) getWithInt:b]) {
      if (b == ' ') {
        b = '+';
      }
      [((JavaIoWriter *) nil_chk(buffer)) writeWithInt:(unichar) b];
    }
    else {
      [((JavaIoWriter *) nil_chk(buffer)) writeWithInt:'%'];
      unichar hex1 = [JavaLangCharacter toUpperCaseWithChar:[JavaLangCharacter forDigitWithInt:(b >> 4) & (int) 0xF withInt:16]];
      unichar hex2 = [JavaLangCharacter toUpperCaseWithChar:[JavaLangCharacter forDigitWithInt:b & (int) 0xF withInt:16]];
      [buffer writeWithInt:hex1];
      [buffer writeWithInt:hex2];
    }
  }
}

+ (void)encodeWithNSString:(NSString *)pString
              withNSString:(NSString *)charset
    withJavaIoOutputStream:(JavaIoOutputStream *)buffer {
  if ((pString == nil) || ([pString sequenceLength] == 0)) {
    return;
  }
  [RAREUTURLEncoder encodeWithJavaUtilBitSet:RAREUTURLEncoder_ALL_URL_ withByteArray:[((NSString *) nil_chk(pString)) getBytesWithCharsetName:charset] withJavaIoOutputStream:buffer];
}

+ (IOSByteArray *)encodeComponentWithByteArray:(IOSByteArray *)bytes {
  return [RAREUTURLEncoder encodeWithJavaUtilBitSet:RAREUTURLEncoder_WWW_FORM_URL_ withByteArray:bytes];
}

+ (NSString *)encodeComponentWithNSString:(NSString *)pString {
  if (pString == nil) {
    return nil;
  }
  @try {
    return [RAREUTURLEncoder encodeComponentWithNSString:pString withNSString:[RAREUTURLEncoder getDefaultCharset]];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw [[RAREUTFormatException alloc] initWithNSString:[((JavaIoUnsupportedEncodingException *) nil_chk(e)) getMessage]];
  }
}

+ (NSString *)encodeComponentWithNSString:(NSString *)pString
                             withNSString:(NSString *)charset {
  if ((pString == nil) || ([pString sequenceLength] == 0)) {
    return pString;
  }
  return [NSString stringWithBytes:[RAREUTURLEncoder encodeWithJavaUtilBitSet:RAREUTURLEncoder_WWW_FORM_URL_ withByteArray:[((NSString *) nil_chk(pString)) getBytesWithCharsetName:charset]] charsetName:@"US-ASCII"];
}

+ (void)encodeComponentWithNSString:(NSString *)pString
                       withNSString:(NSString *)charset
             withJavaIoOutputStream:(JavaIoOutputStream *)buffer {
  if ((pString == nil) || ([pString sequenceLength] == 0)) {
    return;
  }
  [RAREUTURLEncoder encodeWithJavaUtilBitSet:RAREUTURLEncoder_WWW_FORM_URL_ withByteArray:[((NSString *) nil_chk(pString)) getBytesWithCharsetName:charset] withJavaIoOutputStream:buffer];
}

+ (void)encodeComponentWithNSString:(NSString *)pString
                       withNSString:(NSString *)charset
          withJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  if (pString == nil) {
    return;
  }
  [RAREUTURLEncoder encodeWithJavaUtilBitSet:RAREUTURLEncoder_WWW_FORM_URL_ withByteArray:[((NSString *) nil_chk(pString)) getBytesWithCharsetName:charset] withJavaLangStringBuilder:buffer];
}

+ (void)encodeComponentWithNSString:(NSString *)pString
                       withNSString:(NSString *)charset
                   withJavaIoWriter:(JavaIoWriter *)buffer {
  if ((pString == nil) || ([pString sequenceLength] == 0)) {
    return;
  }
  [RAREUTURLEncoder encodeWithJavaUtilBitSet:RAREUTURLEncoder_WWW_FORM_URL_ withByteArray:[((NSString *) nil_chk(pString)) getBytesWithCharsetName:charset] withJavaIoWriter:buffer];
}

+ (IOSByteArray *)encodeUrlWithByteArray:(IOSByteArray *)bytes {
  return [RAREUTURLEncoder encodeWithJavaUtilBitSet:RAREUTURLEncoder_ALL_URL_ withByteArray:bytes];
}

+ (NSString *)encodeUrlWithNSString:(NSString *)pString {
  if (pString == nil) {
    return nil;
  }
  @try {
    return [RAREUTURLEncoder encodeUrlWithNSString:pString withNSString:[RAREUTURLEncoder getDefaultCharset]];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw [[RAREUTFormatException alloc] initWithNSString:[((JavaIoUnsupportedEncodingException *) nil_chk(e)) getMessage]];
  }
}

+ (NSString *)encodeUrlWithNSString:(NSString *)pString
                       withNSString:(NSString *)charset {
  if ((pString == nil) || ([pString sequenceLength] == 0)) {
    return pString;
  }
  return [NSString stringWithBytes:[RAREUTURLEncoder encodeWithJavaUtilBitSet:RAREUTURLEncoder_ALL_URL_ withByteArray:[((NSString *) nil_chk(pString)) getBytesWithCharsetName:charset]] charsetName:@"US-ASCII"];
}

+ (void)encodeUrlWithNSString:(NSString *)pString
                 withNSString:(NSString *)charset
    withJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  if (pString == nil) {
    return;
  }
  [RAREUTURLEncoder encodeWithJavaUtilBitSet:RAREUTURLEncoder_ALL_URL_ withByteArray:[((NSString *) nil_chk(pString)) getBytesWithCharsetName:charset] withJavaLangStringBuilder:buffer];
}

+ (void)encodeUrlWithNSString:(NSString *)pString
                 withNSString:(NSString *)charset
             withJavaIoWriter:(JavaIoWriter *)buffer {
  if ((pString == nil) || ([pString sequenceLength] == 0)) {
    return;
  }
  [RAREUTURLEncoder encodeWithJavaUtilBitSet:RAREUTURLEncoder_ALL_URL_ withByteArray:[((NSString *) nil_chk(pString)) getBytesWithCharsetName:charset] withJavaIoWriter:buffer];
}

+ (NSString *)getDefaultCharset {
  return RAREUTURLEncoder_charset_;
}

+ (void)initialize {
  if (self == [RAREUTURLEncoder class]) {
    RAREUTURLEncoder_WWW_FORM_URL_ = [[JavaUtilBitSet alloc] initWithInt:256];
    RAREUTURLEncoder_ALL_URL_ = [[JavaUtilBitSet alloc] initWithInt:256];
    {
      for (int i = 'a'; i <= 'z'; i++) {
        [RAREUTURLEncoder_WWW_FORM_URL_ setWithInt:i];
        [RAREUTURLEncoder_ALL_URL_ setWithInt:i];
      }
      for (int i = 'A'; i <= 'Z'; i++) {
        [RAREUTURLEncoder_WWW_FORM_URL_ setWithInt:i];
        [RAREUTURLEncoder_ALL_URL_ setWithInt:i];
      }
      for (int i = '0'; i <= '9'; i++) {
        [RAREUTURLEncoder_WWW_FORM_URL_ setWithInt:i];
        [RAREUTURLEncoder_ALL_URL_ setWithInt:i];
      }
      [RAREUTURLEncoder_ALL_URL_ setWithInt:'_'];
      [RAREUTURLEncoder_ALL_URL_ setWithInt:'.'];
      [RAREUTURLEncoder_WWW_FORM_URL_ setWithInt:'/'];
      [RAREUTURLEncoder_WWW_FORM_URL_ setWithInt:'-'];
      [RAREUTURLEncoder_WWW_FORM_URL_ setWithInt:'_'];
      [RAREUTURLEncoder_WWW_FORM_URL_ setWithInt:'.'];
      [RAREUTURLEncoder_WWW_FORM_URL_ setWithInt:'*'];
    }
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "decodeWithByteArray:", NULL, "LIOSByteArray", 0x9, "RAREUTFormatException" },
    { "decodeWithId:", NULL, "LNSObject", 0x9, "RAREUTFormatException" },
    { "decodeWithNSString:", NULL, "LNSString", 0x9, "RAREUTFormatException" },
    { "decodeWithNSString:withNSString:", NULL, "LNSString", 0x9, "RAREUTFormatException;JavaIoUnsupportedEncodingException" },
    { "decodeUrlWithByteArray:", NULL, "LIOSByteArray", 0x19, "RAREUTFormatException" },
    { "encodeWithJavaUtilBitSet:withByteArray:", NULL, "LIOSByteArray", 0x19, NULL },
    { "encodeWithJavaUtilBitSet:withByteArray:withJavaIoOutputStream:", NULL, "V", 0x19, "JavaIoIOException" },
    { "encodeWithJavaUtilBitSet:withByteArray:withJavaLangStringBuilder:", NULL, "V", 0x19, NULL },
    { "encodeWithJavaUtilBitSet:withByteArray:withJavaIoWriter:", NULL, "V", 0x19, "JavaIoIOException" },
    { "encodeWithNSString:withNSString:withJavaIoOutputStream:", NULL, "V", 0x9, "JavaIoUnsupportedEncodingException;JavaIoIOException" },
    { "encodeComponentWithByteArray:", NULL, "LIOSByteArray", 0x9, NULL },
    { "encodeComponentWithNSString:", NULL, "LNSString", 0x9, "RAREUTFormatException" },
    { "encodeComponentWithNSString:withNSString:", NULL, "LNSString", 0x9, "JavaIoUnsupportedEncodingException" },
    { "encodeComponentWithNSString:withNSString:withJavaIoOutputStream:", NULL, "V", 0x9, "JavaIoUnsupportedEncodingException;JavaIoIOException" },
    { "encodeComponentWithNSString:withNSString:withJavaLangStringBuilder:", NULL, "V", 0x9, "JavaIoUnsupportedEncodingException" },
    { "encodeComponentWithNSString:withNSString:withJavaIoWriter:", NULL, "V", 0x9, "JavaIoUnsupportedEncodingException;JavaIoIOException" },
    { "encodeUrlWithByteArray:", NULL, "LIOSByteArray", 0x9, NULL },
    { "encodeUrlWithNSString:", NULL, "LNSString", 0x9, "RAREUTFormatException" },
    { "encodeUrlWithNSString:withNSString:", NULL, "LNSString", 0x9, "JavaIoUnsupportedEncodingException" },
    { "encodeUrlWithNSString:withNSString:withJavaLangStringBuilder:", NULL, "V", 0x9, "JavaIoUnsupportedEncodingException" },
    { "encodeUrlWithNSString:withNSString:withJavaIoWriter:", NULL, "V", 0x9, "JavaIoUnsupportedEncodingException;JavaIoIOException" },
    { "getDefaultCharset", NULL, "LNSString", 0x9, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "charset_", NULL, 0xa, "LNSString" },
    { "WWW_FORM_URL_", NULL, 0x1c, "LJavaUtilBitSet" },
    { "ALL_URL_", NULL, 0x1c, "LJavaUtilBitSet" },
  };
  static J2ObjcClassInfo _RAREUTURLEncoder = { "URLEncoder", "com.appnativa.util", NULL, 0x1, 22, methods, 3, fields, 0, NULL};
  return &_RAREUTURLEncoder;
}

@end
