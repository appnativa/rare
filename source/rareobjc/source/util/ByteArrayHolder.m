//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Code/Dev/appNativa/source/rareobjc/../util/src/com/appnativa/util/ByteArrayHolder.java
//
//  Created by decoteaud on 7/29/15.
//

#include "IOSByteArray.h"
#include "IOSCharArray.h"
#include "com/appnativa/util/ByteArray.h"
#include "com/appnativa/util/ByteArrayHolder.h"
#include "com/appnativa/util/CharArray.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/ISO88591Helper.h"
#include "com/appnativa/util/iCharsetHelper.h"
#include "java/lang/System.h"

@implementation RAREUTByteArrayHolder

static IOSByteArray * RAREUTByteArrayHolder_ZERO_LENGTH_BYTES_;

+ (IOSByteArray *)ZERO_LENGTH_BYTES {
  return RAREUTByteArrayHolder_ZERO_LENGTH_BYTES_;
}

+ (void)setZERO_LENGTH_BYTES:(IOSByteArray *)ZERO_LENGTH_BYTES {
  RAREUTByteArrayHolder_ZERO_LENGTH_BYTES_ = ZERO_LENGTH_BYTES;
}

- (id)init {
  if (self = [super init]) {
    position_ = 0;
    length_ = 0;
    bytes_ = nil;
  }
  return self;
}

- (id)initWithByteArray:(IOSByteArray *)val {
  if (self = [super init]) {
    bytes_ = val;
    position_ = 0;
    length_ = (bytes_ != nil) ? (int) [bytes_ count] : 0;
  }
  return self;
}

- (id)initWithByteArray:(IOSByteArray *)val
            withBoolean:(BOOL)copy_ {
  if (self = [super init]) {
    if (copy_ && (val != nil)) {
      int len = (int) [val count];
      bytes_ = [IOSByteArray arrayWithLength:len];
      [JavaLangSystem arraycopyWithId:val withInt:0 withId:bytes_ withInt:0 withInt:len];
    }
    else {
      bytes_ = val;
    }
    position_ = 0;
    length_ = (bytes_ != nil) ? (int) [bytes_ count] : 0;
  }
  return self;
}

- (id)initWithRAREUTByteArrayHolder:(RAREUTByteArrayHolder *)val
                        withBoolean:(BOOL)copy_ {
  if (self = [super init]) {
    [self setWithRAREUTByteArrayHolder:val withBoolean:copy_];
  }
  return self;
}

- (id)initWithByteArray:(IOSByteArray *)val
                withInt:(int)pos
                withInt:(int)len {
  if (self = [super init]) {
    bytes_ = val;
    position_ = pos;
    length_ = len;
  }
  return self;
}

- (id)initWithByteArray:(IOSByteArray *)val
                withInt:(int)pos
                withInt:(int)len
            withBoolean:(BOOL)copy_ {
  if (self = [super init]) {
    if (copy_) {
      bytes_ = [IOSByteArray arrayWithLength:len];
      length_ = len;
      [JavaLangSystem arraycopyWithId:val withInt:pos withId:bytes_ withInt:0 withInt:len];
    }
    else {
      bytes_ = val;
      position_ = pos;
      length_ = len;
    }
  }
  return self;
}

- (int)compareToWithRAREUTByteArrayHolder:(RAREUTByteArrayHolder *)array {
  if ((length_ == 0) && (((RAREUTByteArrayHolder *) nil_chk(array))->length_ == 0)) {
    return 0;
  }
  if ((bytes_ == nil) || (((RAREUTByteArrayHolder *) nil_chk(array))->bytes_ == nil)) {
    if (bytes_ == ((RAREUTByteArrayHolder *) nil_chk(array))->bytes_) {
      return 0;
    }
    return (bytes_ == nil) ? -1 : 1;
  }
  return [RAREUTHelper compareToWithByteArray:bytes_ withInt:position_ withInt:length_ withByteArray:((RAREUTByteArrayHolder *) nil_chk(array))->bytes_ withInt:array->position_ withInt:array->length_];
}

- (int)compareToWithId:(id)o {
  return [self compareToWithRAREUTByteArrayHolder:(RAREUTByteArrayHolder *) check_class_cast(o, [RAREUTByteArrayHolder class])];
}

- (BOOL)equalsWithRAREUTByteArrayHolder:(RAREUTByteArrayHolder *)array {
  if ((length_ == 0) && (((RAREUTByteArrayHolder *) nil_chk(array))->length_ == 0)) {
    return YES;
  }
  if (length_ != ((RAREUTByteArrayHolder *) nil_chk(array))->length_) {
    return NO;
  }
  if ((bytes_ == nil) || (array->bytes_ == nil)) {
    return bytes_ == array->bytes_;
  }
  return [RAREUTHelper regionMatchesWithByteArray:bytes_ withInt:position_ withByteArray:array->bytes_ withInt:array->position_ withInt:length_];
}

- (BOOL)isEqual:(id)a {
  if ([a isKindOfClass:[RAREUTByteArrayHolder class]]) {
    return [self equalsWithRAREUTByteArrayHolder:(RAREUTByteArrayHolder *) check_class_cast(a, [RAREUTByteArrayHolder class])];
  }
  return NO;
}

- (IOSCharArray *)getChars {
  return [((RAREUTCharArray *) nil_chk([self getCharsWithRAREUTCharArray:[[RAREUTCharArray alloc] init]])) toCharArray];
}

- (RAREUTCharArray *)getCharsWithRAREUTCharArray:(RAREUTCharArray *)outArg {
  if (csHelper_ != nil) {
    ((RAREUTCharArray *) nil_chk(outArg))->_length_ += [csHelper_ getCharsWithByteArray:bytes_ withInt:position_ withInt:length_ withRAREUTCharArray:outArg withInt:outArg->_length_];
  }
  else {
    ((RAREUTCharArray *) nil_chk(outArg))->_length_ += [((RAREUTISO88591Helper *) nil_chk([RAREUTISO88591Helper getInstance])) getCharsWithByteArray:bytes_ withInt:position_ withInt:length_ withRAREUTCharArray:outArg withInt:outArg->_length_];
  }
  return outArg;
}

- (IOSCharArray *)getCharsWithRAREUTiCharsetHelper:(id<RAREUTiCharsetHelper>)csh {
  return [((RAREUTCharArray *) nil_chk([self getCharsWithRAREUTCharArray:[[RAREUTCharArray alloc] init] withRAREUTiCharsetHelper:csh])) toCharArray];
}

- (RAREUTCharArray *)getCharsWithRAREUTCharArray:(RAREUTCharArray *)outArg
                        withRAREUTiCharsetHelper:(id<RAREUTiCharsetHelper>)csh {
  ((RAREUTCharArray *) nil_chk(outArg))->_length_ += [((id<RAREUTiCharsetHelper>) nil_chk(csh)) getCharsWithByteArray:bytes_ withInt:position_ withInt:length_ withRAREUTCharArray:outArg withInt:outArg->_length_];
  return outArg;
}

- (NSUInteger)hash {
  if (bytes_ == nil) {
    return 0;
  }
  int h = 0;
  int len = position_ + length_;
  int i = position_;
  IOSByteArray *a = bytes_;
  while (i < len) {
    h = (31 * h) + IOSByteArray_Get(nil_chk(a), i++);
  }
  return h;
}

- (int)indexOfWithByte:(char)b {
  return [RAREUTHelper indexOfWithByteArray:bytes_ withInt:position_ withInt:length_ withByte:b];
}

- (int)lastIndexOfWithByte:(char)b {
  return [RAREUTHelper lastIndexOfWithByteArray:bytes_ withInt:position_ withInt:length_ withByte:b];
}

- (void)setWithByteArray:(IOSByteArray *)val {
  bytes_ = val;
  position_ = 0;
  length_ = (val == nil) ? 0 : (int) [val count];
}

- (void)setWithRAREUTByteArray:(RAREUTByteArray *)val {
  bytes_ = ((RAREUTByteArray *) nil_chk(val))->A_;
  position_ = 0;
  length_ = val->_length_;
}

- (void)setWithRAREUTByteArrayHolder:(RAREUTByteArrayHolder *)val {
  bytes_ = ((RAREUTByteArrayHolder *) nil_chk(val))->bytes_;
  position_ = val->position_;
  length_ = val->length_;
}

- (void)setWithNSString:(NSString *)val {
  bytes_ = nil;
  position_ = 0;
  length_ = 0;
  if (val == nil) {
    return;
  }
  if ([((NSString *) nil_chk(val)) sequenceLength] == 0) {
    bytes_ = RAREUTByteArrayHolder_ZERO_LENGTH_BYTES_;
    return;
  }
  if (csHelper_ == nil) {
    bytes_ = [val getBytes];
  }
  else {
    bytes_ = [csHelper_ getBytesWithNSString:val];
  }
  length_ = (int) [((IOSByteArray *) nil_chk(bytes_)) count];
}

- (void)setWithRAREUTByteArrayHolder:(RAREUTByteArrayHolder *)val
                         withBoolean:(BOOL)copy_ {
  if (copy_ && (((RAREUTByteArrayHolder *) nil_chk(val))->bytes_ != nil)) {
    int len = (int) [val->bytes_ count];
    bytes_ = [IOSByteArray arrayWithLength:len];
    [JavaLangSystem arraycopyWithId:val->bytes_ withInt:0 withId:bytes_ withInt:0 withInt:len];
  }
  else {
    bytes_ = ((RAREUTByteArrayHolder *) nil_chk(val))->bytes_;
  }
  position_ = ((RAREUTByteArrayHolder *) nil_chk(val))->position_;
  length_ = val->length_;
}

- (void)setWithByteArray:(IOSByteArray *)val
                 withInt:(int)pos
                 withInt:(int)len {
  bytes_ = val;
  position_ = pos;
  length_ = len;
}

- (void)setCharsetHelperWithRAREUTiCharsetHelper:(id<RAREUTiCharsetHelper>)csh {
  csHelper_ = csh;
}

- (void)setExWithRAREUTByteArrayHolder:(RAREUTByteArrayHolder *)val
                           withBoolean:(BOOL)copy_ {
  if (copy_ && (((RAREUTByteArrayHolder *) nil_chk(val))->bytes_ != nil)) {
    int len = val->length_;
    if ((bytes_ == nil) || ((int) [bytes_ count] < len)) {
      bytes_ = [IOSByteArray arrayWithLength:len];
    }
    [JavaLangSystem arraycopyWithId:val->bytes_ withInt:val->position_ withId:bytes_ withInt:0 withInt:len];
    position_ = 0;
  }
  else {
    bytes_ = ((RAREUTByteArrayHolder *) nil_chk(val))->bytes_;
    position_ = val->position_;
  }
  length_ = ((RAREUTByteArrayHolder *) nil_chk(val))->length_;
}

- (void)skipWithInt:(int)len {
  position_ += len;
  length_ -= len;
  if (length_ < 0) {
    length_ = 0;
  }
}

- (BOOL)startsWithWithRAREUTByteArray:(RAREUTByteArray *)ba {
  if (length_ < ((RAREUTByteArray *) nil_chk(ba))->_length_) {
    return NO;
  }
  return [RAREUTHelper regionMatchesWithByteArray:bytes_ withInt:position_ withByteArray:ba->A_ withInt:0 withInt:ba->_length_];
}

- (BOOL)startsWithWithRAREUTByteArrayHolder:(RAREUTByteArrayHolder *)bah {
  if (length_ < ((RAREUTByteArrayHolder *) nil_chk(bah))->length_) {
    return NO;
  }
  return [RAREUTHelper regionMatchesWithByteArray:bytes_ withInt:position_ withByteArray:bah->bytes_ withInt:bah->position_ withInt:bah->length_];
}

- (IOSByteArray *)toBytes {
  if (bytes_ == nil) {
    return bytes_;
  }
  if ((position_ == 0) && ((int) [((IOSByteArray *) nil_chk(bytes_)) count] == length_)) {
    return bytes_;
  }
  IOSByteArray *b = [IOSByteArray arrayWithLength:length_];
  if (length_ < 20) {
    for (int i = 0; i < length_; i++) {
      (*IOSByteArray_GetRef(b, i)) = IOSByteArray_Get(nil_chk(bytes_), position_ + i);
    }
  }
  else {
    [JavaLangSystem arraycopyWithId:bytes_ withInt:position_ withId:b withInt:0 withInt:length_];
  }
  return b;
}

- (NSString *)description {
  if (length_ == 0) {
    return @"";
  }
  if (csHelper_ != nil) {
    return [csHelper_ getStringWithByteArray:bytes_ withInt:position_ withInt:length_];
  }
  return [NSString stringWithBytes:bytes_ offset:position_ length:length_];
}

- (NSString *)toStringWithRAREUTiCharsetHelper:(id<RAREUTiCharsetHelper>)csh {
  if (length_ == 0) {
    return @"";
  }
  return [((id<RAREUTiCharsetHelper>) nil_chk(csh)) getStringWithByteArray:bytes_ withInt:position_ withInt:length_];
}

- (NSString *)toStringWithRAREUTiCharsetHelper:(id<RAREUTiCharsetHelper>)csh
                           withRAREUTCharArray:(RAREUTCharArray *)ca {
  if (length_ == 0) {
    return @"";
  }
  [((RAREUTCharArray *) nil_chk(ca)) ensureCapacityWithInt:length_];
  IOSCharArray *chars = ca->A_;
  int charLen = [((id<RAREUTiCharsetHelper>) nil_chk(csh)) getCharsWithByteArray:bytes_ withInt:position_ withInt:length_ withCharArray:chars withInt:0];
  return [NSString stringWithCharacters:chars offset:0 length:charLen];
}

+ (void)initialize {
  if (self == [RAREUTByteArrayHolder class]) {
    RAREUTByteArrayHolder_ZERO_LENGTH_BYTES_ = [IOSByteArray arrayWithBytes:(char[]){  } count:0];
  }
}

- (void)copyAllFieldsTo:(RAREUTByteArrayHolder *)other {
  [super copyAllFieldsTo:other];
  other->bytes_ = bytes_;
  other->csHelper_ = csHelper_;
  other->length_ = length_;
  other->position_ = position_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "equalsWithRAREUTByteArrayHolder:", NULL, "Z", 0x1, NULL },
    { "getChars", NULL, "LIOSCharArray", 0x1, NULL },
    { "getCharsWithRAREUTCharArray:", NULL, "LRAREUTCharArray", 0x1, NULL },
    { "getCharsWithRAREUTiCharsetHelper:", NULL, "LIOSCharArray", 0x1, NULL },
    { "getCharsWithRAREUTCharArray:withRAREUTiCharsetHelper:", NULL, "LRAREUTCharArray", 0x1, NULL },
    { "startsWithWithRAREUTByteArray:", NULL, "Z", 0x1, NULL },
    { "startsWithWithRAREUTByteArrayHolder:", NULL, "Z", 0x1, NULL },
    { "toBytes", NULL, "LIOSByteArray", 0x1, NULL },
    { "toStringWithRAREUTiCharsetHelper:", NULL, "LNSString", 0x1, NULL },
    { "toStringWithRAREUTiCharsetHelper:withRAREUTCharArray:", NULL, "LNSString", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "ZERO_LENGTH_BYTES_", NULL, 0xa, "LIOSByteArray" },
    { "bytes_", NULL, 0x1, "LIOSByteArray" },
    { "csHelper_", NULL, 0x1, "LRAREUTiCharsetHelper" },
    { "length_", NULL, 0x1, "I" },
    { "position_", NULL, 0x1, "I" },
  };
  static J2ObjcClassInfo _RAREUTByteArrayHolder = { "ByteArrayHolder", "com.appnativa.util", NULL, 0x1, 10, methods, 5, fields, 0, NULL};
  return &_RAREUTByteArrayHolder;
}

@end
