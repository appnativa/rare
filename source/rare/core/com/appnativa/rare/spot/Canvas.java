/**************************************************************************
 * Canvas.java - Wed Nov 18 17:50:58 PST 2015
 *
 * Copyright (c) appNativa
 *
 * All rights reserved.
 *
 * Generated by the Sparse Notation(tm) To Java Compiler v1.0
 * Note 1: Code entered after the "//USER_IMPORTS_AND_COMMENTS_MARK{}" comment and before the class declaration will be preserved.
 * Note 2: Code entered out side of the other   comment blocks will be preserved
 * Note 3: If you edit the automatically generated comments and want to preserve your edits remove the //GENERATED_COMMENT{} tags
 */

package com.appnativa.rare.spot;

import com.appnativa.spot.*;

//USER_IMPORTS_AND_COMMENTS_MARK{}


//GENERATED_COMMENT{}
/**
 * The class represents a drawing surface compatible with the
 * HTML5 Canvas specification
 *
 * @author Don DeCoteau
 * @version 2.0
 */  
public class Canvas extends Viewer {
  //GENERATED_MEMBERS{

  /** Design: the type of context */
  public SPOTPrintableString context = new SPOTPrintableString(null, "2d", false );

  /** Behavior: the type of scaling to perform */
  public CScaling scaling = new CScaling(null, null, CScaling.bilinear, "bilinear", false );

  //}GENERATED_MEMBERS

  //GENERATED_METHODS{

  /**
   * Creates a new optional <code>Canvas</code> object.
   */
  public Canvas()  {
    this(true);
  }

  /**
   * Creates a new <code>Canvas</code> object.
   *
   * @param optional  <code>true</code> if the element is optional; <code>false</code> otherwise)
   */
  public Canvas( boolean optional ) {
    super( optional, false );
    spot_setElements();
  }

  /**
   * Creates a new <code>Canvas</code> object.
   *
   * @param optional  <code>true</code> if the element is optional; <code>false</code> otherwise)
   * @param setElements  <code>true</code> if a call to setElements should be made; <code>false</code> otherwise)
   */
  protected Canvas( boolean optional,boolean setElements ) {
    super( optional, setElements );
  }

  /**
   * Adds elements to the object elements map
   *
   */
  protected void spot_setElements()  {
    this.elementsSizeHint  +=2;
    super.spot_setElements();
    spot_addElement( "context", context );
    spot_addElement( "scaling", scaling );
  }

  //}GENERATED_METHODS

  //GENERATED_INNER_CLASSES{

  /**
   * Class that defines the valid set of choices for
   * the <code>Canvas.scaling</code> ENUMERATED object
   */
  public static class CScaling extends SPOTEnumerated {

    public final static int nearest_neighbor = 0;
    public final static int bilinear = 1;
    public final static int bicubic = 2;
    public final static int bilinear_cached = 3;
    public final static int bicubic_cached = 4;
    public final static int progressive_bilinear = 5;
    public final static int progressive_bicubic = 6;
    public final static int progressive_bilinear_cached = 7;
    public final static int progressive_bicubic_cached = 8;
    /**
     * Creates a new <code>CScaling</code> object
     */
    public CScaling()
    {
      this(null,null,null,null,true);
    }

    /**
     * Creates a new <code>CScaling</code> object
     * 
     * @param val the value
     */
    public CScaling( int val )
    {
      super();
      _sChoices=_schoices;
      _nChoices=_nchoices;
      setValue(val);
    }

    /**
     * Creates a new <code>scaling</code> object
     * the <code>Canvas.scaling</code> ENUMERATED object
     * 
     * @param ival         the integer value
     * @param sval         the string  value
     * @param idefaultval  the integer default value
     * @param sdefaultval  the string default value
     * @param optional   <code>true</code> if the node the object represents is optional
     */
    public CScaling( Integer ival, String sval, Integer idefaultval, String sdefaultval, boolean optional)
    {
      super(ival,sval,idefaultval,sdefaultval,optional);
      _sChoices=_schoices;
      _nChoices=_nchoices;
    }

    /**
     * Retrieves the range of valid values for the object
     * 
     * @return the valid range as a displayable string
     */
    public String spot_getValidityRange()
    {
      return "{"
      +"nearest_neighbor(0), "
      +"bilinear(1), "
      +"bicubic(2), "
      +"bilinear_cached(3), "
      +"bicubic_cached(4), "
      +"progressive_bilinear(5), "
      +"progressive_bicubic(6), "
      +"progressive_bilinear_cached(7), "
      +"progressive_bicubic_cached(8) }";
    }
    private final static int    _nchoices[] = {
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
             };


    private final static String _schoices[] = {
              "nearest_neighbor",
              "bilinear",
              "bicubic",
              "bilinear_cached",
              "bicubic_cached",
              "progressive_bilinear",
              "progressive_bicubic",
              "progressive_bilinear_cached",
              "progressive_bicubic_cached"
             };

  }
  //}GENERATED_INNER_CLASSES
}
