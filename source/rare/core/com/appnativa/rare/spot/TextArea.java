/**************************************************************************
 * TextArea.java - Wed Nov 18 17:50:58 PST 2015
 *
 * Copyright (c) appNativa
 *
 * All rights reserved.
 *
 * Generated by the Sparse Notation(tm) To Java Compiler v1.0
 * Note 1: Code entered after the "//USER_IMPORTS_AND_COMMENTS_MARK{}" comment and before the class declaration will be preserved.
 * Note 2: Code entered out side of the other   comment blocks will be preserved
 * Note 3: If you edit the automatically generated comments and want to preserve your edits remove the //GENERATED_COMMENT{} tags
 */

package com.appnativa.rare.spot;

import com.appnativa.spot.*;

//USER_IMPORTS_AND_COMMENTS_MARK{}


//GENERATED_COMMENT{}
/**
 * This class represents the configuration for a widget that
 * allows one or more lines of text to be entered and/or edited
 *
 * @author Don DeCoteau
 * @version 2.0
 */  
public class TextArea extends TextField {
  //GENERATED_MEMBERS{

  /** Appearance: number of lines to size the area for (use zero to let the widget decide) */
  public SPOTInteger visibleLines = new SPOTInteger(null, 0, null, true);

  /** Behavior: whether the field will word wrap if is a multiline field */
  public SPOTBoolean wordWrap = new SPOTBoolean(null, true, false );

  /** Behavior: whether the text area supports scrolling */
  public SPOTBoolean supportScrolling = new SPOTBoolean(null, true, false );

  //}GENERATED_MEMBERS

  //GENERATED_METHODS{

  /**
   * Creates a new optional <code>TextArea</code> object.
   */
  public TextArea()  {
    this(true);
  }

  /**
   * Creates a new <code>TextArea</code> object.
   *
   * @param optional  <code>true</code> if the element is optional; <code>false</code> otherwise)
   */
  public TextArea( boolean optional ) {
    super( optional, false );
    spot_setElements();
  }

  /**
   * Creates a new <code>TextArea</code> object.
   *
   * @param optional  <code>true</code> if the element is optional; <code>false</code> otherwise)
   * @param setElements  <code>true</code> if a call to setElements should be made; <code>false</code> otherwise)
   */
  protected TextArea( boolean optional,boolean setElements ) {
    super( optional, setElements );
  }

  /**
   * Adds elements to the object elements map
   *
   */
  protected void spot_setElements()  {
    this.elementsSizeHint  +=3;
    super.spot_setElements();
    spot_addElement( "visibleLines", visibleLines );
    spot_addElement( "wordWrap", wordWrap );
    spot_addElement( "supportScrolling", supportScrolling );
  }

  //}GENERATED_METHODS

  //GENERATED_INNER_CLASSES{

  //}GENERATED_INNER_CLASSES
}
